2025-09-13 21:37:37,487 - INFO  - 
üöÄ Starting analysis of function: foo1
2025-09-13 21:37:37,487 - INFO  - 
FUNCTION INITIALIZATION
2025-09-13 21:37:37,487 - INFO  - ==================================================

2025-09-13 21:37:37,833 - INFO  - Initial pending functions: ['foo1']
2025-09-13 21:37:37,834 - INFO  - 
GENERATE ANNOTATION FOR foo1
2025-09-13 21:37:37,834 - INFO  - ==================================================

2025-09-13 21:37:37,834 - INFO  - Function foo1 has been initialized
2025-09-13 21:37:37,868 - INFO  - 
GENERATE LOOP INVARIANT FOR foo1
2025-09-13 21:37:37,868 - INFO  - ==================================================

2025-09-13 21:37:37,901 - INFO  - file_name: foo1
2025-09-13 21:37:37,938 - INFO  - Variable Maps:[{'y': '0', 'x': '1'}]
2025-09-13 21:37:37,938 - INFO  - Path conditions: [None]
2025-09-13 21:37:37,938 - INFO  - Pre condition: (y == 0) * (x == 1)
2025-09-13 21:37:37,938 - INFO  - Loop Condition: y < 100000
2025-09-13 21:37:37,939 - INFO  - Array Names: []
2025-09-13 21:37:37,939 - INFO  - Updated Loop Conditions: ['0 < 100000']
2025-09-13 21:37:37,939 - INFO  - Global Unchanged Variables: []
2025-09-13 21:37:37,939 - INFO  - Non Inductive Variables: []
2025-09-13 21:37:37,939 - INFO  - Unchanged Arrays (Read-only): []
2025-09-13 21:37:56,859 - INFO  - annotated_callee_str: 

2025-09-13 21:37:56,864 - INFO  - annotated_callee_str: 

2025-09-13 21:37:56,867 - INFO  - annotated_callee_str: 

2025-09-13 21:38:26,147 - INFO  - ACSL format loop invariant
2025-09-13 21:38:26,148 - INFO  - /*@
          loop invariant x == 1 + (y * (y - 1)) / 2;
          loop invariant 0 <= y <= 100000;
          loop assigns x, y;
            */
            while (y < 100000) {
      
       x  = x + y;
       y  = y + 1;
      
  
    }
2025-09-13 21:38:26,148 - INFO  - VST format loop invariant
2025-09-13 21:38:26,148 - INFO  - /*@ Inv
    (x == 1 + (y * (y - 1)) / 2) &&
(0 <= y && y <= 100000
          loop assigns x, y)
    */
    
            while (y < 100000) {
      
       x  = x + y;
       y  = y + 1;
      
  
    }
2025-09-13 21:38:26,149 - INFO  - PARTIAL CORRECT INVARIANT
2025-09-13 21:38:26,149 - INFO  - continue symbolic execution
2025-09-13 21:38:26,149 - INFO  - 
void foo1() {
  
    int x = 1;
    int y = 0;
    
        /*@
          loop invariant x == 1 + (y * (y - 1)) / 2;
          loop invariant 0 <= y <= 100000;
          loop assigns x, y;
            */
            while (y < 100000) {
      
       x  = x + y;
       y  = y + 1;
      
  
    }
            
  
    /*@ assert x >= y; */
  }

2025-09-13 21:38:37,299 - INFO  - CORRECT INVARIANT
2025-09-13 21:38:48,429 - INFO  - ==================================================
2025-09-13 21:38:48,430 - INFO  - first_pass:
2025-09-13 21:38:48,430 - INFO  - syntax=1, valid=1,satisfy=1
2025-09-13 21:38:48,430 - INFO  - ==================================================
2025-09-13 21:38:48,559 - INFO  - ==================================================
2025-09-13 21:38:48,559 - INFO  - ‚è∞ OVERALL EXECUTION TIME STATISTICS
2025-09-13 21:38:48,559 - INFO  - Total execution time: 71.07 seconds (1.18 minutes)
2025-09-13 21:38:48,559 - INFO  - ==================================================

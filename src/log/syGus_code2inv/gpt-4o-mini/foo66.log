2025-08-13 03:02:10,719 - INFO  - 
FUNCTION INITIALIZATION
2025-08-13 03:02:10,720 - INFO  - ========================================

2025-08-13 03:02:11,003 - INFO  - 初始待处理函数: ['foo66']
2025-08-13 03:02:11,003 - INFO  - 
GENERATE ANNOTATION FOR foo66
2025-08-13 03:02:11,003 - INFO  - ========================================

2025-08-13 03:02:11,003 - INFO  - 函数 foo66 已经初始化
2025-08-13 03:02:11,020 - INFO  - 
GENERATE LOOP INVARIANT FOR foo66
2025-08-13 03:02:11,021 - INFO  - ========================================

2025-08-13 03:02:11,035 - INFO  - file_name: foo66
2025-08-13 03:02:11,048 - DEBUG  - INNER_FLAG: False
2025-08-13 03:02:11,066 - INFO  - Variable Maps:[{'x': '1', 'y': 'y@pre'}]
2025-08-13 03:02:11,066 - INFO  - Path conditions: [None]
2025-08-13 03:02:11,066 - INFO  - Pre condition: (x == 1) * (y == y@pre)
2025-08-13 03:02:11,066 - INFO  - Loop Condition: x <= 100
2025-08-13 03:02:11,066 - INFO  - Array Names: []
2025-08-13 03:02:11,067 - INFO  - Updated Loop Conditions: ['1 <= 100']
2025-08-13 03:02:11,067 - INFO  - Global Unchanged Variables: []
2025-08-13 03:02:11,067 - INFO  - Non Inductive Variables: ['y']
2025-08-13 03:02:29,368 - INFO  - after const
2025-08-13 03:02:29,368 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        /* >>> PRECONDITION OF THE LOOP : (x == 1) * (y == \at(y,Pre)) <<< */
        
            /*@
            */
            while (x <= 100) {
        y = 100 - x;
        x = x +1;
    }
            
2025-08-13 03:02:29,368 - INFO  - after not in
2025-08-13 03:02:29,368 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        /* >>> PRECONDITION OF THE LOOP : (x == 1) * (y == \at(y,Pre)) <<< */
        
            /*@
            */
            while (x <= 100) {
        y = 100 - x;
        x = x +1;
    }
            
2025-08-13 03:02:29,368 - INFO  - after vars
2025-08-13 03:02:29,368 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        /* >>> PRECONDITION OF THE LOOP : (x == 1) * (y == \at(y,Pre)) <<< */
        
            /*@
          loop invariant  ((x == 1)&&(y == \at(y,Pre))) || (PLACE_HOLDER_y) ;
          loop invariant  PLACE_HOLDER_x ;
            */
            while (x <= 100) {
        y = 100 - x;
        x = x +1;
    }
            
2025-08-13 03:02:29,368 - INFO  - after verification goal
2025-08-13 03:02:29,368 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        /* >>> PRECONDITION OF THE LOOP : (x == 1) * (y == \at(y,Pre)) <<< */
        
            /*@
          loop invariant  ((x == 1)&&(y == \at(y,Pre))) || (PLACE_HOLDER_VERFICATION_GOAL) ;
          loop invariant  ((x == 1)&&(y == \at(y,Pre))) || (PLACE_HOLDER_y) ;
          loop invariant  PLACE_HOLDER_x ;
            */
            while (x <= 100) {
        y = 100 - x;
        x = x +1;
    }
            
2025-08-13 03:02:31,500 - DEBUG  - invgen reasoning
2025-08-13 03:02:31,500 - DEBUG  - ```c
void foo66(int y) {
    int x = 1;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
    /* >>> PRECONDITION OF THE LOOP : (x == 1) * (y == \at(y,Pre)) <<< */
        
    /*@
      loop invariant  ((x == 1)&&(y == \at(y,Pre))) || (y == 100 - (x - 1)) ;
      loop invariant  ((x == 1)&&(y == \at(y,Pre))) || (y >= 0 && y <= 99) ;
      loop invariant  (1 <= x && x <= 101) ;
    */
    while (x <= 100) {
        y = 100 - x;
        x = x + 1;
    }

    /*@ assert (y < 100); */
}
```
2025-08-13 03:02:31,500 - INFO  - 生成循环不变量
2025-08-13 03:02:31,500 - INFO  - 
void foo66(int y) {
    int x = 1;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
    /* >>> PRECONDITION OF THE LOOP : (x == 1) * (y == \at(y,Pre)) <<< */
        
    /*@
      loop invariant  ((x == 1)&&(y == \at(y,Pre))) || (y == 100 - (x - 1)) ;
      loop invariant  ((x == 1)&&(y == \at(y,Pre))) || (y >= 0 && y <= 99) ;
      loop invariant  (1 <= x && x <= 101) ;
    */
    while (x <= 100) {
        y = 100 - x;
        x = x + 1;
    }

    /*@ assert (y < 100); */
}

2025-08-13 03:02:42,166 - INFO  - syntax Correct
2025-08-13 03:02:45,714 - INFO  - Validate:
2025-08-13 03:02:45,714 - INFO  - [True, True, True]
2025-08-13 03:02:45,715 - INFO  - 
2025-08-13 03:02:45,715 - INFO  - Verify:
2025-08-13 03:02:45,715 - INFO  - [True]
2025-08-13 03:02:45,715 - INFO  - 
2025-08-13 03:02:45,715 - INFO  - 注释过不变量的代码
2025-08-13 03:02:45,715 - INFO  - 
void foo66(int y) {
    int x = 1;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
    /* >>> PRECONDITION OF THE LOOP : (x == 1) * (y == \at(y,Pre)) <<< */
        
    /*@
      loop invariant  ((x == 1)&&(y == \at(y,Pre))) || (y == 100 - (x - 1)) ;
      loop invariant  ((x == 1)&&(y == \at(y,Pre))) || (y >= 0 && y <= 99) ;
      loop invariant  (1 <= x && x <= 101) ;
    */
    while (x <= 100) {
        y = 100 - x;
        x = x + 1;
    }

    /*@ assert (y < 100); */
}

2025-08-13 03:02:56,325 - INFO  - syntax Correct
2025-08-13 03:02:59,889 - INFO  - Validate:
2025-08-13 03:02:59,890 - INFO  - [True, True, True]
2025-08-13 03:02:59,890 - INFO  - 
2025-08-13 03:02:59,890 - INFO  - Verify:
2025-08-13 03:02:59,890 - INFO  - [True]
2025-08-13 03:02:59,890 - INFO  - 
2025-08-13 03:02:59,890 - INFO  - ACSL 格式的循环不变量
2025-08-13 03:02:59,890 - INFO  - /*@
      loop invariant  ((x == 1)&&(y == \at(y,Pre))) || (y == 100 - (x - 1)) ;
      loop invariant  ((x == 1)&&(y == \at(y,Pre))) || (y >= 0 && y <= 99) ;
      loop invariant  (1 <= x && x <= 101) ;
    */
    while (x <= 100) {
        y = 100 - x;
        x = x + 1;
    }
2025-08-13 03:02:59,890 - INFO  - VST 格式的循环不变量
2025-08-13 03:02:59,891 - INFO  - /*@ Inv
    (((x == 1)&&(y == y@pre)) || (y == 100 - (x - 1)) ) &&
(((x == 1)&&(y == y@pre)) || (y >= 0 && y <= 99) ) &&
((1 <= x && x <= 101) )
    */
    
    while (x <= 100) {
        y = 100 - x;
        x = x + 1;
    }
2025-08-13 03:02:59,891 - INFO  - PARTIAL CORRECT INVARIANT
2025-08-13 03:02:59,891 - INFO  - 继续符号执行
2025-08-13 03:02:59,891 - INFO  - /*@ Inv
    (((x == 1)&&(y == y@pre)) || (y == 100 - (x - 1)) ) &&
(((x == 1)&&(y == y@pre)) || (y >= 0 && y <= 99) ) &&
((1 <= x && x <= 101) )
    */
    
    while (x <= 100) {
        y = 100 - x;
        x = x + 1;
    }
2025-08-13 03:03:10,558 - INFO  - syntax Correct
2025-08-13 03:03:14,132 - INFO  - Validate:
2025-08-13 03:03:14,132 - INFO  - [True, True, True]
2025-08-13 03:03:14,132 - INFO  - 
2025-08-13 03:03:14,132 - INFO  - Verify:
2025-08-13 03:03:14,132 - INFO  - [True]
2025-08-13 03:03:14,132 - INFO  - 
2025-08-13 03:03:14,132 - INFO  - CORRECT INVARIANT
2025-08-13 03:03:24,791 - INFO  - syntax Correct
2025-08-13 03:03:28,341 - INFO  - Validate:
2025-08-13 03:03:28,341 - INFO  - [True, True, True]
2025-08-13 03:03:28,341 - INFO  - 
2025-08-13 03:03:28,341 - INFO  - Verify:
2025-08-13 03:03:28,341 - INFO  - [True]
2025-08-13 03:03:28,341 - INFO  - 
2025-08-13 03:03:28,341 - INFO  - ========================================
2025-08-13 03:03:28,341 - INFO  - first_pass:
2025-08-13 03:03:28,341 - INFO  - syntax=1, valid=1,satisfy=1
2025-08-13 03:03:28,341 - INFO  - ========================================

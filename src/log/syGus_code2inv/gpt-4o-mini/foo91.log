2025-08-12 21:13:05,811 - INFO  - 
FUNCTION INITIALIZATION
2025-08-12 21:13:05,811 - INFO  - ========================================

2025-08-12 21:13:05,936 - INFO  - 初始待处理函数: ['foo91']
2025-08-12 21:13:05,936 - INFO  - 
GENERATE ANNOTATION FOR foo91
2025-08-12 21:13:05,936 - INFO  - ========================================

2025-08-12 21:13:05,936 - INFO  - 函数 foo91 已经初始化
2025-08-12 21:13:05,951 - INFO  - 
GENERATE LOOP INVARIANT FOR foo91
2025-08-12 21:13:05,951 - INFO  - ========================================

2025-08-12 21:13:05,965 - INFO  - file_name: foo91
2025-08-12 21:13:05,975 - DEBUG  - INNER_FLAG: False
2025-08-12 21:13:05,991 - INFO  - Variable Maps:[{'y': '0', 'x': '0'}]
2025-08-12 21:13:05,991 - INFO  - Path conditions: [None]
2025-08-12 21:13:05,991 - INFO  - Pre condition: (y == 0) * (x == 0)
2025-08-12 21:13:05,992 - INFO  - Loop Condition: y >= 0
2025-08-12 21:13:05,992 - INFO  - Array Names: []
2025-08-12 21:13:05,992 - INFO  - Updated Loop Conditions: ['0 >= 0']
2025-08-12 21:13:05,992 - INFO  - Global Unchanged Variables: ['x']
2025-08-12 21:13:05,992 - INFO  - Non Inductive Variables: []
2025-08-12 21:13:15,649 - INFO  - after const
2025-08-12 21:13:15,649 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        /* >>> PRECONDITION OF THE LOOP : (y == 0) * (x == 0) <<< */
        
            /*@
          loop invariant x == 0;
            */
            while(y >= 0) {
        y = y + x;
    }
            
2025-08-12 21:13:15,649 - INFO  - after not in
2025-08-12 21:13:15,649 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        /* >>> PRECONDITION OF THE LOOP : (y == 0) * (x == 0) <<< */
        
            /*@
          loop invariant x == 0;
            */
            while(y >= 0) {
        y = y + x;
    }
            
2025-08-12 21:13:15,649 - INFO  - after vars
2025-08-12 21:13:15,649 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        /* >>> PRECONDITION OF THE LOOP : (y == 0) * (x == 0) <<< */
        
            /*@
          loop invariant  PLACE_HOLDER_y ;
          loop invariant x == 0;
            */
            while(y >= 0) {
        y = y + x;
    }
            
2025-08-12 21:13:15,649 - INFO  - after verification goal
2025-08-12 21:13:15,650 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        /* >>> PRECONDITION OF THE LOOP : (y == 0) * (x == 0) <<< */
        
            /*@
          loop invariant  ((y == 0)&&(x == 0)) || (PLACE_HOLDER_VERFICATION_GOAL) ;
          loop invariant  PLACE_HOLDER_y ;
          loop invariant x == 0;
            */
            while(y >= 0) {
        y = y + x;
    }
            
2025-08-12 21:13:17,727 - DEBUG  - invgen reasoning
2025-08-12 21:13:17,727 - DEBUG  - ```c
void foo91() {

    int x = 0;
    int y = 0;

    
    
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        /* >>> PRECONDITION OF THE LOOP : (y == 0) * (x == 0) <<< */
        
            /*@
          loop invariant  ((y == 0)&&(x == 0)) || (y >= 0) ;
          loop invariant  (y >= 0) ; 
          loop invariant x == 0;
            */
            while(y >= 0) {
        y = y + x;
    }
            
    /*@ assert y >= 0;*/

}
```
2025-08-12 21:13:17,727 - INFO  - 生成循环不变量
2025-08-12 21:13:17,727 - INFO  - 
void foo91() {

    int x = 0;
    int y = 0;

    
    
            
            /*@
          loop invariant  ((y == 0)&&(x == 0)) || (y >= 0) ;
          loop invariant  (y >= 0) ; 
          loop invariant x == 0;
            */
            while(y >= 0) {
        y = y + x;
    }
            
    /*@ assert y >= 0;*/

}

2025-08-12 21:13:28,403 - INFO  - syntax Correct
2025-08-12 21:13:31,934 - INFO  - Validate:
2025-08-12 21:13:31,935 - INFO  - [True, True, True]
2025-08-12 21:13:31,935 - INFO  - 
2025-08-12 21:13:31,935 - INFO  - Verify:
2025-08-12 21:13:31,935 - INFO  - [True]
2025-08-12 21:13:31,935 - INFO  - 
2025-08-12 21:13:31,935 - INFO  - 注释过不变量的代码
2025-08-12 21:13:31,935 - INFO  - 
void foo91() {

    int x = 0;
    int y = 0;

    
    
            
            /*@
          loop invariant  ((y == 0)&&(x == 0)) || (y >= 0) ;
          loop invariant  (y >= 0) ; 
          loop invariant x == 0;
            */
            while(y >= 0) {
        y = y + x;
    }
            
    /*@ assert y >= 0;*/

}

2025-08-12 21:13:42,522 - INFO  - syntax Correct
2025-08-12 21:13:46,101 - INFO  - Validate:
2025-08-12 21:13:46,101 - INFO  - [True, True, True]
2025-08-12 21:13:46,101 - INFO  - 
2025-08-12 21:13:46,101 - INFO  - Verify:
2025-08-12 21:13:46,102 - INFO  - [True]
2025-08-12 21:13:46,102 - INFO  - 
2025-08-12 21:13:46,102 - INFO  - ACSL 格式的循环不变量
2025-08-12 21:13:46,102 - INFO  - /*@
          loop invariant  ((y == 0)&&(x == 0)) || (y >= 0) ;
          loop invariant  (y >= 0) ; 
          loop invariant x == 0;
            */
            while(y >= 0) {
        y = y + x;
    }
2025-08-12 21:13:46,102 - INFO  - VST 格式的循环不变量
2025-08-12 21:13:46,102 - INFO  - /*@ Inv
    (((y == 0)&&(x == 0)) || (y >= 0) ) &&
((y >= 0) ) &&
(x == 0)
    */
    
            while(y >= 0) {
        y = y + x;
    }
2025-08-12 21:13:46,102 - INFO  - PARTIAL CORRECT INVARIANT
2025-08-12 21:13:46,102 - INFO  - 继续符号执行
2025-08-12 21:13:46,103 - INFO  - /*@ Inv
    (((y == 0)&&(x == 0)) || (y >= 0) ) &&
((y >= 0) ) &&
(x == 0)
    */
    
            while(y >= 0) {
        y = y + x;
    }
2025-08-12 21:13:56,737 - INFO  - syntax Correct
2025-08-12 21:14:00,311 - INFO  - Validate:
2025-08-12 21:14:00,311 - INFO  - [True, True, True]
2025-08-12 21:14:00,311 - INFO  - 
2025-08-12 21:14:00,311 - INFO  - Verify:
2025-08-12 21:14:00,311 - INFO  - [True]
2025-08-12 21:14:00,311 - INFO  - 
2025-08-12 21:14:00,311 - INFO  - CORRECT INVARIANT
2025-08-12 21:14:10,896 - INFO  - syntax Correct
2025-08-12 21:14:14,485 - INFO  - Validate:
2025-08-12 21:14:14,485 - INFO  - [True, True, True]
2025-08-12 21:14:14,485 - INFO  - 
2025-08-12 21:14:14,485 - INFO  - Verify:
2025-08-12 21:14:14,485 - INFO  - [True]
2025-08-12 21:14:14,485 - INFO  - 
2025-08-12 21:14:14,485 - INFO  - ========================================
2025-08-12 21:14:14,485 - INFO  - first_pass:
2025-08-12 21:14:14,485 - INFO  - syntax=1, valid=1,satisfy=1
2025-08-12 21:14:14,485 - INFO  - ========================================

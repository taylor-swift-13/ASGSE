2025-08-17 22:15:55,427 - INFO  - 
FUNCTION INITIALIZATION
2025-08-17 22:15:55,427 - INFO  - ========================================

2025-08-17 22:15:55,458 - INFO  - 初始待处理函数: ['goo19', 'ThrABAutoChooseFun']
2025-08-17 22:15:55,458 - INFO  - 现在处理函数 ThrABAutoChooseFun

2025-08-17 22:15:55,464 - INFO  - 
GENERATE ANNOTATION FOR ThrABAutoChooseFun
2025-08-17 22:15:55,464 - INFO  - ========================================

2025-08-17 22:15:55,464 - INFO  - 函数 ThrABAutoChooseFun 已经初始化
2025-08-17 22:15:55,464 - INFO  - 开始生成 ThrABAutoChooseFun 的注释代码
2025-08-17 22:15:55,495 - INFO  - 
GENERATE FUNCTION SUMMARY FOR ThrABAutoChooseFun
2025-08-17 22:15:55,495 - INFO  - ========================================

2025-08-17 22:15:55,516 - INFO  - 开始生成完整的 ThrABAutoChooseFun 的注释代码
2025-08-17 22:15:55,521 - INFO  - 开始生成 ThrABAutoChooseFun 的 ACSL 规约
2025-08-17 22:15:55,529 - INFO  - 
GENERATE ANNOTATION FOR goo19
2025-08-17 22:15:55,530 - INFO  - ========================================

2025-08-17 22:15:55,530 - INFO  - 函数 goo19 已经初始化
2025-08-17 22:15:55,530 - INFO  - 开始生成 goo19 的注释代码
2025-08-17 22:15:55,548 - INFO  - 
GENERATE FUNCTION SUMMARY FOR goo19
2025-08-17 22:15:55,548 - INFO  - ========================================

2025-08-17 22:15:55,580 - INFO  - 开始生成完整的 goo19 的注释代码
2025-08-17 22:15:55,588 - INFO  - 开始生成 goo19 的 ACSL 规约
2025-08-17 22:15:55,598 - INFO  - 
SUMMARY FOR goo19
2025-08-17 22:15:55,598 - INFO  - ========================================

2025-08-17 22:15:55,599 - INFO  - 
函数 goo19 的 VST Summary 为:
/*@
With pIp_mThrDistribute_flgABChoose pIp_mThrDistribute_wPulse pIp_mThrDistribute_stateFlag_l
Require pIp->mThrDistribute.flgABChoose == pIp_mThrDistribute_flgABChoose && pIp->mThrDistribute.wPulse == pIp_mThrDistribute_wPulse && store_int_array(pIp->mThrDistribute.stateFlag,2, pIp_mThrDistribute_stateFlag_l)
Ensure (replace_Znth(1, 0, replace_Znth(0, 0, pIp_mThrDistribute_stateFlag_l))[0] != 0 && replace_Znth(1, 0, replace_Znth(0, 0, pIp_mThrDistribute_stateFlag_l))[1] != 1 && replace_Znth(1, 0, replace_Znth(0, 0, pIp_mThrDistribute_stateFlag_l))[0] == 1 && pIp->mThrDistribute.flgABChoose == 0 && store_int_array(&pIp->mThrDistribute.stateFlag, 2, replace_Znth(1, 0, replace_Znth(0, 0, pIp_mThrDistribute_stateFlag_l))) * (pIp->mThrDistribute.wPulse == pIp_mThrDistribute_wPulse)) || (replace_Znth(1, 0, replace_Znth(0, 0, pIp_mThrDistribute_stateFlag_l))[1] != 1 && replace_Znth(1, 0, replace_Znth(0, 0, pIp_mThrDistribute_stateFlag_l))[0] == 0 && replace_Znth(1, 0, replace_Znth(0, 0, pIp_mThrDistribute_stateFlag_l))[0] != 1 && pIp->mThrDistribute.flgABChoose == 0 && store_int_array(&pIp->mThrDistribute.stateFlag, 2, replace_Znth(1, 0, replace_Znth(0, 0, pIp_mThrDistribute_stateFlag_l))) * (pIp->mThrDistribute.wPulse == pIp_mThrDistribute_wPulse)) || (replace_Znth(1, 0, replace_Znth(0, 0, pIp_mThrDistribute_stateFlag_l))[0] != 0 && replace_Znth(1, 0, replace_Znth(0, 0, pIp_mThrDistribute_stateFlag_l))[0] != 1 && pIp->mThrDistribute.flgABChoose == 0 && store_int_array(&pIp->mThrDistribute.stateFlag, 2, replace_Znth(1, 0, replace_Znth(0, 0, pIp_mThrDistribute_stateFlag_l))) * (pIp->mThrDistribute.wPulse == pIp_mThrDistribute_wPulse)) || (replace_Znth(1, 0, replace_Znth(0, 0, pIp_mThrDistribute_stateFlag_l))[1] == 1 && replace_Znth(1, 0, replace_Znth(0, 0, pIp_mThrDistribute_stateFlag_l))[0] == 0 && replace_Znth(1, 0, replace_Znth(0, 0, pIp_mThrDistribute_stateFlag_l))[0] != 1 && pIp->mThrDistribute.flgABChoose == 51 && store_int_array(&pIp->mThrDistribute.stateFlag, 2, replace_Znth(1, 0, replace_Znth(0, 0, pIp_mThrDistribute_stateFlag_l))) * (pIp->mThrDistribute.wPulse == pIp_mThrDistribute_wPulse)) || (replace_Znth(1, 0, replace_Znth(0, 0, pIp_mThrDistribute_stateFlag_l))[1] == 1 && replace_Znth(1, 0, replace_Znth(0, 0, pIp_mThrDistribute_stateFlag_l))[0] == 1 && pIp->mThrDistribute.flgABChoose == 204 && store_int_array(&pIp->mThrDistribute.stateFlag, 2, replace_Znth(1, 0, replace_Znth(0, 0, pIp_mThrDistribute_stateFlag_l))) * (pIp->mThrDistribute.wPulse == pIp_mThrDistribute_wPulse))
*/
2025-08-17 22:15:55,599 - INFO  - 
函数 goo19 的 ACSL Summary 为:
/*@
 requires \valid(pIp) && \valid(pIp->mThrDistribute.stateFlag+ (0..2)) ;
 requires \separated(pIp,pIp->mThrDistribute.stateFlag+(0..2)) ;

ensures replace_Znth(1, 0, replace_Znth(0, 0, pIp->mThrDistribute.stateFlag))[0] != 0 && replace_Znth(1, 0, replace_Znth(0, 0, pIp->mThrDistribute.stateFlag))[1] != 1 && replace_Znth(1, 0, replace_Znth(0, 0, pIp->mThrDistribute.stateFlag))[0] == 1 && pIp->mThrDistribute.flgABChoose == 0 ==> store_int_array(&pIp->mThrDistribute.stateFlag, 2, replace_Znth(1, 0, replace_Znth(0, 0, pIp->mThrDistribute.stateFlag))) * (pIp->mThrDistribute.wPulse == \old(pIp->mThrDistribute.wPulse);

ensures replace_Znth(1, 0, replace_Znth(0, 0, pIp->mThrDistribute.stateFlag))[1] != 1 && replace_Znth(1, 0, replace_Znth(0, 0, pIp->mThrDistribute.stateFlag))[0] == 0 && replace_Znth(1, 0, replace_Znth(0, 0, pIp->mThrDistribute.stateFlag))[0] != 1 && pIp->mThrDistribute.flgABChoose == 0 ==> store_int_array(&pIp->mThrDistribute.stateFlag, 2, replace_Znth(1, 0, replace_Znth(0, 0, pIp->mThrDistribute.stateFlag))) * (pIp->mThrDistribute.wPulse == \old(pIp->mThrDistribute.wPulse);

ensures replace_Znth(1, 0, replace_Znth(0, 0, pIp->mThrDistribute.stateFlag))[0] != 0 && replace_Znth(1, 0, replace_Znth(0, 0, pIp->mThrDistribute.stateFlag))[0] != 1 && pIp->mThrDistribute.flgABChoose == 0 ==> store_int_array(&pIp->mThrDistribute.stateFlag, 2, replace_Znth(1, 0, replace_Znth(0, 0, pIp->mThrDistribute.stateFlag))) * (pIp->mThrDistribute.wPulse == \old(pIp->mThrDistribute.wPulse);

ensures replace_Znth(1, 0, replace_Znth(0, 0, pIp->mThrDistribute.stateFlag))[1] == 1 && replace_Znth(1, 0, replace_Znth(0, 0, pIp->mThrDistribute.stateFlag))[0] == 0 && replace_Znth(1, 0, replace_Znth(0, 0, pIp->mThrDistribute.stateFlag))[0] != 1 && pIp->mThrDistribute.flgABChoose == 51 ==> store_int_array(&pIp->mThrDistribute.stateFlag, 2, replace_Znth(1, 0, replace_Znth(0, 0, pIp->mThrDistribute.stateFlag))) * (pIp->mThrDistribute.wPulse == \old(pIp->mThrDistribute.wPulse);

ensures replace_Znth(1, 0, replace_Znth(0, 0, pIp->mThrDistribute.stateFlag))[1] == 1 && replace_Znth(1, 0, replace_Znth(0, 0, pIp->mThrDistribute.stateFlag))[0] == 1 && pIp->mThrDistribute.flgABChoose == 204 ==> store_int_array(&pIp->mThrDistribute.stateFlag, 2, replace_Znth(1, 0, replace_Znth(0, 0, pIp->mThrDistribute.stateFlag))) * (pIp->mThrDistribute.wPulse == \old(pIp->mThrDistribute.wPulse);

*/

2025-08-17 22:15:55,639 - INFO  - 
VERIFICATION FOR goo19
2025-08-17 22:15:55,639 - INFO  - ========================================

2025-08-17 22:16:06,508 - INFO  - syntax Correct
2025-08-17 22:16:10,253 - INFO  - Loop Invariant:
2025-08-17 22:16:10,254 - INFO  - []
2025-08-17 22:16:10,254 - INFO  - 
2025-08-17 22:16:10,254 - INFO  - Assertion:
2025-08-17 22:16:10,254 - INFO  - [True, True, True, True]
2025-08-17 22:16:10,254 - INFO  - 
2025-08-17 22:16:10,254 - INFO  - Post Condition:
2025-08-17 22:16:10,254 - INFO  - [True, True, True, True, True]
2025-08-17 22:16:10,254 - INFO  - 
2025-08-17 22:16:10,254 - INFO  - ========================================
2025-08-17 22:16:10,254 - INFO  - first_pass:
2025-08-17 22:16:10,254 - INFO  - syntax=1, valid=1,satisfy=1
2025-08-17 22:16:10,254 - INFO  - ========================================

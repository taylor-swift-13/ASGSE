2025-08-22 10:55:54,865 - INFO  - 
FUNCTION INITIALIZATION
2025-08-22 10:55:54,865 - INFO  - ========================================

2025-08-22 10:55:54,934 - INFO  - 初始待处理函数: ['main30', 'LimitInt32Fun']
2025-08-22 10:55:54,934 - INFO  - 现在处理函数 LimitInt32Fun

2025-08-22 10:55:54,939 - INFO  - 
GENERATE ANNOTATION FOR LimitInt32Fun
2025-08-22 10:55:54,939 - INFO  - ========================================

2025-08-22 10:55:54,939 - INFO  - 函数 LimitInt32Fun 已经初始化
2025-08-22 10:55:54,939 - INFO  - 开始生成 LimitInt32Fun 的注释代码
2025-08-22 10:55:55,004 - INFO  - 
GENERATE FUNCTION SUMMARY FOR LimitInt32Fun
2025-08-22 10:55:55,005 - INFO  - ========================================

2025-08-22 10:55:55,066 - INFO  - 开始生成完整的 LimitInt32Fun 的注释代码
2025-08-22 10:55:55,070 - INFO  - 开始生成 LimitInt32Fun 的 ACSL 规约
2025-08-22 10:55:55,079 - INFO  - 
GENERATE ANNOTATION FOR main30
2025-08-22 10:55:55,080 - INFO  - ========================================

2025-08-22 10:55:55,080 - INFO  - 函数 main30 已经初始化
2025-08-22 10:55:55,080 - INFO  - 开始生成 main30 的注释代码
2025-08-22 10:55:55,103 - INFO  - 
GENERATE FUNCTION SUMMARY FOR main30
2025-08-22 10:55:55,103 - INFO  - ========================================

2025-08-22 10:55:55,138 - INFO  - 开始生成 main30 的 ACSL 规约
2025-08-22 10:55:55,142 - INFO  - 
SUMMARY FOR main30
2025-08-22 10:55:55,143 - INFO  - ========================================

2025-08-22 10:55:55,144 - INFO  - 
函数 main30 的 VST Summary 为:
/*@
With pIp_in pIp_bound pIp_value pIp_ret_v pIp_ret
Require pIp->in == pIp_in && pIp->bound == pIp_bound && pIp->value == pIp_value && *(pIp->ret) == pIp_ret_v && (pIp->ret) == pIp_ret
Ensure emp
*/
2025-08-22 10:55:55,144 - INFO  - 
函数 main30 的 ACSL Summary 为:

2025-08-22 10:55:55,347 - INFO  - 
VERIFICATION FOR main30
2025-08-22 10:55:55,347 - INFO  - ========================================

2025-08-22 10:56:06,707 - INFO  - syntax Correct
2025-08-22 10:56:10,822 - INFO  - Loop Invariant:
2025-08-22 10:56:10,823 - INFO  - []
2025-08-22 10:56:10,823 - INFO  - 
2025-08-22 10:56:10,823 - INFO  - Assertion:
2025-08-22 10:56:10,823 - INFO  - [True, True, True, True]
2025-08-22 10:56:10,823 - INFO  - 
2025-08-22 10:56:10,823 - INFO  - Post Condition:
2025-08-22 10:56:10,823 - INFO  - [True, True, True]
2025-08-22 10:56:10,823 - INFO  - 
2025-08-22 10:56:10,823 - INFO  - ========================================
2025-08-22 10:56:10,823 - INFO  - first_pass:
2025-08-22 10:56:10,823 - INFO  - syntax=1, valid=1,satisfy=1
2025-08-22 10:56:10,823 - INFO  - ========================================

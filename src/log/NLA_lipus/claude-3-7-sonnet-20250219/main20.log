2025-08-11 21:00:03,014 - INFO  - 
FUNCTION INITIALIZATION
2025-08-11 21:00:03,014 - INFO  - ========================================

2025-08-11 21:00:03,048 - INFO  - 初始待处理函数: ['main20']
2025-08-11 21:00:03,048 - INFO  - 
GENERATE ANNOTATION FOR main20
2025-08-11 21:00:03,048 - INFO  - ========================================

2025-08-11 21:00:03,048 - INFO  - 函数 main20 已经初始化
2025-08-11 21:00:03,092 - INFO  - 
GENERATE LOOP INVARIANT FOR main20
2025-08-11 21:00:03,092 - INFO  - ========================================

2025-08-11 21:00:03,134 - INFO  - file_name: main20
2025-08-11 21:00:03,138 - DEBUG  - INNER_FLAG: False
2025-08-11 21:00:03,182 - INFO  - Variable Maps:[{}]
2025-08-11 21:00:03,182 - INFO  - Path conditions: [None]
2025-08-11 21:00:03,182 - INFO  - Pre condition: 
2025-08-11 21:00:03,182 - INFO  - Loop Condition: s <= n
2025-08-11 21:00:03,182 - INFO  - Array Names: []
2025-08-11 21:00:03,182 - INFO  - Updated Loop Conditions: ['s <= n']
2025-08-11 21:00:03,183 - INFO  - Global Unchanged Variables: []
2025-08-11 21:00:03,183 - INFO  - Non Inductive Variables: []
2025-08-11 21:00:19,489 - INFO  - after const
2025-08-11 21:00:19,489 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
            */
            while(s <= n){
     a=a+1;
     t=t+2;
     s=s+t;
    }
            
2025-08-11 21:00:19,490 - INFO  - after not in
2025-08-11 21:00:19,490 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
          loop invariant (!(s <= n)) ==> ();
            */
            while(s <= n){
     a=a+1;
     t=t+2;
     s=s+t;
    }
            
2025-08-11 21:00:19,490 - INFO  - after vars
2025-08-11 21:00:19,490 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
          loop invariant (!(s <= n)) ==> ();
            */
            while(s <= n){
     a=a+1;
     t=t+2;
     s=s+t;
    }
            
2025-08-11 21:00:19,490 - INFO  - after verification goal
2025-08-11 21:00:19,490 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
          loop invariant (s <= n) ==> (() || (PLACE_HOLDER_VERFICATION_GOAL));
          loop invariant (!(s <= n)) ==> ();
            */
            while(s <= n){
     a=a+1;
     t=t+2;
     s=s+t;
    }
            
2025-08-11 21:01:02,784 - INFO  - 生成循环不变量
2025-08-11 21:01:02,784 - INFO  - /*@
requires n >= 0;
*/
int main20(int n){
    // variable declarations
    a,s,t;

    //precondition
    int a=0;
    int s=1;
    int t=1;

    // loop body
    
            
            /*@
          loop invariant (s <= n) ==> (a >= 0 || (n < (a + 1) * (a + 1)));
          loop invariant (!(s <= n)) ==> (n < (a + 1) * (a + 1));
          loop invariant t == 2*a + 1;
          loop invariant s == (a+1)*(a+1);
            */
            while(s <= n){
     a=a+1;
     t=t+2;
     s=s+t;
    }
            

    // post-condition
    /*@ assert( n < (a + 1) * (a + 1)); */
}
2025-08-11 21:01:13,607 - INFO  - syntax Correct
2025-08-11 21:01:17,399 - INFO  - Validate:
2025-08-11 21:01:17,399 - INFO  - [True, True, True]
2025-08-11 21:01:17,399 - INFO  - 
2025-08-11 21:01:17,399 - INFO  - Verify:
2025-08-11 21:01:17,399 - INFO  - [True]
2025-08-11 21:01:17,399 - INFO  - 
2025-08-11 21:01:17,399 - INFO  - 注释过不变量的代码
2025-08-11 21:01:17,399 - INFO  - /*@
requires n >= 0;
*/
int main20(int n){
    // variable declarations
    a,s,t;

    //precondition
    int a=0;
    int s=1;
    int t=1;

    // loop body
    
            
            /*@
          loop invariant (s <= n) ==> (a >= 0 || (n < (a + 1) * (a + 1)));
          loop invariant (!(s <= n)) ==> (n < (a + 1) * (a + 1));
          loop invariant t == 2*a + 1;
          loop invariant s == (a+1)*(a+1);
            */
            while(s <= n){
     a=a+1;
     t=t+2;
     s=s+t;
    }
            

    // post-condition
    /*@ assert( n < (a + 1) * (a + 1)); */
}
2025-08-11 21:01:28,138 - INFO  - syntax Correct
2025-08-11 21:01:31,919 - INFO  - Validate:
2025-08-11 21:01:31,919 - INFO  - [True, True, True]
2025-08-11 21:01:31,919 - INFO  - 
2025-08-11 21:01:31,919 - INFO  - Verify:
2025-08-11 21:01:31,919 - INFO  - [True]
2025-08-11 21:01:31,919 - INFO  - 
2025-08-11 21:01:31,919 - INFO  - ACSL 格式的循环不变量
2025-08-11 21:01:31,919 - INFO  - /*@
          loop invariant (s <= n) ==> (a >= 0 || (n < (a + 1) * (a + 1)));
          loop invariant (!(s <= n)) ==> (n < (a + 1) * (a + 1));
          loop invariant t == 2*a + 1;
          loop invariant s == (a+1)*(a+1);
            */
            while(s <= n){
     a=a+1;
     t=t+2;
     s=s+t;
    }
2025-08-11 21:01:31,920 - INFO  - VST 格式的循环不变量
2025-08-11 21:01:31,920 - INFO  - /*@ Inv
    ((s <= n) => (a >= 0 || (n < (a + 1) * (a + 1)))) &&
((!(s <= n)) => (n < (a + 1) * (a + 1))) &&
(t == 2*a + 1) &&
(s == (a+1)*(a+1))
    */
    
            while(s <= n){
     a=a+1;
     t=t+2;
     s=s+t;
    }
2025-08-11 21:01:31,920 - INFO  - PARTIAL CORRECT INVARIANT
2025-08-11 21:01:31,920 - INFO  - 继续符号执行
2025-08-11 21:01:31,920 - INFO  - /*@ Inv
    ((s <= n) => (a >= 0 || (n < (a + 1) * (a + 1)))) &&
((!(s <= n)) => (n < (a + 1) * (a + 1))) &&
(t == 2*a + 1) &&
(s == (a+1)*(a+1))
    */
    
            while(s <= n){
     a=a+1;
     t=t+2;
     s=s+t;
    }
2025-08-11 21:01:42,725 - INFO  - syntax Correct
2025-08-11 21:01:46,515 - INFO  - Validate:
2025-08-11 21:01:46,515 - INFO  - [True, True, True]
2025-08-11 21:01:46,515 - INFO  - 
2025-08-11 21:01:46,516 - INFO  - Verify:
2025-08-11 21:01:46,516 - INFO  - [True]
2025-08-11 21:01:46,516 - INFO  - 
2025-08-11 21:01:46,516 - INFO  - CORRECT INVARIANT
2025-08-11 21:01:57,330 - INFO  - syntax Correct
2025-08-11 21:02:01,127 - INFO  - Validate:
2025-08-11 21:02:01,127 - INFO  - [True, True, True]
2025-08-11 21:02:01,127 - INFO  - 
2025-08-11 21:02:01,127 - INFO  - Verify:
2025-08-11 21:02:01,127 - INFO  - [True]
2025-08-11 21:02:01,128 - INFO  - 
2025-08-11 21:02:01,128 - INFO  - ========================================
2025-08-11 21:02:01,128 - INFO  - first_pass:
2025-08-11 21:02:01,128 - INFO  - syntax=1, valid=1,satisfy=1
2025-08-11 21:02:01,128 - INFO  - ========================================

2025-08-15 10:56:09,755 - INFO  - 
FUNCTION INITIALIZATION
2025-08-15 10:56:09,755 - INFO  - ========================================

2025-08-15 10:56:09,856 - INFO  - 初始待处理函数: ['foo54']
2025-08-15 10:56:09,856 - INFO  - 
GENERATE ANNOTATION FOR foo54
2025-08-15 10:56:09,856 - INFO  - ========================================

2025-08-15 10:56:09,857 - INFO  - 函数 foo54 已经初始化
2025-08-15 10:56:09,871 - INFO  - 
GENERATE LOOP INVARIANT FOR foo54
2025-08-15 10:56:09,871 - INFO  - ========================================

2025-08-15 10:56:09,886 - INFO  - file_name: foo54
2025-08-15 10:56:09,895 - DEBUG  - INNER_FLAG: False
2025-08-15 10:56:09,910 - INFO  - Variable Maps:[{'y': 'y@pre', 'x': '-50'}]
2025-08-15 10:56:09,911 - INFO  - Path conditions: [None]
2025-08-15 10:56:09,911 - INFO  - Pre condition: (y == y@pre) * (x == -50)
2025-08-15 10:56:09,911 - INFO  - Loop Condition: x < 0
2025-08-15 10:56:09,911 - INFO  - Array Names: []
2025-08-15 10:56:09,911 - INFO  - Updated Loop Conditions: ['-50 < 0']
2025-08-15 10:56:09,911 - INFO  - Global Unchanged Variables: []
2025-08-15 10:56:09,911 - INFO  - Non Inductive Variables: []
2025-08-15 10:56:15,158 - DEBUG  - invgen reasoning
2025-08-15 10:56:15,158 - DEBUG  - ```c
void foo54(int x, int y) {

  x = -50;

  /* >>> LOOP INVARIANT TO FILL <<< */
  /*@
    loop invariant x == -50 + (y - \at(y,Pre)) * (y - \at(y,Pre) + 1) / 2;
    loop invariant y >= \at(y,Pre);
    loop invariant x < 0;
  */
  while( x < 0 ) {
    x = x + y;
    y++;
  }

  /*@ assert y > 0;*/
}
```
2025-08-15 10:56:15,158 - INFO  - 生成循环不变量
2025-08-15 10:56:15,158 - INFO  - 
void foo54(int x, int y) {

  x = -50;

  /* >>> LOOP INVARIANT TO FILL <<< */
  /*@
    loop invariant x == -50 + (y - \at(y,Pre)) * (y - \at(y,Pre) + 1) / 2;
    loop invariant y >= \at(y,Pre);
    loop invariant x < 0;
  */
  while( x < 0 ) {
    x = x + y;
    y++;
  }

  /*@ assert y > 0;*/
}

2025-08-15 10:56:15,158 - INFO  - 注释过不变量的代码
2025-08-15 10:56:15,158 - INFO  - 
void foo54(int x, int y) {

  x = -50;

  /* >>> LOOP INVARIANT TO FILL <<< */
  /*@
    loop invariant x == -50 + (y - \at(y,Pre)) * (y - \at(y,Pre) + 1) / 2;
    loop invariant y >= \at(y,Pre);
    loop invariant x < 0;
  */
  while( x < 0 ) {
    x = x + y;
    y++;
  }

  /*@ assert y > 0;*/
}

2025-08-15 10:56:25,876 - INFO  - syntax Correct
2025-08-15 10:56:29,543 - INFO  - Validate:
2025-08-15 10:56:29,544 - INFO  - [False, True, False]
2025-08-15 10:56:29,544 - INFO  - 
2025-08-15 10:56:29,544 - INFO  - Verify:
2025-08-15 10:56:29,544 - INFO  - [True]
2025-08-15 10:56:29,544 - INFO  - 
2025-08-15 10:56:29,544 - INFO  - ACSL 格式的循环不变量
2025-08-15 10:56:29,544 - INFO  - /*@
    loop invariant x == -50 + (y - \at(y,Pre)) * (y - \at(y,Pre) + 1) / 2;
    loop invariant y >= \at(y,Pre);
    loop invariant x < 0;
  */
  while( x < 0 ) {
    x = x + y;
    y++;
  }
2025-08-15 10:56:29,545 - INFO  - VST 格式的循环不变量
2025-08-15 10:56:29,545 - INFO  - /*@ Inv
    (x == -50 + (y - y@pre) * (y - y@pre + 1) / 2) &&
(y >= y@pre) &&
(x < 0)
    */
    
  while( x < 0 ) {
    x = x + y;
    y++;
  }
2025-08-15 10:56:40,231 - INFO  - syntax Correct
2025-08-15 10:56:43,921 - INFO  - Validate:
2025-08-15 10:56:43,921 - INFO  - [False, True, False]
2025-08-15 10:56:43,921 - INFO  - 
2025-08-15 10:56:43,921 - INFO  - Verify:
2025-08-15 10:56:43,921 - INFO  - [True]
2025-08-15 10:56:43,922 - INFO  - 
2025-08-15 10:56:54,629 - INFO  - syntax Correct
2025-08-15 10:56:58,336 - INFO  - Validate:
2025-08-15 10:56:58,336 - INFO  - [False, True, False]
2025-08-15 10:56:58,336 - INFO  - 
2025-08-15 10:56:58,336 - INFO  - Verify:
2025-08-15 10:56:58,336 - INFO  - [True]
2025-08-15 10:56:58,336 - INFO  - 
2025-08-15 10:56:58,336 - INFO  - ========================================
2025-08-15 10:56:58,336 - INFO  - first_pass:
2025-08-15 10:56:58,336 - INFO  - syntax=1, valid=None,satisfy=None
2025-08-15 10:56:58,336 - INFO  - ========================================

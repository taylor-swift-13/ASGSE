2025-08-15 11:12:15,000 - INFO  - 
FUNCTION INITIALIZATION
2025-08-15 11:12:15,000 - INFO  - ========================================

2025-08-15 11:12:15,138 - INFO  - 初始待处理函数: ['foo64', 'unknown']
2025-08-15 11:12:15,138 - INFO  - 现在处理函数 unknown

2025-08-15 11:12:15,138 - INFO  - 
GENERATE ANNOTATION FOR foo64
2025-08-15 11:12:15,138 - INFO  - ========================================

2025-08-15 11:12:15,138 - INFO  - 函数 foo64 已经初始化
2025-08-15 11:12:15,152 - INFO  - 
GENERATE LOOP INVARIANT FOR foo64
2025-08-15 11:12:15,152 - INFO  - ========================================

2025-08-15 11:12:15,166 - INFO  - file_name: foo64
2025-08-15 11:12:15,174 - DEBUG  - INNER_FLAG: False
2025-08-15 11:12:15,189 - INFO  - Variable Maps:[{'n': '0', 'y': '0', 'x': '0'}]
2025-08-15 11:12:15,189 - INFO  - Path conditions: [None]
2025-08-15 11:12:15,190 - INFO  - Pre condition: (n == 0) * (y == 0) * (x == 0)
2025-08-15 11:12:15,190 - INFO  - Loop Condition: unknown()
2025-08-15 11:12:15,190 - INFO  - Array Names: []
2025-08-15 11:12:15,190 - INFO  - Updated Loop Conditions: ['unknown()']
2025-08-15 11:12:15,190 - INFO  - Global Unchanged Variables: ['n']
2025-08-15 11:12:15,190 - INFO  - Non Inductive Variables: []
2025-08-15 11:12:18,861 - DEBUG  - invgen reasoning
2025-08-15 11:12:18,861 - DEBUG  - ```c
void foo64() {
  int x = 0;
  int y = 0;
  int n = 0;

  /* >>> LOOP INVARIANT TO FILL <<< */
  /*@
    loop invariant x == y;
    loop invariant x >= 0;
    loop invariant y >= 0;
  */
  while(unknown()) {
      x++;
      y++;
  }

  /* >>> LOOP INVARIANT TO FILL <<< */
  /*@
    loop invariant x >= 0;
    loop invariant y >= 0;
    loop invariant x == y;
    loop invariant x <= n;
  */
  while(x != n) {
      x--;
      y--;
  }
  /*@ assert y == n; */
}
```
2025-08-15 11:12:18,862 - INFO  - 生成循环不变量
2025-08-15 11:12:18,862 - INFO  - 
void foo64() {
  int x = 0;
  int y = 0;
  int n = 0;

  /* >>> LOOP INVARIANT TO FILL <<< */
  /*@
    loop invariant x == y;
    loop invariant x >= 0;
    loop invariant y >= 0;
  */
  while(unknown()) {
      x++;
      y++;
  }

  /* >>> LOOP INVARIANT TO FILL <<< */
  /*@
    loop invariant x >= 0;
    loop invariant y >= 0;
    loop invariant x == y;
    loop invariant x <= n;
  */
  while(x != n) {
      x--;
      y--;
  }
  /*@ assert y == n; */
}

2025-08-15 11:12:18,862 - INFO  - 注释过不变量的代码
2025-08-15 11:12:18,862 - INFO  - 
void foo64() {
  int x = 0;
  int y = 0;
  int n = 0;

  /* >>> LOOP INVARIANT TO FILL <<< */
  /*@
    loop invariant x == y;
    loop invariant x >= 0;
    loop invariant y >= 0;
  */
  while(unknown()) {
      x++;
      y++;
  }

  /* >>> LOOP INVARIANT TO FILL <<< */
  /*@
    loop invariant x >= 0;
    loop invariant y >= 0;
    loop invariant x == y;
    loop invariant x <= n;
  */
  while(x != n) {
      x--;
      y--;
  }
  /*@ assert y == n; */
}

2025-08-15 11:12:30,215 - INFO  - syntax Correct
2025-08-15 11:12:34,467 - INFO  - Validate:
2025-08-15 11:12:34,467 - INFO  - [True, True, True, False, True, True, False]
2025-08-15 11:12:34,467 - INFO  - 
2025-08-15 11:12:34,467 - INFO  - Verify:
2025-08-15 11:12:34,467 - INFO  - [True]
2025-08-15 11:12:34,467 - INFO  - 
2025-08-15 11:12:34,467 - INFO  - ACSL 格式的循环不变量
2025-08-15 11:12:34,467 - INFO  - /*@
    loop invariant x == y;
    loop invariant x >= 0;
    loop invariant y >= 0;
  */
  while(unknown()) {
      x++;
      y++;
  }
2025-08-15 11:12:34,468 - INFO  - VST 格式的循环不变量
2025-08-15 11:12:34,468 - INFO  - /*@ Inv
    (x == y) &&
(x >= 0) &&
(y >= 0)
    */
    
  while(unknown()) {
      x++;
      y++;
  }
2025-08-15 11:12:34,468 - DEBUG  - INNER_FLAG: False
2025-08-15 11:12:34,486 - INFO  - Variable Maps:[{}]
2025-08-15 11:12:34,487 - INFO  - Path conditions: [None]
2025-08-15 11:12:34,487 - INFO  - Pre condition: 
2025-08-15 11:12:34,487 - INFO  - Loop Condition: x!=n
2025-08-15 11:12:34,487 - INFO  - Array Names: []
2025-08-15 11:12:34,487 - INFO  - Updated Loop Conditions: ['x!=n']
2025-08-15 11:12:34,487 - INFO  - Global Unchanged Variables: []
2025-08-15 11:12:34,487 - INFO  - Non Inductive Variables: []
2025-08-15 11:12:37,870 - DEBUG  - invgen reasoning
2025-08-15 11:12:37,870 - DEBUG  - ```c
void foo64() {
  int x = 0;
  int y = 0;
  int n = 0;

  /* >>> LOOP INVARIANT TO FILL <<< */
  /*@
    loop invariant x == y;
    loop invariant x >= 0;
    loop invariant y >= 0;
  */
  while(unknown()) {
      x++;
      y++;
  }

  /* >>> LOOP INVARIANT TO FILL <<< */
  /*@
    loop invariant x >= 0;
    loop invariant y >= 0;
    loop invariant x == y;
    loop invariant x <= n;
  */
  while(x != n) {
      x--;
      y--;
  }
  
  /*@ assert y == n; */
}
```
2025-08-15 11:12:37,870 - INFO  - 生成循环不变量
2025-08-15 11:12:37,870 - INFO  - 
void foo64() {
  int x = 0;
  int y = 0;
  int n = 0;

  /* >>> LOOP INVARIANT TO FILL <<< */
  /*@
    loop invariant x == y;
    loop invariant x >= 0;
    loop invariant y >= 0;
  */
  while(unknown()) {
      x++;
      y++;
  }

  /* >>> LOOP INVARIANT TO FILL <<< */
  /*@
    loop invariant x >= 0;
    loop invariant y >= 0;
    loop invariant x == y;
    loop invariant x <= n;
  */
  while(x != n) {
      x--;
      y--;
  }
  
  /*@ assert y == n; */
}

2025-08-15 11:12:37,870 - INFO  - 注释过不变量的代码
2025-08-15 11:12:37,870 - INFO  - 
void foo64() {
  int x = 0;
  int y = 0;
  int n = 0;

  /* >>> LOOP INVARIANT TO FILL <<< */
  /*@
    loop invariant x == y;
    loop invariant x >= 0;
    loop invariant y >= 0;
  */
  while(unknown()) {
      x++;
      y++;
  }

  /* >>> LOOP INVARIANT TO FILL <<< */
  /*@
    loop invariant x >= 0;
    loop invariant y >= 0;
    loop invariant x == y;
    loop invariant x <= n;
  */
  while(x != n) {
      x--;
      y--;
  }
  
  /*@ assert y == n; */
}

2025-08-15 11:12:49,276 - INFO  - syntax Correct
2025-08-15 11:12:53,497 - INFO  - Validate:
2025-08-15 11:12:53,498 - INFO  - [True, True, True, False, True, True, False]
2025-08-15 11:12:53,498 - INFO  - 
2025-08-15 11:12:53,498 - INFO  - Verify:
2025-08-15 11:12:53,498 - INFO  - [True]
2025-08-15 11:12:53,498 - INFO  - 
2025-08-15 11:12:53,498 - INFO  - ACSL 格式的循环不变量
2025-08-15 11:12:53,498 - INFO  - /*@
    loop invariant x >= 0;
    loop invariant y >= 0;
    loop invariant x == y;
    loop invariant x <= n;
  */
  while(x != n) {
      x--;
      y--;
  }
2025-08-15 11:12:53,498 - INFO  - VST 格式的循环不变量
2025-08-15 11:12:53,499 - INFO  - /*@ Inv
    (x >= 0) &&
(y >= 0) &&
(x == y) &&
(x <= n)
    */
    
  while(x != n) {
      x--;
      y--;
  }
2025-08-15 11:13:04,932 - INFO  - syntax Correct
2025-08-15 11:13:09,155 - INFO  - Validate:
2025-08-15 11:13:09,155 - INFO  - [True, True, True, False, True, True, False]
2025-08-15 11:13:09,155 - INFO  - 
2025-08-15 11:13:09,155 - INFO  - Verify:
2025-08-15 11:13:09,155 - INFO  - [True]
2025-08-15 11:13:09,155 - INFO  - 
2025-08-15 11:13:20,490 - INFO  - syntax Correct
2025-08-15 11:13:24,700 - INFO  - Validate:
2025-08-15 11:13:24,700 - INFO  - [True, True, True, False, True, True, False]
2025-08-15 11:13:24,700 - INFO  - 
2025-08-15 11:13:24,700 - INFO  - Verify:
2025-08-15 11:13:24,700 - INFO  - [True]
2025-08-15 11:13:24,700 - INFO  - 
2025-08-15 11:13:24,700 - INFO  - ========================================
2025-08-15 11:13:24,700 - INFO  - first_pass:
2025-08-15 11:13:24,700 - INFO  - syntax=1, valid=None,satisfy=None
2025-08-15 11:13:24,700 - INFO  - ========================================

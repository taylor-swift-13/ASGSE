2025-08-15 11:03:07,699 - INFO  - 
FUNCTION INITIALIZATION
2025-08-15 11:03:07,699 - INFO  - ========================================

2025-08-15 11:03:07,815 - INFO  - 初始待处理函数: ['foo48']
2025-08-15 11:03:07,815 - INFO  - 
GENERATE ANNOTATION FOR foo48
2025-08-15 11:03:07,815 - INFO  - ========================================

2025-08-15 11:03:07,815 - INFO  - 函数 foo48 已经初始化
2025-08-15 11:03:07,830 - INFO  - 
GENERATE LOOP INVARIANT FOR foo48
2025-08-15 11:03:07,830 - INFO  - ========================================

2025-08-15 11:03:07,843 - INFO  - file_name: foo48
2025-08-15 11:03:07,855 - DEBUG  - INNER_FLAG: False
2025-08-15 11:03:07,874 - INFO  - Variable Maps:[{'j': 'y@pre', 'i': 'x@pre', 'z3': 'z3@pre', 'z2': 'z2@pre', 'z1': 'z1@pre', 'y': 'y@pre', 'x': 'x@pre'}]
2025-08-15 11:03:07,874 - INFO  - Path conditions: [None]
2025-08-15 11:03:07,874 - INFO  - Pre condition: (j == y@pre) * (i == x@pre) * (z3 == z3@pre) * (z2 == z2@pre) * (z1 == z1@pre) * (y == y@pre) * (x == x@pre)
2025-08-15 11:03:07,875 - INFO  - Loop Condition: x != 0
2025-08-15 11:03:07,875 - INFO  - Array Names: []
2025-08-15 11:03:07,875 - INFO  - Updated Loop Conditions: ['x@pre != 0']
2025-08-15 11:03:07,875 - INFO  - Global Unchanged Variables: ['j', 'i', 'z3', 'z2', 'z1']
2025-08-15 11:03:07,875 - INFO  - Non Inductive Variables: []
2025-08-15 11:03:11,034 - DEBUG  - invgen reasoning
2025-08-15 11:03:11,034 - DEBUG  - ```c
void foo48(int x, int y, int z1, int z2, int z3) {

    int i = x;
    int j = y;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
      loop invariant x >= 0;
      loop invariant y == j - (i - x);
      loop invariant (i == j) ==> (y == (j - (i - x)));
    */
    while (x != 0) {
        x = x - 1;
        y = y - 1;
    }
    
    /*@ assert (i == j) ==> (y == 0); */

}
```
2025-08-15 11:03:11,035 - INFO  - 生成循环不变量
2025-08-15 11:03:11,035 - INFO  - 
void foo48(int x, int y, int z1, int z2, int z3) {

    int i = x;
    int j = y;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
      loop invariant x >= 0;
      loop invariant y == j - (i - x);
      loop invariant (i == j) ==> (y == (j - (i - x)));
    */
    while (x != 0) {
        x = x - 1;
        y = y - 1;
    }
    
    /*@ assert (i == j) ==> (y == 0); */

}

2025-08-15 11:03:11,035 - INFO  - 注释过不变量的代码
2025-08-15 11:03:11,035 - INFO  - 
void foo48(int x, int y, int z1, int z2, int z3) {

    int i = x;
    int j = y;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
      loop invariant x >= 0;
      loop invariant y == j - (i - x);
      loop invariant (i == j) ==> (y == (j - (i - x)));
    */
    while (x != 0) {
        x = x - 1;
        y = y - 1;
    }
    
    /*@ assert (i == j) ==> (y == 0); */

}

2025-08-15 11:03:21,819 - INFO  - syntax Correct
2025-08-15 11:03:25,404 - INFO  - Validate:
2025-08-15 11:03:25,404 - INFO  - [False, True, True]
2025-08-15 11:03:25,404 - INFO  - 
2025-08-15 11:03:25,404 - INFO  - Verify:
2025-08-15 11:03:25,404 - INFO  - [True]
2025-08-15 11:03:25,404 - INFO  - 
2025-08-15 11:03:25,404 - INFO  - ACSL 格式的循环不变量
2025-08-15 11:03:25,405 - INFO  - /*@
      loop invariant x >= 0;
      loop invariant y == j - (i - x);
      loop invariant (i == j) ==> (y == (j - (i - x)));
    */
    while (x != 0) {
        x = x - 1;
        y = y - 1;
    }
2025-08-15 11:03:25,405 - INFO  - VST 格式的循环不变量
2025-08-15 11:03:25,405 - INFO  - /*@ Inv
    (x >= 0) &&
(y == j - (i - x)) &&
((i == j) => (y == (j - (i - x))))
    */
    
    while (x != 0) {
        x = x - 1;
        y = y - 1;
    }
2025-08-15 11:03:36,251 - INFO  - syntax Correct
2025-08-15 11:03:39,819 - INFO  - Validate:
2025-08-15 11:03:39,820 - INFO  - [False, True, True]
2025-08-15 11:03:39,820 - INFO  - 
2025-08-15 11:03:39,820 - INFO  - Verify:
2025-08-15 11:03:39,820 - INFO  - [True]
2025-08-15 11:03:39,820 - INFO  - 
2025-08-15 11:03:50,635 - INFO  - syntax Correct
2025-08-15 11:03:54,198 - INFO  - Validate:
2025-08-15 11:03:54,198 - INFO  - [False, True, True]
2025-08-15 11:03:54,198 - INFO  - 
2025-08-15 11:03:54,198 - INFO  - Verify:
2025-08-15 11:03:54,198 - INFO  - [True]
2025-08-15 11:03:54,198 - INFO  - 
2025-08-15 11:03:54,198 - INFO  - ========================================
2025-08-15 11:03:54,198 - INFO  - first_pass:
2025-08-15 11:03:54,199 - INFO  - syntax=1, valid=None,satisfy=None
2025-08-15 11:03:54,199 - INFO  - ========================================

2025-08-15 10:30:17,168 - INFO  - 
FUNCTION INITIALIZATION
2025-08-15 10:30:17,168 - INFO  - ========================================

2025-08-15 10:30:17,209 - INFO  - 初始待处理函数: ['foo39']
2025-08-15 10:30:17,209 - INFO  - 
GENERATE ANNOTATION FOR foo39
2025-08-15 10:30:17,209 - INFO  - ========================================

2025-08-15 10:30:17,209 - INFO  - 函数 foo39 已经初始化
2025-08-15 10:30:17,223 - INFO  - 
GENERATE LOOP INVARIANT FOR foo39
2025-08-15 10:30:17,224 - INFO  - ========================================

2025-08-15 10:30:17,237 - INFO  - file_name: foo39
2025-08-15 10:30:17,247 - DEBUG  - INNER_FLAG: False
2025-08-15 10:30:17,263 - INFO  - Variable Maps:[{'y': '1', 'j': '0', 'i': '0', 'x': 'x@pre'}]
2025-08-15 10:30:17,263 - INFO  - Path conditions: [None]
2025-08-15 10:30:17,263 - INFO  - Pre condition: (y == 1) * (j == 0) * (i == 0) * (x == x@pre)
2025-08-15 10:30:17,263 - INFO  - Loop Condition: i <= x
2025-08-15 10:30:17,263 - INFO  - Array Names: []
2025-08-15 10:30:17,263 - INFO  - Updated Loop Conditions: ['0 <= x@pre']
2025-08-15 10:30:17,264 - INFO  - Global Unchanged Variables: ['y', 'x']
2025-08-15 10:30:17,264 - INFO  - Non Inductive Variables: []
2025-08-15 10:30:22,236 - DEBUG  - invgen reasoning
2025-08-15 10:30:22,236 - DEBUG  - ```c
void foo39(int x) {
    int i = 0;
    int j = 0;
    int y = 1;
    
    /*@
      loop invariant 0 <= i <= x + 1;
      loop invariant j == i * y;
    */
    while (i <= x) {
        i = i + 1;
        j = j + y;
    }
    
    /*@ assert (i != j) ==> (y != 1); */
}
```
2025-08-15 10:30:22,236 - INFO  - 生成循环不变量
2025-08-15 10:30:22,236 - INFO  - 
void foo39(int x) {
    int i = 0;
    int j = 0;
    int y = 1;
    
    /*@
      loop invariant 0 <= i <= x + 1;
      loop invariant j == i * y;
    */
    while (i <= x) {
        i = i + 1;
        j = j + y;
    }
    
    /*@ assert (i != j) ==> (y != 1); */
}

2025-08-15 10:30:22,237 - INFO  - 注释过不变量的代码
2025-08-15 10:30:22,237 - INFO  - 
void foo39(int x) {
    int i = 0;
    int j = 0;
    int y = 1;
    
    /*@
      loop invariant 0 <= i <= x + 1;
      loop invariant j == i * y;
    */
    while (i <= x) {
        i = i + 1;
        j = j + y;
    }
    
    /*@ assert (i != j) ==> (y != 1); */
}

2025-08-15 10:30:33,097 - INFO  - syntax Correct
2025-08-15 10:30:36,665 - INFO  - Validate:
2025-08-15 10:30:36,665 - INFO  - [False, True]
2025-08-15 10:30:36,665 - INFO  - 
2025-08-15 10:30:36,665 - INFO  - Verify:
2025-08-15 10:30:36,665 - INFO  - [True]
2025-08-15 10:30:36,665 - INFO  - 
2025-08-15 10:30:36,666 - INFO  - ACSL 格式的循环不变量
2025-08-15 10:30:36,666 - INFO  - /*@
      loop invariant 0 <= i <= x + 1;
      loop invariant j == i * y;
    */
    while (i <= x) {
        i = i + 1;
        j = j + y;
    }
2025-08-15 10:30:36,666 - INFO  - VST 格式的循环不变量
2025-08-15 10:30:36,666 - INFO  - /*@ Inv
    (0 <= i && i <= x + 1) &&
(j == i * y)
    */
    
    while (i <= x) {
        i = i + 1;
        j = j + y;
    }
2025-08-15 10:30:47,524 - INFO  - syntax Correct
2025-08-15 10:30:51,079 - INFO  - Validate:
2025-08-15 10:30:51,079 - INFO  - [False, True]
2025-08-15 10:30:51,079 - INFO  - 
2025-08-15 10:30:51,079 - INFO  - Verify:
2025-08-15 10:30:51,079 - INFO  - [True]
2025-08-15 10:30:51,079 - INFO  - 
2025-08-15 10:31:01,902 - INFO  - syntax Correct
2025-08-15 10:31:05,452 - INFO  - Validate:
2025-08-15 10:31:05,453 - INFO  - [False, True]
2025-08-15 10:31:05,453 - INFO  - 
2025-08-15 10:31:05,453 - INFO  - Verify:
2025-08-15 10:31:05,453 - INFO  - [True]
2025-08-15 10:31:05,453 - INFO  - 
2025-08-15 10:31:05,453 - INFO  - ========================================
2025-08-15 10:31:05,453 - INFO  - first_pass:
2025-08-15 10:31:05,453 - INFO  - syntax=1, valid=None,satisfy=None
2025-08-15 10:31:05,453 - INFO  - ========================================

2025-08-15 10:56:58,408 - INFO  - 
FUNCTION INITIALIZATION
2025-08-15 10:56:58,408 - INFO  - ========================================

2025-08-15 10:56:58,508 - INFO  - 初始待处理函数: ['foo26']
2025-08-15 10:56:58,509 - INFO  - 
GENERATE ANNOTATION FOR foo26
2025-08-15 10:56:58,509 - INFO  - ========================================

2025-08-15 10:56:58,509 - INFO  - 函数 foo26 已经初始化
2025-08-15 10:56:58,524 - INFO  - 
GENERATE LOOP INVARIANT FOR foo26
2025-08-15 10:56:58,524 - INFO  - ========================================

2025-08-15 10:56:58,539 - INFO  - file_name: foo26
2025-08-15 10:56:58,549 - DEBUG  - INNER_FLAG: False
2025-08-15 10:56:58,564 - INFO  - Variable Maps:[{'x': '1', 'v3': 'v3@pre', 'v2': 'v2@pre', 'v1': 'v1@pre', 'y': 'y@pre', 'n': 'n@pre'}]
2025-08-15 10:56:58,565 - INFO  - Path conditions: [None]
2025-08-15 10:56:58,565 - INFO  - Pre condition: (x == 1) * (v3 == v3@pre) * (v2 == v2@pre) * (v1 == v1@pre) * (y == y@pre) * (n == n@pre)
2025-08-15 10:56:58,565 - INFO  - Loop Condition: x <= n
2025-08-15 10:56:58,565 - INFO  - Array Names: []
2025-08-15 10:56:58,565 - INFO  - Updated Loop Conditions: ['1 <= n@pre']
2025-08-15 10:56:58,565 - INFO  - Global Unchanged Variables: ['v3', 'v2', 'v1', 'n']
2025-08-15 10:56:58,565 - INFO  - Non Inductive Variables: ['y']
2025-08-15 10:57:47,661 - DEBUG  - invgen reasoning
2025-08-15 10:57:47,661 - DEBUG  - ```c
void foo26(int n,int y,int v1,int v2,int v3) {
    
    int x = 1;

    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
      loop invariant 1 <= x <= n + 1;
      loop invariant y == n - x + 1;
    */
    while (x <= n) {
        y = n - x;
        x = x + 1;
    }

    /*@ assert (n > 0) ==> (y <= n); */
}
```
2025-08-15 10:57:47,661 - INFO  - 生成循环不变量
2025-08-15 10:57:47,661 - INFO  - 
void foo26(int n,int y,int v1,int v2,int v3) {
    
    int x = 1;

    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
      loop invariant 1 <= x <= n + 1;
      loop invariant y == n - x + 1;
    */
    while (x <= n) {
        y = n - x;
        x = x + 1;
    }

    /*@ assert (n > 0) ==> (y <= n); */
}

2025-08-15 10:57:47,661 - INFO  - 注释过不变量的代码
2025-08-15 10:57:47,661 - INFO  - 
void foo26(int n,int y,int v1,int v2,int v3) {
    
    int x = 1;

    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
      loop invariant 1 <= x <= n + 1;
      loop invariant y == n - x + 1;
    */
    while (x <= n) {
        y = n - x;
        x = x + 1;
    }

    /*@ assert (n > 0) ==> (y <= n); */
}

2025-08-15 10:57:58,526 - INFO  - syntax Correct
2025-08-15 10:58:02,152 - INFO  - Validate:
2025-08-15 10:58:02,153 - INFO  - [False, False]
2025-08-15 10:58:02,153 - INFO  - 
2025-08-15 10:58:02,153 - INFO  - Verify:
2025-08-15 10:58:02,153 - INFO  - [True]
2025-08-15 10:58:02,153 - INFO  - 
2025-08-15 10:58:02,153 - INFO  - ACSL 格式的循环不变量
2025-08-15 10:58:02,153 - INFO  - /*@
      loop invariant 1 <= x <= n + 1;
      loop invariant y == n - x + 1;
    */
    while (x <= n) {
        y = n - x;
        x = x + 1;
    }
2025-08-15 10:58:02,154 - INFO  - VST 格式的循环不变量
2025-08-15 10:58:02,154 - INFO  - /*@ Inv
    (1 <= x && x <= n + 1) &&
(y == n - x + 1)
    */
    
    while (x <= n) {
        y = n - x;
        x = x + 1;
    }
2025-08-15 10:58:12,981 - INFO  - syntax Correct
2025-08-15 10:58:16,655 - INFO  - Validate:
2025-08-15 10:58:16,655 - INFO  - [False, False]
2025-08-15 10:58:16,655 - INFO  - 
2025-08-15 10:58:16,655 - INFO  - Verify:
2025-08-15 10:58:16,655 - INFO  - [True]
2025-08-15 10:58:16,655 - INFO  - 
2025-08-15 10:58:27,527 - INFO  - syntax Correct
2025-08-15 10:58:31,171 - INFO  - Validate:
2025-08-15 10:58:31,171 - INFO  - [False, False]
2025-08-15 10:58:31,171 - INFO  - 
2025-08-15 10:58:31,171 - INFO  - Verify:
2025-08-15 10:58:31,172 - INFO  - [True]
2025-08-15 10:58:31,172 - INFO  - 
2025-08-15 10:58:31,172 - INFO  - ========================================
2025-08-15 10:58:31,172 - INFO  - first_pass:
2025-08-15 10:58:31,172 - INFO  - syntax=1, valid=None,satisfy=None
2025-08-15 10:58:31,172 - INFO  - ========================================

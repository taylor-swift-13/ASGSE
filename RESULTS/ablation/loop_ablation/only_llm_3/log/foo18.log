2025-08-15 11:10:39,820 - INFO  - 
FUNCTION INITIALIZATION
2025-08-15 11:10:39,820 - INFO  - ========================================

2025-08-15 11:10:39,955 - INFO  - 初始待处理函数: ['foo18', 'unknown']
2025-08-15 11:10:39,955 - INFO  - 现在处理函数 unknown

2025-08-15 11:10:39,955 - INFO  - 
GENERATE ANNOTATION FOR foo18
2025-08-15 11:10:39,955 - INFO  - ========================================

2025-08-15 11:10:39,955 - INFO  - 函数 foo18 已经初始化
2025-08-15 11:10:39,971 - INFO  - 
GENERATE LOOP INVARIANT FOR foo18
2025-08-15 11:10:39,971 - INFO  - ========================================

2025-08-15 11:10:39,985 - INFO  - file_name: foo18
2025-08-15 11:10:39,995 - DEBUG  - INNER_FLAG: False
2025-08-15 11:10:40,011 - INFO  - Variable Maps:[{'c': '0', 'v3': 'v3@pre', 'v2': 'v2@pre', 'v1': 'v1@pre', 'n': 'n@pre'}]
2025-08-15 11:10:40,011 - INFO  - Path conditions: ['n@pre > 0']
2025-08-15 11:10:40,011 - INFO  - Pre condition: n@pre > 0 && (c == 0) * (v3 == v3@pre) * (v2 == v2@pre) * (v1 == v1@pre) * (n == n@pre)
2025-08-15 11:10:40,011 - INFO  - Loop Condition: unknown()
2025-08-15 11:10:40,011 - INFO  - Array Names: []
2025-08-15 11:10:40,012 - INFO  - Updated Loop Conditions: ['unknown()']
2025-08-15 11:10:40,012 - INFO  - Global Unchanged Variables: ['v3', 'v2', 'v1', 'n']
2025-08-15 11:10:40,012 - INFO  - Non Inductive Variables: ['c']
2025-08-15 11:10:43,411 - DEBUG  - invgen reasoning
2025-08-15 11:10:43,411 - DEBUG  - ```c
int unknown();

/*@ requires n > 0; */
void foo18(int n,int v1,int v2,int v3)  {

    int c = 0;

    
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
              loop invariant c >= 0 && c <= n;
              loop invariant n > 0;
              loop invariant (n <= -1) ==> (c != n);
            */
            while (unknown()) {
        {
          if (unknown()) {
            if ( c > n )
            {
            c  = c + 1;
            }
          } else {
            if (c == n) 
            {
            c  = 1;
            }
          }
    
        }
    
    }
            
             
    /*@ assert (n <= -1) ==> (c != n ); */
  

}
```
2025-08-15 11:10:43,411 - INFO  - 生成循环不变量
2025-08-15 11:10:43,411 - INFO  - 
int unknown();

/*@ requires n > 0; */
void foo18(int n,int v1,int v2,int v3)  {

    int c = 0;

    
            
            /*@
              loop invariant c >= 0 && c <= n;
              loop invariant n > 0;
              loop invariant (n <= -1) ==> (c != n);
            */
            while (unknown()) {
        {
          if (unknown()) {
            if ( c > n )
            {
            c  = c + 1;
            }
          } else {
            if (c == n) 
            {
            c  = 1;
            }
          }
    
        }
    
    }
            
             
    /*@ assert (n <= -1) ==> (c != n ); */
  

}

2025-08-15 11:10:43,411 - INFO  - 注释过不变量的代码
2025-08-15 11:10:43,411 - INFO  - 
int unknown();

/*@ requires n > 0; */
void foo18(int n,int v1,int v2,int v3)  {

    int c = 0;

    
            
            /*@
              loop invariant c >= 0 && c <= n;
              loop invariant n > 0;
              loop invariant (n <= -1) ==> (c != n);
            */
            while (unknown()) {
        {
          if (unknown()) {
            if ( c > n )
            {
            c  = c + 1;
            }
          } else {
            if (c == n) 
            {
            c  = 1;
            }
          }
    
        }
    
    }
            
             
    /*@ assert (n <= -1) ==> (c != n ); */
  

}

2025-08-15 11:10:54,041 - INFO  - syntax Correct
2025-08-15 11:10:57,665 - INFO  - Validate:
2025-08-15 11:10:57,665 - INFO  - [True, True, True]
2025-08-15 11:10:57,665 - INFO  - 
2025-08-15 11:10:57,665 - INFO  - Verify:
2025-08-15 11:10:57,665 - INFO  - [True]
2025-08-15 11:10:57,665 - INFO  - 
2025-08-15 11:10:57,665 - INFO  - ACSL 格式的循环不变量
2025-08-15 11:10:57,666 - INFO  - /*@
              loop invariant c >= 0 && c <= n;
              loop invariant n > 0;
              loop invariant (n <= -1) ==> (c != n);
            */
            while (unknown()) {
        {
          if (unknown()) {
            if ( c > n )
            {
            c  = c + 1;
            }
          } else {
            if (c == n) 
            {
            c  = 1;
            }
          }
    
        }
    
    }
2025-08-15 11:10:57,666 - INFO  - VST 格式的循环不变量
2025-08-15 11:10:57,666 - INFO  - /*@ Inv
    (c >= 0 && c <= n) &&
(n > 0) &&
((n <= -1) => (c != n))
    */
    
            while (unknown()) {
        {
          if (unknown()) {
            if ( c > n )
            {
            c  = c + 1;
            }
          } else {
            if (c == n) 
            {
            c  = 1;
            }
          }
    
        }
    
    }
2025-08-15 11:10:57,666 - INFO  - PARTIAL CORRECT INVARIANT
2025-08-15 11:10:57,667 - INFO  - 继续符号执行
2025-08-15 11:10:57,667 - INFO  - /*@ Inv
    (c >= 0 && c <= n) &&
(n > 0) &&
((n <= -1) => (c != n))
    */
    
            while (unknown()) {
        {
          if (unknown()) {
            if ( c > n )
            {
            c  = c + 1;
            }
          } else {
            if (c == n) 
            {
            c  = 1;
            }
          }
    
        }
    
    }
2025-08-15 11:11:08,314 - INFO  - syntax Correct
2025-08-15 11:11:11,913 - INFO  - Validate:
2025-08-15 11:11:11,914 - INFO  - [True, True, True]
2025-08-15 11:11:11,914 - INFO  - 
2025-08-15 11:11:11,914 - INFO  - Verify:
2025-08-15 11:11:11,914 - INFO  - [True]
2025-08-15 11:11:11,914 - INFO  - 
2025-08-15 11:11:11,914 - INFO  - CORRECT INVARIANT
2025-08-15 11:11:22,549 - INFO  - syntax Correct
2025-08-15 11:11:26,134 - INFO  - Validate:
2025-08-15 11:11:26,134 - INFO  - [True, True, True]
2025-08-15 11:11:26,134 - INFO  - 
2025-08-15 11:11:26,134 - INFO  - Verify:
2025-08-15 11:11:26,134 - INFO  - [True]
2025-08-15 11:11:26,134 - INFO  - 
2025-08-15 11:11:26,134 - INFO  - ========================================
2025-08-15 11:11:26,134 - INFO  - first_pass:
2025-08-15 11:11:26,134 - INFO  - syntax=1, valid=1,satisfy=1
2025-08-15 11:11:26,135 - INFO  - ========================================

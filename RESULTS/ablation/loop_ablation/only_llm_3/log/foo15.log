2025-08-15 10:35:08,998 - INFO  - 
FUNCTION INITIALIZATION
2025-08-15 10:35:08,999 - INFO  - ========================================

2025-08-15 10:35:09,049 - INFO  - 初始待处理函数: ['foo15']
2025-08-15 10:35:09,049 - INFO  - 
GENERATE ANNOTATION FOR foo15
2025-08-15 10:35:09,049 - INFO  - ========================================

2025-08-15 10:35:09,049 - INFO  - 函数 foo15 已经初始化
2025-08-15 10:35:09,063 - INFO  - 
GENERATE LOOP INVARIANT FOR foo15
2025-08-15 10:35:09,063 - INFO  - ========================================

2025-08-15 10:35:09,076 - INFO  - file_name: foo15
2025-08-15 10:35:09,085 - DEBUG  - INNER_FLAG: False
2025-08-15 10:35:09,099 - INFO  - Variable Maps:[{'x': 'n@pre', 'v3': 'v3@pre', 'v2': 'v2@pre', 'v1': 'v1@pre', 'n': 'n@pre'}]
2025-08-15 10:35:09,100 - INFO  - Path conditions: [None]
2025-08-15 10:35:09,100 - INFO  - Pre condition: (x == n@pre) * (v3 == v3@pre) * (v2 == v2@pre) * (v1 == v1@pre) * (n == n@pre)
2025-08-15 10:35:09,100 - INFO  - Loop Condition: x > 1
2025-08-15 10:35:09,100 - INFO  - Array Names: []
2025-08-15 10:35:09,100 - INFO  - Updated Loop Conditions: ['n@pre > 1']
2025-08-15 10:35:09,100 - INFO  - Global Unchanged Variables: ['v3', 'v2', 'v1', 'n']
2025-08-15 10:35:09,100 - INFO  - Non Inductive Variables: []
2025-08-15 10:35:14,860 - DEBUG  - invgen reasoning
2025-08-15 10:35:14,860 - DEBUG  - ```c
void foo15(int n, int v1, int v2, int v3) {

    int x = n;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
        loop invariant x >= 1;
        loop invariant n == \at(n, Pre);
    */
    while (x > 1) {
        x = x - 1;
    }
    
    /*@ assert (x != 1) ==> (n < 1); */
}
```
2025-08-15 10:35:14,860 - INFO  - 生成循环不变量
2025-08-15 10:35:14,860 - INFO  - 
void foo15(int n, int v1, int v2, int v3) {

    int x = n;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
        loop invariant x >= 1;
        loop invariant n == \at(n, Pre);
    */
    while (x > 1) {
        x = x - 1;
    }
    
    /*@ assert (x != 1) ==> (n < 1); */
}

2025-08-15 10:35:14,861 - INFO  - 注释过不变量的代码
2025-08-15 10:35:14,861 - INFO  - 
void foo15(int n, int v1, int v2, int v3) {

    int x = n;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
        loop invariant x >= 1;
        loop invariant n == \at(n, Pre);
    */
    while (x > 1) {
        x = x - 1;
    }
    
    /*@ assert (x != 1) ==> (n < 1); */
}

2025-08-15 10:35:25,711 - INFO  - syntax Correct
2025-08-15 10:35:29,265 - INFO  - Validate:
2025-08-15 10:35:29,265 - INFO  - [False, True]
2025-08-15 10:35:29,265 - INFO  - 
2025-08-15 10:35:29,265 - INFO  - Verify:
2025-08-15 10:35:29,265 - INFO  - [True]
2025-08-15 10:35:29,265 - INFO  - 
2025-08-15 10:35:29,265 - INFO  - ACSL 格式的循环不变量
2025-08-15 10:35:29,265 - INFO  - /*@
        loop invariant x >= 1;
        loop invariant n == \at(n, Pre);
    */
    while (x > 1) {
        x = x - 1;
    }
2025-08-15 10:35:29,266 - INFO  - VST 格式的循环不变量
2025-08-15 10:35:29,266 - INFO  - /*@ Inv
    (x >= 1) &&
(n == n@pre)
    */
    
    while (x > 1) {
        x = x - 1;
    }
2025-08-15 10:35:40,034 - INFO  - syntax Correct
2025-08-15 10:35:43,594 - INFO  - Validate:
2025-08-15 10:35:43,594 - INFO  - [False, True]
2025-08-15 10:35:43,594 - INFO  - 
2025-08-15 10:35:43,594 - INFO  - Verify:
2025-08-15 10:35:43,595 - INFO  - [True]
2025-08-15 10:35:43,595 - INFO  - 
2025-08-15 10:35:54,296 - INFO  - syntax Correct
2025-08-15 10:35:57,857 - INFO  - Validate:
2025-08-15 10:35:57,857 - INFO  - [False, True]
2025-08-15 10:35:57,857 - INFO  - 
2025-08-15 10:35:57,857 - INFO  - Verify:
2025-08-15 10:35:57,857 - INFO  - [True]
2025-08-15 10:35:57,857 - INFO  - 
2025-08-15 10:35:57,858 - INFO  - ========================================
2025-08-15 10:35:57,858 - INFO  - first_pass:
2025-08-15 10:35:57,858 - INFO  - syntax=1, valid=None,satisfy=None
2025-08-15 10:35:57,858 - INFO  - ========================================

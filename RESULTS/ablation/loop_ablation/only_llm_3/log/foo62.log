2025-08-15 10:24:47,777 - INFO  - 
FUNCTION INITIALIZATION
2025-08-15 10:24:47,777 - INFO  - ========================================

2025-08-15 10:24:47,803 - INFO  - 初始待处理函数: ['foo62']
2025-08-15 10:24:47,803 - INFO  - 
GENERATE ANNOTATION FOR foo62
2025-08-15 10:24:47,803 - INFO  - ========================================

2025-08-15 10:24:47,803 - INFO  - 函数 foo62 已经初始化
2025-08-15 10:24:47,817 - INFO  - 
GENERATE LOOP INVARIANT FOR foo62
2025-08-15 10:24:47,817 - INFO  - ========================================

2025-08-15 10:24:47,830 - INFO  - file_name: foo62
2025-08-15 10:24:47,839 - DEBUG  - INNER_FLAG: False
2025-08-15 10:24:47,854 - INFO  - Variable Maps:[{'sum': '0', 'n': 'n@pre'}]
2025-08-15 10:24:47,854 - INFO  - Path conditions: ['n@pre >= 0']
2025-08-15 10:24:47,854 - INFO  - Pre condition: n@pre >= 0 && (sum == 0) * undef_data_at(&i) * (n == n@pre)
2025-08-15 10:24:47,854 - INFO  - Loop Condition: i < n
2025-08-15 10:24:47,854 - INFO  - Array Names: []
2025-08-15 10:24:47,854 - INFO  - Updated Loop Conditions: ['i < n@pre']
2025-08-15 10:24:47,855 - INFO  - Global Unchanged Variables: ['n']
2025-08-15 10:24:47,855 - INFO  - Non Inductive Variables: []
2025-08-15 10:24:51,448 - DEBUG  - invgen reasoning
2025-08-15 10:24:51,448 - DEBUG  - ```c
/*@
requires n >= 0;
*/
void foo62(int n) {
  int i, sum = 0;

  /*@
    loop invariant 0 <= i <= n;
    loop invariant sum == (i * (i - 1)) / 2;
    loop invariant n >= 0;
    loop assigns i, sum;
    loop variant n - i;
  */
  for (i = 0; i < n; ++i) {
    sum = sum + i;
  }

  /*@ assert sum >= 0; */
}
```
2025-08-15 10:24:51,448 - INFO  - 生成循环不变量
2025-08-15 10:24:51,448 - INFO  - 
/*@
requires n >= 0;
*/
void foo62(int n) {
  int i, sum = 0;

  /*@
    loop invariant 0 <= i <= n;
    loop invariant sum == (i * (i - 1)) / 2;
    loop invariant n >= 0;
    loop assigns i, sum;
    loop variant n - i;
  */
  for (i = 0; i < n; ++i) {
    sum = sum + i;
  }

  /*@ assert sum >= 0; */
}

2025-08-15 10:24:51,448 - INFO  - 注释过不变量的代码
2025-08-15 10:24:51,448 - INFO  - 
/*@
requires n >= 0;
*/
void foo62(int n) {
  int i, sum = 0;

  /*@
    loop invariant 0 <= i <= n;
    loop invariant sum == (i * (i - 1)) / 2;
    loop invariant n >= 0;
    loop assigns i, sum;
    loop variant n - i;
  */
  for (i = 0; i < n; ++i) {
    sum = sum + i;
  }

  /*@ assert sum >= 0; */
}

2025-08-15 10:24:52,084 - INFO  - syntax Correct
2025-08-15 10:24:52,726 - INFO  - Validate:
2025-08-15 10:24:52,726 - INFO  - [True, True, True]
2025-08-15 10:24:52,726 - INFO  - 
2025-08-15 10:24:52,727 - INFO  - Verify:
2025-08-15 10:24:52,727 - INFO  - [True]
2025-08-15 10:24:52,727 - INFO  - 
2025-08-15 10:24:52,727 - INFO  - ACSL 格式的循环不变量
2025-08-15 10:24:52,727 - INFO  - /*@
    loop invariant 0 <= i <= n;
    loop invariant sum == (i * (i - 1)) / 2;
    loop invariant n >= 0;
    loop assigns i, sum;
    loop variant n - i;
  */
  for (i = 0; i < n; ++i) {
    sum = sum + i;
  }
2025-08-15 10:24:52,727 - INFO  - VST 格式的循环不变量
2025-08-15 10:24:52,727 - INFO  - /*@ Inv
    (0 <= i && i <= n) &&
(sum == (i * (i - 1)) / 2) &&
(n >= 0
    loop assigns i, sum
    loop variant n - i)
    */
    
  for (i = 0; i < n; ++i) {
    sum = sum + i;
  }
2025-08-15 10:24:52,727 - INFO  - PARTIAL CORRECT INVARIANT
2025-08-15 10:24:52,727 - INFO  - 继续符号执行
2025-08-15 10:24:52,728 - INFO  - /*@ Inv
    (0 <= i && i <= n) &&
(sum == (i * (i - 1)) / 2) &&
(n >= 0
    loop assigns i, sum
    loop variant n - i)
    */
    
  for (i = 0; i < n; ++i) {
    sum = sum + i;
  }
2025-08-15 10:24:53,316 - INFO  - syntax Correct
2025-08-15 10:24:53,963 - INFO  - Validate:
2025-08-15 10:24:53,963 - INFO  - [True, True, True]
2025-08-15 10:24:53,964 - INFO  - 
2025-08-15 10:24:53,964 - INFO  - Verify:
2025-08-15 10:24:53,964 - INFO  - [True]
2025-08-15 10:24:53,964 - INFO  - 
2025-08-15 10:24:53,964 - INFO  - CORRECT INVARIANT
2025-08-15 10:24:54,554 - INFO  - syntax Correct
2025-08-15 10:24:55,196 - INFO  - Validate:
2025-08-15 10:24:55,197 - INFO  - [True, True, True]
2025-08-15 10:24:55,197 - INFO  - 
2025-08-15 10:24:55,197 - INFO  - Verify:
2025-08-15 10:24:55,197 - INFO  - [True]
2025-08-15 10:24:55,197 - INFO  - 
2025-08-15 10:24:55,197 - INFO  - ========================================
2025-08-15 10:24:55,197 - INFO  - first_pass:
2025-08-15 10:24:55,197 - INFO  - syntax=1, valid=1,satisfy=1
2025-08-15 10:24:55,197 - INFO  - ========================================

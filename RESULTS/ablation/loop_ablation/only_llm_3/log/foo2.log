2025-08-15 10:32:45,869 - INFO  - 
FUNCTION INITIALIZATION
2025-08-15 10:32:45,869 - INFO  - ========================================

2025-08-15 10:32:45,915 - INFO  - 初始待处理函数: ['foo2']
2025-08-15 10:32:45,915 - INFO  - 
GENERATE ANNOTATION FOR foo2
2025-08-15 10:32:45,915 - INFO  - ========================================

2025-08-15 10:32:45,915 - INFO  - 函数 foo2 已经初始化
2025-08-15 10:32:45,929 - INFO  - 
GENERATE LOOP INVARIANT FOR foo2
2025-08-15 10:32:45,930 - INFO  - ========================================

2025-08-15 10:32:45,943 - INFO  - file_name: foo2
2025-08-15 10:32:45,953 - DEBUG  - INNER_FLAG: False
2025-08-15 10:32:45,969 - INFO  - Variable Maps:[{'x': '0', 'z': 'z@pre', 'y': 'y@pre'}]
2025-08-15 10:32:45,969 - INFO  - Path conditions: [None]
2025-08-15 10:32:45,969 - INFO  - Pre condition: (x == 0) * (z == z@pre) * (y == y@pre)
2025-08-15 10:32:45,969 - INFO  - Loop Condition: x < 500
2025-08-15 10:32:45,969 - INFO  - Array Names: []
2025-08-15 10:32:45,969 - INFO  - Updated Loop Conditions: ['0 < 500']
2025-08-15 10:32:45,969 - INFO  - Global Unchanged Variables: ['z']
2025-08-15 10:32:45,969 - INFO  - Non Inductive Variables: ['y']
2025-08-15 10:32:52,021 - DEBUG  - invgen reasoning
2025-08-15 10:32:52,021 - DEBUG  - ```c
void foo2(int y, int z)
{
    int x = 0;   

    /* >>> LOOP INVARIANT TO FILL <<< */
    /*@
      loop invariant x >= 0;
      loop invariant x <= 500;
      loop invariant z >= y;
    */
    while(x < 500) {
        x += 1;
        if(z <= y) {
            y = z;
        }
    }

    /*@ assert z >= y; */
}
```
2025-08-15 10:32:52,021 - INFO  - 生成循环不变量
2025-08-15 10:32:52,021 - INFO  - 
void foo2(int y, int z)
{
    int x = 0;   

    /* >>> LOOP INVARIANT TO FILL <<< */
    /*@
      loop invariant x >= 0;
      loop invariant x <= 500;
      loop invariant z >= y;
    */
    while(x < 500) {
        x += 1;
        if(z <= y) {
            y = z;
        }
    }

    /*@ assert z >= y; */
}

2025-08-15 10:32:52,022 - INFO  - 注释过不变量的代码
2025-08-15 10:32:52,022 - INFO  - 
void foo2(int y, int z)
{
    int x = 0;   

    /* >>> LOOP INVARIANT TO FILL <<< */
    /*@
      loop invariant x >= 0;
      loop invariant x <= 500;
      loop invariant z >= y;
    */
    while(x < 500) {
        x += 1;
        if(z <= y) {
            y = z;
        }
    }

    /*@ assert z >= y; */
}

2025-08-15 10:33:02,832 - INFO  - syntax Correct
2025-08-15 10:33:06,474 - INFO  - Validate:
2025-08-15 10:33:06,475 - INFO  - [True, True, False]
2025-08-15 10:33:06,475 - INFO  - 
2025-08-15 10:33:06,475 - INFO  - Verify:
2025-08-15 10:33:06,475 - INFO  - [True]
2025-08-15 10:33:06,475 - INFO  - 
2025-08-15 10:33:06,475 - INFO  - ACSL 格式的循环不变量
2025-08-15 10:33:06,475 - INFO  - /*@
      loop invariant x >= 0;
      loop invariant x <= 500;
      loop invariant z >= y;
    */
    while(x < 500) {
        x += 1;
        if(z <= y) {
            y = z;
        }
    }
2025-08-15 10:33:06,476 - INFO  - VST 格式的循环不变量
2025-08-15 10:33:06,476 - INFO  - /*@ Inv
    (x >= 0) &&
(x <= 500) &&
(z >= y)
    */
    
    while(x < 500) {
        x += 1;
        if(z <= y) {
            y = z;
        }
    }
2025-08-15 10:33:17,273 - INFO  - syntax Correct
2025-08-15 10:33:20,880 - INFO  - Validate:
2025-08-15 10:33:20,881 - INFO  - [True, True, False]
2025-08-15 10:33:20,881 - INFO  - 
2025-08-15 10:33:20,881 - INFO  - Verify:
2025-08-15 10:33:20,881 - INFO  - [True]
2025-08-15 10:33:20,881 - INFO  - 
2025-08-15 10:33:31,754 - INFO  - syntax Correct
2025-08-15 10:33:35,341 - INFO  - Validate:
2025-08-15 10:33:35,341 - INFO  - [True, True, False]
2025-08-15 10:33:35,341 - INFO  - 
2025-08-15 10:33:35,341 - INFO  - Verify:
2025-08-15 10:33:35,341 - INFO  - [True]
2025-08-15 10:33:35,342 - INFO  - 
2025-08-15 10:33:35,342 - INFO  - ========================================
2025-08-15 10:33:35,342 - INFO  - first_pass:
2025-08-15 10:33:35,342 - INFO  - syntax=1, valid=None,satisfy=None
2025-08-15 10:33:35,342 - INFO  - ========================================

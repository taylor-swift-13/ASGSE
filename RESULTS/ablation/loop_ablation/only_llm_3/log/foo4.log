2025-08-15 10:14:14,590 - INFO  - 
FUNCTION INITIALIZATION
2025-08-15 10:14:14,590 - INFO  - ========================================

2025-08-15 10:14:14,596 - INFO  - 初始待处理函数: ['foo4', 'unknown']
2025-08-15 10:14:14,596 - INFO  - 现在处理函数 unknown

2025-08-15 10:14:14,596 - INFO  - 
GENERATE ANNOTATION FOR foo4
2025-08-15 10:14:14,596 - INFO  - ========================================

2025-08-15 10:14:14,596 - INFO  - 函数 foo4 已经初始化
2025-08-15 10:14:14,626 - INFO  - 
GENERATE LOOP INVARIANT FOR foo4
2025-08-15 10:14:14,626 - INFO  - ========================================

2025-08-15 10:14:14,642 - INFO  - file_name: foo4
2025-08-15 10:14:14,650 - DEBUG  - INNER_FLAG: False
2025-08-15 10:14:14,668 - INFO  - Variable Maps:[{'y': 'y@pre', 'x': 'x@pre'}]
2025-08-15 10:14:14,668 - INFO  - Path conditions: ['x@pre >= 0 && x@pre <= 10 && y@pre <= 10 && y@pre >= 0']
2025-08-15 10:14:14,668 - INFO  - Pre condition: x@pre >= 0 && x@pre <= 10 && y@pre <= 10 && y@pre >= 0 && (y == y@pre) * (x == x@pre)
2025-08-15 10:14:14,668 - INFO  - Loop Condition: unknown()
2025-08-15 10:14:14,668 - INFO  - Array Names: []
2025-08-15 10:14:14,668 - INFO  - Updated Loop Conditions: ['unknown()']
2025-08-15 10:14:14,668 - INFO  - Global Unchanged Variables: []
2025-08-15 10:14:14,669 - INFO  - Non Inductive Variables: []
2025-08-15 10:14:18,221 - DEBUG  - invgen reasoning
2025-08-15 10:14:18,221 - DEBUG  - ```c
int unknown();
/*@ requires x >= 0 && x <= 10 && y <= 10 && y >= 0; */
void foo4(int x, int y) {
  
    /*@
      loop invariant x >= 0 && x <= 10 + 10 * \at(x, Pre);
      loop invariant y >= 0 && y <= 10 + 10 * \at(y, Pre);
      loop invariant (x == 20) ==> (y != 0);
    */
    while (unknown()) {
        x = x + 10;
        y = y + 10;
    }

    /*@ assert (x == 20) ==> (y != 0); */
}
```
2025-08-15 10:14:18,221 - INFO  - 生成循环不变量
2025-08-15 10:14:18,222 - INFO  - 
int unknown();
/*@ requires x >= 0 && x <= 10 && y <= 10 && y >= 0; */
void foo4(int x, int y) {
  
    /*@
      loop invariant x >= 0 && x <= 10 + 10 * \at(x, Pre);
      loop invariant y >= 0 && y <= 10 + 10 * \at(y, Pre);
      loop invariant (x == 20) ==> (y != 0);
    */
    while (unknown()) {
        x = x + 10;
        y = y + 10;
    }

    /*@ assert (x == 20) ==> (y != 0); */
}

2025-08-15 10:14:18,222 - INFO  - 注释过不变量的代码
2025-08-15 10:14:18,222 - INFO  - 
int unknown();
/*@ requires x >= 0 && x <= 10 && y <= 10 && y >= 0; */
void foo4(int x, int y) {
  
    /*@
      loop invariant x >= 0 && x <= 10 + 10 * \at(x, Pre);
      loop invariant y >= 0 && y <= 10 + 10 * \at(y, Pre);
      loop invariant (x == 20) ==> (y != 0);
    */
    while (unknown()) {
        x = x + 10;
        y = y + 10;
    }

    /*@ assert (x == 20) ==> (y != 0); */
}

2025-08-15 10:14:29,160 - INFO  - syntax Correct
2025-08-15 10:14:32,825 - INFO  - Validate:
2025-08-15 10:14:32,825 - INFO  - [False, False, True]
2025-08-15 10:14:32,825 - INFO  - 
2025-08-15 10:14:32,825 - INFO  - Verify:
2025-08-15 10:14:32,825 - INFO  - [True]
2025-08-15 10:14:32,825 - INFO  - 
2025-08-15 10:14:32,825 - INFO  - ACSL 格式的循环不变量
2025-08-15 10:14:32,825 - INFO  - /*@
      loop invariant x >= 0 && x <= 10 + 10 * \at(x, Pre);
      loop invariant y >= 0 && y <= 10 + 10 * \at(y, Pre);
      loop invariant (x == 20) ==> (y != 0);
    */
    while (unknown()) {
        x = x + 10;
        y = y + 10;
    }
2025-08-15 10:14:32,826 - INFO  - VST 格式的循环不变量
2025-08-15 10:14:32,826 - INFO  - /*@ Inv
    (x >= 0 && x <= 10 + 10 * x@pre) &&
(y >= 0 && y <= 10 + 10 * y@pre) &&
((x == 20) => (y != 0))
    */
    
    while (unknown()) {
        x = x + 10;
        y = y + 10;
    }
2025-08-15 10:14:43,666 - INFO  - syntax Correct
2025-08-15 10:14:47,296 - INFO  - Validate:
2025-08-15 10:14:47,297 - INFO  - [False, False, True]
2025-08-15 10:14:47,297 - INFO  - 
2025-08-15 10:14:47,297 - INFO  - Verify:
2025-08-15 10:14:47,297 - INFO  - [True]
2025-08-15 10:14:47,297 - INFO  - 
2025-08-15 10:14:58,126 - INFO  - syntax Correct
2025-08-15 10:15:01,735 - INFO  - Validate:
2025-08-15 10:15:01,735 - INFO  - [False, False, True]
2025-08-15 10:15:01,735 - INFO  - 
2025-08-15 10:15:01,736 - INFO  - Verify:
2025-08-15 10:15:01,736 - INFO  - [True]
2025-08-15 10:15:01,736 - INFO  - 
2025-08-15 10:15:01,736 - INFO  - ========================================
2025-08-15 10:15:01,736 - INFO  - first_pass:
2025-08-15 10:15:01,736 - INFO  - syntax=1, valid=None,satisfy=None
2025-08-15 10:15:01,736 - INFO  - ========================================

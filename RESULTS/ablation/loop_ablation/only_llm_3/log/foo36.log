2025-08-15 10:48:13,657 - INFO  - 
FUNCTION INITIALIZATION
2025-08-15 10:48:13,657 - INFO  - ========================================

2025-08-15 10:48:13,744 - INFO  - 初始待处理函数: ['foo36', 'unknown']
2025-08-15 10:48:13,744 - INFO  - 现在处理函数 unknown

2025-08-15 10:48:13,744 - INFO  - 
GENERATE ANNOTATION FOR foo36
2025-08-15 10:48:13,744 - INFO  - ========================================

2025-08-15 10:48:13,744 - INFO  - 函数 foo36 已经初始化
2025-08-15 10:48:13,759 - INFO  - 
GENERATE LOOP INVARIANT FOR foo36
2025-08-15 10:48:13,759 - INFO  - ========================================

2025-08-15 10:48:13,773 - INFO  - file_name: foo36
2025-08-15 10:48:13,783 - DEBUG  - INNER_FLAG: False
2025-08-15 10:48:13,801 - INFO  - Variable Maps:[{'x': 'y@pre', 'lock': '1', 'v3': 'v3@pre', 'v2': 'v2@pre', 'v1': 'v1@pre', 'y': 'y@pre'}]
2025-08-15 10:48:13,802 - INFO  - Path conditions: [None]
2025-08-15 10:48:13,802 - INFO  - Pre condition: (x == y@pre) * (lock == 1) * (v3 == v3@pre) * (v2 == v2@pre) * (v1 == v1@pre) * (y == y@pre)
2025-08-15 10:48:13,802 - INFO  - Loop Condition: x != y
2025-08-15 10:48:13,802 - INFO  - Array Names: []
2025-08-15 10:48:13,802 - INFO  - Updated Loop Conditions: ['y@pre != y@pre']
2025-08-15 10:48:13,802 - INFO  - Global Unchanged Variables: ['v3', 'v2', 'v1']
2025-08-15 10:48:13,802 - INFO  - Non Inductive Variables: ['lock', 'x', 'lock', 'x']
2025-08-15 10:48:20,913 - DEBUG  - invgen reasoning
2025-08-15 10:48:20,913 - DEBUG  - ```c
int unknown();

int foo36(int y,int v1,int v2,int v3) {

    int lock = 1;
    int x = y;

    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
      loop invariant x == y;
      loop invariant lock == 1 || lock == 0;
      loop invariant \at(y,Pre) <= y;
      loop invariant \at(y,Pre) <= x;
    */
    while (x != y) {
        if (unknown()) {
          
          lock  = 1;
          x  = y;
          
        } else {
          
          lock  = 0;
          x  = y;
          y  = y + 1;
          
        }
    }
            
    /*@ assert lock == 1;*/
}
```
2025-08-15 10:48:20,913 - INFO  - 生成循环不变量
2025-08-15 10:48:20,913 - INFO  - 
int unknown();

int foo36(int y,int v1,int v2,int v3) {

    int lock = 1;
    int x = y;

    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
      loop invariant x == y;
      loop invariant lock == 1 || lock == 0;
      loop invariant \at(y,Pre) <= y;
      loop invariant \at(y,Pre) <= x;
    */
    while (x != y) {
        if (unknown()) {
          
          lock  = 1;
          x  = y;
          
        } else {
          
          lock  = 0;
          x  = y;
          y  = y + 1;
          
        }
    }
            
    /*@ assert lock == 1;*/
}

2025-08-15 10:48:20,914 - INFO  - 注释过不变量的代码
2025-08-15 10:48:20,914 - INFO  - 
int unknown();

int foo36(int y,int v1,int v2,int v3) {

    int lock = 1;
    int x = y;

    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
      loop invariant x == y;
      loop invariant lock == 1 || lock == 0;
      loop invariant \at(y,Pre) <= y;
      loop invariant \at(y,Pre) <= x;
    */
    while (x != y) {
        if (unknown()) {
          
          lock  = 1;
          x  = y;
          
        } else {
          
          lock  = 0;
          x  = y;
          y  = y + 1;
          
        }
    }
            
    /*@ assert lock == 1;*/
}

2025-08-15 10:48:31,942 - INFO  - syntax Correct
2025-08-15 10:48:35,720 - INFO  - Validate:
2025-08-15 10:48:35,720 - INFO  - [True, True, True, True]
2025-08-15 10:48:35,720 - INFO  - 
2025-08-15 10:48:35,720 - INFO  - Verify:
2025-08-15 10:48:35,720 - INFO  - [False]
2025-08-15 10:48:35,720 - INFO  - 
2025-08-15 10:48:35,720 - INFO  - ACSL 格式的循环不变量
2025-08-15 10:48:35,721 - INFO  - /*@
      loop invariant x == y;
      loop invariant lock == 1 || lock == 0;
      loop invariant \at(y,Pre) <= y;
      loop invariant \at(y,Pre) <= x;
    */
    while (x != y) {
        if (unknown()) {
          
          lock  = 1;
          x  = y;
          
        } else {
          
          lock  = 0;
          x  = y;
          y  = y + 1;
          
        }
    }
2025-08-15 10:48:35,721 - INFO  - VST 格式的循环不变量
2025-08-15 10:48:35,721 - INFO  - /*@ Inv
    (x == y) &&
(lock == 1 || lock == 0) &&
(y@pre <= y) &&
(y@pre <= x)
    */
    
    while (x != y) {
        if (unknown()) {
          
          lock  = 1;
          x  = y;
          
        } else {
          
          lock  = 0;
          x  = y;
          y  = y + 1;
          
        }
    }
2025-08-15 10:48:35,721 - INFO  - PARTIAL CORRECT INVARIANT
2025-08-15 10:48:35,721 - INFO  - 继续符号执行
2025-08-15 10:48:35,721 - INFO  - /*@ Inv
    (x == y) &&
(lock == 1 || lock == 0) &&
(y@pre <= y) &&
(y@pre <= x)
    */
    
    while (x != y) {
        if (unknown()) {
          
          lock  = 1;
          x  = y;
          
        } else {
          
          lock  = 0;
          x  = y;
          y  = y + 1;
          
        }
    }
2025-08-15 10:48:46,667 - INFO  - syntax Correct
2025-08-15 10:48:50,380 - INFO  - Validate:
2025-08-15 10:48:50,381 - INFO  - [True, True, True, True]
2025-08-15 10:48:50,381 - INFO  - 
2025-08-15 10:48:50,381 - INFO  - Verify:
2025-08-15 10:48:50,381 - INFO  - [False]
2025-08-15 10:48:50,381 - INFO  - 
2025-08-15 10:49:01,317 - INFO  - syntax Correct
2025-08-15 10:49:05,100 - INFO  - Validate:
2025-08-15 10:49:05,100 - INFO  - [True, True, True, True]
2025-08-15 10:49:05,101 - INFO  - 
2025-08-15 10:49:05,101 - INFO  - Verify:
2025-08-15 10:49:05,101 - INFO  - [False]
2025-08-15 10:49:05,101 - INFO  - 
2025-08-15 10:49:05,101 - INFO  - ========================================
2025-08-15 10:49:05,101 - INFO  - first_pass:
2025-08-15 10:49:05,101 - INFO  - syntax=1, valid=1,satisfy=None
2025-08-15 10:49:05,101 - INFO  - ========================================

2025-08-15 10:42:46,680 - INFO  - 
FUNCTION INITIALIZATION
2025-08-15 10:42:46,680 - INFO  - ========================================

2025-08-15 10:42:46,753 - INFO  - 初始待处理函数: ['foo23']
2025-08-15 10:42:46,753 - INFO  - 
GENERATE ANNOTATION FOR foo23
2025-08-15 10:42:46,753 - INFO  - ========================================

2025-08-15 10:42:46,753 - INFO  - 函数 foo23 已经初始化
2025-08-15 10:42:46,767 - INFO  - 
GENERATE LOOP INVARIANT FOR foo23
2025-08-15 10:42:46,768 - INFO  - ========================================

2025-08-15 10:42:46,781 - INFO  - file_name: foo23
2025-08-15 10:42:46,790 - DEBUG  - INNER_FLAG: False
2025-08-15 10:42:46,805 - INFO  - Variable Maps:[{'x': '1', 'y': 'y@pre', 'n': 'n@pre'}]
2025-08-15 10:42:46,805 - INFO  - Path conditions: [None]
2025-08-15 10:42:46,805 - INFO  - Pre condition: (x == 1) * (y == y@pre) * (n == n@pre)
2025-08-15 10:42:46,805 - INFO  - Loop Condition: x <= n
2025-08-15 10:42:46,805 - INFO  - Array Names: []
2025-08-15 10:42:46,805 - INFO  - Updated Loop Conditions: ['1 <= n@pre']
2025-08-15 10:42:46,806 - INFO  - Global Unchanged Variables: ['n']
2025-08-15 10:42:46,806 - INFO  - Non Inductive Variables: ['y']
2025-08-15 10:42:49,388 - DEBUG  - invgen reasoning
2025-08-15 10:42:49,388 - DEBUG  - ```c
void foo23(int n, int y) {
    
    int x = 1;

    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
        loop invariant 1 <= x <= n + 1;
        loop invariant y == n - x + 1;
    */
    while (x <= n) {
        y = n - x;
        x = x + 1;
    }
    
    /*@ assert (n > 0) ==> (y >= 0); */
}
```
2025-08-15 10:42:49,388 - INFO  - 生成循环不变量
2025-08-15 10:42:49,388 - INFO  - 
void foo23(int n, int y) {
    
    int x = 1;

    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
        loop invariant 1 <= x <= n + 1;
        loop invariant y == n - x + 1;
    */
    while (x <= n) {
        y = n - x;
        x = x + 1;
    }
    
    /*@ assert (n > 0) ==> (y >= 0); */
}

2025-08-15 10:42:49,388 - INFO  - 注释过不变量的代码
2025-08-15 10:42:49,388 - INFO  - 
void foo23(int n, int y) {
    
    int x = 1;

    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
        loop invariant 1 <= x <= n + 1;
        loop invariant y == n - x + 1;
    */
    while (x <= n) {
        y = n - x;
        x = x + 1;
    }
    
    /*@ assert (n > 0) ==> (y >= 0); */
}

2025-08-15 10:43:00,295 - INFO  - syntax Correct
2025-08-15 10:43:03,985 - INFO  - Validate:
2025-08-15 10:43:03,985 - INFO  - [False, False]
2025-08-15 10:43:03,985 - INFO  - 
2025-08-15 10:43:03,985 - INFO  - Verify:
2025-08-15 10:43:03,985 - INFO  - [True]
2025-08-15 10:43:03,985 - INFO  - 
2025-08-15 10:43:03,985 - INFO  - ACSL 格式的循环不变量
2025-08-15 10:43:03,985 - INFO  - /*@
        loop invariant 1 <= x <= n + 1;
        loop invariant y == n - x + 1;
    */
    while (x <= n) {
        y = n - x;
        x = x + 1;
    }
2025-08-15 10:43:03,986 - INFO  - VST 格式的循环不变量
2025-08-15 10:43:03,986 - INFO  - /*@ Inv
    (1 <= x && x <= n + 1) &&
(y == n - x + 1)
    */
    
    while (x <= n) {
        y = n - x;
        x = x + 1;
    }
2025-08-15 10:43:14,860 - INFO  - syntax Correct
2025-08-15 10:43:18,529 - INFO  - Validate:
2025-08-15 10:43:18,529 - INFO  - [False, False]
2025-08-15 10:43:18,529 - INFO  - 
2025-08-15 10:43:18,529 - INFO  - Verify:
2025-08-15 10:43:18,529 - INFO  - [True]
2025-08-15 10:43:18,529 - INFO  - 
2025-08-15 10:43:29,352 - INFO  - syntax Correct
2025-08-15 10:43:33,017 - INFO  - Validate:
2025-08-15 10:43:33,017 - INFO  - [False, False]
2025-08-15 10:43:33,017 - INFO  - 
2025-08-15 10:43:33,017 - INFO  - Verify:
2025-08-15 10:43:33,017 - INFO  - [True]
2025-08-15 10:43:33,017 - INFO  - 
2025-08-15 10:43:33,017 - INFO  - ========================================
2025-08-15 10:43:33,018 - INFO  - first_pass:
2025-08-15 10:43:33,018 - INFO  - syntax=1, valid=None,satisfy=None
2025-08-15 10:43:33,018 - INFO  - ========================================

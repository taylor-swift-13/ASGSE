2025-08-15 10:49:05,159 - INFO  - 
FUNCTION INITIALIZATION
2025-08-15 10:49:05,159 - INFO  - ========================================

2025-08-15 10:49:05,246 - INFO  - 初始待处理函数: ['foo47']
2025-08-15 10:49:05,247 - INFO  - 
GENERATE ANNOTATION FOR foo47
2025-08-15 10:49:05,247 - INFO  - ========================================

2025-08-15 10:49:05,247 - INFO  - 函数 foo47 已经初始化
2025-08-15 10:49:05,261 - INFO  - 
GENERATE LOOP INVARIANT FOR foo47
2025-08-15 10:49:05,261 - INFO  - ========================================

2025-08-15 10:49:05,276 - INFO  - file_name: foo47
2025-08-15 10:49:05,286 - DEBUG  - INNER_FLAG: False
2025-08-15 10:49:05,301 - INFO  - Variable Maps:[{'j': 'y@pre', 'i': 'x@pre', 'y': 'y@pre', 'x': 'x@pre'}]
2025-08-15 10:49:05,302 - INFO  - Path conditions: [None]
2025-08-15 10:49:05,302 - INFO  - Pre condition: (j == y@pre) * (i == x@pre) * (y == y@pre) * (x == x@pre)
2025-08-15 10:49:05,302 - INFO  - Loop Condition: x != 0
2025-08-15 10:49:05,302 - INFO  - Array Names: []
2025-08-15 10:49:05,302 - INFO  - Updated Loop Conditions: ['x@pre != 0']
2025-08-15 10:49:05,302 - INFO  - Global Unchanged Variables: ['j', 'i']
2025-08-15 10:49:05,302 - INFO  - Non Inductive Variables: []
2025-08-15 10:49:18,097 - DEBUG  - invgen reasoning
2025-08-15 10:49:18,098 - DEBUG  - ```c
void foo47(int x, int y) {

    int i = x;
    int j = y;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
      loop invariant (x + y == i + j);
      loop invariant (x >= 0);
      loop invariant (y >= 0);
    */
    while (x != 0) {
  
      x = x - 1;
      y = y - 1;
  
    }
            
    /*@ assert (y != 0) ==> (i != j); */
  
}
```
2025-08-15 10:49:18,098 - INFO  - 生成循环不变量
2025-08-15 10:49:18,098 - INFO  - 
void foo47(int x, int y) {

    int i = x;
    int j = y;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
      loop invariant (x + y == i + j);
      loop invariant (x >= 0);
      loop invariant (y >= 0);
    */
    while (x != 0) {
  
      x = x - 1;
      y = y - 1;
  
    }
            
    /*@ assert (y != 0) ==> (i != j); */
  
}

2025-08-15 10:49:18,098 - INFO  - 注释过不变量的代码
2025-08-15 10:49:18,098 - INFO  - 
void foo47(int x, int y) {

    int i = x;
    int j = y;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
      loop invariant (x + y == i + j);
      loop invariant (x >= 0);
      loop invariant (y >= 0);
    */
    while (x != 0) {
  
      x = x - 1;
      y = y - 1;
  
    }
            
    /*@ assert (y != 0) ==> (i != j); */
  
}

2025-08-15 10:49:39,145 - INFO  - syntax Correct
2025-08-15 10:49:45,906 - INFO  - Validate:
2025-08-15 10:49:45,907 - INFO  - [False, False, False]
2025-08-15 10:49:45,907 - INFO  - 
2025-08-15 10:49:45,907 - INFO  - Verify:
2025-08-15 10:49:45,907 - INFO  - [False]
2025-08-15 10:49:45,907 - INFO  - 
2025-08-15 10:49:45,907 - INFO  - ACSL 格式的循环不变量
2025-08-15 10:49:45,907 - INFO  - /*@
      loop invariant (x + y == i + j);
      loop invariant (x >= 0);
      loop invariant (y >= 0);
    */
    while (x != 0) {
  
      x = x - 1;
      y = y - 1;
  
    }
2025-08-15 10:49:45,908 - INFO  - VST 格式的循环不变量
2025-08-15 10:49:45,908 - INFO  - /*@ Inv
    ((x + y == i + j)) &&
((x >= 0)) &&
((y >= 0))
    */
    
    while (x != 0) {
  
      x = x - 1;
      y = y - 1;
  
    }
2025-08-15 10:50:07,055 - INFO  - syntax Correct
2025-08-15 10:50:13,835 - INFO  - Validate:
2025-08-15 10:50:13,835 - INFO  - [False, False, False]
2025-08-15 10:50:13,835 - INFO  - 
2025-08-15 10:50:13,835 - INFO  - Verify:
2025-08-15 10:50:13,835 - INFO  - [False]
2025-08-15 10:50:13,835 - INFO  - 
2025-08-15 10:50:34,823 - INFO  - syntax Correct
2025-08-15 10:50:41,582 - INFO  - Validate:
2025-08-15 10:50:41,582 - INFO  - [False, False, False]
2025-08-15 10:50:41,583 - INFO  - 
2025-08-15 10:50:41,583 - INFO  - Verify:
2025-08-15 10:50:41,583 - INFO  - [False]
2025-08-15 10:50:41,583 - INFO  - 
2025-08-15 10:50:41,583 - INFO  - ========================================
2025-08-15 10:50:41,583 - INFO  - first_pass:
2025-08-15 10:50:41,583 - INFO  - syntax=1, valid=None,satisfy=None
2025-08-15 10:50:41,583 - INFO  - ========================================

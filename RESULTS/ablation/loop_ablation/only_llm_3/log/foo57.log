2025-08-15 10:39:25,376 - INFO  - 
FUNCTION INITIALIZATION
2025-08-15 10:39:25,377 - INFO  - ========================================

2025-08-15 10:39:25,439 - INFO  - 初始待处理函数: ['foo57', 'unknown2', 'unknown3', 'unknown1']
2025-08-15 10:39:25,439 - INFO  - 现在处理函数 unknown1

2025-08-15 10:39:25,439 - INFO  - 现在处理函数 unknown3

2025-08-15 10:39:25,439 - INFO  - 现在处理函数 unknown2

2025-08-15 10:39:25,439 - INFO  - 
GENERATE ANNOTATION FOR foo57
2025-08-15 10:39:25,439 - INFO  - ========================================

2025-08-15 10:39:25,439 - INFO  - 函数 foo57 已经初始化
2025-08-15 10:39:25,453 - INFO  - 
GENERATE LOOP INVARIANT FOR foo57
2025-08-15 10:39:25,453 - INFO  - ========================================

2025-08-15 10:39:25,466 - INFO  - file_name: foo57
2025-08-15 10:39:25,474 - DEBUG  - INNER_FLAG: False
2025-08-15 10:39:25,491 - INFO  - Variable Maps:[{'y': '0', 'x': '0'}]
2025-08-15 10:39:25,492 - INFO  - Path conditions: [None]
2025-08-15 10:39:25,492 - INFO  - Pre condition: (y == 0) * (x == 0)
2025-08-15 10:39:25,492 - INFO  - Loop Condition: unknown1()
2025-08-15 10:39:25,492 - INFO  - Array Names: []
2025-08-15 10:39:25,492 - INFO  - Updated Loop Conditions: ['unknown1()']
2025-08-15 10:39:25,492 - INFO  - Global Unchanged Variables: []
2025-08-15 10:39:25,492 - INFO  - Non Inductive Variables: []
2025-08-15 10:39:30,806 - DEBUG  - invgen reasoning
2025-08-15 10:39:30,806 - DEBUG  - ```c
int unknown1();
int unknown2();
int unknown3();

void foo57() {
 int x = 0, y = 0;

 /* >>> LOOP INVARIANT TO FILL <<< */
 /*@
   loop invariant x >= 0;
   loop invariant x < 4 || y > 2;
 */
 while(unknown1()) {
   if(unknown2()) { 
      x++; 
      y += 100; 
   }
   else if (unknown3()){ 
      if (x >= 4) { 
          x++; 
          y++; 
      } 
      if (x < 0) {
          y--;
      }
   }
 }
 
 /*@ assert x < 4 || y > 2; */
}
```
2025-08-15 10:39:30,806 - INFO  - 生成循环不变量
2025-08-15 10:39:30,807 - INFO  - 
int unknown1();
int unknown2();
int unknown3();

void foo57() {
 int x = 0, y = 0;

 /* >>> LOOP INVARIANT TO FILL <<< */
 /*@
   loop invariant x >= 0;
   loop invariant x < 4 || y > 2;
 */
 while(unknown1()) {
   if(unknown2()) { 
      x++; 
      y += 100; 
   }
   else if (unknown3()){ 
      if (x >= 4) { 
          x++; 
          y++; 
      } 
      if (x < 0) {
          y--;
      }
   }
 }
 
 /*@ assert x < 4 || y > 2; */
}

2025-08-15 10:39:30,807 - INFO  - 注释过不变量的代码
2025-08-15 10:39:30,807 - INFO  - 
int unknown1();
int unknown2();
int unknown3();

void foo57() {
 int x = 0, y = 0;

 /* >>> LOOP INVARIANT TO FILL <<< */
 /*@
   loop invariant x >= 0;
   loop invariant x < 4 || y > 2;
 */
 while(unknown1()) {
   if(unknown2()) { 
      x++; 
      y += 100; 
   }
   else if (unknown3()){ 
      if (x >= 4) { 
          x++; 
          y++; 
      } 
      if (x < 0) {
          y--;
      }
   }
 }
 
 /*@ assert x < 4 || y > 2; */
}

2025-08-15 10:39:41,664 - INFO  - syntax Correct
2025-08-15 10:39:45,337 - INFO  - Validate:
2025-08-15 10:39:45,338 - INFO  - [True, False]
2025-08-15 10:39:45,338 - INFO  - 
2025-08-15 10:39:45,338 - INFO  - Verify:
2025-08-15 10:39:45,338 - INFO  - [True]
2025-08-15 10:39:45,338 - INFO  - 
2025-08-15 10:39:45,338 - INFO  - ACSL 格式的循环不变量
2025-08-15 10:39:45,338 - INFO  - /*@
   loop invariant x >= 0;
   loop invariant x < 4 || y > 2;
 */
 while(unknown1()) {
   if(unknown2()) { 
      x++; 
      y += 100; 
   }
   else if (unknown3()){ 
      if (x >= 4) { 
          x++; 
          y++; 
      } 
      if (x < 0) {
          y--;
      }
   }
 }
2025-08-15 10:39:45,338 - INFO  - VST 格式的循环不变量
2025-08-15 10:39:45,338 - INFO  - /*@ Inv
    (x >= 0) &&
(x < 4 || y > 2)
    */
    
 while(unknown1()) {
   if(unknown2()) { 
      x++; 
      y += 100; 
   }
   else if (unknown3()){ 
      if (x >= 4) { 
          x++; 
          y++; 
      } 
      if (x < 0) {
          y--;
      }
   }
 }
2025-08-15 10:39:56,180 - INFO  - syntax Correct
2025-08-15 10:39:59,866 - INFO  - Validate:
2025-08-15 10:39:59,866 - INFO  - [True, False]
2025-08-15 10:39:59,866 - INFO  - 
2025-08-15 10:39:59,866 - INFO  - Verify:
2025-08-15 10:39:59,866 - INFO  - [True]
2025-08-15 10:39:59,866 - INFO  - 
2025-08-15 10:40:10,771 - INFO  - syntax Correct
2025-08-15 10:40:14,469 - INFO  - Validate:
2025-08-15 10:40:14,469 - INFO  - [True, False]
2025-08-15 10:40:14,469 - INFO  - 
2025-08-15 10:40:14,469 - INFO  - Verify:
2025-08-15 10:40:14,469 - INFO  - [True]
2025-08-15 10:40:14,469 - INFO  - 
2025-08-15 10:40:14,469 - INFO  - ========================================
2025-08-15 10:40:14,469 - INFO  - first_pass:
2025-08-15 10:40:14,469 - INFO  - syntax=1, valid=None,satisfy=None
2025-08-15 10:40:14,469 - INFO  - ========================================

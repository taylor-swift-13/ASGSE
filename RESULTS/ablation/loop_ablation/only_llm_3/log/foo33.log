2025-08-15 10:15:48,619 - INFO  - 
FUNCTION INITIALIZATION
2025-08-15 10:15:48,620 - INFO  - ========================================

2025-08-15 10:15:48,627 - INFO  - 初始待处理函数: ['foo33']
2025-08-15 10:15:48,627 - INFO  - 
GENERATE ANNOTATION FOR foo33
2025-08-15 10:15:48,627 - INFO  - ========================================

2025-08-15 10:15:48,627 - INFO  - 函数 foo33 已经初始化
2025-08-15 10:15:48,642 - INFO  - 
GENERATE LOOP INVARIANT FOR foo33
2025-08-15 10:15:48,642 - INFO  - ========================================

2025-08-15 10:15:48,655 - INFO  - file_name: foo33
2025-08-15 10:15:48,664 - DEBUG  - INNER_FLAG: False
2025-08-15 10:15:48,681 - INFO  - Variable Maps:[{'x': '-15000', 'z3': 'z3@pre', 'z2': 'z2@pre', 'z1': 'z1@pre', 'y': 'y@pre'}]
2025-08-15 10:15:48,681 - INFO  - Path conditions: [None]
2025-08-15 10:15:48,681 - INFO  - Pre condition: (x == -15000) * (z3 == z3@pre) * (z2 == z2@pre) * (z1 == z1@pre) * (y == y@pre)
2025-08-15 10:15:48,681 - INFO  - Loop Condition: x < 0
2025-08-15 10:15:48,681 - INFO  - Array Names: []
2025-08-15 10:15:48,681 - INFO  - Updated Loop Conditions: ['-15000 < 0']
2025-08-15 10:15:48,681 - INFO  - Global Unchanged Variables: ['z3', 'z2', 'z1']
2025-08-15 10:15:48,681 - INFO  - Non Inductive Variables: []
2025-08-15 10:15:53,382 - DEBUG  - invgen reasoning
2025-08-15 10:15:53,382 - DEBUG  - ```c
void foo33(int y,int z1,int z2,int z3) {

    int x = -15000;
  
    
    
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
              loop invariant x <= -15000 + y * (y - \at(y, Pre));
              loop invariant y >= \at(y, Pre);
            */
            while (x < 0) {
      
      x  = x + y;
      y  = y + 1;
      
  
    }
            
    /*@ assert y > 0; */
  
  }
```
2025-08-15 10:15:53,382 - INFO  - 生成循环不变量
2025-08-15 10:15:53,382 - INFO  - 
void foo33(int y,int z1,int z2,int z3) {

    int x = -15000;
  
    
    
            
            /*@
              loop invariant x <= -15000 + y * (y - \at(y, Pre));
              loop invariant y >= \at(y, Pre);
            */
            while (x < 0) {
      
      x  = x + y;
      y  = y + 1;
      
  
    }
            
    /*@ assert y > 0; */
  
  }

2025-08-15 10:15:53,382 - INFO  - 注释过不变量的代码
2025-08-15 10:15:53,382 - INFO  - 
void foo33(int y,int z1,int z2,int z3) {

    int x = -15000;
  
    
    
            
            /*@
              loop invariant x <= -15000 + y * (y - \at(y, Pre));
              loop invariant y >= \at(y, Pre);
            */
            while (x < 0) {
      
      x  = x + y;
      y  = y + 1;
      
  
    }
            
    /*@ assert y > 0; */
  
  }

2025-08-15 10:16:04,189 - INFO  - syntax Correct
2025-08-15 10:16:07,752 - INFO  - Validate:
2025-08-15 10:16:07,752 - INFO  - [True, True]
2025-08-15 10:16:07,752 - INFO  - 
2025-08-15 10:16:07,752 - INFO  - Verify:
2025-08-15 10:16:07,752 - INFO  - [True]
2025-08-15 10:16:07,752 - INFO  - 
2025-08-15 10:16:07,752 - INFO  - ACSL 格式的循环不变量
2025-08-15 10:16:07,753 - INFO  - /*@
              loop invariant x <= -15000 + y * (y - \at(y, Pre));
              loop invariant y >= \at(y, Pre);
            */
            while (x < 0) {
      
      x  = x + y;
      y  = y + 1;
      
  
    }
2025-08-15 10:16:07,753 - INFO  - VST 格式的循环不变量
2025-08-15 10:16:07,753 - INFO  - /*@ Inv
    (x <= -15000 + y * (y - y@pre)) &&
(y >= y@pre)
    */
    
            while (x < 0) {
      
      x  = x + y;
      y  = y + 1;
      
  
    }
2025-08-15 10:16:07,753 - INFO  - PARTIAL CORRECT INVARIANT
2025-08-15 10:16:07,753 - INFO  - 继续符号执行
2025-08-15 10:16:07,753 - INFO  - /*@ Inv
    (x <= -15000 + y * (y - y@pre)) &&
(y >= y@pre)
    */
    
            while (x < 0) {
      
      x  = x + y;
      y  = y + 1;
      
  
    }
2025-08-15 10:16:18,475 - INFO  - syntax Correct
2025-08-15 10:16:22,034 - INFO  - Validate:
2025-08-15 10:16:22,035 - INFO  - [True, True]
2025-08-15 10:16:22,035 - INFO  - 
2025-08-15 10:16:22,035 - INFO  - Verify:
2025-08-15 10:16:22,035 - INFO  - [True]
2025-08-15 10:16:22,035 - INFO  - 
2025-08-15 10:16:22,035 - INFO  - CORRECT INVARIANT
2025-08-15 10:16:32,798 - INFO  - syntax Correct
2025-08-15 10:16:36,355 - INFO  - Validate:
2025-08-15 10:16:36,355 - INFO  - [True, True]
2025-08-15 10:16:36,355 - INFO  - 
2025-08-15 10:16:36,355 - INFO  - Verify:
2025-08-15 10:16:36,355 - INFO  - [True]
2025-08-15 10:16:36,355 - INFO  - 
2025-08-15 10:16:36,355 - INFO  - ========================================
2025-08-15 10:16:36,356 - INFO  - first_pass:
2025-08-15 10:16:36,356 - INFO  - syntax=1, valid=1,satisfy=1
2025-08-15 10:16:36,356 - INFO  - ========================================

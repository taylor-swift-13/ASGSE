2025-08-15 10:16:36,407 - INFO  - 
FUNCTION INITIALIZATION
2025-08-15 10:16:36,407 - INFO  - ========================================

2025-08-15 10:16:36,418 - INFO  - 初始待处理函数: ['foo50']
2025-08-15 10:16:36,419 - INFO  - 
GENERATE ANNOTATION FOR foo50
2025-08-15 10:16:36,419 - INFO  - ========================================

2025-08-15 10:16:36,419 - INFO  - 函数 foo50 已经初始化
2025-08-15 10:16:36,435 - INFO  - 
GENERATE LOOP INVARIANT FOR foo50
2025-08-15 10:16:36,435 - INFO  - ========================================

2025-08-15 10:16:36,450 - INFO  - file_name: foo50
2025-08-15 10:16:36,459 - DEBUG  - INNER_FLAG: False
2025-08-15 10:16:36,475 - INFO  - Variable Maps:[{'x': '1', 'z3': 'z3@pre', 'z2': 'z2@pre', 'z1': 'z1@pre', 'y': 'y@pre'}]
2025-08-15 10:16:36,475 - INFO  - Path conditions: [None]
2025-08-15 10:16:36,475 - INFO  - Pre condition: (x == 1) * (z3 == z3@pre) * (z2 == z2@pre) * (z1 == z1@pre) * (y == y@pre)
2025-08-15 10:16:36,476 - INFO  - Loop Condition: x < y
2025-08-15 10:16:36,476 - INFO  - Array Names: []
2025-08-15 10:16:36,476 - INFO  - Updated Loop Conditions: ['1 < y@pre']
2025-08-15 10:16:36,476 - INFO  - Global Unchanged Variables: ['z3', 'z2', 'z1', 'y']
2025-08-15 10:16:36,476 - INFO  - Non Inductive Variables: []
2025-08-15 10:16:41,482 - DEBUG  - invgen reasoning
2025-08-15 10:16:41,482 - DEBUG  - ```c
void foo50(int y,int z1,int z2,int z3) {

    int x = 1;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
      loop invariant x >= 1;
      loop invariant x <= y;
    */
    while (x < y) {
        x = x + x;
    }
    
    /*@ assert x >= 1;*/
}
```
2025-08-15 10:16:41,483 - INFO  - 生成循环不变量
2025-08-15 10:16:41,483 - INFO  - 
void foo50(int y,int z1,int z2,int z3) {

    int x = 1;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
      loop invariant x >= 1;
      loop invariant x <= y;
    */
    while (x < y) {
        x = x + x;
    }
    
    /*@ assert x >= 1;*/
}

2025-08-15 10:16:41,483 - INFO  - 注释过不变量的代码
2025-08-15 10:16:41,483 - INFO  - 
void foo50(int y,int z1,int z2,int z3) {

    int x = 1;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
      loop invariant x >= 1;
      loop invariant x <= y;
    */
    while (x < y) {
        x = x + x;
    }
    
    /*@ assert x >= 1;*/
}

2025-08-15 10:16:52,326 - INFO  - syntax Correct
2025-08-15 10:16:55,975 - INFO  - Validate:
2025-08-15 10:16:55,975 - INFO  - [True, False]
2025-08-15 10:16:55,975 - INFO  - 
2025-08-15 10:16:55,975 - INFO  - Verify:
2025-08-15 10:16:55,975 - INFO  - [True]
2025-08-15 10:16:55,975 - INFO  - 
2025-08-15 10:16:55,976 - INFO  - ACSL 格式的循环不变量
2025-08-15 10:16:55,976 - INFO  - /*@
      loop invariant x >= 1;
      loop invariant x <= y;
    */
    while (x < y) {
        x = x + x;
    }
2025-08-15 10:16:55,976 - INFO  - VST 格式的循环不变量
2025-08-15 10:16:55,976 - INFO  - /*@ Inv
    (x >= 1) &&
(x <= y)
    */
    
    while (x < y) {
        x = x + x;
    }
2025-08-15 10:17:06,822 - INFO  - syntax Correct
2025-08-15 10:17:10,422 - INFO  - Validate:
2025-08-15 10:17:10,422 - INFO  - [True, False]
2025-08-15 10:17:10,422 - INFO  - 
2025-08-15 10:17:10,423 - INFO  - Verify:
2025-08-15 10:17:10,423 - INFO  - [True]
2025-08-15 10:17:10,423 - INFO  - 
2025-08-15 10:17:21,283 - INFO  - syntax Correct
2025-08-15 10:17:24,925 - INFO  - Validate:
2025-08-15 10:17:24,925 - INFO  - [True, False]
2025-08-15 10:17:24,925 - INFO  - 
2025-08-15 10:17:24,925 - INFO  - Verify:
2025-08-15 10:17:24,926 - INFO  - [True]
2025-08-15 10:17:24,926 - INFO  - 
2025-08-15 10:17:24,926 - INFO  - ========================================
2025-08-15 10:17:24,926 - INFO  - first_pass:
2025-08-15 10:17:24,926 - INFO  - syntax=1, valid=None,satisfy=None
2025-08-15 10:17:24,926 - INFO  - ========================================

2025-08-15 10:27:21,630 - INFO  - 
FUNCTION INITIALIZATION
2025-08-15 10:27:21,631 - INFO  - ========================================

2025-08-15 10:27:21,665 - INFO  - 初始待处理函数: ['foo29', 'unknown']
2025-08-15 10:27:21,666 - INFO  - 现在处理函数 unknown

2025-08-15 10:27:21,666 - INFO  - 
GENERATE ANNOTATION FOR foo29
2025-08-15 10:27:21,666 - INFO  - ========================================

2025-08-15 10:27:21,666 - INFO  - 函数 foo29 已经初始化
2025-08-15 10:27:21,680 - INFO  - 
GENERATE LOOP INVARIANT FOR foo29
2025-08-15 10:27:21,680 - INFO  - ========================================

2025-08-15 10:27:21,692 - INFO  - file_name: foo29
2025-08-15 10:27:21,701 - DEBUG  - INNER_FLAG: False
2025-08-15 10:27:21,716 - INFO  - Variable Maps:[{'z': '36 * y@pre', 'c': '0', 'x3': 'x3@pre', 'x2': 'x2@pre', 'x1': 'x1@pre', 'y': 'y@pre'}]
2025-08-15 10:27:21,716 - INFO  - Path conditions: ['0 <= y@pre && y@pre <= 127']
2025-08-15 10:27:21,716 - INFO  - Pre condition: 0 <= y@pre && y@pre <= 127 && (z == 36 * y@pre) * (c == 0) * (x3 == x3@pre) * (x2 == x2@pre) * (x1 == x1@pre) * (y == y@pre)
2025-08-15 10:27:21,717 - INFO  - Loop Condition: unknown()
2025-08-15 10:27:21,717 - INFO  - Array Names: []
2025-08-15 10:27:21,717 - INFO  - Updated Loop Conditions: ['unknown()']
2025-08-15 10:27:21,717 - INFO  - Global Unchanged Variables: ['x3', 'x2', 'x1', 'y']
2025-08-15 10:27:21,718 - INFO  - Non Inductive Variables: []
2025-08-15 10:27:25,516 - DEBUG  - invgen reasoning
2025-08-15 10:27:25,516 - DEBUG  - ```c
int unknown();
/*@ requires 0 <= y && y <= 127; */
void foo29(int y,int x1,int x2,int x3) {
  int c = 0;
  int z = 36 * y;
  

  
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
              loop invariant 0 <= c <= 36;
              loop invariant z == 36 * y + c;
              loop invariant (c < 36) ==> (z >= 0);
            */
            while (unknown()) {

    if ( c < 36 )
    {
    z  = z + 1;
    c  = c + 1;
    }
  }
            
    /*@ assert  ( c < 36 ) ==> ( z >= 0 ) ; */
      
  
}
```
2025-08-15 10:27:25,516 - INFO  - 生成循环不变量
2025-08-15 10:27:25,516 - INFO  - 
int unknown();
/*@ requires 0 <= y && y <= 127; */
void foo29(int y,int x1,int x2,int x3) {
  int c = 0;
  int z = 36 * y;
  

  
            
            /*@
              loop invariant 0 <= c <= 36;
              loop invariant z == 36 * y + c;
              loop invariant (c < 36) ==> (z >= 0);
            */
            while (unknown()) {

    if ( c < 36 )
    {
    z  = z + 1;
    c  = c + 1;
    }
  }
            
    /*@ assert  ( c < 36 ) ==> ( z >= 0 ) ; */
      
  
}

2025-08-15 10:27:25,516 - INFO  - 注释过不变量的代码
2025-08-15 10:27:25,516 - INFO  - 
int unknown();
/*@ requires 0 <= y && y <= 127; */
void foo29(int y,int x1,int x2,int x3) {
  int c = 0;
  int z = 36 * y;
  

  
            
            /*@
              loop invariant 0 <= c <= 36;
              loop invariant z == 36 * y + c;
              loop invariant (c < 36) ==> (z >= 0);
            */
            while (unknown()) {

    if ( c < 36 )
    {
    z  = z + 1;
    c  = c + 1;
    }
  }
            
    /*@ assert  ( c < 36 ) ==> ( z >= 0 ) ; */
      
  
}

2025-08-15 10:27:36,392 - INFO  - syntax Correct
2025-08-15 10:27:39,979 - INFO  - Validate:
2025-08-15 10:27:39,979 - INFO  - [True, True, True]
2025-08-15 10:27:39,979 - INFO  - 
2025-08-15 10:27:39,979 - INFO  - Verify:
2025-08-15 10:27:39,979 - INFO  - [True]
2025-08-15 10:27:39,979 - INFO  - 
2025-08-15 10:27:39,980 - INFO  - ACSL 格式的循环不变量
2025-08-15 10:27:39,980 - INFO  - /*@
              loop invariant 0 <= c <= 36;
              loop invariant z == 36 * y + c;
              loop invariant (c < 36) ==> (z >= 0);
            */
            while (unknown()) {

    if ( c < 36 )
    {
    z  = z + 1;
    c  = c + 1;
    }
  }
2025-08-15 10:27:39,980 - INFO  - VST 格式的循环不变量
2025-08-15 10:27:39,980 - INFO  - /*@ Inv
    (0 <= c && c <= 36) &&
(z == 36 * y + c) &&
((c < 36) => (z >= 0))
    */
    
            while (unknown()) {

    if ( c < 36 )
    {
    z  = z + 1;
    c  = c + 1;
    }
  }
2025-08-15 10:27:39,980 - INFO  - PARTIAL CORRECT INVARIANT
2025-08-15 10:27:39,981 - INFO  - 继续符号执行
2025-08-15 10:27:39,981 - INFO  - /*@ Inv
    (0 <= c && c <= 36) &&
(z == 36 * y + c) &&
((c < 36) => (z >= 0))
    */
    
            while (unknown()) {

    if ( c < 36 )
    {
    z  = z + 1;
    c  = c + 1;
    }
  }
2025-08-15 10:27:50,871 - INFO  - syntax Correct
2025-08-15 10:27:54,449 - INFO  - Validate:
2025-08-15 10:27:54,449 - INFO  - [True, True, True]
2025-08-15 10:27:54,449 - INFO  - 
2025-08-15 10:27:54,449 - INFO  - Verify:
2025-08-15 10:27:54,449 - INFO  - [True]
2025-08-15 10:27:54,449 - INFO  - 
2025-08-15 10:27:54,449 - INFO  - CORRECT INVARIANT
2025-08-15 10:28:05,279 - INFO  - syntax Correct
2025-08-15 10:28:08,863 - INFO  - Validate:
2025-08-15 10:28:08,863 - INFO  - [True, True, True]
2025-08-15 10:28:08,863 - INFO  - 
2025-08-15 10:28:08,863 - INFO  - Verify:
2025-08-15 10:28:08,863 - INFO  - [True]
2025-08-15 10:28:08,863 - INFO  - 
2025-08-15 10:28:08,863 - INFO  - ========================================
2025-08-15 10:28:08,864 - INFO  - first_pass:
2025-08-15 10:28:08,864 - INFO  - syntax=1, valid=1,satisfy=1
2025-08-15 10:28:08,864 - INFO  - ========================================

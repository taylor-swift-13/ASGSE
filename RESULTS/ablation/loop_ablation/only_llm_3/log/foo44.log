2025-08-15 10:31:05,506 - INFO  - 
FUNCTION INITIALIZATION
2025-08-15 10:31:05,506 - INFO  - ========================================

2025-08-15 10:31:05,549 - INFO  - 初始待处理函数: ['foo44']
2025-08-15 10:31:05,549 - INFO  - 
GENERATE ANNOTATION FOR foo44
2025-08-15 10:31:05,549 - INFO  - ========================================

2025-08-15 10:31:05,549 - INFO  - 函数 foo44 已经初始化
2025-08-15 10:31:05,564 - INFO  - 
GENERATE LOOP INVARIANT FOR foo44
2025-08-15 10:31:05,564 - INFO  - ========================================

2025-08-15 10:31:05,577 - INFO  - file_name: foo44
2025-08-15 10:31:05,586 - DEBUG  - INNER_FLAG: False
2025-08-15 10:31:05,601 - INFO  - Variable Maps:[{'sn': '0', 'i': '1', 'size': 'size@pre'}]
2025-08-15 10:31:05,601 - INFO  - Path conditions: [None]
2025-08-15 10:31:05,602 - INFO  - Pre condition: (sn == 0) * (i == 1) * (size == size@pre)
2025-08-15 10:31:05,602 - INFO  - Loop Condition: i <= size
2025-08-15 10:31:05,602 - INFO  - Array Names: []
2025-08-15 10:31:05,602 - INFO  - Updated Loop Conditions: ['1 <= size@pre']
2025-08-15 10:31:05,602 - INFO  - Global Unchanged Variables: ['size']
2025-08-15 10:31:05,602 - INFO  - Non Inductive Variables: []
2025-08-15 10:31:10,028 - DEBUG  - invgen reasoning
2025-08-15 10:31:10,028 - DEBUG  - ```c
void foo44(int size) {
 
    int i = 1;
    int sn = 0;
    
     
    
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
              loop invariant 0 <= i <= size + 1;
              loop invariant sn == i - 1;
            */
            while (i <= size) {
  
      i  = (i + 1);
      sn  = (sn + 1);
      
    }
            
  
    /*@ assert (sn != 0) ==> (sn == size);*/
  
  }
```
2025-08-15 10:31:10,028 - INFO  - 生成循环不变量
2025-08-15 10:31:10,028 - INFO  - 
void foo44(int size) {
 
    int i = 1;
    int sn = 0;
    
     
    
            
            /*@
              loop invariant 0 <= i <= size + 1;
              loop invariant sn == i - 1;
            */
            while (i <= size) {
  
      i  = (i + 1);
      sn  = (sn + 1);
      
    }
            
  
    /*@ assert (sn != 0) ==> (sn == size);*/
  
  }

2025-08-15 10:31:10,028 - INFO  - 注释过不变量的代码
2025-08-15 10:31:10,028 - INFO  - 
void foo44(int size) {
 
    int i = 1;
    int sn = 0;
    
     
    
            
            /*@
              loop invariant 0 <= i <= size + 1;
              loop invariant sn == i - 1;
            */
            while (i <= size) {
  
      i  = (i + 1);
      sn  = (sn + 1);
      
    }
            
  
    /*@ assert (sn != 0) ==> (sn == size);*/
  
  }

2025-08-15 10:31:20,914 - INFO  - syntax Correct
2025-08-15 10:31:24,519 - INFO  - Validate:
2025-08-15 10:31:24,520 - INFO  - [False, True]
2025-08-15 10:31:24,520 - INFO  - 
2025-08-15 10:31:24,520 - INFO  - Verify:
2025-08-15 10:31:24,520 - INFO  - [True]
2025-08-15 10:31:24,520 - INFO  - 
2025-08-15 10:31:24,520 - INFO  - ACSL 格式的循环不变量
2025-08-15 10:31:24,520 - INFO  - /*@
              loop invariant 0 <= i <= size + 1;
              loop invariant sn == i - 1;
            */
            while (i <= size) {
  
      i  = (i + 1);
      sn  = (sn + 1);
      
    }
2025-08-15 10:31:24,520 - INFO  - VST 格式的循环不变量
2025-08-15 10:31:24,520 - INFO  - /*@ Inv
    (0 <= i && i <= size + 1) &&
(sn == i - 1)
    */
    
            while (i <= size) {
  
      i  = (i + 1);
      sn  = (sn + 1);
      
    }
2025-08-15 10:31:35,362 - INFO  - syntax Correct
2025-08-15 10:31:38,899 - INFO  - Validate:
2025-08-15 10:31:38,899 - INFO  - [False, True]
2025-08-15 10:31:38,899 - INFO  - 
2025-08-15 10:31:38,899 - INFO  - Verify:
2025-08-15 10:31:38,899 - INFO  - [True]
2025-08-15 10:31:38,899 - INFO  - 
2025-08-15 10:31:49,700 - INFO  - syntax Correct
2025-08-15 10:31:53,281 - INFO  - Validate:
2025-08-15 10:31:53,281 - INFO  - [False, True]
2025-08-15 10:31:53,281 - INFO  - 
2025-08-15 10:31:53,281 - INFO  - Verify:
2025-08-15 10:31:53,281 - INFO  - [True]
2025-08-15 10:31:53,281 - INFO  - 
2025-08-15 10:31:53,281 - INFO  - ========================================
2025-08-15 10:31:53,281 - INFO  - first_pass:
2025-08-15 10:31:53,282 - INFO  - syntax=1, valid=None,satisfy=None
2025-08-15 10:31:53,282 - INFO  - ========================================

2025-08-15 10:35:57,914 - INFO  - 
FUNCTION INITIALIZATION
2025-08-15 10:35:57,914 - INFO  - ========================================

2025-08-15 10:35:57,969 - INFO  - 初始待处理函数: ['foo31']
2025-08-15 10:35:57,969 - INFO  - 
GENERATE ANNOTATION FOR foo31
2025-08-15 10:35:57,969 - INFO  - ========================================

2025-08-15 10:35:57,969 - INFO  - 函数 foo31 已经初始化
2025-08-15 10:35:57,986 - INFO  - 
GENERATE LOOP INVARIANT FOR foo31
2025-08-15 10:35:57,986 - INFO  - ========================================

2025-08-15 10:35:58,000 - INFO  - file_name: foo31
2025-08-15 10:35:58,010 - DEBUG  - INNER_FLAG: False
2025-08-15 10:35:58,025 - INFO  - Variable Maps:[{'x': '-5000', 'y': 'y@pre'}]
2025-08-15 10:35:58,025 - INFO  - Path conditions: [None]
2025-08-15 10:35:58,025 - INFO  - Pre condition: (x == -5000) * (y == y@pre)
2025-08-15 10:35:58,025 - INFO  - Loop Condition: x < 0
2025-08-15 10:35:58,025 - INFO  - Array Names: []
2025-08-15 10:35:58,026 - INFO  - Updated Loop Conditions: ['-5000 < 0']
2025-08-15 10:35:58,026 - INFO  - Global Unchanged Variables: []
2025-08-15 10:35:58,026 - INFO  - Non Inductive Variables: []
2025-08-15 10:36:03,947 - DEBUG  - invgen reasoning
2025-08-15 10:36:03,948 - DEBUG  - ```c
void foo31(int y) {

    int x = -5000;
  
    /* >>> LOOP INVARIANT TO FILL <<< */
        
    /*@
      loop invariant x <= y * (y - \at(y, Pre)) / 2;
      loop invariant y >= \at(y, Pre);
      loop invariant x >= -5000;
    */
    while (x < 0) {
      
      x  = x + y;
      y  = y + 1;
      
    }
            
    /*@ assert y > 0; */
  
}
```
2025-08-15 10:36:03,948 - INFO  - 生成循环不变量
2025-08-15 10:36:03,948 - INFO  - 
void foo31(int y) {

    int x = -5000;
  
    /* >>> LOOP INVARIANT TO FILL <<< */
        
    /*@
      loop invariant x <= y * (y - \at(y, Pre)) / 2;
      loop invariant y >= \at(y, Pre);
      loop invariant x >= -5000;
    */
    while (x < 0) {
      
      x  = x + y;
      y  = y + 1;
      
    }
            
    /*@ assert y > 0; */
  
}

2025-08-15 10:36:03,948 - INFO  - 注释过不变量的代码
2025-08-15 10:36:03,948 - INFO  - 
void foo31(int y) {

    int x = -5000;
  
    /* >>> LOOP INVARIANT TO FILL <<< */
        
    /*@
      loop invariant x <= y * (y - \at(y, Pre)) / 2;
      loop invariant y >= \at(y, Pre);
      loop invariant x >= -5000;
    */
    while (x < 0) {
      
      x  = x + y;
      y  = y + 1;
      
    }
            
    /*@ assert y > 0; */
  
}

2025-08-15 10:36:14,925 - INFO  - syntax Correct
2025-08-15 10:36:18,700 - INFO  - Validate:
2025-08-15 10:36:18,700 - INFO  - [False, True, False]
2025-08-15 10:36:18,700 - INFO  - 
2025-08-15 10:36:18,700 - INFO  - Verify:
2025-08-15 10:36:18,701 - INFO  - [False]
2025-08-15 10:36:18,701 - INFO  - 
2025-08-15 10:36:18,701 - INFO  - ACSL 格式的循环不变量
2025-08-15 10:36:18,701 - INFO  - /*@
      loop invariant x <= y * (y - \at(y, Pre)) / 2;
      loop invariant y >= \at(y, Pre);
      loop invariant x >= -5000;
    */
    while (x < 0) {
      
      x  = x + y;
      y  = y + 1;
      
    }
2025-08-15 10:36:18,701 - INFO  - VST 格式的循环不变量
2025-08-15 10:36:18,701 - INFO  - /*@ Inv
    (x <= y * (y - y@pre) / 2) &&
(y >= y@pre) &&
(x >= -5000)
    */
    
    while (x < 0) {
      
      x  = x + y;
      y  = y + 1;
      
    }
2025-08-15 10:36:29,582 - INFO  - syntax Correct
2025-08-15 10:36:33,376 - INFO  - Validate:
2025-08-15 10:36:33,376 - INFO  - [False, True, False]
2025-08-15 10:36:33,376 - INFO  - 
2025-08-15 10:36:33,376 - INFO  - Verify:
2025-08-15 10:36:33,376 - INFO  - [False]
2025-08-15 10:36:33,376 - INFO  - 
2025-08-15 10:36:44,245 - INFO  - syntax Correct
2025-08-15 10:36:48,031 - INFO  - Validate:
2025-08-15 10:36:48,031 - INFO  - [False, True, False]
2025-08-15 10:36:48,031 - INFO  - 
2025-08-15 10:36:48,031 - INFO  - Verify:
2025-08-15 10:36:48,031 - INFO  - [False]
2025-08-15 10:36:48,031 - INFO  - 
2025-08-15 10:36:48,031 - INFO  - ========================================
2025-08-15 10:36:48,031 - INFO  - first_pass:
2025-08-15 10:36:48,032 - INFO  - syntax=1, valid=None,satisfy=None
2025-08-15 10:36:48,032 - INFO  - ========================================

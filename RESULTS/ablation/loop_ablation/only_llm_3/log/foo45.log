2025-08-15 10:46:08,066 - INFO  - 
FUNCTION INITIALIZATION
2025-08-15 10:46:08,066 - INFO  - ========================================

2025-08-15 10:46:08,150 - INFO  - 初始待处理函数: ['foo45']
2025-08-15 10:46:08,150 - INFO  - 
GENERATE ANNOTATION FOR foo45
2025-08-15 10:46:08,150 - INFO  - ========================================

2025-08-15 10:46:08,150 - INFO  - 函数 foo45 已经初始化
2025-08-15 10:46:08,164 - INFO  - 
GENERATE LOOP INVARIANT FOR foo45
2025-08-15 10:46:08,164 - INFO  - ========================================

2025-08-15 10:46:08,177 - INFO  - file_name: foo45
2025-08-15 10:46:08,187 - DEBUG  - INNER_FLAG: False
2025-08-15 10:46:08,202 - INFO  - Variable Maps:[{'sn': '0', 'i': '1', 'v3': 'v3@pre', 'v2': 'v2@pre', 'v1': 'v1@pre', 'size': 'size@pre'}]
2025-08-15 10:46:08,203 - INFO  - Path conditions: [None]
2025-08-15 10:46:08,203 - INFO  - Pre condition: (sn == 0) * (i == 1) * (v3 == v3@pre) * (v2 == v2@pre) * (v1 == v1@pre) * (size == size@pre)
2025-08-15 10:46:08,203 - INFO  - Loop Condition: i <= size
2025-08-15 10:46:08,203 - INFO  - Array Names: []
2025-08-15 10:46:08,203 - INFO  - Updated Loop Conditions: ['1 <= size@pre']
2025-08-15 10:46:08,203 - INFO  - Global Unchanged Variables: ['v3', 'v2', 'v1', 'size']
2025-08-15 10:46:08,203 - INFO  - Non Inductive Variables: []
2025-08-15 10:46:19,095 - DEBUG  - invgen reasoning
2025-08-15 10:46:19,095 - DEBUG  - ```c
void foo45(int size, int v1, int v2, int v3) {
 
    int i = 1;
    int sn = 0;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
      loop invariant 1 <= i <= size + 1;
      loop invariant sn == i - 1;
    */
    while (i <= size) {
  
      i  = (i + 1);
      sn  = (sn + 1);
      
    }
            
    /*@ assert (sn != size) ==> (sn == 0);*/
  
}
```
2025-08-15 10:46:19,095 - INFO  - 生成循环不变量
2025-08-15 10:46:19,096 - INFO  - 
void foo45(int size, int v1, int v2, int v3) {
 
    int i = 1;
    int sn = 0;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
      loop invariant 1 <= i <= size + 1;
      loop invariant sn == i - 1;
    */
    while (i <= size) {
  
      i  = (i + 1);
      sn  = (sn + 1);
      
    }
            
    /*@ assert (sn != size) ==> (sn == 0);*/
  
}

2025-08-15 10:46:19,096 - INFO  - 注释过不变量的代码
2025-08-15 10:46:19,096 - INFO  - 
void foo45(int size, int v1, int v2, int v3) {
 
    int i = 1;
    int sn = 0;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
      loop invariant 1 <= i <= size + 1;
      loop invariant sn == i - 1;
    */
    while (i <= size) {
  
      i  = (i + 1);
      sn  = (sn + 1);
      
    }
            
    /*@ assert (sn != size) ==> (sn == 0);*/
  
}

2025-08-15 10:46:29,940 - INFO  - syntax Correct
2025-08-15 10:46:33,491 - INFO  - Validate:
2025-08-15 10:46:33,492 - INFO  - [False, True]
2025-08-15 10:46:33,492 - INFO  - 
2025-08-15 10:46:33,492 - INFO  - Verify:
2025-08-15 10:46:33,492 - INFO  - [True]
2025-08-15 10:46:33,492 - INFO  - 
2025-08-15 10:46:33,492 - INFO  - ACSL 格式的循环不变量
2025-08-15 10:46:33,492 - INFO  - /*@
      loop invariant 1 <= i <= size + 1;
      loop invariant sn == i - 1;
    */
    while (i <= size) {
  
      i  = (i + 1);
      sn  = (sn + 1);
      
    }
2025-08-15 10:46:33,492 - INFO  - VST 格式的循环不变量
2025-08-15 10:46:33,493 - INFO  - /*@ Inv
    (1 <= i && i <= size + 1) &&
(sn == i - 1)
    */
    
    while (i <= size) {
  
      i  = (i + 1);
      sn  = (sn + 1);
      
    }
2025-08-15 10:46:44,250 - INFO  - syntax Correct
2025-08-15 10:46:47,815 - INFO  - Validate:
2025-08-15 10:46:47,815 - INFO  - [False, True]
2025-08-15 10:46:47,815 - INFO  - 
2025-08-15 10:46:47,815 - INFO  - Verify:
2025-08-15 10:46:47,816 - INFO  - [True]
2025-08-15 10:46:47,816 - INFO  - 
2025-08-15 10:46:58,656 - INFO  - syntax Correct
2025-08-15 10:47:02,226 - INFO  - Validate:
2025-08-15 10:47:02,226 - INFO  - [False, True]
2025-08-15 10:47:02,226 - INFO  - 
2025-08-15 10:47:02,226 - INFO  - Verify:
2025-08-15 10:47:02,226 - INFO  - [True]
2025-08-15 10:47:02,227 - INFO  - 
2025-08-15 10:47:02,227 - INFO  - ========================================
2025-08-15 10:47:02,227 - INFO  - first_pass:
2025-08-15 10:47:02,227 - INFO  - syntax=1, valid=None,satisfy=None
2025-08-15 10:47:02,227 - INFO  - ========================================

2025-08-16 04:45:19,120 - INFO  - 
FUNCTION INITIALIZATION
2025-08-16 04:45:19,120 - INFO  - ========================================

2025-08-16 04:45:19,244 - INFO  - 初始待处理函数: ['foo51']
2025-08-16 04:45:19,244 - INFO  - 
GENERATE ANNOTATION FOR foo51
2025-08-16 04:45:19,244 - INFO  - ========================================

2025-08-16 04:45:19,244 - INFO  - 函数 foo51 已经初始化
2025-08-16 04:45:19,259 - INFO  - 
GENERATE LOOP INVARIANT FOR foo51
2025-08-16 04:45:19,259 - INFO  - ========================================

2025-08-16 04:45:19,272 - INFO  - file_name: foo51
2025-08-16 04:45:19,284 - DEBUG  - INNER_FLAG: False
2025-08-16 04:45:19,300 - INFO  - Variable Maps:[{'y': '0', 'x': '1'}]
2025-08-16 04:45:19,300 - INFO  - Path conditions: [None]
2025-08-16 04:45:19,300 - INFO  - Pre condition: (y == 0) * (x == 1)
2025-08-16 04:45:19,300 - INFO  - Loop Condition: y < 1000
2025-08-16 04:45:19,300 - INFO  - Array Names: []
2025-08-16 04:45:19,300 - INFO  - Updated Loop Conditions: ['0 < 1000']
2025-08-16 04:45:19,301 - INFO  - Global Unchanged Variables: []
2025-08-16 04:45:19,301 - INFO  - Non Inductive Variables: []
2025-08-16 04:45:31,492 - INFO  - after const
2025-08-16 04:45:31,493 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
            */
            while (y < 1000 ) {
        x = x + y;
        y = y + 1;
    }
            
2025-08-16 04:45:31,493 - INFO  - after not in
2025-08-16 04:45:31,493 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
            */
            while (y < 1000 ) {
        x = x + y;
        y = y + 1;
    }
            
2025-08-16 04:45:31,493 - INFO  - after vars
2025-08-16 04:45:31,493 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
          loop invariant  PLACE_HOLDER_x ;
          loop invariant  PLACE_HOLDER_y ;
            */
            while (y < 1000 ) {
        x = x + y;
        y = y + 1;
    }
            
2025-08-16 04:45:31,493 - INFO  - after verification goal
2025-08-16 04:45:31,493 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
          loop invariant  ((y == 0)&&(x == 1)) || (PLACE_HOLDER_VERFICATION_GOAL) ;
          loop invariant  PLACE_HOLDER_x ;
          loop invariant  PLACE_HOLDER_y ;
            */
            while (y < 1000 ) {
        x = x + y;
        y = y + 1;
    }
            
2025-08-16 04:45:36,167 - DEBUG  - invgen reasoning
2025-08-16 04:45:36,167 - DEBUG  - ```c
void foo51() {
    int x = 1;
    int y = 0;

    /* >>> LOOP INVARIANT TO FILL <<< */
    /*@
      loop invariant ((y == 0)&&(x == 1)) || (x >= y);
      loop invariant x == 1 + (y * (y - 1)) / 2;
      loop invariant 0 <= y <= 1000;
    */
    while (y < 1000) {
        x = x + y;
        y = y + 1;
    }
            
    /*@ assert x >= y; */
}
```
2025-08-16 04:45:36,167 - INFO  - 生成循环不变量
2025-08-16 04:45:36,167 - INFO  - 
void foo51() {
    int x = 1;
    int y = 0;

    /* >>> LOOP INVARIANT TO FILL <<< */
    /*@
      loop invariant ((y == 0)&&(x == 1)) || (x >= y);
      loop invariant x == 1 + (y * (y - 1)) / 2;
      loop invariant 0 <= y <= 1000;
    */
    while (y < 1000) {
        x = x + y;
        y = y + 1;
    }
            
    /*@ assert x >= y; */
}

2025-08-16 04:45:36,167 - INFO  - 注释过不变量的代码
2025-08-16 04:45:36,168 - INFO  - 
void foo51() {
    int x = 1;
    int y = 0;

    /* >>> LOOP INVARIANT TO FILL <<< */
    /*@
      loop invariant ((y == 0)&&(x == 1)) || (x >= y);
      loop invariant x == 1 + (y * (y - 1)) / 2;
      loop invariant 0 <= y <= 1000;
    */
    while (y < 1000) {
        x = x + y;
        y = y + 1;
    }
            
    /*@ assert x >= y; */
}

2025-08-16 04:45:46,873 - INFO  - syntax Correct
2025-08-16 04:45:50,446 - INFO  - Validate:
2025-08-16 04:45:50,446 - INFO  - [True, True, True]
2025-08-16 04:45:50,446 - INFO  - 
2025-08-16 04:45:50,446 - INFO  - Verify:
2025-08-16 04:45:50,446 - INFO  - [True]
2025-08-16 04:45:50,446 - INFO  - 
2025-08-16 04:45:50,446 - INFO  - ACSL 格式的循环不变量
2025-08-16 04:45:50,446 - INFO  - /*@
      loop invariant ((y == 0)&&(x == 1)) || (x >= y);
      loop invariant x == 1 + (y * (y - 1)) / 2;
      loop invariant 0 <= y <= 1000;
    */
    while (y < 1000) {
        x = x + y;
        y = y + 1;
    }
2025-08-16 04:45:50,447 - INFO  - VST 格式的循环不变量
2025-08-16 04:45:50,447 - INFO  - /*@ Inv
    (((y == 0)&&(x == 1)) || (x >= y)) &&
(x == 1 + (y * (y - 1)) / 2) &&
(0 <= y && y <= 1000)
    */
    
    while (y < 1000) {
        x = x + y;
        y = y + 1;
    }
2025-08-16 04:45:50,447 - INFO  - PARTIAL CORRECT INVARIANT
2025-08-16 04:45:50,447 - INFO  - 继续符号执行
2025-08-16 04:45:50,447 - INFO  - /*@ Inv
    (((y == 0)&&(x == 1)) || (x >= y)) &&
(x == 1 + (y * (y - 1)) / 2) &&
(0 <= y && y <= 1000)
    */
    
    while (y < 1000) {
        x = x + y;
        y = y + 1;
    }
2025-08-16 04:46:01,089 - INFO  - syntax Correct
2025-08-16 04:46:04,673 - INFO  - Validate:
2025-08-16 04:46:04,674 - INFO  - [True, True, True]
2025-08-16 04:46:04,674 - INFO  - 
2025-08-16 04:46:04,674 - INFO  - Verify:
2025-08-16 04:46:04,674 - INFO  - [True]
2025-08-16 04:46:04,674 - INFO  - 
2025-08-16 04:46:04,674 - INFO  - CORRECT INVARIANT
2025-08-16 04:46:15,297 - INFO  - syntax Correct
2025-08-16 04:46:18,873 - INFO  - Validate:
2025-08-16 04:46:18,873 - INFO  - [True, True, True]
2025-08-16 04:46:18,873 - INFO  - 
2025-08-16 04:46:18,873 - INFO  - Verify:
2025-08-16 04:46:18,873 - INFO  - [True]
2025-08-16 04:46:18,873 - INFO  - 
2025-08-16 04:46:18,873 - INFO  - ========================================
2025-08-16 04:46:18,873 - INFO  - first_pass:
2025-08-16 04:46:18,874 - INFO  - syntax=1, valid=1,satisfy=1
2025-08-16 04:46:18,874 - INFO  - ========================================

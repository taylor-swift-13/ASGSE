[kernel] Parsing out/2_0001/2_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] out/2_0001/2_merged.c:12: Warning: 
  Concretization for comprehension sets not implemented yet
[wp] out/2_0001/2_merged.c:8: Warning: 
  Concretization for comprehension sets not implemented yet
[wp] 24 goals scheduled
[wp] [Timeout] typed_arraymax_loop_invariant_preserved (Qed 13ms) (Alt-Ergo) (Stronger, 2 warnings)
[wp] [Timeout] typed_arraymax_terminates (Qed 0.54ms) (Alt-Ergo)
[wp] [Timeout] typed_arraymax_loop_invariant_5_preserved (Qed 13ms) (Alt-Ergo) (Stronger, 2 warnings)
[wp] [Timeout] typed_arraymax_loop_invariant_5_established (Qed 0.98ms) (Alt-Ergo) (Stronger, 2 warnings)
[wp] [Timeout] typed_arraymax_loop_invariant_6_established (Qed 2ms) (Alt-Ergo) (Stronger, 2 warnings)
[wp] Proved goals:   20 / 25
  Unreachable:       1
  Qed:              14 (0.54ms-5ms-22ms)
  Alt-Ergo 2.5.4:    5 (12ms-17ms)
  Timeout:           5
------------------------------------------------------------
  Function arraymax
------------------------------------------------------------

Goal Termination-condition (generated) in 'arraymax':
Loop termination at line 21
Prove: false.
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.54ms) (8s)
Prover Z3 4.8.12 returns Timeout (Qed:0.54ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/2_0001/2_merged.c, line 8):
out/2_0001/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
out/2_0001/2_merged.c:12: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Let x = Mint_0[shift_sint32(a, i)].
Let x_1 = Mint_0[shift_sint32(a, 0)].
Assume {
  Type: is_sint32(i) /\ is_sint32(max_0) /\ is_sint32(max_1) /\
      is_sint32(n) /\ is_sint32(x_1) /\ is_sint32(x).
  (* Heap *)
  Type: region(a.base) <= 0.
  (* Invariant *)
  Have: 0 < n.
  Warning[wp]: Concretization for comprehension sets not implemented yet
  (Hide sub-term definition).
  (* Invariant *)
  Have: (w_1 = max_1) \/ (x_1 = max_1).
  (* Invariant *)
  Have: (x_1 = max_1) \/
      (exists i_1 : Z. (Mint_0[shift_sint32(a, i_1)] = max_1) /\
       (0 <= i_1) /\ (i_1 < i)).
  (* Invariant *)
  Have: (x_1 = max_1) \/ (x_1 <= max_1).
  (* Invariant *)
  Have: (x_1 = max_1) \/ (((i = 1) -> (x_1 = max_1))).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (Mint_0[shift_sint32(a, i_1)] <= max_1))).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: i < n.
  If max_1 < x
  Then { Have: x = max_0. }
  Else { Have: max_1 = max_0. }
}
Prove: (w = max_0) \/ (x_1 = max_0).
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:13ms) (8s)
Prover Z3 4.8.12 returns Unknown (Qed:13ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/2_0001/2_merged.c, line 8):
out/2_0001/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/2_0001/2_merged.c, line 9):
out/2_0001/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
out/2_0001/2_merged.c:12: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Let x = Mint_0[shift_sint32(a, 0)].
Let x_1 = Mint_0[shift_sint32(a, i)].
Assume {
  Type: is_sint32(i) /\ is_sint32(max_0) /\ is_sint32(max_1) /\
      is_sint32(n) /\ is_sint32(1 + i) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Heap *)
  Type: region(a.base) <= 0.
  (* Invariant *)
  Have: 0 < n.
  Warning[wp]: Concretization for comprehension sets not implemented yet
  (Hide sub-term definition).
  (* Invariant *)
  Have: (w = max_1) \/ (x = max_1).
  (* Invariant *)
  Have: (x = max_1) \/
      (exists i_1 : Z. (Mint_0[shift_sint32(a, i_1)] = max_1) /\
       (0 <= i_1) /\ (i_1 < i)).
  (* Invariant *)
  Have: (x = max_1) \/ (x <= max_1).
  (* Invariant *)
  Have: (x = max_1) \/ (((i = 1) -> (x = max_1))).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (Mint_0[shift_sint32(a, i_1)] <= max_1))).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: i < n.
  If max_1 < x_1
  Then { Have: x_1 = max_0. }
  Else { Have: max_1 = max_0. }
  Warning[wp]: Concretization for comprehension sets not implemented yet
  (Hide sub-term definition).
  (* Invariant *)
  Have: (w_1 = max_0) \/ (x = max_0).
}
Prove: (x = max_0) \/
    (exists i_1 : Z. (Mint_0[shift_sint32(a, i_1)] = max_0) /\ (i_1 <= i) /\
     (0 <= i_1)).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:14ms) (17ms) (129)

------------------------------------------------------------

Goal Establishment of Invariant (file out/2_0001/2_merged.c, line 9):
out/2_0001/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/2_0001/2_merged.c, line 10):
out/2_0001/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
out/2_0001/2_merged.c:12: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Let x = Mint_0[shift_sint32(a, i)].
Let x_1 = Mint_0[shift_sint32(a, 0)].
Assume {
  Type: is_sint32(i) /\ is_sint32(max_0) /\ is_sint32(n) /\
      is_sint32(1 + i) /\ is_sint32(x_1) /\ is_sint32(x).
  (* Heap *)
  Type: region(a.base) <= 0.
  (* Residual *)
  When: max_0 < x.
  (* Invariant *)
  Have: 0 < n.
  Warning[wp]: Concretization for comprehension sets not implemented yet
  (Hide sub-term definition).
  (* Invariant *)
  Have: (w = max_0) \/ (x_1 = max_0).
  (* Invariant *)
  Have: (x_1 = max_0) \/
      (exists i_1 : Z. (Mint_0[shift_sint32(a, i_1)] = max_0) /\
       (0 <= i_1) /\ (i_1 < i)).
  (* Invariant *)
  Have: (x_1 = max_0) \/ (x_1 <= max_0).
  (* Invariant *)
  Have: (x_1 = max_0) \/ (((i = 1) -> (x_1 = max_0))).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (Mint_0[shift_sint32(a, i_1)] <= max_0))).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: i < n.
  Warning[wp]: Concretization for comprehension sets not implemented yet
  (Hide sub-term definition).
  (* Invariant *)
  Have: (x = w_1) \/ (x = x_1).
  (* Invariant *)
  Have: (x = x_1) \/
      (exists i_1 : Z. (Mint_0[shift_sint32(a, i_1)] = x) /\ (i_1 <= i) /\
       (0 <= i_1)).
}
Prove: (x = x_1) \/ (x_1 <= x).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (12ms) (54)

------------------------------------------------------------

Goal Establishment of Invariant (file out/2_0001/2_merged.c, line 10):
out/2_0001/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Prove: true.
Prover Qed returns Valid (0.73ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/2_0001/2_merged.c, line 11):
out/2_0001/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
out/2_0001/2_merged.c:12: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/2_0001/2_merged.c, line 11):
out/2_0001/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/2_0001/2_merged.c, line 12):
out/2_0001/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
out/2_0001/2_merged.c:12: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Let x = Mint_0[shift_sint32(a, 0)].
Let x_1 = Mint_0[shift_sint32(a, i)].
Assume {
  Type: is_sint32(i) /\ is_sint32(max_0) /\ is_sint32(max_1) /\
      is_sint32(n) /\ is_sint32(1 + i) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Heap *)
  Type: region(a.base) <= 0.
  (* Invariant *)
  Have: 0 < n.
  Warning[wp]: Concretization for comprehension sets not implemented yet
  (Hide sub-term definition).
  (* Invariant *)
  Have: (w_1 = max_1) \/ (x = max_1).
  (* Invariant *)
  Have: (x = max_1) \/
      (exists i_1 : Z. (Mint_0[shift_sint32(a, i_1)] = max_1) /\
       (0 <= i_1) /\ (i_1 < i)).
  (* Invariant *)
  Have: (x = max_1) \/ (x <= max_1).
  (* Invariant *)
  Have: (x = max_1) \/ (((i = 1) -> (x = max_1))).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (Mint_0[shift_sint32(a, i_1)] <= max_1))).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: i < n.
  If max_1 < x_1
  Then { Have: x_1 = max_0. }
  Else { Have: max_1 = max_0. }
  Warning[wp]: Concretization for comprehension sets not implemented yet
  (Hide sub-term definition).
  (* Invariant *)
  Have: (w_2 = max_0) \/ (x = max_0).
  (* Invariant *)
  Have: (x = max_0) \/
      (exists i_1 : Z. (Mint_0[shift_sint32(a, i_1)] = max_0) /\
       (i_1 <= i) /\ (0 <= i_1)).
  (* Invariant *)
  Have: (x = max_0) \/ (x <= max_0).
}
Prove: w = max_0.
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:13ms) (8s)
Prover Z3 4.8.12 returns Timeout (Qed:13ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/2_0001/2_merged.c, line 12):
out/2_0001/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
out/2_0001/2_merged.c:12: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Let x = Mint_0[shift_sint32(a, 0)].
Assume { Type: is_sint32(x). (* Heap *) Type: region(a.base) <= 0. }
Prove: x = w.
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.98ms) (8s)
Prover Z3 4.8.12 returns Unknown (Qed:0.98ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/2_0001/2_merged.c, line 13):
out/2_0001/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
out/2_0001/2_merged.c:12: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/2_0001/2_merged.c, line 13):
out/2_0001/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
out/2_0001/2_merged.c:12: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Assume { Type: is_sint32(n). }
Prove: 0 < n.
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/2_0001/2_merged.c, line 14):
out/2_0001/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
out/2_0001/2_merged.c:12: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Let x = Mint_0[shift_sint32(a, 0)].
Let x_1 = Mint_0[shift_sint32(a, i_1)].
Assume {
  Type: is_sint32(i_1) /\ is_sint32(max_0) /\ is_sint32(max_1) /\
      is_sint32(n) /\ is_sint32(1 + i_1) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Heap *)
  Type: region(a.base) <= 0.
  (* Goal *)
  When: (0 <= i) /\ (i <= i_1).
  (* Invariant *)
  Have: 0 < n.
  Warning[wp]: Concretization for comprehension sets not implemented yet
  (Hide sub-term definition).
  (* Invariant *)
  Have: (w = max_1) \/ (x = max_1).
  (* Invariant *)
  Have: (x = max_1) \/
      (exists i_2 : Z. (Mint_0[shift_sint32(a, i_2)] = max_1) /\
       (0 <= i_2) /\ (i_2 < i_1)).
  (* Invariant *)
  Have: (x = max_1) \/ (x <= max_1).
  (* Invariant *)
  Have: (x = max_1) \/ (((i_1 = 1) -> (x = max_1))).
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      (Mint_0[shift_sint32(a, i_2)] <= max_1))).
  (* Invariant *)
  Have: 0 < i_1.
  (* Then *)
  Have: i_1 < n.
  If max_1 < x_1
  Then { Have: x_1 = max_0. }
  Else { Have: max_1 = max_0. }
  Warning[wp]: Concretization for comprehension sets not implemented yet
  (Hide sub-term definition).
  (* Invariant *)
  Have: (w_1 = max_0) \/ (x = max_0).
  (* Invariant *)
  Have: (x = max_0) \/
      (exists i_2 : Z. (Mint_0[shift_sint32(a, i_2)] = max_0) /\
       (i_2 <= i_1) /\ (0 <= i_2)).
  (* Invariant *)
  Have: (x = max_0) \/ (x <= max_0).
}
Prove: Mint_0[shift_sint32(a, i)] <= max_0.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:16ms) (12ms) (135)

------------------------------------------------------------

Goal Establishment of Invariant (file out/2_0001/2_merged.c, line 14):
out/2_0001/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
out/2_0001/2_merged.c:12: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/2_0001/2_merged.c, line 15):
out/2_0001/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
out/2_0001/2_merged.c:12: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Let x = Mint_0[shift_sint32(a, 0)].
Let x_1 = Mint_0[shift_sint32(a, i_1)].
Assume {
  Type: is_sint32(i_1) /\ is_sint32(max_0) /\ is_sint32(max_1) /\
      is_sint32(n) /\ is_sint32(1 + i_1) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Heap *)
  Type: region(a.base) <= 0.
  (* Goal *)
  When: (0 <= i) /\ (i <= i_1).
  (* Invariant *)
  Have: 0 < n.
  Warning[wp]: Concretization for comprehension sets not implemented yet
  (Hide sub-term definition).
  (* Invariant *)
  Have: (w = max_1) \/ (x = max_1).
  (* Invariant *)
  Have: (x = max_1) \/
      (exists i_2 : Z. (Mint_0[shift_sint32(a, i_2)] = max_1) /\
       (0 <= i_2) /\ (i_2 < i_1)).
  (* Invariant *)
  Have: (x = max_1) \/ (x <= max_1).
  (* Invariant *)
  Have: (x = max_1) \/ (((i_1 = 1) -> (x = max_1))).
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      (Mint_0[shift_sint32(a, i_2)] <= max_1))).
  (* Invariant *)
  Have: 0 < i_1.
  (* Then *)
  Have: i_1 < n.
  If max_1 < x_1
  Then { Have: x_1 = max_0. }
  Else { Have: max_1 = max_0. }
  Warning[wp]: Concretization for comprehension sets not implemented yet
  (Hide sub-term definition).
  (* Invariant *)
  Have: (w_1 = max_0) \/ (x = max_0).
  (* Invariant *)
  Have: (x = max_0) \/
      (exists i_2 : Z. (Mint_0[shift_sint32(a, i_2)] = max_0) /\
       (i_2 <= i_1) /\ (0 <= i_2)).
  (* Invariant *)
  Have: (x = max_0) \/ (x <= max_0).
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= i_1) -> ((0 <= i_2) ->
      (Mint_0[shift_sint32(a, i_2)] <= max_0))).
}
Prove: Mint_0[shift_sint32(a, i)] <= max_0.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:22ms) (16ms) (61)

------------------------------------------------------------

Goal Establishment of Invariant (file out/2_0001/2_merged.c, line 15):
out/2_0001/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
out/2_0001/2_merged.c:12: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/2_0001/2_merged.c, line 16):
out/2_0001/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
out/2_0001/2_merged.c:12: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Let x = Mint_0[shift_sint32(a, 0)].
Let x_1 = Mint_0[shift_sint32(a, i_1)].
Assume {
  Type: is_sint32(i_1) /\ is_sint32(max_0) /\ is_sint32(max_1) /\
      is_sint32(n) /\ is_sint32(1 + i_1) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Heap *)
  Type: region(a.base) <= 0.
  (* Goal *)
  When: (0 <= i) /\ (i <= i_1).
  (* Invariant *)
  Have: 0 < n.
  Warning[wp]: Concretization for comprehension sets not implemented yet
  (Hide sub-term definition).
  (* Invariant *)
  Have: (w = max_1) \/ (x = max_1).
  (* Invariant *)
  Have: (x = max_1) \/
      (exists i_2 : Z. (Mint_0[shift_sint32(a, i_2)] = max_1) /\
       (0 <= i_2) /\ (i_2 < i_1)).
  (* Invariant *)
  Have: (x = max_1) \/ (x <= max_1).
  (* Invariant *)
  Have: (x = max_1) \/ (((i_1 = 1) -> (x = max_1))).
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      (Mint_0[shift_sint32(a, i_2)] <= max_1))).
  (* Invariant *)
  Have: 0 < i_1.
  (* Then *)
  Have: i_1 < n.
  If max_1 < x_1
  Then { Have: x_1 = max_0. }
  Else { Have: max_1 = max_0. }
  Warning[wp]: Concretization for comprehension sets not implemented yet
  (Hide sub-term definition).
  (* Invariant *)
  Have: (w_1 = max_0) \/ (x = max_0).
  (* Invariant *)
  Have: (x = max_0) \/
      (exists i_2 : Z. (Mint_0[shift_sint32(a, i_2)] = max_0) /\
       (i_2 <= i_1) /\ (0 <= i_2)).
  (* Invariant *)
  Have: (x = max_0) \/ (x <= max_0).
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= i_1) -> ((0 <= i_2) ->
      (Mint_0[shift_sint32(a, i_2)] <= max_0))).
}
Prove: Mint_0[shift_sint32(a, i)] <= max_0.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:17ms) (16ms) (61)

------------------------------------------------------------

Goal Establishment of Invariant (file out/2_0001/2_merged.c, line 16):
out/2_0001/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
out/2_0001/2_merged.c:12: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/2_0001/2_merged.c, line 17):
out/2_0001/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
out/2_0001/2_merged.c:12: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/2_0001/2_merged.c, line 17):
out/2_0001/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
out/2_0001/2_merged.c:12: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Loop assigns (file out/2_0001/2_merged.c, line 18):
out/2_0001/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
out/2_0001/2_merged.c:12: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Termination-condition (generated) in 'main':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Exit-condition (generated) in 'main':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/2_0001/2_merged.c:2: Warning: 
  No 'assigns' specification for function 'arraymax'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/2_0001/2_merged.c:29: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

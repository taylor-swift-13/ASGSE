[kernel] Parsing out/25_0001/25_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 10 goals scheduled
[wp] [Timeout] typed_arraySearch_terminates (Qed 0.73ms) (Alt-Ergo)
[wp] [Timeout] typed_arraySearch_loop_invariant_2_established (Qed 0.84ms) (Alt-Ergo)
[wp] Proved goals:    9 / 11
  Unreachable:       1
  Qed:               6 (0.73ms-0.64ms-3ms)
  Alt-Ergo 2.5.4:    2 (13ms-16ms)
  Timeout:           2
------------------------------------------------------------
  Function arraySearch
------------------------------------------------------------

Goal Termination-condition (generated) in 'arraySearch':
Loop termination at line 11
Prove: false.
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.73ms) (8s)
Prover Z3 4.8.12 returns Timeout (Qed:0.73ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/25_0001/25_merged.c, line 6):
Let x_1 = Mint_0[shift_sint32(a, p)].
Assume {
  Type: is_sint32(n) /\ is_sint32(p) /\ is_sint32(x) /\ is_sint32(1 + p) /\
      is_sint32(x_1).
  (* Heap *)
  Type: region(a.base) <= 0.
  (* Goal *)
  When: (0 <= i) /\ (i <= p).
  (* Invariant *)
  Have: ((0 < n) -> (Mint_0[shift_sint32(a, i_1)] != x)).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < p) ->
      (Mint_0[shift_sint32(a, i_3)] != x))).
  (* Invariant *)
  Have: Mint_0[shift_sint32(a, i_2)] != x.
  (* Invariant *)
  Have: 0 <= p.
  (* Then *)
  Have: p < n.
  (* Else *)
  Have: x_1 != x.
}
Prove: Mint_0[shift_sint32(a, i)] != x.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (13ms) (49)
Prover Z3 4.8.12 returns Valid (Qed:2ms) (51ms) (438770)

------------------------------------------------------------

Goal Establishment of Invariant (file out/25_0001/25_merged.c, line 6):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/25_0001/25_merged.c, line 7):
Let x_1 = Mint_0[shift_sint32(a, p)].
Assume {
  Type: is_sint32(n) /\ is_sint32(p) /\ is_sint32(x) /\ is_sint32(1 + p) /\
      is_sint32(x_1).
  (* Heap *)
  Type: region(a.base) <= 0.
  (* Invariant *)
  Have: ((0 < n) -> (Mint_0[shift_sint32(a, i)] != x)).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < p) ->
      (Mint_0[shift_sint32(a, i_2)] != x))).
  (* Invariant *)
  Have: Mint_0[shift_sint32(a, i_1)] != x.
  (* Invariant *)
  Have: 0 <= p.
  (* Then *)
  Have: p < n.
  (* Else *)
  Have: x_1 != x.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= p) ->
      (Mint_0[shift_sint32(a, i_2)] != x))).
}
Prove: exists i_2 : Z. (((2 + p) <= n) ->
    (Mint_0[shift_sint32(a, i_2)] != x)).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (16ms) (40)
Prover Z3 4.8.12 returns Valid (Qed:3ms) (23ms) (106717)

------------------------------------------------------------

Goal Establishment of Invariant (file out/25_0001/25_merged.c, line 7):
Assume {
  Type: is_sint32(n) /\ is_sint32(x).
  (* Heap *)
  Type: region(a.base) <= 0.
}
Prove: exists i : Z. ((0 < n) -> (Mint_0[shift_sint32(a, i)] != x)).
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.84ms) (8s)
Prover Z3 4.8.12 returns Unknown (Qed:0.84ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/25_0001/25_merged.c, line 8):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/25_0001/25_merged.c, line 8):
Prove: true.
Prover Qed returns Valid (0.79ms)

------------------------------------------------------------

Goal Loop assigns (file out/25_0001/25_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Termination-condition (generated) in 'main':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Exit-condition (generated) in 'main':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/25_0001/25_merged.c:2: Warning: 
  No 'assigns' specification for function 'arraySearch'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/25_0001/25_merged.c:21: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/21_0001/21_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 13 goals scheduled
[wp] [Timeout] typed_func_terminates (Qed 1ms) (Alt-Ergo)
[wp] Proved goals:   13 / 14
  Unreachable:       1
  Qed:              10 (1ms-1ms-9ms)
  Alt-Ergo 2.5.4:    2 (13ms-16ms)
  Timeout:           1
------------------------------------------------------------
  Function func
------------------------------------------------------------

Goal Termination-condition (generated) in 'func':
Loop termination at line 17
Prove: false.
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 10):
Let x_1 = count_2 * x.
Let x_2 = Mint_0[sum_0 <- x_1][shift_sint32(a, p)].
Assume {
  Type: is_sint32(count_0) /\ is_sint32(count_1) /\ is_sint32(count_2) /\
      is_sint32(n) /\ is_sint32(p) /\ is_sint32(x) /\ is_sint32(1 + p) /\
      is_sint32(x_1) /\ is_sint32(x_2).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ (region(sum_0.base) <= 0).
  (* Invariant *)
  Have: 0 <= p.
  (* Invariant *)
  Have: 0 <= count_2.
  (* Then *)
  Have: p < n.
  If x_2 = x
  Then { Have: count_2 = count_1. Have: (1 + count_1) = count_0. }
  Else { Have: count_2 = count_0. }
  (* Invariant *)
  Have: (-1) <= p.
}
Prove: 0 <= count_0.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (16ms) (52)
Prover Z3 4.8.12 returns Valid (Qed:8ms) (20ms) (80458)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 11):
Let x_1 = count_1 * x.
Let x_2 = Mint_1[sum_0 <- x_1][shift_sint32(a, p)].
Let x_3 = Mint_0[sum_0].
Assume {
  Type: is_sint32(count_0) /\ is_sint32(count_1) /\ is_sint32(n) /\
      is_sint32(p) /\ is_sint32(x) /\ is_sint32(x_3) /\ is_sint32(1 + p) /\
      is_sint32(x_1) /\ is_sint32(x_2).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ (region(sum_0.base) <= 0).
  (* Invariant *)
  Have: 0 <= p.
  (* Invariant *)
  Have: 0 <= count_1.
  (* Then *)
  Have: p < n.
  If x_2 = x
  Then {
    Have: (1 + count_1) = count_0.
    Have: Mint_1[sum_0 <- x + x_1] = Mint_0.
  }
  Else { Have: (count_1 = count_0) /\ (Mint_1[sum_0 <- x_1] = Mint_0). }
  (* Invariant *)
  Have: (-1) <= p.
  (* Invariant *)
  Have: 0 <= count_0.
}
Prove: x_3 = (count_0 * x).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (13ms) (58)
Prover Z3 4.8.12 returns Valid (Qed:9ms) (76ms) (967109)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Loop assigns (file out/21_0001/21_merged.c, line 13) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/21_0001/21_merged.c, line 13) (2/2):
Effect at line 17
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Termination-condition (generated) in 'main':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Exit-condition (generated) in 'main':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/21_0001/21_merged.c:2: Warning: 
  No 'assigns' specification for function 'func'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/21_0001/21_merged.c:31: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

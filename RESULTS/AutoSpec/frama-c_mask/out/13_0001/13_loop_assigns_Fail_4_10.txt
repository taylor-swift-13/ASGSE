[kernel] Parsing out/13_0001/13_loop_assigns.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] out/13_0001/13_loop_assigns.c:8: Warning: 
  Missing assigns clause (assigns 'everything' instead)
[wp] 9 goals scheduled
[wp] [Timeout] typed_bubbleSort_terminates_part2 (Qed 1ms) (Alt-Ergo)
[wp] [Timeout] typed_bubbleSort_terminates_part1 (Qed 0.99ms) (Alt-Ergo)
[wp] [Timeout] typed_bubbleSort_loop_assigns_part3 (Qed 2ms) (Alt-Ergo)
[wp] [Timeout] typed_bubbleSort_loop_assigns_part2 (Qed 3ms) (Alt-Ergo)
[wp] [Timeout] typed_bubbleSort_loop_assigns_part4 (Qed 4ms) (Alt-Ergo)
[wp] [Timeout] typed_bubbleSort_loop_assigns_part5 (Qed 2ms) (Alt-Ergo)
[wp] Proved goals:    4 / 10
  Unreachable:     1
  Qed:             3 (0.99ms-2ms-4ms)
  Timeout:         6
------------------------------------------------------------
  Function bubbleSort
------------------------------------------------------------

Goal Termination-condition (generated) in 'bubbleSort' (1/2):
Loop termination at line 8
Assume { Type: is_sint32(n). (* Else *) Have: 0 < n. }
Prove: false.
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.99ms) (3s)
Prover Z3 4.8.12 returns Timeout (Qed:0.99ms) (3s)

------------------------------------------------------------

Goal Termination-condition (generated) in 'bubbleSort' (2/2):
Loop termination at line 13
Assume {
  Type: is_sint32(i) /\ is_sint32(n).
  (* Else *)
  Have: 0 < n.
  (* Then *)
  Have: 0 < i.
}
Prove: false.
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (3s)
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (3s)

------------------------------------------------------------

Goal Loop assigns (file out/13_0001/13_loop_assigns.c, line 11) (1/5):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/13_0001/13_loop_assigns.c, line 11) (2/5):
Effect at line 15
Let a_1 = shift_sint32(a, 0).
Let a_2 = havoc(Mint_undef_0, Mint_0, a_1, n).
Let a_3 = a_2[shift_sint32(a, 1)].
Let a_4 = a_2[a_1].
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(a_4) /\
      is_sint32(a_3).
  (* Else *)
  Have: 0 < n_1.
  (* Then *)
  Have: 0 < i.
  (* Then *)
  Have: a_3 < a_4.
}
Prove: false.
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (3s)
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (3s)

------------------------------------------------------------

Goal Loop assigns (file out/13_0001/13_loop_assigns.c, line 11) (3/5):
Effect at line 16
Let a_1 = shift_sint32(a, 0).
Let a_2 = havoc(Mint_undef_0, Mint_0, a_1, n).
Let a_3 = a_2[shift_sint32(a, 1)].
Let a_4 = a_2[a_1].
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(a_4) /\
      is_sint32(a_3).
  (* Goal *)
  When: !invalid(Malloc_0, a_1, 1).
  (* Else *)
  Have: 0 < n_1.
  (* Then *)
  Have: 0 < i.
  (* Then *)
  Have: a_3 < a_4.
}
Prove: 0 < n.
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (3s)
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (3s)

------------------------------------------------------------

Goal Loop assigns (file out/13_0001/13_loop_assigns.c, line 11) (4/5):
Effect at line 17
Let a_1 = shift_sint32(a, 0).
Let a_2 = havoc(Mint_undef_0, Mint_0, a_1, n).
Let a_3 = shift_sint32(a, 1).
Let a_4 = a_2[a_3].
Let a_5 = a_2[a_1].
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(a_5) /\
      is_sint32(a_4).
  (* Goal *)
  When: !invalid(Malloc_0, a_3, 1).
  (* Else *)
  Have: 0 < n_1.
  (* Then *)
  Have: 0 < i.
  (* Then *)
  Have: a_4 < a_5.
}
Prove: included(a_3, 1, a_1, n).
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (3s)
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (3s)

------------------------------------------------------------

Goal Loop assigns (file out/13_0001/13_loop_assigns.c, line 11) (5/5):
Effect at line 13
Assume {
  Type: is_sint32(i) /\ is_sint32(n).
  (* Else *)
  Have: 0 < n.
  (* Then *)
  Have: 0 < i.
}
Prove: false.
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (3s)
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (3s)

------------------------------------------------------------
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Termination-condition (generated) in 'main':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Exit-condition (generated) in 'main':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/13_0001/13_loop_assigns.c:4: Warning: 
  No 'assigns' specification for function 'bubbleSort'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/13_0001/13_loop_assigns.c:24: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

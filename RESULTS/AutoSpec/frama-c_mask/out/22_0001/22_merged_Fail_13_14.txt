[kernel] Parsing out/22_0001/22_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 11 goals scheduled
[wp] [Timeout] typed_func_terminates (Qed 0.52ms) (Alt-Ergo)
[wp] Proved goals:   13 / 14
  Terminating:       1
  Unreachable:       2
  Qed:               6 (0.52ms-4ms-13ms)
  Alt-Ergo 2.5.4:    4 (9ms-16ms-28ms)
  Timeout:           1
------------------------------------------------------------
  Function func
------------------------------------------------------------

Goal Termination-condition (generated) in 'func':
Loop termination at line 12
Prove: false.
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.52ms) (8s)
Prover Z3 4.8.12 returns Timeout (Qed:0.52ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0001/22_merged.c, line 5):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(n) /\ is_sint32(1 + i_1).
  (* Heap *)
  Type: region(a.base) <= 0.
  (* Goal *)
  When: ((i % 2) = 0) /\ (0 <= i) /\ (i <= i_1).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((0 <= i_2) -> ((i_2 < i_1) ->
      (havoc(Mint_undef_0, Mint_1, shift_sint32(a, 0), n)
         [shift_sint32(a, i_2)] = 0)))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: i_1 < n.
  If (i_1 % 2) = 0
  Then {
    Have: havoc(Mint_undef_0, Mint_1, shift_sint32(a, 0), n) = Mint_2.
    Have: Mint_2[shift_sint32(a, i_1) <- 0] = Mint_0.
  }
  Else { Have: havoc(Mint_undef_0, Mint_1, shift_sint32(a, 0), n) = Mint_0. }
}
Prove: Mint_0[shift_sint32(a, i)] = 0.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (12ms) (148)
Prover Z3 4.8.12 returns Valid (Qed:9ms) (27ms) (100371)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0001/22_merged.c, line 5):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0001/22_merged.c, line 6):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(n) /\ is_sint32(1 + i_1).
  (* Heap *)
  Type: region(a.base) <= 0.
  (* Goal *)
  When: ((i % 2) = 0) /\ (0 <= i) /\ (i <= i_1).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((0 <= i_2) -> ((i_2 < i_1) ->
      (havoc(Mint_undef_0, Mint_1, shift_sint32(a, 0), n)
         [shift_sint32(a, i_2)] = 0)))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: i_1 < n.
  If (i_1 % 2) = 0
  Then {
    Have: havoc(Mint_undef_0, Mint_1, shift_sint32(a, 0), n) = Mint_2.
    Have: Mint_2[shift_sint32(a, i_1) <- 0] = Mint_0.
  }
  Else { Have: havoc(Mint_undef_0, Mint_1, shift_sint32(a, 0), n) = Mint_0. }
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((i_2 <= i_1) -> ((0 <= i_2) ->
      (Mint_0[shift_sint32(a, i_2)] = 0)))).
}
Prove: Mint_0[shift_sint32(a, i)] = 0.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (14ms) (52)
Prover Z3 4.8.12 returns Valid (Qed:13ms) (16ms) (98153)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0001/22_merged.c, line 6):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0001/22_merged.c, line 7):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(n) /\ is_sint32(1 + i_1).
  (* Heap *)
  Type: region(a.base) <= 0.
  (* Goal *)
  When: ((i % 2) = 0) /\ (0 <= i) /\ (i <= i_1).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((0 <= i_2) -> ((i_2 < i_1) ->
      (havoc(Mint_undef_0, Mint_1, shift_sint32(a, 0), n)
         [shift_sint32(a, i_2)] = 0)))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: i_1 < n.
  If (i_1 % 2) = 0
  Then {
    Have: havoc(Mint_undef_0, Mint_1, shift_sint32(a, 0), n) = Mint_2.
    Have: Mint_2[shift_sint32(a, i_1) <- 0] = Mint_0.
  }
  Else { Have: havoc(Mint_undef_0, Mint_1, shift_sint32(a, 0), n) = Mint_0. }
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((i_2 <= i_1) -> ((0 <= i_2) ->
      (Mint_0[shift_sint32(a, i_2)] = 0)))).
}
Prove: Mint_0[shift_sint32(a, i)] = 0.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (9ms) (52)
Prover Z3 4.8.12 returns Valid (Qed:11ms) (19ms) (98153)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0001/22_merged.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0001/22_merged.c, line 8):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0001/22_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/22_0001/22_merged.c, line 9) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/22_0001/22_merged.c, line 9) (2/2):
Effect at line 14
Let a_1 = shift_sint32(a, 0).
Let a_2 = havoc(Mint_undef_0, Mint_0, a_1, n).
Let x = i - 1.
Let a_3 = shift_sint32(a, x).
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(x).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: !invalid(Malloc_0, a_3, 1).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((0 <= i_1) ->
      (((2 + i_1) <= i) -> (a_2[shift_sint32(a, i_1)] = 0)))).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: i <= n.
  (* Then *)
  Have: (x % 2) = 0.
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((0 <= i_1) -> ((i_1 < i) ->
      (a_2[a_3 <- 0][shift_sint32(a, i_1)] = 0)))).
}
Prove: included(a_3, 1, a_1, n).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (28ms) (299)
Prover Z3 4.8.12 returns Valid (Qed:6ms) (20ms) (72626)

------------------------------------------------------------
[wp:pedantic-assigns] out/22_0001/22_merged.c:2: Warning: 
  No 'assigns' specification for function 'func'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/22_0001/22_merged.c:19: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

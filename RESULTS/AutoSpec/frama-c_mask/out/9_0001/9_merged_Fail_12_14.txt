[kernel] Parsing out/9_0001/9_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 13 goals scheduled
[wp] [Timeout] typed_arrayDouble_terminates (Qed 0.55ms) (Alt-Ergo)
[wp] [Timeout] typed_arrayDouble_loop_invariant_2_preserved (Qed 4ms) (Alt-Ergo)
[wp] Proved goals:   12 / 14
  Unreachable:       1
  Qed:               8 (0.55ms-1ms-4ms)
  Alt-Ergo 2.5.4:    3 (13ms-19ms-29ms)
  Timeout:           2
------------------------------------------------------------
  Function arrayDouble
------------------------------------------------------------

Goal Termination-condition (generated) in 'arrayDouble':
Loop termination at line 14
Prove: false.
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.55ms) (8s)
Prover Z3 4.8.12 returns Timeout (Qed:0.55ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/9_0001/9_merged.c, line 7):
Let a_1 = havoc(Mint_undef_0, Mint_0, shift_sint32(a, 0), n).
Assume {
  Type: is_uint32(n) /\ is_sint32(p) /\ is_sint32(1 + p) /\
      is_sint32(a_1[shift_sint32(a, p)]).
  (* Heap *)
  Type: region(a.base) <= 0.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: p <= n.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < p) ->
      (a_1[shift_sint32(a, i)] = (2 * i)))).
  (* Invariant *)
  Have: 0 <= p.
  (* Then *)
  Have: to_uint32(p) < n.
}
Prove: p < n.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (13ms) (83)
Prover Z3 4.8.12 returns Valid (Qed:2ms) (16ms) (80665)

------------------------------------------------------------

Goal Establishment of Invariant (file out/9_0001/9_merged.c, line 7):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/9_0001/9_merged.c, line 8):
Let a_1 = havoc(Mint_undef_0, Mint_0, shift_sint32(a, 0), n).
Let a_2 = shift_sint32(a, p).
Let a_3 = a_1[a_2].
Assume {
  Type: is_uint32(n) /\ is_sint32(p) /\ is_sint32(1 + p) /\ is_sint32(a_3).
  (* Heap *)
  Type: region(a.base) <= 0.
  (* Goal *)
  When: (0 <= i) /\ (i <= p).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: p <= n.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < p) ->
      (a_1[shift_sint32(a, i_1)] = (2 * i_1)))).
  (* Invariant *)
  Have: 0 <= p.
  (* Then *)
  Have: to_uint32(p) < n.
  (* Invariant *)
  Have: p < n.
}
Prove: a_1[a_2 <- 2 * a_3][shift_sint32(a, i)] = (2 * i).
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/9_0001/9_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/9_0001/9_merged.c, line 9):
Let a_1 = havoc(Mint_undef_0, Mint_0, shift_sint32(a, 0), n).
Let a_2 = shift_sint32(a, p).
Let a_3 = a_1[a_2].
Let a_4 = a_1[a_2 <- 2 * a_3].
Assume {
  Type: is_uint32(n) /\ is_sint32(p) /\ is_sint32(1 + p) /\ is_sint32(a_3).
  (* Heap *)
  Type: region(a.base) <= 0.
  (* Goal *)
  When: (0 <= i) /\ (i <= p).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: p <= n.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < p) ->
      (a_1[shift_sint32(a, i_1)] = (2 * i_1)))).
  (* Invariant *)
  Have: 0 <= p.
  (* Then *)
  Have: to_uint32(p) < n.
  (* Invariant *)
  Have: p < n.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= p) ->
      (a_4[shift_sint32(a, i_1)] = (2 * i_1)))).
}
Prove: a_4[shift_sint32(a, i)] = (2 * i).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (13ms) (53)

------------------------------------------------------------

Goal Establishment of Invariant (file out/9_0001/9_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/9_0001/9_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/9_0001/9_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Loop assigns (file out/9_0001/9_merged.c, line 11) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/9_0001/9_merged.c, line 11) (2/2):
Effect at line 15
Let a_1 = shift_sint32(a, 0).
Let a_2 = havoc(Mint_undef_0, Mint_0, a_1, n).
Let x = p - 1.
Let a_3 = shift_sint32(a, x).
Let a_4 = a_2[a_3].
Assume {
  Type: is_uint32(n) /\ is_sint32(p) /\ is_sint32(x) /\ is_sint32(a_4).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: !invalid(Malloc_0, a_3, 1).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: p <= (1 + n).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> (((2 + i) <= p) ->
      (a_2[shift_sint32(a, i)] = (2 * i)))).
  (* Invariant *)
  Have: 0 < p.
  (* Then *)
  Have: to_uint32(x) < n.
  (* Invariant *)
  Have: p <= n.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < p) ->
      (a_2[a_3 <- 2 * a_4][shift_sint32(a, i)] = (2 * i)))).
}
Prove: included(a_3, 1, a_1, n).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (29ms) (292)
Prover Z3 4.8.12 returns Valid (Qed:4ms) (23ms) (69180)

------------------------------------------------------------
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Termination-condition (generated) in 'main':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Exit-condition (generated) in 'main':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/9_0001/9_merged.c:2: Warning: 
  No 'assigns' specification for function 'arrayDouble'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/9_0001/9_merged.c:20: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

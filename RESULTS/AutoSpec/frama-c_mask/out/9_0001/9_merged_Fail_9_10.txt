[kernel] Parsing out/9_0001/9_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 9 goals scheduled
[wp] [Timeout] typed_arrayDouble_terminates (Qed 0.54ms) (Alt-Ergo)
[wp] Proved goals:    9 / 10
  Unreachable:       1
  Qed:               6 (0.54ms-0.64ms-3ms)
  Alt-Ergo 2.5.4:    2 (9ms-13ms)
  Timeout:           1
------------------------------------------------------------
  Function arrayDouble
------------------------------------------------------------

Goal Termination-condition (generated) in 'arrayDouble':
Loop termination at line 12
Prove: false.
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.54ms) (8s)
Prover Z3 4.8.12 returns Timeout (Qed:0.54ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/9_0001/9_merged.c, line 7):
Assume {
  Type: is_uint32(n) /\ is_sint32(p) /\ is_sint32(1 + p).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: p <= n.
  (* Invariant *)
  Have: 0 <= p.
  (* Then *)
  Have: to_uint32(p) < n.
}
Prove: p < n.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (9ms) (32)
Prover Z3 4.8.12 returns Valid (Qed:2ms) (8ms) (25770)

------------------------------------------------------------

Goal Establishment of Invariant (file out/9_0001/9_merged.c, line 7):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/9_0001/9_merged.c, line 8):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/9_0001/9_merged.c, line 8):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Loop assigns (file out/9_0001/9_merged.c, line 9) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/9_0001/9_merged.c, line 9) (2/2):
Effect at line 13
Let x = p - 1.
Let a_1 = shift_sint32(a, x).
Assume {
  Type: is_uint32(n) /\ is_sint32(p) /\ is_sint32(x).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: !invalid(Malloc_0, a_1, 1).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: p <= (1 + n).
  (* Invariant *)
  Have: 0 < p.
  (* Then *)
  Have: to_uint32(x) < n.
  (* Invariant *)
  Have: p <= n.
}
Prove: included(a_1, 1, shift_sint32(a, 0), n).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (13ms) (145)
Prover Z3 4.8.12 returns Valid (Qed:3ms) (15ms) (48397)

------------------------------------------------------------
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Termination-condition (generated) in 'main':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Exit-condition (generated) in 'main':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/9_0001/9_merged.c:2: Warning: 
  No 'assigns' specification for function 'arrayDouble'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/9_0001/9_merged.c:18: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

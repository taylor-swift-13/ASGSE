[kernel] Parsing out/10_0001/10_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 12 goals scheduled
[wp] [Timeout] typed_array_max_advanced_terminates (Qed 0.63ms) (Alt-Ergo)
[wp] Proved goals:   12 / 13
  Unreachable:       1
  Qed:               8 (0.63ms-2ms-10ms)
  Alt-Ergo 2.5.4:    3 (12ms-15ms-21ms)
  Timeout:           1
------------------------------------------------------------
  Function array_max_advanced
------------------------------------------------------------

Goal Termination-condition (generated) in 'array_max_advanced':
Loop termination at line 13
Prove: false.
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.63ms) (8s)
Prover Z3 4.8.12 returns Timeout (Qed:0.63ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0001/10_merged.c, line 6):
Let x = Mint_0[shift_sint32(arr_0, 0)].
Let x_1 = Mint_0[shift_sint32(arr_0, i)].
Assume {
  Type: is_sint32(i) /\ is_sint32(max_0) /\ is_sint32(n) /\ is_sint32(x) /\
      is_sint32(x_1).
  (* Heap *)
  Type: region(arr_0.base) <= 0.
  (* Residual *)
  When: max_0 < x_1.
  (* Invariant *)
  Have: x <= max_0.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (Mint_0[shift_sint32(arr_0, i_1)] <= max_0))).
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
}
Prove: x <= x_1.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (12ms) (18)
Prover Z3 4.8.12 returns Valid (Qed:8ms) (20ms) (50823)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0001/10_merged.c, line 6):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0001/10_merged.c, line 7):
Let x = Mint_0[shift_sint32(arr_0, 0)].
Let x_1 = Mint_0[shift_sint32(arr_0, i_1)].
Assume {
  Type: is_sint32(i_1) /\ is_sint32(max_0) /\ is_sint32(max_1) /\
      is_sint32(n) /\ is_sint32(1 + i_1) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Heap *)
  Type: region(arr_0.base) <= 0.
  (* Goal *)
  When: (0 <= i) /\ (i <= i_1).
  (* Invariant *)
  Have: x <= max_1.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      (Mint_0[shift_sint32(arr_0, i_2)] <= max_1))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: i_1 < n.
  If max_1 < x_1
  Then { Have: x_1 = max_0. }
  Else { Have: max_1 = max_0. }
  (* Invariant *)
  Have: x <= max_0.
}
Prove: Mint_0[shift_sint32(arr_0, i)] <= max_0.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (21ms) (108)
Prover Z3 4.8.12 returns Valid (Qed:8ms) (30ms) (210510)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0001/10_merged.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0001/10_merged.c, line 8):
Let x = Mint_0[shift_sint32(arr_0, 0)].
Let x_1 = Mint_0[shift_sint32(arr_0, i_1)].
Assume {
  Type: is_sint32(i_1) /\ is_sint32(max_0) /\ is_sint32(max_1) /\
      is_sint32(n) /\ is_sint32(1 + i_1) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Heap *)
  Type: region(arr_0.base) <= 0.
  (* Goal *)
  When: (0 <= i) /\ (i <= i_1).
  (* Invariant *)
  Have: x <= max_1.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      (Mint_0[shift_sint32(arr_0, i_2)] <= max_1))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: i_1 < n.
  If max_1 < x_1
  Then { Have: x_1 = max_0. }
  Else { Have: max_1 = max_0. }
  (* Invariant *)
  Have: x <= max_0.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= i_1) -> ((0 <= i_2) ->
      (Mint_0[shift_sint32(arr_0, i_2)] <= max_0))).
}
Prove: Mint_0[shift_sint32(arr_0, i)] <= max_0.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (13ms) (50)
Prover Z3 4.8.12 returns Valid (Qed:10ms) (17ms) (80979)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0001/10_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0001/10_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0001/10_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (0.78ms)

------------------------------------------------------------

Goal Loop assigns (file out/10_0001/10_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Termination-condition (generated) in 'main':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Exit-condition (generated) in 'main':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/10_0001/10_merged.c:2: Warning: 
  No 'assigns' specification for function 'array_max_advanced'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/10_0001/10_merged.c:22: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/10_0001/10_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] out/10_0001/10_merged.c:6: Warning: 
  Concretization for comprehension sets not implemented yet
[wp] 16 goals scheduled
[wp] [Timeout] typed_array_max_advanced_loop_invariant_preserved (Qed 9ms) (Alt-Ergo) (Stronger)
[wp] [Timeout] typed_array_max_advanced_terminates (Qed 0.95ms) (Alt-Ergo)
[wp] [Timeout] typed_array_max_advanced_loop_invariant_established (Qed 2ms) (Alt-Ergo) (Stronger)
[wp] [Timeout] typed_array_max_advanced_loop_invariant_2_established (Qed 2ms) (Alt-Ergo) (Stronger)
[wp] Proved goals:   13 / 17
  Unreachable:       1
  Qed:               9 (0.95ms-3ms-13ms)
  Alt-Ergo 2.5.4:    3 (9ms-13ms)
  Timeout:           4
------------------------------------------------------------
  Function array_max_advanced
------------------------------------------------------------

Goal Termination-condition (generated) in 'array_max_advanced':
Loop termination at line 15
Prove: false.
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.95ms) (8s)
Prover Z3 4.8.12 returns Timeout (Qed:0.95ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0001/10_merged.c, line 6):
out/10_0001/10_merged.c:6: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Let x = Mint_0[shift_sint32(arr_0, i)].
Let x_1 = Mint_0[shift_sint32(arr_0, 0)].
Assume {
  Type: is_sint32(i) /\ is_sint32(max_0) /\ is_sint32(max_1) /\
      is_sint32(n) /\ is_sint32(x_1) /\ is_sint32(x).
  (* Heap *)
  Type: region(arr_0.base) <= 0.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: x_1 <= max_1.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (Mint_0[shift_sint32(arr_0, i_1)] <= max_1))).
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
  If max_1 < x
  Then { Have: x = max_0. }
  Else { Have: max_1 = max_0. }
}
Prove: w = max_0.
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:9ms) (8s)
Prover Z3 4.8.12 returns Unknown (Qed:9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0001/10_merged.c, line 6):
out/10_0001/10_merged.c:6: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Let x = Mint_0[shift_sint32(arr_0, 0)].
Assume { Type: is_sint32(x). (* Heap *) Type: region(arr_0.base) <= 0. }
Prove: x = w.
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)
Prover Z3 4.8.12 returns Unknown (Qed:2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0001/10_merged.c, line 7):
out/10_0001/10_merged.c:6: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0001/10_merged.c, line 7):
out/10_0001/10_merged.c:6: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Assume { Type: is_sint32(n). }
Prove: 0 <= n.
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0001/10_merged.c, line 8):
out/10_0001/10_merged.c:6: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Let x = Mint_0[shift_sint32(arr_0, 0)].
Let x_1 = Mint_0[shift_sint32(arr_0, i)].
Assume {
  Type: is_sint32(i) /\ is_sint32(max_0) /\ is_sint32(n) /\
      is_sint32(1 + i) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Heap *)
  Type: region(arr_0.base) <= 0.
  (* Residual *)
  When: max_0 < x_1.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: x <= max_0.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (Mint_0[shift_sint32(arr_0, i_1)] <= max_0))).
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
}
Prove: x <= x_1.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (9ms) (19)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0001/10_merged.c, line 8):
out/10_0001/10_merged.c:6: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0001/10_merged.c, line 9):
out/10_0001/10_merged.c:6: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Let x = Mint_0[shift_sint32(arr_0, 0)].
Let x_1 = Mint_0[shift_sint32(arr_0, i_1)].
Assume {
  Type: is_sint32(i_1) /\ is_sint32(max_0) /\ is_sint32(max_1) /\
      is_sint32(n) /\ is_sint32(1 + i_1) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Heap *)
  Type: region(arr_0.base) <= 0.
  (* Goal *)
  When: (0 <= i) /\ (i <= i_1).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: x <= max_1.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      (Mint_0[shift_sint32(arr_0, i_2)] <= max_1))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: i_1 < n.
  If max_1 < x_1
  Then { Have: x_1 = max_0. }
  Else { Have: max_1 = max_0. }
  (* Invariant *)
  Have: x <= max_0.
}
Prove: Mint_0[shift_sint32(arr_0, i)] <= max_0.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:12ms) (13ms) (112)
Prover Z3 4.8.12 returns Valid (Qed:12ms) (23ms) (210760)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0001/10_merged.c, line 9):
out/10_0001/10_merged.c:6: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0001/10_merged.c, line 10):
out/10_0001/10_merged.c:6: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Let x = Mint_0[shift_sint32(arr_0, 0)].
Let x_1 = Mint_0[shift_sint32(arr_0, i_1)].
Assume {
  Type: is_sint32(i_1) /\ is_sint32(max_0) /\ is_sint32(max_1) /\
      is_sint32(n) /\ is_sint32(1 + i_1) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Heap *)
  Type: region(arr_0.base) <= 0.
  (* Goal *)
  When: (0 <= i) /\ (i <= i_1).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: x <= max_1.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      (Mint_0[shift_sint32(arr_0, i_2)] <= max_1))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: i_1 < n.
  If max_1 < x_1
  Then { Have: x_1 = max_0. }
  Else { Have: max_1 = max_0. }
  (* Invariant *)
  Have: x <= max_0.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= i_1) -> ((0 <= i_2) ->
      (Mint_0[shift_sint32(arr_0, i_2)] <= max_0))).
}
Prove: Mint_0[shift_sint32(arr_0, i)] <= max_0.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (12ms) (54)
Prover Z3 4.8.12 returns Valid (Qed:13ms) (20ms) (81229)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0001/10_merged.c, line 10):
out/10_0001/10_merged.c:6: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0001/10_merged.c, line 11):
out/10_0001/10_merged.c:6: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0001/10_merged.c, line 11):
out/10_0001/10_merged.c:6: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Prove: true.
Prover Qed returns Valid (0.73ms)

------------------------------------------------------------

Goal Loop assigns (file out/10_0001/10_merged.c, line 12):
out/10_0001/10_merged.c:6: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Concretization for comprehension sets not implemented yet
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Termination-condition (generated) in 'main':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Exit-condition (generated) in 'main':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/10_0001/10_merged.c:2: Warning: 
  No 'assigns' specification for function 'array_max_advanced'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/10_0001/10_merged.c:24: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

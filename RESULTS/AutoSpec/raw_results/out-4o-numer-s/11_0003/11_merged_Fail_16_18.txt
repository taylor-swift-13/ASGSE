[kernel] Parsing out/11_0003/11_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 18 goals scheduled
[wp] [Timeout] typed_hoo11_loop_invariant_preserved (Qed 6ms) (Z3)
[wp] [Timeout] typed_hoo11_loop_invariant_3_preserved (Qed 5ms) (Z3)
[wp] Proved goals:   16 / 18
  Qed:              13
  Alt-Ergo 2.5.4:    3 (19ms-21ms)
  Timeout:           2
------------------------------------------------------------
  Function hoo11
------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0003/11_merged.c, line 10):
Let x_4 = y % 2.
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_3) /\
      is_sint32(y).
  (* Invariant *)
  Have: x_3 <= 90.
  (* Invariant *)
  Have: x_3 <= 98.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: (-95) <= x_3.
  (* Invariant *)
  Have: 0 <= (x_3 + (5 * ((99 - x_3) / 5))).
  (* Invariant *)
  Have: ((x_4 = 0) -> ((x_3 % 10) = 0)).
  (* Invariant *)
  Have: ((x_4 != 0) -> ((x_3 % 5) = 0)).
  If x_4 = 0
  Then { Have: x_3 = x_1. Have: (10 + x_1) = x. }
  Else { Have: x_3 = x_2. Have: (5 + x) = x_2. }
}
Prove: x <= 90.
Prover Z3 4.8.12 returns Timeout (Qed:6ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:6ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0003/11_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0003/11_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0003/11_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0003/11_merged.c, line 12):
Let x_4 = y % 2.
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_3) /\
      is_sint32(y).
  (* Invariant *)
  Have: x_3 <= 90.
  (* Invariant *)
  Have: x_3 <= 98.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: (-95) <= x_3.
  (* Invariant *)
  Have: 0 <= (x_3 + (5 * ((99 - x_3) / 5))).
  (* Invariant *)
  Have: ((x_4 = 0) -> ((x_3 % 10) = 0)).
  (* Invariant *)
  Have: ((x_4 != 0) -> ((x_3 % 5) = 0)).
  If x_4 = 0
  Then { Have: x_3 = x_1. Have: (10 + x_1) = x. }
  Else { Have: x_3 = x_2. Have: (5 + x) = x_2. }
  (* Invariant *)
  Have: x <= 90.
  (* Invariant *)
  Have: x <= 98.
}
Prove: 0 <= x.
Prover Z3 4.8.12 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0003/11_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0003/11_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0003/11_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0003/11_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0003/11_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0003/11_merged.c, line 15):
Let x_4 = y % 2.
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_3) /\
      is_sint32(y).
  (* Invariant *)
  Have: x_3 <= 90.
  (* Invariant *)
  Have: x_3 <= 98.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: (-95) <= x_3.
  (* Invariant *)
  Have: 0 <= (x_3 + (5 * ((99 - x_3) / 5))).
  (* Invariant *)
  Have: ((x_4 = 0) -> ((x_3 % 10) = 0)).
  (* Invariant *)
  Have: ((x_4 != 0) -> ((x_3 % 5) = 0)).
  If x_4 = 0
  Then { Have: x_3 = x_1. Have: (10 + x_1) = x. }
  Else { Have: x_3 = x_2. Have: (5 + x) = x_2. }
  (* Invariant *)
  Have: x <= 90.
  (* Invariant *)
  Have: x <= 98.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: (-95) <= x.
}
Prove: 0 <= (x + (5 * ((99 - x) / 5))).
Prover Z3 4.8.12 returns Valid (Qed:6ms) (20ms) (33448)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (19ms) (257)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0003/11_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0003/11_merged.c, line 16):
Let x_1 = -x.
Let x_2 = 10 + x.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_2).
  (* Goal *)
  When: (y % 2) = 0.
  (* Invariant *)
  Have: x <= 90.
  (* Invariant *)
  Have: x <= 98.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: (-95) <= x.
  (* Invariant *)
  Have: 0 <= (x + (5 * ((99 - x) / 5))).
  (* Invariant *)
  Have: (x % 10) = 0.
  (* Invariant *)
  Have: x <= 80.
  (* Invariant *)
  Have: x <= 88.
  (* Invariant *)
  Have: (-10) <= x.
  (* Invariant *)
  Have: (-105) <= x.
  (* Invariant *)
  Have: (-10) <= (x + (5 * ((89 - x) / 5))).
}
Prove: (x_2 % 10) = 0.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (40ms) (141490)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (20ms) (302)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0003/11_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0003/11_merged.c, line 17):
Let x_1 = -x.
Let x_2 = x - 5.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_2).
  (* Goal *)
  When: (y % 2) != 0.
  (* Invariant *)
  Have: x <= 90.
  (* Invariant *)
  Have: x <= 98.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: (-95) <= x.
  (* Invariant *)
  Have: 0 <= (x + (5 * ((99 - x) / 5))).
  (* Invariant *)
  Have: (x % 5) = 0.
  (* Invariant *)
  Have: x <= 95.
  (* Invariant *)
  Have: x <= 103.
  (* Invariant *)
  Have: 5 <= x.
  (* Invariant *)
  Have: (-90) <= x.
  (* Invariant *)
  Have: 5 <= (x + (5 * ((104 - x) / 5))).
}
Prove: (x_2 % 5) = 0.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (40ms) (119475)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (21ms) (301)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0003/11_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assertion (file out/11_0003/11_merged.c, line 28):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/11_0003/11_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/11_0003/11_merged.c:3: Warning: 
  No 'assigns' specification for function 'hoo11'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/24_0003/24_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 32 goals scheduled
[wp] [Failure] typed_hoo24_loop_invariant_2_preserved (Qed 5ms) (Z3)
[wp] [Failure] typed_hoo24_loop_invariant_3_preserved (Qed 3ms) (Z3)
[wp] [Failure] typed_hoo24_loop_invariant_4_preserved (Qed 4ms) (Z3)
[wp] [Failure] typed_hoo24_loop_invariant_6_preserved (Qed 4ms) (Z3)
[wp] [Timeout] typed_hoo24_loop_invariant_3_established (Qed 0.73ms) (Z3)
[wp] [Failure] typed_hoo24_loop_invariant_7_preserved (Qed 4ms) (Z3)
[wp] [Failure] typed_hoo24_loop_invariant_8_preserved (Qed 4ms) (Z3)
[wp] [Failure] typed_hoo24_loop_invariant_9_preserved (Qed 5ms) (Z3)
[wp] [Timeout] typed_hoo24_loop_invariant_6_established (Qed 1ms) (Z3)
[wp] [Failure] typed_hoo24_loop_invariant_9_established (Qed 2ms) (Z3)
[wp] [Failure] typed_hoo24_loop_invariant_10_preserved (Qed 4ms) (Z3)
[wp] [Failure] typed_hoo24_loop_invariant_10_established (Qed 1ms) (Z3)
[wp] [Failure] typed_hoo24_loop_invariant_11_preserved (Qed 4ms) (Z3)
[wp] [Failure] typed_hoo24_loop_invariant_11_established (Qed 1ms) (Z3)
[wp] Proved goals:   18 / 32
  Qed:              16
  Alt-Ergo 2.5.4:    2 (7ms-13ms)
  Failed:           12
  Timeout:           2
------------------------------------------------------------
  Function hoo24
------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0003/24_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0003/24_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0003/24_merged.c, line 12):
Let x = -n.
Let x_1 = prev_guess_0 * prev_guess_0.
Let x_2 = n / prev_guess_0.
Let a = IAbs.abs(prev_guess_0 - prev_guess_1).
Let a_1 = IAbs.abs(n).
Let x_3 = n / 2.
Let a_2 = IAbs.abs(x_3).
Let x_4 = prev_guess_0 - 1.
Let x_5 = x_3 * x_3.
Let x_6 = x_3 - 1.
Let x_7 = (prev_guess_0 + x_2) / 2.
Assume {
  Type: is_sint32(n) /\ is_sint32(prev_guess_0) /\ is_sint32(prev_guess_1) /\
      is_sint32(x_3) /\ is_sint32(x_7).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_3 != 0.
  (* Invariant *)
  Have: x_3 <= n.
  (* Invariant *)
  Have: (x_5 <= n) \/ (n < (x_6 * x_6)).
  (* Invariant *)
  Have: a_2 <= a_1.
  (* Invariant *)
  Have: IAbs.abs(x_3 - (n / x_3)) <= IAbs.abs(n / 0).
  (* Invariant *)
  Have: IAbs.abs(x_5 - n) < IAbs.abs(n).
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: prev_guess_1 <= n.
  (* Invariant *)
  Have: prev_guess_1 <= prev_guess_0.
  (* Invariant *)
  Have: prev_guess_1 != prev_guess_0.
  (* Invariant *)
  Have: prev_guess_0 <= n.
  (* Invariant *)
  Have: (x_1 <= n) \/ (n < (x_4 * x_4)).
  (* Invariant *)
  Have: a <= a_2.
  (* Invariant *)
  Have: a <= a_1.
  (* Invariant *)
  Have: IAbs.abs(prev_guess_0 - x_2)
          <= IAbs.abs(prev_guess_1 - (n / prev_guess_1)).
  (* Invariant *)
  Have: IAbs.abs(x_1 - n) < IAbs.abs((prev_guess_1 * prev_guess_1) - n).
  (* Invariant *)
  Have: 0 < prev_guess_0.
  (* Invariant *)
  Have: 0 <= prev_guess_1.
}
Prove: prev_guess_0 <= x_7.
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0003/24_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0003/24_merged.c, line 13):
Let x = n / prev_guess_0.
Let x_1 = (prev_guess_0 + x) / 2.
Let x_2 = -n.
Let x_3 = prev_guess_0 * prev_guess_0.
Let a = IAbs.abs(prev_guess_0 - prev_guess_1).
Let a_1 = IAbs.abs(n).
Let x_4 = n / 2.
Let a_2 = IAbs.abs(x_4).
Let x_5 = prev_guess_0 - 1.
Let x_6 = x_4 * x_4.
Let x_7 = x_4 - 1.
Assume {
  Type: is_sint32(n) /\ is_sint32(prev_guess_0) /\ is_sint32(prev_guess_1) /\
      is_sint32(x_4) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_4 != 0.
  (* Invariant *)
  Have: x_4 <= n.
  (* Invariant *)
  Have: (x_6 <= n) \/ (n < (x_7 * x_7)).
  (* Invariant *)
  Have: a_2 <= a_1.
  (* Invariant *)
  Have: IAbs.abs(x_4 - (n / x_4)) <= IAbs.abs(n / 0).
  (* Invariant *)
  Have: IAbs.abs(x_6 - n) < IAbs.abs(n).
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: prev_guess_1 <= n.
  (* Invariant *)
  Have: prev_guess_1 <= prev_guess_0.
  (* Invariant *)
  Have: prev_guess_1 != prev_guess_0.
  (* Invariant *)
  Have: prev_guess_0 <= n.
  (* Invariant *)
  Have: (x_3 <= n) \/ (n < (x_5 * x_5)).
  (* Invariant *)
  Have: a <= a_2.
  (* Invariant *)
  Have: a <= a_1.
  (* Invariant *)
  Have: IAbs.abs(prev_guess_0 - x)
          <= IAbs.abs(prev_guess_1 - (n / prev_guess_1)).
  (* Invariant *)
  Have: IAbs.abs(x_3 - n) < IAbs.abs((prev_guess_1 * prev_guess_1) - n).
  (* Invariant *)
  Have: 0 < prev_guess_0.
  (* Invariant *)
  Have: 0 <= prev_guess_1.
  (* Invariant *)
  Have: prev_guess_0 <= x_1.
}
Prove: x_1 != prev_guess_0.
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0003/24_merged.c, line 13):
Let x = n / 2.
Assume { Type: is_sint32(n) /\ is_sint32(x). (* Pre-condition *) Have: 0 < n.
}
Prove: x != 0.
Prover Z3 4.8.12 returns Timeout (Qed:0.73ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.73ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0003/24_merged.c, line 14):
Let x = n / guess_0.
Let x_1 = (guess_0 + x) / 2.
Let x_2 = -n.
Let x_3 = guess_0 * guess_0.
Let a = IAbs.abs(guess_0 - prev_guess_0).
Let a_1 = IAbs.abs(n).
Let x_4 = n / 2.
Let a_2 = IAbs.abs(x_4).
Let x_5 = guess_0 - 1.
Let x_6 = x_4 * x_4.
Let x_7 = x_4 - 1.
Assume {
  Type: is_sint32(guess_0) /\ is_sint32(n) /\ is_sint32(prev_guess_0) /\
      is_sint32(x_4) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_4 != 0.
  (* Invariant *)
  Have: x_4 <= n.
  (* Invariant *)
  Have: (x_6 <= n) \/ (n < (x_7 * x_7)).
  (* Invariant *)
  Have: a_2 <= a_1.
  (* Invariant *)
  Have: IAbs.abs(x_4 - (n / x_4)) <= IAbs.abs(n / 0).
  (* Invariant *)
  Have: IAbs.abs(x_6 - n) < IAbs.abs(n).
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: prev_guess_0 <= n.
  (* Invariant *)
  Have: prev_guess_0 <= guess_0.
  (* Invariant *)
  Have: prev_guess_0 != guess_0.
  (* Invariant *)
  Have: guess_0 <= n.
  (* Invariant *)
  Have: (x_3 <= n) \/ (n < (x_5 * x_5)).
  (* Invariant *)
  Have: a <= a_2.
  (* Invariant *)
  Have: a <= a_1.
  (* Invariant *)
  Have: IAbs.abs(guess_0 - x) <= IAbs.abs(prev_guess_0 - (n / prev_guess_0)).
  (* Invariant *)
  Have: IAbs.abs(x_3 - n) < IAbs.abs((prev_guess_0 * prev_guess_0) - n).
  (* Invariant *)
  Have: 0 < guess_0.
  (* Invariant *)
  Have: 0 <= prev_guess_0.
  (* Invariant *)
  Have: guess_0 <= x_1.
  (* Invariant *)
  Have: x_1 != guess_0.
}
Prove: x_1 <= n.
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0003/24_merged.c, line 14):
Let x = n / 2.
Assume {
  Type: is_sint32(n) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x != 0.
}
Prove: x <= n.
Prover Z3 4.8.12 returns Valid (Qed:1ms) (10ms) (29899)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (7ms) (58)

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0003/24_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0003/24_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0003/24_merged.c, line 16):
Let x = n / guess_0.
Let x_1 = (guess_0 + x) / 2.
Let x_2 = -n.
Let x_3 = guess_0 * guess_0.
Let a = IAbs.abs(guess_0 - prev_guess_0).
Let a_1 = IAbs.abs(n).
Let x_4 = n / 2.
Let a_2 = IAbs.abs(x_4).
Let x_5 = guess_0 - 1.
Let x_6 = x_4 * x_4.
Let x_7 = x_4 - 1.
Let x_8 = x_1 - 1.
Assume {
  Type: is_sint32(guess_0) /\ is_sint32(n) /\ is_sint32(prev_guess_0) /\
      is_sint32(x_4) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_4 != 0.
  (* Invariant *)
  Have: x_4 <= n.
  (* Invariant *)
  Have: (x_6 <= n) \/ (n < (x_7 * x_7)).
  (* Invariant *)
  Have: a_2 <= a_1.
  (* Invariant *)
  Have: IAbs.abs(x_4 - (n / x_4)) <= IAbs.abs(n / 0).
  (* Invariant *)
  Have: IAbs.abs(x_6 - n) < IAbs.abs(n).
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: prev_guess_0 <= n.
  (* Invariant *)
  Have: prev_guess_0 <= guess_0.
  (* Invariant *)
  Have: prev_guess_0 != guess_0.
  (* Invariant *)
  Have: guess_0 <= n.
  (* Invariant *)
  Have: (x_3 <= n) \/ (n < (x_5 * x_5)).
  (* Invariant *)
  Have: a <= a_2.
  (* Invariant *)
  Have: a <= a_1.
  (* Invariant *)
  Have: IAbs.abs(guess_0 - x) <= IAbs.abs(prev_guess_0 - (n / prev_guess_0)).
  (* Invariant *)
  Have: IAbs.abs(x_3 - n) < IAbs.abs((prev_guess_0 * prev_guess_0) - n).
  (* Invariant *)
  Have: 0 < guess_0.
  (* Invariant *)
  Have: 0 <= prev_guess_0.
  (* Invariant *)
  Have: guess_0 <= x_1.
  (* Invariant *)
  Have: x_1 != guess_0.
  (* Invariant *)
  Have: x_1 <= n.
}
Prove: ((x_1 * x_1) <= n) \/ (n < (x_8 * x_8)).
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0003/24_merged.c, line 16):
Let x = n / 2.
Let x_1 = x - 1.
Assume {
  Type: is_sint32(n) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x != 0.
  (* Invariant *)
  Have: x <= n.
}
Prove: ((x * x) <= n) \/ (n < (x_1 * x_1)).
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0003/24_merged.c, line 17):
Let x = n / prev_guess_0.
Let x_1 = (prev_guess_0 + x) / 2.
Let x_2 = x_1 - 1.
Let x_3 = -n.
Let x_4 = prev_guess_0 * prev_guess_0.
Let a = IAbs.abs(prev_guess_0 - prev_guess_1).
Let a_1 = IAbs.abs(n).
Let x_5 = n / 2.
Let a_2 = IAbs.abs(x_5).
Let x_6 = prev_guess_0 - 1.
Let x_7 = x_5 * x_5.
Let x_8 = x_5 - 1.
Assume {
  Type: is_sint32(n) /\ is_sint32(prev_guess_0) /\ is_sint32(prev_guess_1) /\
      is_sint32(x_5) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_5 != 0.
  (* Invariant *)
  Have: x_5 <= n.
  (* Invariant *)
  Have: (x_7 <= n) \/ (n < (x_8 * x_8)).
  (* Invariant *)
  Have: a_2 <= a_1.
  (* Invariant *)
  Have: IAbs.abs(x_5 - (n / x_5)) <= IAbs.abs(n / 0).
  (* Invariant *)
  Have: IAbs.abs(x_7 - n) < IAbs.abs(n).
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: prev_guess_1 <= n.
  (* Invariant *)
  Have: prev_guess_1 <= prev_guess_0.
  (* Invariant *)
  Have: prev_guess_1 != prev_guess_0.
  (* Invariant *)
  Have: prev_guess_0 <= n.
  (* Invariant *)
  Have: (x_4 <= n) \/ (n < (x_6 * x_6)).
  (* Invariant *)
  Have: a <= a_2.
  (* Invariant *)
  Have: a <= a_1.
  (* Invariant *)
  Have: IAbs.abs(prev_guess_0 - x)
          <= IAbs.abs(prev_guess_1 - (n / prev_guess_1)).
  (* Invariant *)
  Have: IAbs.abs(x_4 - n) < IAbs.abs((prev_guess_1 * prev_guess_1) - n).
  (* Invariant *)
  Have: 0 < prev_guess_0.
  (* Invariant *)
  Have: 0 <= prev_guess_1.
  (* Invariant *)
  Have: prev_guess_0 <= x_1.
  (* Invariant *)
  Have: x_1 != prev_guess_0.
  (* Invariant *)
  Have: x_1 <= n.
  (* Invariant *)
  Have: ((x_1 * x_1) <= n) \/ (n < (x_2 * x_2)).
}
Prove: IAbs.abs(x_1 - prev_guess_0) <= a_2.
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0003/24_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0003/24_merged.c, line 18):
Let x = n / prev_guess_0.
Let x_1 = (prev_guess_0 + x) / 2.
Let a = IAbs.abs(x_1 - prev_guess_0).
Let x_2 = n / 2.
Let a_1 = IAbs.abs(x_2).
Let x_3 = x_1 - 1.
Let x_4 = -n.
Let x_5 = prev_guess_0 * prev_guess_0.
Let a_2 = IAbs.abs(prev_guess_0 - prev_guess_1).
Let a_3 = IAbs.abs(n).
Let x_6 = prev_guess_0 - 1.
Let x_7 = x_2 * x_2.
Let x_8 = x_2 - 1.
Assume {
  Type: is_sint32(n) /\ is_sint32(prev_guess_0) /\ is_sint32(prev_guess_1) /\
      is_sint32(x_2) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_2 != 0.
  (* Invariant *)
  Have: x_2 <= n.
  (* Invariant *)
  Have: (x_7 <= n) \/ (n < (x_8 * x_8)).
  (* Invariant *)
  Have: a_1 <= a_3.
  (* Invariant *)
  Have: IAbs.abs(x_2 - (n / x_2)) <= IAbs.abs(n / 0).
  (* Invariant *)
  Have: IAbs.abs(x_7 - n) < IAbs.abs(n).
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: prev_guess_1 <= n.
  (* Invariant *)
  Have: prev_guess_1 <= prev_guess_0.
  (* Invariant *)
  Have: prev_guess_1 != prev_guess_0.
  (* Invariant *)
  Have: prev_guess_0 <= n.
  (* Invariant *)
  Have: (x_5 <= n) \/ (n < (x_6 * x_6)).
  (* Invariant *)
  Have: a_2 <= a_1.
  (* Invariant *)
  Have: a_2 <= a_3.
  (* Invariant *)
  Have: IAbs.abs(prev_guess_0 - x)
          <= IAbs.abs(prev_guess_1 - (n / prev_guess_1)).
  (* Invariant *)
  Have: IAbs.abs(x_5 - n) < IAbs.abs((prev_guess_1 * prev_guess_1) - n).
  (* Invariant *)
  Have: 0 < prev_guess_0.
  (* Invariant *)
  Have: 0 <= prev_guess_1.
  (* Invariant *)
  Have: prev_guess_0 <= x_1.
  (* Invariant *)
  Have: x_1 != prev_guess_0.
  (* Invariant *)
  Have: x_1 <= n.
  (* Invariant *)
  Have: ((x_1 * x_1) <= n) \/ (n < (x_3 * x_3)).
  (* Invariant *)
  Have: a <= a_1.
}
Prove: a <= a_3.
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0003/24_merged.c, line 18):
Let x = n / 2.
Let x_1 = x - 1.
Assume {
  Type: is_sint32(n) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x != 0.
  (* Invariant *)
  Have: x <= n.
  (* Invariant *)
  Have: ((x * x) <= n) \/ (n < (x_1 * x_1)).
}
Prove: IAbs.abs(x) <= IAbs.abs(n).
Prover Z3 4.8.12 returns Valid (Qed:1ms) (20ms) (32270)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (13ms) (109)

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0003/24_merged.c, line 19):
Let x = n / prev_guess_0.
Let x_1 = (prev_guess_0 + x) / 2.
Let a = IAbs.abs(x_1 - prev_guess_0).
Let a_1 = IAbs.abs(n).
Let x_2 = n / 2.
Let a_2 = IAbs.abs(x_2).
Let x_3 = x_1 - 1.
Let x_4 = -n.
Let x_5 = prev_guess_0 * prev_guess_0.
Let a_3 = IAbs.abs(prev_guess_0 - x).
Let a_4 = IAbs.abs(prev_guess_0 - prev_guess_1).
Let x_6 = prev_guess_0 - 1.
Let x_7 = x_2 * x_2.
Let x_8 = x_2 - 1.
Assume {
  Type: is_sint32(n) /\ is_sint32(prev_guess_0) /\ is_sint32(prev_guess_1) /\
      is_sint32(x_2) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_2 != 0.
  (* Invariant *)
  Have: x_2 <= n.
  (* Invariant *)
  Have: (x_7 <= n) \/ (n < (x_8 * x_8)).
  (* Invariant *)
  Have: a_2 <= a_1.
  (* Invariant *)
  Have: IAbs.abs(x_2 - (n / x_2)) <= IAbs.abs(n / 0).
  (* Invariant *)
  Have: IAbs.abs(x_7 - n) < IAbs.abs(n).
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: prev_guess_1 <= n.
  (* Invariant *)
  Have: prev_guess_1 <= prev_guess_0.
  (* Invariant *)
  Have: prev_guess_1 != prev_guess_0.
  (* Invariant *)
  Have: prev_guess_0 <= n.
  (* Invariant *)
  Have: (x_5 <= n) \/ (n < (x_6 * x_6)).
  (* Invariant *)
  Have: a_4 <= a_2.
  (* Invariant *)
  Have: a_4 <= a_1.
  (* Invariant *)
  Have: a_3 <= IAbs.abs(prev_guess_1 - (n / prev_guess_1)).
  (* Invariant *)
  Have: IAbs.abs(x_5 - n) < IAbs.abs((prev_guess_1 * prev_guess_1) - n).
  (* Invariant *)
  Have: 0 < prev_guess_0.
  (* Invariant *)
  Have: 0 <= prev_guess_1.
  (* Invariant *)
  Have: prev_guess_0 <= x_1.
  (* Invariant *)
  Have: x_1 != prev_guess_0.
  (* Invariant *)
  Have: x_1 <= n.
  (* Invariant *)
  Have: ((x_1 * x_1) <= n) \/ (n < (x_3 * x_3)).
  (* Invariant *)
  Have: a <= a_2.
  (* Invariant *)
  Have: a <= a_1.
}
Prove: IAbs.abs(x_1 - (n / x_1)) <= a_3.
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0003/24_merged.c, line 19):
Let x = n / 2.
Let x_1 = x - 1.
Assume {
  Type: is_sint32(n) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x != 0.
  (* Invariant *)
  Have: x <= n.
  (* Invariant *)
  Have: ((x * x) <= n) \/ (n < (x_1 * x_1)).
  (* Invariant *)
  Have: IAbs.abs(x) <= IAbs.abs(n).
}
Prove: IAbs.abs(x - (n / x)) <= IAbs.abs(n / 0).
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0003/24_merged.c, line 20):
Let x = n / prev_guess_0.
Let x_1 = (prev_guess_0 + x) / 2.
Let a = IAbs.abs(prev_guess_0 - x).
Let a_1 = IAbs.abs(x_1 - prev_guess_0).
Let a_2 = IAbs.abs(n).
Let x_2 = n / 2.
Let a_3 = IAbs.abs(x_2).
Let x_3 = x_1 * x_1.
Let x_4 = x_1 - 1.
Let x_5 = -n.
Let x_6 = prev_guess_0 * prev_guess_0.
Let a_4 = IAbs.abs(x_6 - n).
Let a_5 = IAbs.abs(prev_guess_0 - prev_guess_1).
Let x_7 = prev_guess_0 - 1.
Let x_8 = x_2 * x_2.
Let x_9 = x_2 - 1.
Assume {
  Type: is_sint32(n) /\ is_sint32(prev_guess_0) /\ is_sint32(prev_guess_1) /\
      is_sint32(x_2) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_2 != 0.
  (* Invariant *)
  Have: x_2 <= n.
  (* Invariant *)
  Have: (x_8 <= n) \/ (n < (x_9 * x_9)).
  (* Invariant *)
  Have: a_3 <= a_2.
  (* Invariant *)
  Have: IAbs.abs(x_2 - (n / x_2)) <= IAbs.abs(n / 0).
  (* Invariant *)
  Have: IAbs.abs(x_8 - n) < IAbs.abs(n).
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: prev_guess_1 <= n.
  (* Invariant *)
  Have: prev_guess_1 <= prev_guess_0.
  (* Invariant *)
  Have: prev_guess_1 != prev_guess_0.
  (* Invariant *)
  Have: prev_guess_0 <= n.
  (* Invariant *)
  Have: (x_6 <= n) \/ (n < (x_7 * x_7)).
  (* Invariant *)
  Have: a_5 <= a_3.
  (* Invariant *)
  Have: a_5 <= a_2.
  (* Invariant *)
  Have: a <= IAbs.abs(prev_guess_1 - (n / prev_guess_1)).
  (* Invariant *)
  Have: a_4 < IAbs.abs((prev_guess_1 * prev_guess_1) - n).
  (* Invariant *)
  Have: 0 < prev_guess_0.
  (* Invariant *)
  Have: 0 <= prev_guess_1.
  (* Invariant *)
  Have: prev_guess_0 <= x_1.
  (* Invariant *)
  Have: x_1 != prev_guess_0.
  (* Invariant *)
  Have: x_1 <= n.
  (* Invariant *)
  Have: (x_3 <= n) \/ (n < (x_4 * x_4)).
  (* Invariant *)
  Have: a_1 <= a_3.
  (* Invariant *)
  Have: a_1 <= a_2.
  (* Invariant *)
  Have: IAbs.abs(x_1 - (n / x_1)) <= a.
}
Prove: IAbs.abs(x_3 - n) < a_4.
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0003/24_merged.c, line 20):
Let x = n / 2.
Let x_1 = x * x.
Let x_2 = x - 1.
Assume {
  Type: is_sint32(n) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x != 0.
  (* Invariant *)
  Have: x <= n.
  (* Invariant *)
  Have: (x_1 <= n) \/ (n < (x_2 * x_2)).
  (* Invariant *)
  Have: IAbs.abs(x) <= IAbs.abs(n).
  (* Invariant *)
  Have: IAbs.abs(x - (n / x)) <= IAbs.abs(n / 0).
}
Prove: IAbs.abs(x_1 - n) < IAbs.abs(n).
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0003/24_merged.c, line 21):
Let x = -n.
Let x_1 = n / guess_0.
Let x_2 = guess_0 + x_1.
Let x_3 = x_2 / 2.
Let x_4 = x_3 * x_3.
Let x_5 = guess_0 * guess_0.
Let a = IAbs.abs(x_5 - n).
Let a_1 = IAbs.abs(guess_0 - x_1).
Let a_2 = IAbs.abs(x_3 - guess_0).
Let a_3 = IAbs.abs(n).
Let x_6 = n / 2.
Let a_4 = IAbs.abs(x_6).
Let x_7 = x_3 - 1.
Let a_5 = IAbs.abs(guess_0 - prev_guess_0).
Let x_8 = guess_0 - 1.
Let x_9 = x_6 * x_6.
Let x_10 = x_6 - 1.
Assume {
  Type: is_sint32(guess_0) /\ is_sint32(n) /\ is_sint32(prev_guess_0) /\
      is_sint32(x_6) /\ is_sint32(x_3).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_6 != 0.
  (* Invariant *)
  Have: x_6 <= n.
  (* Invariant *)
  Have: (x_9 <= n) \/ (n < (x_10 * x_10)).
  (* Invariant *)
  Have: a_4 <= a_3.
  (* Invariant *)
  Have: IAbs.abs(x_6 - (n / x_6)) <= IAbs.abs(n / 0).
  (* Invariant *)
  Have: IAbs.abs(x_9 - n) < IAbs.abs(n).
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: prev_guess_0 <= n.
  (* Invariant *)
  Have: prev_guess_0 <= guess_0.
  (* Invariant *)
  Have: prev_guess_0 != guess_0.
  (* Invariant *)
  Have: guess_0 <= n.
  (* Invariant *)
  Have: (x_5 <= n) \/ (n < (x_8 * x_8)).
  (* Invariant *)
  Have: a_5 <= a_4.
  (* Invariant *)
  Have: a_5 <= a_3.
  (* Invariant *)
  Have: a_1 <= IAbs.abs(prev_guess_0 - (n / prev_guess_0)).
  (* Invariant *)
  Have: a < IAbs.abs((prev_guess_0 * prev_guess_0) - n).
  (* Invariant *)
  Have: 0 < guess_0.
  (* Invariant *)
  Have: 0 <= prev_guess_0.
  (* Invariant *)
  Have: guess_0 <= x_3.
  (* Invariant *)
  Have: x_3 != guess_0.
  (* Invariant *)
  Have: x_3 <= n.
  (* Invariant *)
  Have: (x_4 <= n) \/ (n < (x_7 * x_7)).
  (* Invariant *)
  Have: a_2 <= a_4.
  (* Invariant *)
  Have: a_2 <= a_3.
  (* Invariant *)
  Have: IAbs.abs(x_3 - (n / x_3)) <= a_1.
  (* Invariant *)
  Have: IAbs.abs(x_4 - n) < a.
}
Prove: 2 <= x_2.
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0003/24_merged.c, line 21):
Let x = n / 2.
Let x_1 = x * x.
Let x_2 = x - 1.
Assume {
  Type: is_sint32(n) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x != 0.
  (* Invariant *)
  Have: x <= n.
  (* Invariant *)
  Have: (x_1 <= n) \/ (n < (x_2 * x_2)).
  (* Invariant *)
  Have: IAbs.abs(x) <= IAbs.abs(n).
  (* Invariant *)
  Have: IAbs.abs(x - (n / x)) <= IAbs.abs(n / 0).
  (* Invariant *)
  Have: IAbs.abs(x_1 - n) < IAbs.abs(n).
}
Prove: 2 <= n.
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0003/24_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0003/24_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.73ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0003/24_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0003/24_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0003/24_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0003/24_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0003/24_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0003/24_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Assertion (file out/24_0003/24_merged.c, line 34):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/24_0003/24_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/24_0003/24_merged.c:4: Warning: 
  No 'assigns' specification for function 'hoo24'.
  Callers assumptions might be imprecise.

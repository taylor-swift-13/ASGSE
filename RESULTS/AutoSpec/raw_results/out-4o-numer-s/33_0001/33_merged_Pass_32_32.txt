[kernel] Parsing out/33_0001/33_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 32 goals scheduled
[wp] Proved goals:   32 / 32
  Qed:              24
  Alt-Ergo 2.5.4:    6 (4ms-53ms-254ms)
  Z3 4.8.12:         2 (40ms-60ms)
------------------------------------------------------------
  Function hoo33
------------------------------------------------------------

Goal Preservation of Invariant (file out/33_0001/33_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/33_0001/33_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/33_0001/33_merged.c, line 18):
Let x_1 = b * i.
Let x_2 = b * b * i.
Let x_3 = x + x_1.
Let x_4 = b * x_3.
Let x_5 = x - b.
Let x_6 = b + x_1.
Assume {
  Type: is_sint32(b) /\ is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_5) /\
      is_sint32(x_6) /\ is_sint32(x_3).
  (* Pre-condition *)
  Have: 0 < x_3.
  (* Pre-condition *)
  Have: 0 < b.
  (* Invariant *)
  Have: (0 / b) = 0.
  (* Invariant *)
  Have: (b * i_1) = 0.
  (* Invariant *)
  Have: x_4 = ((b * x) + x_2).
  (* Invariant *)
  Have: (b * (x_1 / b)) = x_1.
  (* Invariant *)
  Have: (x_2 / b) = x_1.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < (x + x_2).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: b < x.
}
Prove: x_4 = ((b * x_5) + (b * x_6)).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (9933)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (15ms) (264)

------------------------------------------------------------

Goal Establishment of Invariant (file out/33_0001/33_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/33_0001/33_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/33_0001/33_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.81ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/33_0001/33_merged.c, line 20):
Let x_1 = i * y.
Let x_2 = x + x_1.
Let x_3 = y * x_2.
Let x_4 = x - y.
Let x_5 = y + x_1.
Let x_6 = i * y * y.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_1) /\ is_sint32(x_4) /\
      is_sint32(x_2) /\ is_sint32(x_5).
  (* Pre-condition *)
  Have: 0 < x_2.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: (0 / y) = 0.
  (* Invariant *)
  Have: (i_1 * y) = 0.
  (* Invariant *)
  Have: x_3 = ((x * y) + x_6).
  (* Invariant *)
  Have: (y * (x_1 / y)) = x_1.
  (* Invariant *)
  Have: (x_6 / y) = x_1.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < (x + x_6).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: y < x.
  (* Invariant *)
  Have: x_3 = ((y * x_4) + (y * x_5)).
}
Prove: (y * (x_5 / y)) = x_5.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (60ms) (177991)

------------------------------------------------------------

Goal Establishment of Invariant (file out/33_0001/33_merged.c, line 20):
Assume {
  Type: is_sint32(a) /\ is_sint32(u).
  (* Pre-condition *)
  Have: 0 < a.
  (* Pre-condition *)
  Have: 0 < u.
}
Prove: (u * (0 / u)) = 0.
Prover Z3 4.8.12 returns Valid (Qed:1ms) (10ms) (30498)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (5ms) (35)

------------------------------------------------------------

Goal Preservation of Invariant (file out/33_0001/33_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/33_0001/33_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/33_0001/33_merged.c, line 22):
Let x_1 = i * y.
Let x_2 = y + x_1.
Let x_3 = x_2 / y.
Let x_4 = x + x_1.
Let x_5 = y * x_4.
Let x_6 = x - y.
Let x_7 = i * y * y.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_1) /\ is_sint32(x_6) /\
      is_sint32(x_4) /\ is_sint32(x_2).
  (* Pre-condition *)
  Have: 0 < x_4.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: (0 / y) = 0.
  (* Invariant *)
  Have: (i_1 * y) = 0.
  (* Invariant *)
  Have: x_5 = ((x * y) + x_7).
  (* Invariant *)
  Have: (y * (x_1 / y)) = x_1.
  (* Invariant *)
  Have: (x_7 / y) = x_1.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < (x + x_7).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: y < x.
  (* Invariant *)
  Have: x_5 = ((y * x_6) + (y * y * x_3)).
  (* Invariant *)
  Have: (y * x_3) = x_2.
}
Prove: ((y * x_2) / y) = x_2.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (40ms) (124429)

------------------------------------------------------------

Goal Establishment of Invariant (file out/33_0001/33_merged.c, line 22):
Let x = 0 / u.
Assume {
  Type: is_sint32(a) /\ is_sint32(u).
  (* Pre-condition *)
  Have: 0 < a.
  (* Pre-condition *)
  Have: 0 < u.
  (* Invariant *)
  Have: (u * x) = 0.
}
Prove: x = 0.
Prover Z3 4.8.12 returns Valid (Qed:1ms) (10ms) (29970)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (4ms) (18)

------------------------------------------------------------

Goal Preservation of Invariant (file out/33_0001/33_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/33_0001/33_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/33_0001/33_merged.c, line 24):
Let x_1 = b * i.
Let x_2 = b + x_1.
Let x_3 = x + x_1.
Let x_4 = b * x_3.
Let x_5 = x - b.
Let x_6 = b * x_2.
Let x_7 = b * b * i.
Assume {
  Type: is_sint32(b) /\ is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_5) /\
      is_sint32(x_2) /\ is_sint32(x_3).
  (* Pre-condition *)
  Have: 0 < x_3.
  (* Pre-condition *)
  Have: 0 < b.
  (* Invariant *)
  Have: (0 / b) = 0.
  (* Invariant *)
  Have: (b * i_1) = 0.
  (* Invariant *)
  Have: x_4 = ((b * x) + x_7).
  (* Invariant *)
  Have: (b * (x_1 / b)) = x_1.
  (* Invariant *)
  Have: (x_7 / b) = x_1.
  (* Invariant *)
  Have: (x_6 / b) = x_2.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < (x + x_7).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: b < x.
  (* Invariant *)
  Have: x_4 = ((b * x_5) + x_6).
  (* Invariant *)
  Have: (b * (x_2 / b)) = x_2.
}
Prove: exists i_2 : Z. (b * i_2) = x_2.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (254ms) (5018)

------------------------------------------------------------

Goal Establishment of Invariant (file out/33_0001/33_merged.c, line 24):
Assume {
  Type: is_sint32(a) /\ is_sint32(b).
  (* Pre-condition *)
  Have: 0 < a.
  (* Pre-condition *)
  Have: 0 < b.
  (* Invariant *)
  Have: (0 / b) = 0.
}
Prove: exists i : Z. (b * i) = 0.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (9ms) (165)

------------------------------------------------------------

Goal Preservation of Invariant (file out/33_0001/33_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/33_0001/33_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/33_0001/33_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/33_0001/33_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/33_0001/33_merged.c, line 27):
Let x = i * y * y.
Let x_1 = i * y.
Let x_2 = a * y.
Let x_3 = -x_1.
Let x_4 = a - x_1.
Let x_5 = x_1 - y.
Let x_6 = y * x_5.
Let x_7 = a + y - x_1.
Assume {
  Type: is_sint32(a) /\ is_sint32(y) /\ is_sint32(x_1) /\ is_sint32(x_5) /\
      is_sint32(x_4) /\ is_sint32(x_7).
  (* Pre-condition *)
  Have: 0 < a.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: (0 / y) = 0.
  (* Invariant *)
  Have: (i_1 * y) = 0.
  (* Invariant *)
  Have: x_2 = (x_6 + (y * x_7)).
  (* Invariant *)
  Have: x_1 = (y + (y * (x_5 / y))).
  (* Invariant *)
  Have: x_1 = (y + (x_6 / y)).
  (* Invariant *)
  Have: x_1 = (y + (i_2 * y)).
  (* Invariant *)
  Have: x_1 < (a + y).
  (* Invariant *)
  Have: x_1 < (a + y + x_6).
  (* Invariant *)
  Have: y <= x_1.
  (* Then *)
  Have: x_1 < a.
  (* Invariant *)
  Have: x_2 = (x + (y * x_4)).
  (* Invariant *)
  Have: (y * (x_1 / y)) = x_1.
  (* Invariant *)
  Have: (x / y) = x_1.
}
Prove: x_1 < (a + x).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (34967)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (32ms) (865)

------------------------------------------------------------

Goal Establishment of Invariant (file out/33_0001/33_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.88ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/33_0001/33_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/33_0001/33_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/33_0001/33_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/33_0001/33_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/33_0001/33_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/33_0001/33_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/33_0001/33_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/33_0001/33_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Assertion (file out/33_0001/33_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/33_0001/33_merged.c, line 32):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/33_0001/33_merged.c:5: Warning: 
  No 'assigns' specification for function 'hoo33'.
  Callers assumptions might be imprecise.

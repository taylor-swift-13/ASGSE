[kernel] Parsing out/26_0003/26_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 17 goals scheduled
[wp] [Timeout] typed_hoo26_loop_invariant_preserved (Qed 4ms) (Z3)
[wp] Proved goals:   16 / 17
  Qed:              10
  Alt-Ergo 2.5.4:    5
  Z3 4.8.12:         1 (20ms)
  Timeout:           1
------------------------------------------------------------
  Function hoo26
------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0003/26_merged.c, line 12):
Let x = 1 + r.
Let x_1 = r * x.
Let x_2 = x_1 / 2.
Let x_3 = a / 2.
Let x_4 = -x_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(r) /\ is_sint32(x_3) /\ is_sint32(x) /\
      is_sint32(x_3 - x_2) /\ is_sint32(x_3 - r - x_2).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Pre-condition *)
  Have: 0 < a.
  (* Invariant *)
  Have: (2 * x_3) = a.
  (* Invariant *)
  Have: 2 <= a.
  (* Invariant *)
  Have: x_1 = (2 * x_2).
  (* Invariant *)
  Have: x_2 <= x_3.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: x_2 < x_3.
  (* Invariant *)
  Have: (r * r) <= a.
  (* Then *)
  Have: (r + x_2) < x_3.
}
Prove: ((2 * r) + x_1) = (2 * ((x * (2 + r)) / 2)).
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0003/26_merged.c, line 12):
Let x = a / 2.
Assume {
  Type: is_sint32(a) /\ is_sint32(x).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Pre-condition *)
  Have: 0 < a.
}
Prove: (2 * x) = a.
Prover Z3 4.8.12 returns Valid (Qed:0.66ms) (20ms) (30658)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:0.66ms) (8ms) (93)

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0003/26_merged.c, line 13):
Let x_1 = 2 * x.
Let x_2 = 1 + r.
Let x_3 = x_2 * (2 + r).
Let x_4 = x_3 / 2.
Let x_5 = 2 * x_4.
Let x_6 = x_1 + x_5 - (2 * r).
Let x_7 = x_6 / 2.
Let x_8 = r * x_2.
Let x_9 = x_8 / 2.
Let x_10 = 2 * r.
Let x_11 = x + x_4.
Assume {
  Type: is_sint32(r) /\ is_sint32(x) /\ is_sint32(x_2) /\ is_sint32(x - r) /\
      is_sint32(x_6) /\ is_sint32(x_7).
  (* Pre-condition *)
  Have: (x_6 % 2) = 0.
  (* Invariant *)
  Have: (r + x_7) = x_11.
  (* Invariant *)
  Have: r <= x_11.
  (* Invariant *)
  Have: r < x_11.
  (* Invariant *)
  Have: x_4 = (r + x_9).
  (* Invariant *)
  Have: (x_10 + x_8) = x_5.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: (x_10 + (r * r)) <= (x_1 + x_5).
  (* Invariant *)
  Have: x_9 <= x_7.
  (* Invariant *)
  Have: x_7 = (x + x_9).
  (* Then *)
  Have: r < x.
}
Prove: x_3 = x_5.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (37244)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0003/26_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0003/26_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0003/26_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0003/26_merged.c, line 15):
Let x_2 = -x.
Let x_3 = 1 + x_1 - x.
Let x_4 = x_3 * (2 + x_1 - x).
Let x_5 = (2 * x) + x_4.
Let x_6 = x_5 / 2.
Let x_7 = x_1 - x.
Let x_8 = x_7 * x_3.
Let x_9 = x_8 / 2.
Let x_10 = 2 * x_1.
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_7) /\ is_sint32(x_3) /\
      is_sint32(x_5) /\ is_sint32(x_6).
  (* Pre-condition *)
  Have: (x_5 % 2) = 0.
  (* Pre-condition *)
  Have: 0 < x_5.
  (* Invariant *)
  Have: x_5 = (2 * x_6).
  (* Invariant *)
  Have: 2 <= x_5.
  (* Invariant *)
  Have: (x_10 + (2 * x_9)) = x_5.
  (* Invariant *)
  Have: (x_10 + x_8) = x_5.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: x <= x_1.
  (* Invariant *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: (x_7 * x_7) <= x_5.
  (* Invariant *)
  Have: x_9 <= x_6.
  (* Invariant *)
  Have: x_6 = (x_1 + x_9).
  (* Then *)
  Have: 0 < x.
  (* Invariant *)
  Have: x_4 = (2 * (x_4 / 2)).
}
Prove: x <= (1 + x_1).
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (10153)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (34)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0003/26_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.79ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0003/26_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0003/26_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0003/26_merged.c, line 17):
Let x_2 = -x_1.
Let x_3 = 1 + x - x_1.
Let x_4 = x_3 * (2 + x - x_1).
Let x_5 = (2 * x_1) + x_4.
Let x_6 = x_5 / 2.
Let x_7 = x - x_1.
Let x_8 = x_7 * x_3.
Let x_9 = x_8 / 2.
Let x_10 = 2 * x.
Assume {
  Type: is_sint32(x_1) /\ is_sint32(x) /\ is_sint32(x_7) /\ is_sint32(x_3) /\
      is_sint32(x_5) /\ is_sint32(x_6).
  (* Pre-condition *)
  Have: (x_5 % 2) = 0.
  (* Pre-condition *)
  Have: 0 < x_5.
  (* Invariant *)
  Have: x_5 = (2 * x_6).
  (* Invariant *)
  Have: 2 <= x_5.
  (* Invariant *)
  Have: (x_10 + (2 * x_9)) = x_5.
  (* Invariant *)
  Have: (x_10 + x_8) = x_5.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: (x_7 * x_7) <= x_5.
  (* Invariant *)
  Have: x_9 <= x_6.
  (* Invariant *)
  Have: x_6 = (x + x_9).
  (* Then *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: x_4 = (2 * (x_4 / 2)).
  (* Invariant *)
  Have: x_1 <= (1 + x).
}
Prove: (x_3 * x_3) <= x_5.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (10227)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (5ms) (35)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0003/26_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0003/26_merged.c, line 18):
Let x_2 = -x_1.
Let x_3 = 1 + x - x_1.
Let x_4 = x_3 * (2 + x - x_1).
Let x_5 = (2 * x_1) + x_4.
Let x_6 = x_4 / 2.
Let x_7 = x_5 / 2.
Let x_8 = x - x_1.
Let x_9 = x_8 * x_3.
Let x_10 = x_9 / 2.
Let x_11 = 2 * x.
Assume {
  Type: is_sint32(x_1) /\ is_sint32(x) /\ is_sint32(x_8) /\ is_sint32(x_3) /\
      is_sint32(x_5) /\ is_sint32(x_7).
  (* Pre-condition *)
  Have: (x_5 % 2) = 0.
  (* Pre-condition *)
  Have: 0 < x_5.
  (* Invariant *)
  Have: x_5 = (2 * x_7).
  (* Invariant *)
  Have: 2 <= x_5.
  (* Invariant *)
  Have: (x_11 + (2 * x_10)) = x_5.
  (* Invariant *)
  Have: (x_11 + x_9) = x_5.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: (x_8 * x_8) <= x_5.
  (* Invariant *)
  Have: x_10 <= x_7.
  (* Invariant *)
  Have: x_7 = (x + x_10).
  (* Then *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: x_4 = (2 * x_6).
  (* Invariant *)
  Have: x_1 <= (1 + x).
  (* Invariant *)
  Have: (x_3 * x_3) <= x_5.
}
Prove: x_6 <= x_7.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (10261)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (5ms) (37)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0003/26_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.73ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0003/26_merged.c, line 19):
Let x_1 = 1 + r.
Let x_2 = x_1 * (2 + r).
Let x_3 = x_2 / 2.
Let x_4 = 2 * x.
Let x_5 = x_4 + x_2 - (2 * r).
Let x_6 = x_5 / 2.
Let x_7 = 2 * r.
Let x_8 = x_4 + x_2.
Let x_9 = r * x_1.
Let x_10 = x_9 / 2.
Assume {
  Type: is_sint32(r) /\ is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x - r) /\
      is_sint32(x_5) /\ is_sint32(x_6).
  (* Pre-condition *)
  Have: (x_5 % 2) = 0.
  (* Pre-condition *)
  Have: x_7 < x_8.
  (* Invariant *)
  Have: (x_7 + (2 * x_6)) = x_8.
  (* Invariant *)
  Have: x_7 <= (1 + x_4 + x_2).
  (* Invariant *)
  Have: (2 + x_7) <= x_8.
  (* Invariant *)
  Have: x_2 = (x_7 + (2 * x_10)).
  (* Invariant *)
  Have: x_2 = (x_7 + x_9).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: (x_7 + (r * r)) <= x_8.
  (* Invariant *)
  Have: x_10 <= x_6.
  (* Invariant *)
  Have: x_6 = (x + x_10).
  (* Then *)
  Have: r < x.
  (* Invariant *)
  Have: x_2 = (2 * x_3).
  (* Invariant *)
  Have: (-1) <= r.
  (* Invariant *)
  Have: (x_7 + (x_1 * x_1)) <= x_8.
  (* Invariant *)
  Have: x_3 <= x_6.
}
Prove: (r + x_6) = (x + x_3).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (10379)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (5ms) (43)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0003/26_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Loop assigns (file out/26_0003/26_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/26_0003/26_merged.c:5: Warning: 
  No 'assigns' specification for function 'hoo26'.
  Callers assumptions might be imprecise.

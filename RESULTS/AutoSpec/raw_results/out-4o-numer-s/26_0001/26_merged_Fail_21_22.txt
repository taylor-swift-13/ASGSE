[kernel] Parsing out/26_0001/26_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 22 goals scheduled
[wp] [Timeout] typed_hoo26_loop_invariant_7_established (Qed 0.77ms) (Z3)
[wp] Proved goals:   21 / 22
  Qed:              15
  Alt-Ergo 2.5.4:    6
  Timeout:           1
------------------------------------------------------------
  Function hoo26
------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 12):
Let x = 1 + r.
Let x_1 = r * x.
Let x_2 = x_1 / 2.
Let x_3 = r + x_2.
Let x_4 = a / 2.
Let x_5 = -x_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(r) /\ is_sint32(x_4) /\ is_sint32(x) /\
      is_sint32(x_4 - x_2) /\ is_sint32(x_4 - r - x_2).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Pre-condition *)
  Have: 0 < a.
  (* Invariant *)
  Have: (2 * x_4) = a.
  (* Invariant *)
  Have: a <= 1.
  (* Invariant *)
  Have: x_2 = ((r * (r - 1)) / 2).
  (* Invariant *)
  Have: x_3 <= 0.
  (* Invariant *)
  Have: (r * r) <= 1.
  (* Invariant *)
  Have: x_1 = (2 * x_2).
  (* Invariant *)
  Have: 0 < (x * x).
  (* Invariant *)
  Have: x_1 <= 1.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: x_1 <= 3.
  (* Then *)
  Have: x_3 < 0.
}
Prove: r = 0.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (34000)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (44)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 14):
Let x = 1 + r.
Let x_1 = x * (2 + r).
Let x_2 = x_1 / 2.
Let x_3 = r * x.
Let x_4 = x_3 / 2.
Let x_5 = a / 2.
Let x_6 = -x_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(r) /\ is_sint32(x_5) /\ is_sint32(x) /\
      is_sint32(x_5 - x_2) /\ is_sint32(r + x_5 - x_2).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Pre-condition *)
  Have: 0 < a.
  (* Invariant *)
  Have: (2 * x_5) = a.
  (* Invariant *)
  Have: a <= 1.
  (* Invariant *)
  Have: x_2 = (r + ((r * (r - 1)) / 2)).
  (* Invariant *)
  Have: x_2 = (r + x_4).
  (* Invariant *)
  Have: x_1 <= 1.
  (* Invariant *)
  Have: (r * r) <= 1.
  (* Invariant *)
  Have: ((2 * r) + x_3) = (2 * x_2).
  (* Invariant *)
  Have: 0 < (x * x).
  (* Invariant *)
  Have: x_2 <= r.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: x_3 <= 3.
  (* Then *)
  Have: x_1 <= (-2).
  (* Invariant *)
  Have: x_2 = x_4.
}
Prove: (r + x_2) < 0.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (35189)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (46)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 15):
Let x = 1 + r.
Let x_1 = x * (2 + r).
Let x_2 = x_1 / 2.
Let x_3 = r * x.
Let x_4 = x_3 / 2.
Let x_5 = x * x.
Let x_6 = a / 2.
Let x_7 = -x_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(r) /\ is_sint32(x_6) /\ is_sint32(x) /\
      is_sint32(x_6 - x_2) /\ is_sint32(r + x_6 - x_2).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Pre-condition *)
  Have: 0 < a.
  (* Invariant *)
  Have: (2 * x_6) = a.
  (* Invariant *)
  Have: a <= 1.
  (* Invariant *)
  Have: x_2 = (r + ((r * (r - 1)) / 2)).
  (* Invariant *)
  Have: x_2 = (r + x_4).
  (* Invariant *)
  Have: x_1 <= 1.
  (* Invariant *)
  Have: (r * r) <= 1.
  (* Invariant *)
  Have: ((2 * r) + x_3) = (2 * x_2).
  (* Invariant *)
  Have: 0 < x_5.
  (* Invariant *)
  Have: x_2 <= r.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: x_3 <= 3.
  (* Then *)
  Have: x_1 <= (-2).
  (* Invariant *)
  Have: x_2 = x_4.
  (* Invariant *)
  Have: (r + x_2) < 0.
}
Prove: x_5 <= 1.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (33386)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (6ms) (49)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 16):
Let x = 1 + r.
Let x_1 = x * x.
Let x_2 = x * (2 + r).
Let x_3 = x_2 / 2.
Let x_4 = r * x.
Let x_5 = x_4 / 2.
Let x_6 = 2 * x_3.
Let x_7 = a / 2.
Let x_8 = -x_3.
Assume {
  Type: is_sint32(a) /\ is_sint32(r) /\ is_sint32(x_7) /\ is_sint32(x) /\
      is_sint32(x_7 - x_3) /\ is_sint32(r + x_7 - x_3).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Pre-condition *)
  Have: 0 < a.
  (* Invariant *)
  Have: (2 * x_7) = a.
  (* Invariant *)
  Have: a <= 1.
  (* Invariant *)
  Have: x_3 = (r + ((r * (r - 1)) / 2)).
  (* Invariant *)
  Have: x_3 = (r + x_5).
  (* Invariant *)
  Have: x_2 <= 1.
  (* Invariant *)
  Have: (r * r) <= 1.
  (* Invariant *)
  Have: ((2 * r) + x_4) = x_6.
  (* Invariant *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: x_3 <= r.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: x_4 <= 3.
  (* Then *)
  Have: x_2 <= (-2).
  (* Invariant *)
  Have: x_3 = x_5.
  (* Invariant *)
  Have: (r + x_3) < 0.
  (* Invariant *)
  Have: x_1 <= 1.
}
Prove: x_2 = x_6.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (35776)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (53)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 16):
Let x = a / 2.
Assume {
  Type: is_sint32(a) /\ is_sint32(x).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Pre-condition *)
  Have: 0 < a.
}
Prove: (2 * x) = a.
Prover Z3 4.8.12 returns Valid (Qed:0.76ms) (20ms) (30658)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:0.76ms) (13ms) (93)

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 18):
Assume {
  Type: is_sint32(x) /\ is_sint32(2 * x).
  (* Pre-condition *)
  Have: 0 < x.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:0.77ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.77ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 20):
Let x_2 = -x.
Let x_3 = 2 + x_1 - x.
Let x_4 = 1 + x_1 - x.
Let x_5 = x_4 * x_4.
Let x_6 = 2 * x.
Let x_7 = x_4 * x_3.
Let x_8 = x_1 - x.
Let x_9 = x_8 * x_4.
Let x_10 = x_9 / 2.
Let x_11 = x_6 + x_7.
Let x_12 = x_11 / 2.
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_8) /\ is_sint32(x_4) /\
      is_sint32(x_11) /\ is_sint32(x_12).
  (* Pre-condition *)
  Have: (x_11 % 2) = 0.
  (* Pre-condition *)
  Have: 0 < x_11.
  (* Invariant *)
  Have: x_11 = (2 * x_12).
  (* Invariant *)
  Have: x_11 <= 1.
  (* Invariant *)
  Have: (x_1 + ((x_8 * (x_1 - 1 - x)) / 2)) = 0.
  (* Invariant *)
  Have: (x_1 + x_10) = 0.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: (x_8 * x_8) <= 1.
  (* Invariant *)
  Have: ((2 * x_1) + x_9) = 1.
  (* Invariant *)
  Have: 0 < x_5.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: x <= x_1.
  (* Invariant *)
  Have: x_9 <= 3.
  (* Then *)
  Have: 0 < x.
  (* Invariant *)
  Have: (x + x_10) = 0.
  (* Invariant *)
  Have: (x + (x_7 / 2)) = 0.
  (* Invariant *)
  Have: x_1 < x_6.
  (* Invariant *)
  Have: x_5 <= 1.
  (* Invariant *)
  Have: 0 < (x_3 * x_3).
}
Prove: x <= (1 + x_1).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (34092)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (40)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Assertion (file out/26_0001/26_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/26_0001/26_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/26_0001/26_merged.c:5: Warning: 
  No 'assigns' specification for function 'hoo26'.
  Callers assumptions might be imprecise.

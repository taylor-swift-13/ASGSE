[kernel] Parsing out/26_0001/26_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 20 goals scheduled
[wp] [Timeout] typed_hoo26_loop_invariant_2_preserved (Qed 2ms) (Z3)
[wp] Proved goals:   19 / 20
  Qed:              11
  Alt-Ergo 2.5.4:    8 (4ms-12ms-29ms)
  Timeout:           1
------------------------------------------------------------
  Function hoo26
------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 12):
Let x = 1 + r.
Let x_1 = r * x.
Let x_2 = x_1 / 2.
Let x_3 = r + x_2.
Let x_4 = a / 2.
Let x_5 = -x_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(r) /\ is_sint32(x_4) /\ is_sint32(x) /\
      is_sint32(x_4 - x_2) /\ is_sint32(x_4 - r - x_2).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Pre-condition *)
  Have: 0 < a.
  (* Invariant *)
  Have: (2 * x_4) = a.
  (* Invariant *)
  Have: x_2 = ((r * (r - 1)) / 2).
  (* Invariant *)
  Have: x_3 <= x_4.
  (* Invariant *)
  Have: (r * r) <= a.
  (* Invariant *)
  Have: x_1 = (2 * x_2).
  (* Invariant *)
  Have: x_2 <= x_4.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: x_2 <= a.
  (* Then *)
  Have: x_3 < x_4.
}
Prove: r = 0.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (36100)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (29ms) (503)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 13):
Let x = a / 2.
Assume {
  Type: is_sint32(a) /\ is_sint32(x).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Pre-condition *)
  Have: 0 < a.
  (* Invariant *)
  Have: (2 * x) = a.
  (* Then *)
  Have: 2 <= a.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 14):
Let x = 1 + r.
Let x_1 = (x * (2 + r)) / 2.
Let x_2 = r * x.
Let x_3 = x_2 / 2.
Let x_4 = a / 2.
Let x_5 = -x_1.
Assume {
  Type: is_sint32(a) /\ is_sint32(r) /\ is_sint32(x_4) /\ is_sint32(x) /\
      is_sint32(x_4 - x_1) /\ is_sint32(r + x_4 - x_1).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Pre-condition *)
  Have: 0 < a.
  (* Invariant *)
  Have: (2 * x_4) = a.
  (* Invariant *)
  Have: x_1 = (r + ((r * (r - 1)) / 2)).
  (* Invariant *)
  Have: x_1 = (r + x_3).
  (* Invariant *)
  Have: x_1 <= x_4.
  (* Invariant *)
  Have: (r * r) <= a.
  (* Invariant *)
  Have: ((2 * r) + x_2) = (2 * x_1).
  (* Invariant *)
  Have: x_1 <= (r + x_4).
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: x_3 <= a.
  (* Then *)
  Have: x_1 < x_4.
  (* Invariant *)
  Have: x_1 = x_3.
}
Prove: (r + x_1) < x_4.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (35096)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (7ms) (39)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 15):
Let x = 1 + r.
Let x_1 = (x * (2 + r)) / 2.
Let x_2 = a / 2.
Let x_3 = r * x.
Let x_4 = x_3 / 2.
Let x_5 = -x_1.
Assume {
  Type: is_sint32(a) /\ is_sint32(r) /\ is_sint32(x_2) /\ is_sint32(x) /\
      is_sint32(x_2 - x_1) /\ is_sint32(r + x_2 - x_1).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Pre-condition *)
  Have: 0 < a.
  (* Invariant *)
  Have: (2 * x_2) = a.
  (* Invariant *)
  Have: x_1 = (r + ((r * (r - 1)) / 2)).
  (* Invariant *)
  Have: x_1 = (r + x_4).
  (* Invariant *)
  Have: x_1 <= x_2.
  (* Invariant *)
  Have: (r * r) <= a.
  (* Invariant *)
  Have: ((2 * r) + x_3) = (2 * x_1).
  (* Invariant *)
  Have: x_1 <= (r + x_2).
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: x_4 <= a.
  (* Then *)
  Have: x_1 < x_2.
  (* Invariant *)
  Have: x_1 = x_4.
  (* Invariant *)
  Have: (r + x_1) < x_2.
}
Prove: (x * x) <= a.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (35630)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (39)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 16):
Let x = 1 + r.
Let x_1 = x * (2 + r).
Let x_2 = x_1 / 2.
Let x_3 = a / 2.
Let x_4 = r * x.
Let x_5 = x_4 / 2.
Let x_6 = 2 * x_2.
Let x_7 = -x_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(r) /\ is_sint32(x_3) /\ is_sint32(x) /\
      is_sint32(x_3 - x_2) /\ is_sint32(r + x_3 - x_2).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Pre-condition *)
  Have: 0 < a.
  (* Invariant *)
  Have: (2 * x_3) = a.
  (* Invariant *)
  Have: x_2 = (r + ((r * (r - 1)) / 2)).
  (* Invariant *)
  Have: x_2 = (r + x_5).
  (* Invariant *)
  Have: x_2 <= x_3.
  (* Invariant *)
  Have: (r * r) <= a.
  (* Invariant *)
  Have: ((2 * r) + x_4) = x_6.
  (* Invariant *)
  Have: x_2 <= (r + x_3).
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: x_5 <= a.
  (* Then *)
  Have: x_2 < x_3.
  (* Invariant *)
  Have: x_2 = x_5.
  (* Invariant *)
  Have: (r + x_2) < x_3.
  (* Invariant *)
  Have: (x * x) <= a.
}
Prove: x_1 = x_6.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (38767)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (15ms) (410)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 16):
Let x = a / 2.
Assume {
  Type: is_sint32(a) /\ is_sint32(x).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Pre-condition *)
  Have: 0 < a.
}
Prove: (2 * x) = a.
Prover Z3 4.8.12 returns Valid (Qed:1ms) (10ms) (30658)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (4ms) (93)

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 19):
Let x_2 = -x.
Let x_3 = 1 + x_1 - x.
Let x_4 = 2 * x.
Let x_5 = x_3 * (2 + x_1 - x).
Let x_6 = x_4 + x_5.
Let x_7 = x_6 / 2.
Let x_8 = x_1 - x.
Let x_9 = x_8 * x_3.
Let x_10 = x_9 / 2.
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_8) /\ is_sint32(x_3) /\
      is_sint32(x_6) /\ is_sint32(x_7).
  (* Pre-condition *)
  Have: (x_6 % 2) = 0.
  (* Pre-condition *)
  Have: 0 < x_6.
  (* Invariant *)
  Have: x_6 = (2 * x_7).
  (* Invariant *)
  Have: x_7 = (x_1 + ((x_8 * (x_1 - 1 - x)) / 2)).
  (* Invariant *)
  Have: x_7 = (x_1 + x_10).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: (x_8 * x_8) <= x_6.
  (* Invariant *)
  Have: ((2 * x_1) + x_9) = x_6.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: x <= x_1.
  (* Invariant *)
  Have: x_10 <= x_6.
  (* Then *)
  Have: 0 < x.
  (* Invariant *)
  Have: x_7 = (x + x_10).
  (* Invariant *)
  Have: x_7 = (x + (x_5 / 2)).
  (* Invariant *)
  Have: x_1 < x_4.
  (* Invariant *)
  Have: (x_3 * x_3) <= x_6.
}
Prove: x <= (1 + x_1).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (10325)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (6ms) (34)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 20):
Let x_2 = -x_1.
Let x_3 = 1 + x - x_1.
Let x_4 = 2 * x_1.
Let x_5 = x_3 * (2 + x - x_1).
Let x_6 = x_4 + x_5.
Let x_7 = x_6 / 2.
Let x_8 = x_5 / 2.
Let x_9 = x - x_1.
Let x_10 = x_9 * x_3.
Let x_11 = x_10 / 2.
Assume {
  Type: is_sint32(x_1) /\ is_sint32(x) /\ is_sint32(x_9) /\ is_sint32(x_3) /\
      is_sint32(x_6) /\ is_sint32(x_7).
  (* Pre-condition *)
  Have: (x_6 % 2) = 0.
  (* Pre-condition *)
  Have: 0 < x_6.
  (* Invariant *)
  Have: x_6 = (2 * x_7).
  (* Invariant *)
  Have: x_7 = (x + ((x_9 * (x - 1 - x_1)) / 2)).
  (* Invariant *)
  Have: x_7 = (x + x_11).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: (x_9 * x_9) <= x_6.
  (* Invariant *)
  Have: ((2 * x) + x_10) = x_6.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: x_11 <= x_6.
  (* Then *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: x_7 = (x_1 + x_11).
  (* Invariant *)
  Have: x_7 = (x_1 + x_8).
  (* Invariant *)
  Have: x < x_4.
  (* Invariant *)
  Have: (x_3 * x_3) <= x_6.
  (* Invariant *)
  Have: x_1 <= (1 + x).
}
Prove: x_8 <= x_6.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (10359)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (5ms) (37)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assertion (file out/26_0001/26_merged.c, line 29):
Let x = a / 2.
Let x_1 = 1 + r.
Let x_2 = r * x_1.
Let x_3 = x_2 / 2.
Let x_4 = r + x_3.
Assume {
  Type: is_sint32(a) /\ is_sint32(r) /\ is_sint32(x) /\ is_sint32(x - x_3).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Pre-condition *)
  Have: 0 < a.
  (* Invariant *)
  Have: (2 * x) = a.
  (* Invariant *)
  Have: x_3 = ((r * (r - 1)) / 2).
  (* Invariant *)
  Have: x_4 <= x.
  (* Invariant *)
  Have: (r * r) <= a.
  (* Invariant *)
  Have: x_2 = (2 * x_3).
  (* Invariant *)
  Have: x_3 <= x.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: x_3 <= a.
  (* Else *)
  Have: x <= x_4.
}
Prove: a <= (x_1 * x_1).
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (35923)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (27ms) (512)

------------------------------------------------------------

Goal Loop assigns (file out/26_0001/26_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/26_0001/26_merged.c:5: Warning: 
  No 'assigns' specification for function 'hoo26'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/24_0004/24_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 28 goals scheduled
[wp] [Timeout] typed_hoo24_loop_invariant_preserved (Qed 5ms) (Z3)
[wp] [Timeout] typed_hoo24_loop_invariant_4_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_hoo24_loop_invariant_6_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_hoo24_loop_invariant_10_established (Qed 2ms) (Z3)
[wp] Proved goals:   24 / 28
  Qed:              15
  Alt-Ergo 2.5.4:    4 (4ms-28ms)
  Z3 4.8.12:         5 (10ms-690ms)
  Timeout:           4
------------------------------------------------------------
  Function hoo24
------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0004/24_merged.c, line 11):
Let x = -n.
Let x_1 = prev_guess_0 * prev_guess_0.
Let x_2 = prev_guess_1 * prev_guess_1.
Let x_3 = n / 2.
Let x_4 = x_3 * x_3.
Assume {
  Type: is_sint32(n) /\ is_sint32(prev_guess_0) /\ is_sint32(prev_guess_1) /\
      is_sint32(x_3).
  (* Goal *)
  When: ((prev_guess_0 + (n / prev_guess_0)) / 2) = prev_guess_0.
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_3 <= n.
  (* Invariant *)
  Have: x_4 <= n.
  (* Invariant *)
  Have: x_3 != 0.
  (* Invariant *)
  Have: 0 <= (n * (x_4 - n)).
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: prev_guess_1 <= x_3.
  (* Invariant *)
  Have: x_2 <= n.
  (* Invariant *)
  Have: prev_guess_1 != prev_guess_0.
  (* Invariant *)
  Have: prev_guess_0 <= n.
  (* Invariant *)
  Have: x_1 <= n.
  (* Invariant *)
  Have: prev_guess_1 <= prev_guess_0.
  (* Invariant *)
  Have: ((x_1 - n) * (x_2 - n)) <= 0.
  (* Invariant *)
  Have: 0 <= prev_guess_1.
  (* Invariant *)
  Have: 0 <= prev_guess_0.
  (* Invariant *)
  Have: 0 < prev_guess_0.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0004/24_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0004/24_merged.c, line 12):
Let x = (prev_guess_0 + (n / prev_guess_0)) / 2.
Let x_1 = -n.
Let x_2 = prev_guess_0 * prev_guess_0.
Let x_3 = prev_guess_1 * prev_guess_1.
Let x_4 = n / 2.
Let x_5 = x_4 * x_4.
Assume {
  Type: is_sint32(n) /\ is_sint32(prev_guess_0) /\ is_sint32(prev_guess_1) /\
      is_sint32(x_4) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_4 <= n.
  (* Invariant *)
  Have: x_5 <= n.
  (* Invariant *)
  Have: x_4 != 0.
  (* Invariant *)
  Have: 0 <= (n * (x_5 - n)).
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: prev_guess_1 <= x_4.
  (* Invariant *)
  Have: x_3 <= n.
  (* Invariant *)
  Have: prev_guess_1 != prev_guess_0.
  (* Invariant *)
  Have: prev_guess_0 <= n.
  (* Invariant *)
  Have: x_2 <= n.
  (* Invariant *)
  Have: prev_guess_1 <= prev_guess_0.
  (* Invariant *)
  Have: ((x_2 - n) * (x_3 - n)) <= 0.
  (* Invariant *)
  Have: 0 <= prev_guess_1.
  (* Invariant *)
  Have: 0 <= prev_guess_0.
  (* Invariant *)
  Have: 0 < prev_guess_0.
  (* Invariant *)
  Have: x != prev_guess_0.
}
Prove: prev_guess_0 <= x_4.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (690ms) (1791562)

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0004/24_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0004/24_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0004/24_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0004/24_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0004/24_merged.c, line 14):
Let x = n / 2.
Assume { Type: is_sint32(n) /\ is_sint32(x). (* Pre-condition *) Have: 0 < n.
}
Prove: x != 0.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0004/24_merged.c, line 15):
Let x = (guess_0 + (n / guess_0)) / 2.
Let x_1 = n / 2.
Let x_2 = -n.
Let x_3 = guess_0 * guess_0.
Let x_4 = prev_guess_0 * prev_guess_0.
Let x_5 = x_1 * x_1.
Assume {
  Type: is_sint32(guess_0) /\ is_sint32(n) /\ is_sint32(prev_guess_0) /\
      is_sint32(x_1) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_1 <= n.
  (* Invariant *)
  Have: x_5 <= n.
  (* Invariant *)
  Have: x_1 != 0.
  (* Invariant *)
  Have: 0 <= (n * (x_5 - n)).
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: prev_guess_0 <= x_1.
  (* Invariant *)
  Have: x_4 <= n.
  (* Invariant *)
  Have: prev_guess_0 != guess_0.
  (* Invariant *)
  Have: guess_0 <= n.
  (* Invariant *)
  Have: x_3 <= n.
  (* Invariant *)
  Have: prev_guess_0 <= guess_0.
  (* Invariant *)
  Have: ((x_3 - n) * (x_4 - n)) <= 0.
  (* Invariant *)
  Have: 0 <= prev_guess_0.
  (* Invariant *)
  Have: 0 <= guess_0.
  (* Invariant *)
  Have: 0 < guess_0.
  (* Invariant *)
  Have: guess_0 <= x_1.
  (* Invariant *)
  Have: x != guess_0.
}
Prove: x <= n.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (36073)

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0004/24_merged.c, line 15):
Let x = n / 2.
Assume {
  Type: is_sint32(n) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x != 0.
}
Prove: x <= n.
Prover Z3 4.8.12 returns Valid (Qed:1ms) (10ms) (29899)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (4ms) (58)

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0004/24_merged.c, line 16):
Let x = (guess_0 + (n / guess_0)) / 2.
Let x_1 = n / 2.
Let x_2 = -n.
Let x_3 = guess_0 * guess_0.
Let x_4 = prev_guess_0 * prev_guess_0.
Let x_5 = x_1 * x_1.
Assume {
  Type: is_sint32(guess_0) /\ is_sint32(n) /\ is_sint32(prev_guess_0) /\
      is_sint32(x_1) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_1 <= n.
  (* Invariant *)
  Have: x_5 <= n.
  (* Invariant *)
  Have: x_1 != 0.
  (* Invariant *)
  Have: 0 <= (n * (x_5 - n)).
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: prev_guess_0 <= x_1.
  (* Invariant *)
  Have: x_4 <= n.
  (* Invariant *)
  Have: prev_guess_0 != guess_0.
  (* Invariant *)
  Have: guess_0 <= n.
  (* Invariant *)
  Have: x_3 <= n.
  (* Invariant *)
  Have: prev_guess_0 <= guess_0.
  (* Invariant *)
  Have: ((x_3 - n) * (x_4 - n)) <= 0.
  (* Invariant *)
  Have: 0 <= prev_guess_0.
  (* Invariant *)
  Have: 0 <= guess_0.
  (* Invariant *)
  Have: 0 < guess_0.
  (* Invariant *)
  Have: guess_0 <= x_1.
  (* Invariant *)
  Have: x != guess_0.
  (* Invariant *)
  Have: x <= n.
}
Prove: (x * x) <= n.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (290ms) (646432)

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0004/24_merged.c, line 16):
Let x = n / 2.
Assume {
  Type: is_sint32(n) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x != 0.
  (* Invariant *)
  Have: x <= n.
}
Prove: (x * x) <= n.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0004/24_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0004/24_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.97ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0004/24_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0004/24_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0004/24_merged.c, line 19):
Let x = (prev_guess_0 + (n / prev_guess_0)) / 2.
Let x_1 = n / 2.
Let x_2 = -n.
Let x_3 = prev_guess_0 * prev_guess_0.
Let x_4 = prev_guess_1 * prev_guess_1.
Let x_5 = x_1 * x_1.
Assume {
  Type: is_sint32(n) /\ is_sint32(prev_guess_0) /\ is_sint32(prev_guess_1) /\
      is_sint32(x_1) /\ is_sint32(x).
  (* Goal *)
  When: x != prev_guess_0.
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_1 <= n.
  (* Invariant *)
  Have: x_5 <= n.
  (* Invariant *)
  Have: x_1 != 0.
  (* Invariant *)
  Have: 0 <= (n * (x_5 - n)).
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: prev_guess_1 <= x_1.
  (* Invariant *)
  Have: x_4 <= n.
  (* Invariant *)
  Have: prev_guess_1 != prev_guess_0.
  (* Invariant *)
  Have: prev_guess_0 <= n.
  (* Invariant *)
  Have: x_3 <= n.
  (* Invariant *)
  Have: prev_guess_1 <= prev_guess_0.
  (* Invariant *)
  Have: ((x_3 - n) * (x_4 - n)) <= 0.
  (* Invariant *)
  Have: 0 <= prev_guess_1.
  (* Invariant *)
  Have: 0 <= prev_guess_0.
  (* Invariant *)
  Have: 0 < prev_guess_0.
  (* Invariant *)
  Have: prev_guess_0 <= x_1.
  (* Invariant *)
  Have: x <= n.
  (* Invariant *)
  Have: (x * x) <= n.
}
Prove: prev_guess_0 <= x.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (510ms) (997726)

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0004/24_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0004/24_merged.c, line 20):
Let x = (prev_guess_0 + (n / prev_guess_0)) / 2.
Let x_1 = x * x.
Let x_2 = n / 2.
Let x_3 = -n.
Let x_4 = prev_guess_0 * prev_guess_0.
Let x_5 = x_4 - n.
Let x_6 = prev_guess_1 * prev_guess_1.
Let x_7 = x_2 * x_2.
Assume {
  Type: is_sint32(n) /\ is_sint32(prev_guess_0) /\ is_sint32(prev_guess_1) /\
      is_sint32(x_2) /\ is_sint32(x).
  (* Goal *)
  When: x != prev_guess_0.
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_2 <= n.
  (* Invariant *)
  Have: x_7 <= n.
  (* Invariant *)
  Have: x_2 != 0.
  (* Invariant *)
  Have: 0 <= (n * (x_7 - n)).
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: prev_guess_1 <= x_2.
  (* Invariant *)
  Have: x_6 <= n.
  (* Invariant *)
  Have: prev_guess_1 != prev_guess_0.
  (* Invariant *)
  Have: prev_guess_0 <= n.
  (* Invariant *)
  Have: x_4 <= n.
  (* Invariant *)
  Have: prev_guess_1 <= prev_guess_0.
  (* Invariant *)
  Have: (x_5 * (x_6 - n)) <= 0.
  (* Invariant *)
  Have: 0 <= prev_guess_1.
  (* Invariant *)
  Have: 0 <= prev_guess_0.
  (* Invariant *)
  Have: 0 < prev_guess_0.
  (* Invariant *)
  Have: prev_guess_0 <= x_2.
  (* Invariant *)
  Have: x <= n.
  (* Invariant *)
  Have: x_1 <= n.
  (* Invariant *)
  Have: prev_guess_0 <= x.
}
Prove: (x_5 * (x_1 - n)) <= 0.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (310ms) (448941)

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0004/24_merged.c, line 20):
Let x = n / 2.
Let x_1 = x * x.
Assume {
  Type: is_sint32(n) /\ is_sint32(x).
  (* Goal *)
  When: x != 0.
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x <= n.
  (* Invariant *)
  Have: x_1 <= n.
}
Prove: 0 <= (n * (x_1 - n)).
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0004/24_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0004/24_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0004/24_merged.c, line 22):
Let x = -n.
Let x_1 = guess_0 * guess_0.
Let x_2 = x_1 - n.
Let x_3 = guess_0 + (n / guess_0).
Let x_4 = x_3 / 2.
Let x_5 = x_4 * x_4.
Let x_6 = n / 2.
Let x_7 = prev_guess_0 * prev_guess_0.
Let x_8 = x_6 * x_6.
Assume {
  Type: is_sint32(guess_0) /\ is_sint32(n) /\ is_sint32(prev_guess_0) /\
      is_sint32(x_6) /\ is_sint32(x_4).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_6 <= n.
  (* Invariant *)
  Have: x_8 <= n.
  (* Invariant *)
  Have: x_6 != 0.
  (* Invariant *)
  Have: 0 <= (n * (x_8 - n)).
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: prev_guess_0 <= x_6.
  (* Invariant *)
  Have: x_7 <= n.
  (* Invariant *)
  Have: prev_guess_0 != guess_0.
  (* Invariant *)
  Have: guess_0 <= n.
  (* Invariant *)
  Have: x_1 <= n.
  (* Invariant *)
  Have: prev_guess_0 <= guess_0.
  (* Invariant *)
  Have: (x_2 * (x_7 - n)) <= 0.
  (* Invariant *)
  Have: 0 <= prev_guess_0.
  (* Invariant *)
  Have: 0 <= guess_0.
  (* Invariant *)
  Have: 0 < guess_0.
  (* Invariant *)
  Have: guess_0 <= x_6.
  (* Invariant *)
  Have: x_4 != guess_0.
  (* Invariant *)
  Have: x_4 <= n.
  (* Invariant *)
  Have: x_5 <= n.
  (* Invariant *)
  Have: guess_0 <= x_4.
  (* Invariant *)
  Have: (x_2 * (x_5 - n)) <= 0.
}
Prove: (-1) <= x_3.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (35794)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (28ms) (651)

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0004/24_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/24_0004/24_merged.c, line 23):
Let x = guess_0 + (n / guess_0).
Let x_1 = -n.
Let x_2 = guess_0 * guess_0.
Let x_3 = x_2 - n.
Let x_4 = x / 2.
Let x_5 = x_4 * x_4.
Let x_6 = n / 2.
Let x_7 = prev_guess_0 * prev_guess_0.
Let x_8 = x_6 * x_6.
Assume {
  Type: is_sint32(guess_0) /\ is_sint32(n) /\ is_sint32(prev_guess_0) /\
      is_sint32(x_6) /\ is_sint32(x_4).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_6 <= n.
  (* Invariant *)
  Have: x_8 <= n.
  (* Invariant *)
  Have: x_6 != 0.
  (* Invariant *)
  Have: 0 <= (n * (x_8 - n)).
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: prev_guess_0 <= x_6.
  (* Invariant *)
  Have: x_7 <= n.
  (* Invariant *)
  Have: prev_guess_0 != guess_0.
  (* Invariant *)
  Have: guess_0 <= n.
  (* Invariant *)
  Have: x_2 <= n.
  (* Invariant *)
  Have: prev_guess_0 <= guess_0.
  (* Invariant *)
  Have: (x_3 * (x_7 - n)) <= 0.
  (* Invariant *)
  Have: 0 <= prev_guess_0.
  (* Invariant *)
  Have: 0 <= guess_0.
  (* Invariant *)
  Have: 0 < guess_0.
  (* Invariant *)
  Have: guess_0 <= x_6.
  (* Invariant *)
  Have: x_4 != guess_0.
  (* Invariant *)
  Have: x_4 <= n.
  (* Invariant *)
  Have: x_5 <= n.
  (* Invariant *)
  Have: guess_0 <= x_4.
  (* Invariant *)
  Have: (x_3 * (x_5 - n)) <= 0.
  (* Invariant *)
  Have: (-1) <= x.
}
Prove: 2 <= x.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (37186)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (27ms) (711)

------------------------------------------------------------

Goal Establishment of Invariant (file out/24_0004/24_merged.c, line 23):
Let x = n / 2.
Let x_1 = x * x.
Assume {
  Type: is_sint32(n) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x <= n.
  (* Invariant *)
  Have: x_1 <= n.
  (* Invariant *)
  Have: x != 0.
  (* Invariant *)
  Have: 0 <= (n * (x_1 - n)).
}
Prove: 2 <= n.
Prover Z3 4.8.12 returns Valid (Qed:2ms) (30830)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (6ms) (190)

------------------------------------------------------------

Goal Assertion (file out/24_0004/24_merged.c, line 32):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/24_0004/24_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/24_0004/24_merged.c:4: Warning: 
  No 'assigns' specification for function 'hoo24'.
  Callers assumptions might be imprecise.

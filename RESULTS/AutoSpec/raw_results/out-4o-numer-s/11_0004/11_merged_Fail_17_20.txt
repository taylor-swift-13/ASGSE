[kernel] Parsing out/11_0004/11_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 20 goals scheduled
[wp] [Timeout] typed_hoo11_loop_invariant_preserved (Qed 5ms) (Z3)
[wp] [Timeout] typed_hoo11_loop_invariant_8_established (Z3)
[wp] [Timeout] typed_hoo11_loop_invariant_9_established (Z3)
[wp] Proved goals:   17 / 20
  Qed:              13
  Alt-Ergo 2.5.4:    4 (23ms-32ms)
  Timeout:           3
------------------------------------------------------------
  Function hoo11
------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0004/11_merged.c, line 10):
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(10 + x).
  (* Invariant *)
  Have: (-2) <= y.
  (* Invariant *)
  Have: (y % 2) = 0.
  (* Invariant *)
  Have: x <= 99.
  (* Invariant *)
  Have: x <= (10 * (x / 10)).
  (* Invariant *)
  Have: x <= 90.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: (-5) <= x.
  (* Invariant *)
  Have: 0 <= (x + (5 * ((99 - x) / 5))).
  (* Invariant *)
  Have: (-95) <= x.
  (* Invariant *)
  Have: 0 <= (x + (5 * ((1 + y) / 2))).
  (* Invariant *)
  Have: (x % 2) = 0.
  (* Then *)
  Have: x <= 98.
}
Prove: x <= 89.
Prover Z3 4.8.12 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0004/11_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0004/11_merged.c, line 11):
Let x_1 = 10 + x.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_1).
  (* Invariant *)
  Have: (-2) <= y.
  (* Invariant *)
  Have: (y % 2) = 0.
  (* Invariant *)
  Have: x <= 99.
  (* Invariant *)
  Have: x <= (10 * (x / 10)).
  (* Invariant *)
  Have: x <= 90.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: (-5) <= x.
  (* Invariant *)
  Have: 0 <= (x + (5 * ((99 - x) / 5))).
  (* Invariant *)
  Have: (-95) <= x.
  (* Invariant *)
  Have: 0 <= (x + (5 * ((1 + y) / 2))).
  (* Invariant *)
  Have: (x % 2) = 0.
  (* Then *)
  Have: x <= 98.
  (* Invariant *)
  Have: x <= 89.
}
Prove: x_1 <= (10 * (x_1 / 10)).
Prover Z3 4.8.12 returns Valid (Qed:3ms) (20ms) (69514)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (23ms) (355)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0004/11_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0004/11_merged.c, line 12):
Let x_1 = 10 + x.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_1).
  (* Invariant *)
  Have: (-2) <= y.
  (* Invariant *)
  Have: (y % 2) = 0.
  (* Invariant *)
  Have: x <= 99.
  (* Invariant *)
  Have: x <= (10 * (x / 10)).
  (* Invariant *)
  Have: x <= 90.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: (-5) <= x.
  (* Invariant *)
  Have: 0 <= (x + (5 * ((99 - x) / 5))).
  (* Invariant *)
  Have: (-95) <= x.
  (* Invariant *)
  Have: 0 <= (x + (5 * ((1 + y) / 2))).
  (* Invariant *)
  Have: (x % 2) = 0.
  (* Then *)
  Have: x <= 98.
  (* Invariant *)
  Have: x <= 89.
  (* Invariant *)
  Have: x_1 <= (10 * (x_1 / 10)).
}
Prove: x <= 80.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (30ms) (69103)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (24ms) (441)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0004/11_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0004/11_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0004/11_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0004/11_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0004/11_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0004/11_merged.c, line 15):
Let x_1 = 10 + x.
Let x_2 = -x.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_1).
  (* Invariant *)
  Have: (-2) <= y.
  (* Invariant *)
  Have: (y % 2) = 0.
  (* Invariant *)
  Have: x <= 99.
  (* Invariant *)
  Have: x <= (10 * (x / 10)).
  (* Invariant *)
  Have: x <= 90.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: (-5) <= x.
  (* Invariant *)
  Have: 0 <= (x + (5 * ((99 - x) / 5))).
  (* Invariant *)
  Have: (-95) <= x.
  (* Invariant *)
  Have: 0 <= (x + (5 * ((1 + y) / 2))).
  (* Invariant *)
  Have: (x % 2) = 0.
  (* Then *)
  Have: x <= 98.
  (* Invariant *)
  Have: x <= 89.
  (* Invariant *)
  Have: x_1 <= (10 * (x_1 / 10)).
  (* Invariant *)
  Have: x <= 80.
  (* Invariant *)
  Have: (-10) <= x.
  (* Invariant *)
  Have: (-15) <= x.
}
Prove: (-10) <= (x + (5 * ((89 - x) / 5))).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (34648)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (31ms) (405)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0004/11_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0004/11_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0004/11_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0004/11_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0004/11_merged.c, line 17):
Assume { Type: is_sint32(y). }
Prove: (-2) <= y.
Prover Z3 4.8.12 returns Timeout (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0004/11_merged.c, line 18):
Let x_1 = x + (5 * ((1 + y) / 2)).
Let x_2 = -x.
Let x_3 = 10 + x.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_3).
  (* Invariant *)
  Have: (-2) <= y.
  (* Invariant *)
  Have: (y % 2) = 0.
  (* Invariant *)
  Have: x <= 99.
  (* Invariant *)
  Have: x <= (10 * (x / 10)).
  (* Invariant *)
  Have: x <= 90.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: (-5) <= x.
  (* Invariant *)
  Have: 0 <= (x + (5 * ((99 - x) / 5))).
  (* Invariant *)
  Have: (-95) <= x.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: (x % 2) = 0.
  (* Then *)
  Have: x <= 98.
  (* Invariant *)
  Have: x <= 89.
  (* Invariant *)
  Have: x_3 <= (10 * (x_3 / 10)).
  (* Invariant *)
  Have: x <= 80.
  (* Invariant *)
  Have: (-10) <= x.
  (* Invariant *)
  Have: (-15) <= x.
  (* Invariant *)
  Have: (-10) <= (x + (5 * ((89 - x) / 5))).
  (* Invariant *)
  Have: (-105) <= x.
  (* Invariant *)
  Have: (-10) <= x_1.
}
Prove: (x_3 % 2) = 0.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (48723)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (32ms) (534)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0004/11_merged.c, line 18):
Assume { Type: is_sint32(y). (* Invariant *) Have: (-2) <= y. }
Prove: (y % 2) = 0.
Prover Z3 4.8.12 returns Timeout (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (8s)

------------------------------------------------------------

Goal Assertion (file out/11_0004/11_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.84ms)

------------------------------------------------------------

Goal Loop assigns (file out/11_0004/11_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/11_0004/11_merged.c:3: Warning: 
  No 'assigns' specification for function 'hoo11'.
  Callers assumptions might be imprecise.

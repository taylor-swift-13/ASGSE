[kernel] Parsing out/34_0001/34_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 24 goals scheduled
[wp] [Timeout] typed_hoo34_loop_invariant_2_preserved (Qed 3ms) (Z3)
[wp] [Timeout] typed_hoo34_loop_invariant_4_preserved (Qed 3ms) (Z3)
[wp] Proved goals:   22 / 24
  Qed:              19
  Alt-Ergo 2.5.4:    3 (7ms-11ms-18ms)
  Timeout:           2
------------------------------------------------------------
  Function hoo34
------------------------------------------------------------

Goal Preservation of Invariant (file out/34_0001/34_merged.c, line 15):
Let x = a / 2.
Let x_1 = r - 1.
Let x_2 = 1 + r.
Assume {
  Type: is_sint32(a) /\ is_sint32(r) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x - r).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Invariant *)
  Have: (2 * x) = a.
  (* Invariant *)
  Have: 0 < a.
  (* Invariant *)
  Have: ((r * x_1) / 2) = 0.
  (* Invariant *)
  Have: r <= x.
  (* Invariant *)
  Have: (r * r) = r.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < r) -> ((i * i) < a))).
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: (x_1 * x_1) <= a.
  (* Then *)
  Have: r < x.
}
Prove: ((r * x_2) / 2) = r.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (36387)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (18ms) (385)

------------------------------------------------------------

Goal Establishment of Invariant (file out/34_0001/34_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/34_0001/34_merged.c, line 16):
Let x = a / 2.
Let x_1 = r - 1.
Let x_2 = 1 + r.
Assume {
  Type: is_sint32(a) /\ is_sint32(r) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x - r).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Invariant *)
  Have: (2 * x) = a.
  (* Invariant *)
  Have: 0 < a.
  (* Invariant *)
  Have: ((r * x_1) / 2) = 0.
  (* Invariant *)
  Have: r <= x.
  (* Invariant *)
  Have: (r * r) = r.
  (* Invariant *)
  Have: ((r * x_2) / 2) = r.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < r) -> ((i * i) < a))).
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: (x_1 * x_1) <= a.
  (* Then *)
  Have: r < x.
}
Prove: (2 * r) < x.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/34_0001/34_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/34_0001/34_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/34_0001/34_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/34_0001/34_merged.c, line 18):
Let x = 2 * r.
Let x_1 = a / 2.
Let x_2 = r - 1.
Let x_3 = 1 + r.
Assume {
  Type: is_sint32(a) /\ is_sint32(r) /\ is_sint32(x_1) /\ is_sint32(x_3) /\
      is_sint32(x_1 - r).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Invariant *)
  Have: (2 * x_1) = a.
  (* Invariant *)
  Have: 0 < a.
  (* Invariant *)
  Have: ((r * x_2) / 2) = 0.
  (* Invariant *)
  Have: r <= x_1.
  (* Invariant *)
  Have: (r * r) = r.
  (* Invariant *)
  Have: ((r * x_3) / 2) = r.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < r) -> ((i * i) < a))).
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: (x_2 * x_2) <= a.
  (* Then *)
  Have: r < x_1.
  (* Invariant *)
  Have: x < x_1.
}
Prove: (x_3 * x_3) = (1 + x).
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/34_0001/34_merged.c, line 18):
Let x = a / 2.
Assume {
  Type: is_sint32(a) /\ is_sint32(x).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Pre-condition *)
  Have: 0 < a.
}
Prove: (2 * x) = a.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (8ms) (93)

------------------------------------------------------------

Goal Preservation of Invariant (file out/34_0001/34_merged.c, line 19):
Let x_1 = 2 * x.
Let x_2 = 1 + r.
Let x_3 = x_2 * x_2.
Let x_4 = 2 * x_3.
Let x_5 = x_1 + x_4 - 2 - (4 * r).
Let x_6 = x_5 / 2.
Let x_7 = 2 * r.
Let x_8 = 4 * r.
Let x_9 = r - 1.
Let x_10 = x_1 + x_4.
Let x_11 = x + x_3.
Assume {
  Type: is_sint32(r) /\ is_sint32(x) /\ is_sint32(x_2) /\ is_sint32(x - r) /\
      is_sint32(x_5) /\ is_sint32(x_6).
  (* Pre-condition *)
  Have: (x_5 % 2) = 0.
  (* Invariant *)
  Have: x_7 < x_11.
  (* Invariant *)
  Have: (1 + x_7 + x_6) = x_11.
  (* Invariant *)
  Have: (2 + x_7) <= x_11.
  (* Invariant *)
  Have: x_6 = (x + ((r * x_9) / 2)).
  (* Invariant *)
  Have: r <= x.
  (* Invariant *)
  Have: r <= x_6.
  (* Invariant *)
  Have: x_3 = (1 + r + (r * r)).
  (* Invariant *)
  Have: x_3 = (1 + x_7).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < r) ->
      ((3 + x_8 + (i * i)) <= x_10))).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: (2 + x_8 + (x_9 * x_9)) <= x_10.
  (* Then *)
  Have: r < x.
  (* Invariant *)
  Have: (r + x_6) = (x + ((r * x_2) / 2)).
  (* Invariant *)
  Have: x_7 < x.
  (* Invariant *)
  Have: r < x_6.
}
Prove: x_3 = x_2.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (7ms) (49)

------------------------------------------------------------

Goal Establishment of Invariant (file out/34_0001/34_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/34_0001/34_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/34_0001/34_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/34_0001/34_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/34_0001/34_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/34_0001/34_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/34_0001/34_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/34_0001/34_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/34_0001/34_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/34_0001/34_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/34_0001/34_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/34_0001/34_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/34_0001/34_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assertion (file out/34_0001/34_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/34_0001/34_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/34_0001/34_merged.c:6: Warning: 
  No 'assigns' specification for function 'hoo34'.
  Callers assumptions might be imprecise.

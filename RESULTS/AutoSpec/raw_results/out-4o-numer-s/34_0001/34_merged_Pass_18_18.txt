[kernel] Parsing out/34_0001/34_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 18 goals scheduled
[wp] Proved goals:   18 / 18
  Qed:              14
  Alt-Ergo 2.5.4:    4 (19ms-26ms-37ms)
------------------------------------------------------------
  Function hoo34
------------------------------------------------------------

Goal Preservation of Invariant (file out/34_0001/34_merged.c, line 15):
Let x = r - 1.
Let x_1 = (r * x) / 2.
Let x_2 = r + x_1.
Let x_3 = a / 2.
Let x_4 = 1 + r.
Let x_5 = -x_1.
Assume {
  Type: is_sint32(a) /\ is_sint32(r) /\ is_sint32(x_3) /\ is_sint32(x_4) /\
      is_sint32(x_3 - x_1) /\ is_sint32(x_3 - r - x_1).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: 0 < a.
  (* Invariant *)
  Have: r <= x_3.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < r) -> ((i * i) < a))).
  (* Invariant *)
  Have: x_1 <= x_3.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: (x * x) <= a.
  (* Then *)
  Have: x_2 < x_3.
}
Prove: ((r * x_4) / 2) = x_2.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (45449)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (37ms) (427)

------------------------------------------------------------

Goal Establishment of Invariant (file out/34_0001/34_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/34_0001/34_merged.c, line 16):
Let x = 1 + r.
Let x_1 = (r * x) / 2.
Let x_2 = a / 2.
Let x_3 = r - 1.
Let x_4 = -x_1.
Assume {
  Type: is_sint32(a) /\ is_sint32(r) /\ is_sint32(x_2) /\ is_sint32(x) /\
      is_sint32(x_2 - x_1) /\ is_sint32(r + x_2 - x_1).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: 0 < a.
  (* Invariant *)
  Have: x_1 = (r + ((r * x_3) / 2)).
  (* Invariant *)
  Have: r <= x_2.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < r) -> ((i * i) < a))).
  (* Invariant *)
  Have: x_1 <= (r + x_2).
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: (x_3 * x_3) <= a.
  (* Then *)
  Have: x_1 < x_2.
}
Prove: r < x_2.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (48434)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (22ms) (287)

------------------------------------------------------------

Goal Establishment of Invariant (file out/34_0001/34_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/34_0001/34_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/34_0001/34_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/34_0001/34_merged.c, line 18):
Let x = a / 2.
Let x_1 = 1 + r.
Let x_2 = (r * x_1) / 2.
Let x_3 = r - 1.
Let x_4 = -x_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(r) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x - x_2) /\ is_sint32(r + x - x_2).
  (* Goal *)
  When: (0 <= i) /\ (i <= r).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: 0 < a.
  (* Invariant *)
  Have: x_2 = (r + ((r * x_3) / 2)).
  (* Invariant *)
  Have: r <= x.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < r) -> ((i_1 * i_1) < a))).
  (* Invariant *)
  Have: x_2 <= (r + x).
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: (x_3 * x_3) <= a.
  (* Then *)
  Have: x_2 < x.
  (* Invariant *)
  Have: r < x.
}
Prove: (i * i) < a.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (50ms) (128856)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (26ms) (301)

------------------------------------------------------------

Goal Establishment of Invariant (file out/34_0001/34_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/34_0001/34_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/34_0001/34_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/34_0001/34_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/34_0001/34_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/34_0001/34_merged.c, line 21):
Let x = a / 2.
Let x_1 = 1 + r.
Let x_2 = (r * x_1) / 2.
Let x_3 = r - 1.
Let x_4 = -x_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(r) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x - x_2) /\ is_sint32(r + x - x_2).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: 0 < a.
  (* Invariant *)
  Have: x_2 = (r + ((r * x_3) / 2)).
  (* Invariant *)
  Have: r <= x.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < r) -> ((i * i) < a))).
  (* Invariant *)
  Have: x_2 <= (r + x).
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: (x_3 * x_3) <= a.
  (* Then *)
  Have: x_2 < x.
  (* Invariant *)
  Have: r < x.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= r) -> ((i * i) < a))).
  (* Invariant *)
  Have: (-1) <= r.
}
Prove: (r * r) <= a.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (35043)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (19ms) (254)

------------------------------------------------------------

Goal Establishment of Invariant (file out/34_0001/34_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.50ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/34_0001/34_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/34_0001/34_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Assertion (file out/34_0001/34_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/34_0001/34_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/34_0001/34_merged.c:6: Warning: 
  No 'assigns' specification for function 'hoo34'.
  Callers assumptions might be imprecise.

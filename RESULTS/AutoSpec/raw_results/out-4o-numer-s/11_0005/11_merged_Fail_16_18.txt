[kernel] Parsing out/11_0005/11_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 18 goals scheduled
[wp] [Timeout] typed_hoo11_loop_invariant_4_preserved (Qed 7ms) (Z3)
[wp] [Timeout] typed_hoo11_loop_invariant_7_preserved (Qed 11ms) (Z3)
[wp] Proved goals:   16 / 18
  Qed:              11
  Alt-Ergo 2.5.4:    4 (5ms-11ms-25ms)
  Z3 4.8.12:         1 (20ms)
  Timeout:           2
------------------------------------------------------------
  Function hoo11
------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 10):
Let x_4 = -x_3.
Let x_5 = 99 - x_3.
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_3) /\
      is_sint32(y).
  (* Invariant *)
  Have: x_3 <= 99.
  (* Invariant *)
  Have: x_3 <= 98.
  (* Invariant *)
  Have: (-95) <= x_3.
  (* Invariant *)
  Have: (-30) <= x_3.
  (* Invariant *)
  Have: 0 <= (x_3 + (5 * (x_5 / 5))).
  (* Invariant *)
  Have: 0 <= (x_3 + (5 * (x_5 / 10))).
  (* Invariant *)
  Have: (0 <= (x_3 + (5 * ((103 - x_3) / 5)))) /\ (x_3 <= 49).
  (* Invariant *)
  Have: (-495) <= x_3.
  If (y % 2) = 0
  Then { Have: x_3 = x_1. Have: (10 + x_1) = x. }
  Else { Have: x_3 = x_2. Have: (5 + x) = x_2. }
}
Prove: x <= 99.
Prover Z3 4.8.12 returns Valid (Qed:11ms) (20ms) (35993)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (6ms) (42)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 11):
Let x_4 = -x_3.
Let x_5 = 99 - x_3.
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_3) /\
      is_sint32(y).
  (* Invariant *)
  Have: x_3 <= 99.
  (* Invariant *)
  Have: x_3 <= 98.
  (* Invariant *)
  Have: (-95) <= x_3.
  (* Invariant *)
  Have: (-30) <= x_3.
  (* Invariant *)
  Have: 0 <= (x_3 + (5 * (x_5 / 5))).
  (* Invariant *)
  Have: 0 <= (x_3 + (5 * (x_5 / 10))).
  (* Invariant *)
  Have: (0 <= (x_3 + (5 * ((103 - x_3) / 5)))) /\ (x_3 <= 49).
  (* Invariant *)
  Have: (-495) <= x_3.
  If (y % 2) = 0
  Then { Have: x_3 = x_1. Have: (10 + x_1) = x. }
  Else { Have: x_3 = x_2. Have: (5 + x) = x_2. }
  (* Invariant *)
  Have: x <= 99.
}
Prove: x <= 98.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (20ms) (36098)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (5ms) (51)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 12):
Let x_4 = -x_3.
Let x_5 = 99 - x_3.
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_3) /\
      is_sint32(y).
  (* Invariant *)
  Have: x_3 <= 99.
  (* Invariant *)
  Have: x_3 <= 98.
  (* Invariant *)
  Have: (-95) <= x_3.
  (* Invariant *)
  Have: (-30) <= x_3.
  (* Invariant *)
  Have: 0 <= (x_3 + (5 * (x_5 / 5))).
  (* Invariant *)
  Have: 0 <= (x_3 + (5 * (x_5 / 10))).
  (* Invariant *)
  Have: (0 <= (x_3 + (5 * ((103 - x_3) / 5)))) /\ (x_3 <= 49).
  (* Invariant *)
  Have: (-495) <= x_3.
  If (y % 2) = 0
  Then { Have: x_3 = x_1. Have: (10 + x_1) = x. }
  Else { Have: x_3 = x_2. Have: (5 + x) = x_2. }
  (* Invariant *)
  Have: x <= 99.
  (* Invariant *)
  Have: x <= 98.
}
Prove: (-95) <= x.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (20ms) (36203)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (9ms) (46)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 13):
Let x_4 = -x_3.
Let x_5 = 99 - x_3.
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_3) /\
      is_sint32(y).
  (* Invariant *)
  Have: x_3 <= 99.
  (* Invariant *)
  Have: x_3 <= 98.
  (* Invariant *)
  Have: (-95) <= x_3.
  (* Invariant *)
  Have: (-30) <= x_3.
  (* Invariant *)
  Have: 0 <= (x_3 + (5 * (x_5 / 5))).
  (* Invariant *)
  Have: 0 <= (x_3 + (5 * (x_5 / 10))).
  (* Invariant *)
  Have: (0 <= (x_3 + (5 * ((103 - x_3) / 5)))) /\ (x_3 <= 49).
  (* Invariant *)
  Have: (-495) <= x_3.
  If (y % 2) = 0
  Then { Have: x_3 = x_1. Have: (10 + x_1) = x. }
  Else { Have: x_3 = x_2. Have: (5 + x) = x_2. }
  (* Invariant *)
  Have: x <= 99.
  (* Invariant *)
  Have: x <= 98.
  (* Invariant *)
  Have: (-95) <= x.
}
Prove: (-30) <= x.
Prover Z3 4.8.12 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 14):
Let x_4 = -x_3.
Let x_5 = 99 - x_3.
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_3) /\
      is_sint32(y).
  (* Invariant *)
  Have: x_3 <= 99.
  (* Invariant *)
  Have: x_3 <= 98.
  (* Invariant *)
  Have: (-95) <= x_3.
  (* Invariant *)
  Have: (-30) <= x_3.
  (* Invariant *)
  Have: 0 <= (x_3 + (5 * (x_5 / 5))).
  (* Invariant *)
  Have: 0 <= (x_3 + (5 * (x_5 / 10))).
  (* Invariant *)
  Have: (0 <= (x_3 + (5 * ((103 - x_3) / 5)))) /\ (x_3 <= 49).
  (* Invariant *)
  Have: (-495) <= x_3.
  If (y % 2) = 0
  Then { Have: x_3 = x_1. Have: (10 + x_1) = x. }
  Else { Have: x_3 = x_2. Have: (5 + x) = x_2. }
  (* Invariant *)
  Have: x <= 99.
  (* Invariant *)
  Have: x <= 98.
  (* Invariant *)
  Have: (-95) <= x.
  (* Invariant *)
  Have: (-30) <= x.
}
Prove: 0 <= (x + (5 * ((99 - x) / 5))).
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (36570)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (25ms) (304)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 15):
Let x_4 = 99 - x.
Let x_5 = -x_3.
Let x_6 = 99 - x_3.
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_3) /\
      is_sint32(y).
  (* Invariant *)
  Have: x_3 <= 99.
  (* Invariant *)
  Have: x_3 <= 98.
  (* Invariant *)
  Have: (-95) <= x_3.
  (* Invariant *)
  Have: (-30) <= x_3.
  (* Invariant *)
  Have: 0 <= (x_3 + (5 * (x_6 / 5))).
  (* Invariant *)
  Have: 0 <= (x_3 + (5 * (x_6 / 10))).
  (* Invariant *)
  Have: (0 <= (x_3 + (5 * ((103 - x_3) / 5)))) /\ (x_3 <= 49).
  (* Invariant *)
  Have: (-495) <= x_3.
  If (y % 2) = 0
  Then { Have: x_3 = x_1. Have: (10 + x_1) = x. }
  Else { Have: x_3 = x_2. Have: (5 + x) = x_2. }
  (* Invariant *)
  Have: x <= 99.
  (* Invariant *)
  Have: x <= 98.
  (* Invariant *)
  Have: (-95) <= x.
  (* Invariant *)
  Have: (-30) <= x.
  (* Invariant *)
  Have: 0 <= (x + (5 * (x_4 / 5))).
}
Prove: 0 <= (x + (5 * (x_4 / 10))).
Prover Z3 4.8.12 returns Valid (Qed:13ms) (20ms) (37641)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 16):
Let x_4 = -x.
Let x_5 = 99 - x.
Let x_6 = -x_3.
Let x_7 = 99 - x_3.
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_3) /\
      is_sint32(y).
  (* Invariant *)
  Have: x_3 <= 99.
  (* Invariant *)
  Have: x_3 <= 98.
  (* Invariant *)
  Have: (-95) <= x_3.
  (* Invariant *)
  Have: (-30) <= x_3.
  (* Invariant *)
  Have: 0 <= (x_3 + (5 * (x_7 / 5))).
  (* Invariant *)
  Have: 0 <= (x_3 + (5 * (x_7 / 10))).
  (* Invariant *)
  Have: (0 <= (x_3 + (5 * ((103 - x_3) / 5)))) /\ (x_3 <= 49).
  (* Invariant *)
  Have: (-495) <= x_3.
  If (y % 2) = 0
  Then { Have: x_3 = x_1. Have: (10 + x_1) = x. }
  Else { Have: x_3 = x_2. Have: (5 + x) = x_2. }
  (* Invariant *)
  Have: x <= 99.
  (* Invariant *)
  Have: x <= 98.
  (* Invariant *)
  Have: (-95) <= x.
  (* Invariant *)
  Have: (-30) <= x.
  (* Invariant *)
  Have: 0 <= (x + (5 * (x_5 / 5))).
  (* Invariant *)
  Have: 0 <= (x + (5 * (x_5 / 10))).
}
Prove: (0 <= (x + (5 * ((103 - x) / 5)))) /\ (x <= 49).
Prover Z3 4.8.12 returns Timeout (Qed:11ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:11ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assertion (file out/11_0005/11_merged.c, line 28):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/11_0005/11_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/11_0005/11_merged.c:3: Warning: 
  No 'assigns' specification for function 'hoo11'.
  Callers assumptions might be imprecise.

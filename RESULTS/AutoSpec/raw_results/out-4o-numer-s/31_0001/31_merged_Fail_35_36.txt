[kernel] Parsing out/31_0001/31_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 36 goals scheduled
[wp] [Timeout] typed_hoo31_loop_invariant_4_preserved (Qed 8ms) (Z3)
[wp] Proved goals:   35 / 36
  Qed:              27
  Alt-Ergo 2.5.4:    5 (4ms-5ms-8ms)
  Z3 4.8.12:         3 (10ms-13ms-20ms)
  Timeout:           1
------------------------------------------------------------
  Function hoo31
------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0001/31_merged.c, line 17):
Let x = v - 1.
Let x_1 = x / 2.
Let x_2 = 2 * R.
Let x_3 = 1 + x_2.
Let x_4 = x_3 * x_3.
Let x_5 = 4 * R.
Let x_6 = R * R.
Let x_7 = 4 * x_6.
Let x_8 = v / 2.
Let x_9 = x_6 - r - x_1.
Let x_10 = r + x_1.
Let x_11 = R - 1.
Assume {
  Type: is_sint32(R) /\ is_sint32(r) /\ is_sint32(v) /\ is_sint32(2 + v) /\
      is_sint32(x_3) /\ is_sint32(x_10) /\ is_sint32(x_9).
  (* Pre-condition *)
  Have: x_10 < x_6.
  (* Pre-condition *)
  Have: (r + x_1 + (x_11 * x_11)) < x_6.
  (* Pre-condition *)
  Have: 0 <= x_10.
  (* Pre-condition *)
  Have: (x_9 % 2) = 1.
  (* Invariant *)
  Have: 0 <= R.
  (* Invariant *)
  Have: x_4 = (1 + x_5 + x_7).
  (* Invariant *)
  Have: v <= x_3.
  (* Invariant *)
  Have: (v % 2) = 1.
  (* Invariant *)
  Have: (x_1 + ((x * x) / 4)) = 0.
  (* Invariant *)
  Have: x_1 = ((x_8 - 1) * x_8).
  (* Invariant *)
  Have: 0 <= v.
  (* Invariant *)
  Have: 0 < (v + x_1).
  (* Invariant *)
  Have: v <= 2.
  (* Invariant *)
  Have: ((2 * v) + (4 * x_1) + x_4) = (2 + x_5 + (v * v) + x_7).
  (* Invariant *)
  Have: 0 < v.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: 0 < (r + v).
  (* Then *)
  Have: 0 < r.
}
Prove: v < x_2.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (36434)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (8ms) (93)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0001/31_merged.c, line 17):
Let x = R - 1.
Assume {
  Type: is_sint32(A) /\ is_sint32(R).
  (* Pre-condition *)
  Have: 0 < A.
  (* Pre-condition *)
  Have: (x * x) < A.
  (* Pre-condition *)
  Have: A <= (R * R).
  (* Pre-condition *)
  Have: (A % 2) = 1.
}
Prove: 0 <= R.
Prover Z3 4.8.12 returns Valid (Qed:0.71ms) (20ms) (30016)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:0.71ms) (4ms) (15)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0001/31_merged.c, line 18):
Let x = 2 * R.
Let x_1 = v - 1.
Let x_2 = x_1 / 2.
Let x_3 = 1 + x.
Let x_4 = x_3 * x_3.
Let x_5 = 4 * R.
Let x_6 = R * R.
Let x_7 = 4 * x_6.
Let x_8 = v / 2.
Let x_9 = x_6 - r - x_2.
Let x_10 = r + x_2.
Let x_11 = R - 1.
Let x_12 = 2 + v.
Assume {
  Type: is_sint32(R) /\ is_sint32(r) /\ is_sint32(v) /\ is_sint32(x_12) /\
      is_sint32(x_3) /\ is_sint32(x_10) /\ is_sint32(x_9).
  (* Pre-condition *)
  Have: x_10 < x_6.
  (* Pre-condition *)
  Have: (r + x_2 + (x_11 * x_11)) < x_6.
  (* Pre-condition *)
  Have: 0 <= x_10.
  (* Pre-condition *)
  Have: (x_9 % 2) = 1.
  (* Invariant *)
  Have: 0 <= R.
  (* Invariant *)
  Have: x_4 = (1 + x_5 + x_7).
  (* Invariant *)
  Have: v <= x_3.
  (* Invariant *)
  Have: (v % 2) = 1.
  (* Invariant *)
  Have: (x_2 + ((x_1 * x_1) / 4)) = 0.
  (* Invariant *)
  Have: x_2 = ((x_8 - 1) * x_8).
  (* Invariant *)
  Have: 0 <= v.
  (* Invariant *)
  Have: 0 < (v + x_2).
  (* Invariant *)
  Have: v <= 2.
  (* Invariant *)
  Have: ((2 * v) + (4 * x_2) + x_4) = (2 + x_5 + (v * v) + x_7).
  (* Invariant *)
  Have: 0 < v.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: 0 < (r + v).
  (* Then *)
  Have: 0 < r.
  (* Invariant *)
  Have: v < x.
}
Prove: (x_12 % 2) = 1.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (42694)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0001/31_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0001/31_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0001/31_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0001/31_merged.c, line 20):
Let x = 2 + v.
Let x_1 = 2 * R.
Let x_2 = v - 1.
Let x_3 = x_2 / 2.
Let x_4 = 1 + x_1.
Let x_5 = x_4 * x_4.
Let x_6 = 4 * R.
Let x_7 = R * R.
Let x_8 = 4 * x_7.
Let x_9 = v / 2.
Let x_10 = x_7 - r - x_3.
Let x_11 = r + x_3.
Let x_12 = R - 1.
Let x_13 = 1 + v.
Assume {
  Type: is_sint32(R) /\ is_sint32(r) /\ is_sint32(v) /\ is_sint32(x) /\
      is_sint32(x_4) /\ is_sint32(r - v) /\ is_sint32(x_11) /\
      is_sint32(x_10).
  (* Pre-condition *)
  Have: x_11 < x_7.
  (* Pre-condition *)
  Have: (r + x_3 + (x_12 * x_12)) < x_7.
  (* Pre-condition *)
  Have: 0 <= x_11.
  (* Pre-condition *)
  Have: (x_10 % 2) = 1.
  (* Invariant *)
  Have: 0 <= R.
  (* Invariant *)
  Have: x_5 = (1 + x_6 + x_8).
  (* Invariant *)
  Have: v <= x_4.
  (* Invariant *)
  Have: (v % 2) = 1.
  (* Invariant *)
  Have: (x_3 + ((x_2 * x_2) / 4)) = 0.
  (* Invariant *)
  Have: x_3 = ((x_9 - 1) * x_9).
  (* Invariant *)
  Have: 0 <= v.
  (* Invariant *)
  Have: 0 < (v + x_3).
  (* Invariant *)
  Have: v <= 2.
  (* Invariant *)
  Have: ((2 * v) + (4 * x_3) + x_5) = (2 + x_6 + (v * v) + x_8).
  (* Invariant *)
  Have: 0 < v.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: 0 < (r + v).
  (* Then *)
  Have: 0 < r.
  (* Invariant *)
  Have: v < x_1.
  (* Invariant *)
  Have: (x % 2) = 1.
}
Prove: (v + x_3 + ((x_13 * x_13) / 4)) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:8ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:8ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0001/31_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0001/31_merged.c, line 21):
Let x = 2 + v.
Let x_1 = 2 * R.
Let x_2 = 1 + x_1.
Let x_3 = x_2 * x_2.
Let x_4 = 4 * R.
Let x_5 = R * R.
Let x_6 = 4 * x_5.
Let x_7 = 1 + v.
Let x_8 = x_7 * x_7.
Let x_9 = x_8 / 4.
Let x_10 = v + x_9.
Let x_11 = v - 1.
Let x_12 = v / 2.
Let x_13 = v + x_5 + x_9 - r.
Let x_14 = R - 1.
Let x_15 = v + x_5 + x_9.
Let x_16 = -v.
Let x_17 = x / 2.
Assume {
  Type: is_sint32(R) /\ is_sint32(r) /\ is_sint32(v) /\ is_sint32(x) /\
      is_sint32(x_2) /\ is_sint32(r - v) /\ is_sint32(r - v - x_9) /\
      is_sint32(x_13).
  (* Pre-condition *)
  Have: r < x_15.
  (* Pre-condition *)
  Have: (r + (x_14 * x_14)) < x_15.
  (* Pre-condition *)
  Have: x_10 <= r.
  (* Pre-condition *)
  Have: (x_13 % 2) = 1.
  (* Invariant *)
  Have: 0 <= R.
  (* Invariant *)
  Have: x_3 = (1 + x_4 + x_6).
  (* Invariant *)
  Have: v <= x_2.
  (* Invariant *)
  Have: (v % 2) = 1.
  (* Invariant *)
  Have: ((x_11 * x_11) / 4) = x_10.
  (* Invariant *)
  Have: (v + ((x_12 - 1) * x_12) + x_9) = 0.
  (* Invariant *)
  Have: x_10 <= 0.
  (* Invariant *)
  Have: x_8 <= (-4).
  (* Invariant *)
  Have: (v + (x_11 / 2) + x_9) = 0.
  (* Invariant *)
  Have: 0 <= x_10.
  (* Invariant *)
  Have: x_3 = (2 + (2 * v) + x_4 + (v * v) + x_6 + (4 * x_9)).
  (* Invariant *)
  Have: 0 < v.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: 0 < (r + v).
  (* Then *)
  Have: 0 < r.
  (* Invariant *)
  Have: v < x_1.
  (* Invariant *)
  Have: (x % 2) = 1.
}
Prove: (x_9 + ((x_17 - 1) * x_17)) = 0.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (2906)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (4ms) (138)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0001/31_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.86ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0001/31_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0001/31_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.98ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0001/31_merged.c, line 23):
Let x = 2 + v.
Let x_1 = x / 2.
Let x_2 = (x_1 - 1) * x_1.
Let x_3 = 1 + v.
Let x_4 = 2 * R.
Let x_5 = 1 + x_4.
Let x_6 = x_5 * x_5.
Let x_7 = 4 * R.
Let x_8 = R * R.
Let x_9 = 4 * x_8.
Let x_10 = v - 1.
Let x_11 = v / 2.
Let x_12 = v + x_8 - r - x_2.
Let x_13 = r + x_2.
Let x_14 = R - 1.
Let x_15 = v + x_8.
Let x_16 = -v.
Assume {
  Type: is_sint32(R) /\ is_sint32(r) /\ is_sint32(v) /\ is_sint32(x) /\
      is_sint32(x_5) /\ is_sint32(r - v) /\ is_sint32(r + x_2 - v) /\
      is_sint32(x_12).
  (* Pre-condition *)
  Have: x_13 < x_15.
  (* Pre-condition *)
  Have: (r + (x_14 * x_14) + x_2) < x_15.
  (* Pre-condition *)
  Have: v <= x_13.
  (* Pre-condition *)
  Have: (x_12 % 2) = 1.
  (* Invariant *)
  Have: 0 <= R.
  (* Invariant *)
  Have: x_6 = (1 + x_7 + x_9).
  (* Invariant *)
  Have: v <= x_5.
  (* Invariant *)
  Have: (v % 2) = 1.
  (* Invariant *)
  Have: (((x_10 * x_10) / 4) + x_2) = v.
  (* Invariant *)
  Have: x_2 = (v + ((x_11 - 1) * x_11)).
  (* Invariant *)
  Have: v <= x_2.
  (* Invariant *)
  Have: 0 < x_2.
  (* Invariant *)
  Have: x_2 = (v + (x_10 / 2)).
  (* Invariant *)
  Have: x_2 <= v.
  (* Invariant *)
  Have: (x_6 + (4 * x_2)) = (2 + (2 * v) + x_7 + (v * v) + x_9).
  (* Invariant *)
  Have: 0 < v.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: 0 < (r + v).
  (* Then *)
  Have: 0 < r.
  (* Invariant *)
  Have: v < x_4.
  (* Invariant *)
  Have: (x % 2) = 1.
  (* Invariant *)
  Have: (((x_3 * x_3) / 4) + x_2) = 0.
}
Prove: (-1) <= (v + x_2).
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (35483)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (7ms) (148)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0001/31_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.97ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0001/31_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0001/31_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.82ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0001/31_merged.c, line 25):
Let x = 2 + v.
Let x_1 = x / 2.
Let x_2 = (x_1 - 1) * x_1.
Let x_3 = 1 + v.
Let x_4 = 2 * R.
Let x_5 = 1 + x_4.
Let x_6 = x_5 * x_5.
Let x_7 = 4 * R.
Let x_8 = R * R.
Let x_9 = 4 * x_8.
Let x_10 = v - 1.
Let x_11 = v / 2.
Let x_12 = v + x_8 - r - x_2.
Let x_13 = r + x_2.
Let x_14 = R - 1.
Let x_15 = v + x_8.
Let x_16 = -v.
Assume {
  Type: is_sint32(R) /\ is_sint32(r) /\ is_sint32(v) /\ is_sint32(x) /\
      is_sint32(x_5) /\ is_sint32(r - v) /\ is_sint32(r + x_2 - v) /\
      is_sint32(x_12).
  (* Pre-condition *)
  Have: x_13 < x_15.
  (* Pre-condition *)
  Have: (r + (x_14 * x_14) + x_2) < x_15.
  (* Pre-condition *)
  Have: v <= x_13.
  (* Pre-condition *)
  Have: (x_12 % 2) = 1.
  (* Invariant *)
  Have: 0 <= R.
  (* Invariant *)
  Have: x_6 = (1 + x_7 + x_9).
  (* Invariant *)
  Have: v <= x_5.
  (* Invariant *)
  Have: (v % 2) = 1.
  (* Invariant *)
  Have: (((x_10 * x_10) / 4) + x_2) = v.
  (* Invariant *)
  Have: x_2 = (v + ((x_11 - 1) * x_11)).
  (* Invariant *)
  Have: v <= x_2.
  (* Invariant *)
  Have: 0 < x_2.
  (* Invariant *)
  Have: x_2 = (v + (x_10 / 2)).
  (* Invariant *)
  Have: x_2 <= v.
  (* Invariant *)
  Have: (x_6 + (4 * x_2)) = (2 + (2 * v) + x_7 + (v * v) + x_9).
  (* Invariant *)
  Have: 0 < v.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: 0 < (r + v).
  (* Then *)
  Have: 0 < r.
  (* Invariant *)
  Have: v < x_4.
  (* Invariant *)
  Have: (x % 2) = 1.
  (* Invariant *)
  Have: (((x_3 * x_3) / 4) + x_2) = 0.
  (* Invariant *)
  Have: (-1) <= (v + x_2).
}
Prove: (x_3 / 2) = x_2.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (20ms) (40014)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0001/31_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.94ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0001/31_merged.c, line 26):
Let x = 1 + v.
Let x_1 = x / 2.
Let x_2 = 2 + v.
Let x_3 = x_2 / 2.
Let x_4 = 2 * R.
Let x_5 = 1 + x_4.
Let x_6 = x_5 * x_5.
Let x_7 = 4 * R.
Let x_8 = R * R.
Let x_9 = 4 * x_8.
Let x_10 = v - 1.
Let x_11 = v / 2.
Let x_12 = v + x_8 - r - x_1.
Let x_13 = r + x_1.
Let x_14 = R - 1.
Let x_15 = v + x_8.
Let x_16 = -v.
Assume {
  Type: is_sint32(R) /\ is_sint32(r) /\ is_sint32(v) /\ is_sint32(x_2) /\
      is_sint32(x_5) /\ is_sint32(r - v) /\ is_sint32(r + x_1 - v) /\
      is_sint32(x_12).
  (* Pre-condition *)
  Have: x_13 < x_15.
  (* Pre-condition *)
  Have: (r + x_1 + (x_14 * x_14)) < x_15.
  (* Pre-condition *)
  Have: v <= x_13.
  (* Pre-condition *)
  Have: (x_12 % 2) = 1.
  (* Invariant *)
  Have: 0 <= R.
  (* Invariant *)
  Have: x_6 = (1 + x_7 + x_9).
  (* Invariant *)
  Have: v <= x_5.
  (* Invariant *)
  Have: (v % 2) = 1.
  (* Invariant *)
  Have: (x_1 + ((x_10 * x_10) / 4)) = v.
  (* Invariant *)
  Have: x_1 = (v + ((x_11 - 1) * x_11)).
  (* Invariant *)
  Have: v <= x_1.
  (* Invariant *)
  Have: 0 < v.
  (* Invariant *)
  Have: x_1 = (v + (x_10 / 2)).
  (* Invariant *)
  Have: x_1 <= v.
  (* Invariant *)
  Have: ((4 * x_1) + x_6) = (2 + (2 * v) + x_7 + (v * v) + x_9).
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: 0 < (r + v).
  (* Then *)
  Have: 0 < r.
  (* Invariant *)
  Have: v < x_4.
  (* Invariant *)
  Have: (x_2 % 2) = 1.
  (* Invariant *)
  Have: (x_1 + ((x * x) / 4)) = 0.
  (* Invariant *)
  Have: x_1 = ((x_3 - 1) * x_3).
  (* Invariant *)
  Have: (-2) <= v.
  (* Invariant *)
  Have: (-1) <= (v + x_1).
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (39540)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0001/31_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.89ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0001/31_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0001/31_merged.c, line 27):
Let x = R * R.
Let x_1 = x - r.
Let x_2 = R - 1.
Let x_3 = 1 + (2 * R).
Assume {
  Type: is_sint32(R) /\ is_sint32(r) /\ is_sint32(x_3) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: r < x.
  (* Pre-condition *)
  Have: (r + (x_2 * x_2)) < x.
  (* Pre-condition *)
  Have: 0 <= r.
  (* Pre-condition *)
  Have: (x_1 % 2) = 1.
  (* Invariant *)
  Have: 0 <= R.
}
Prove: (x_3 * x_3) = (1 + (4 * R) + (4 * x)).
Prover Z3 4.8.12 returns Valid (Qed:2ms) (20ms) (9607)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (5ms) (28)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0001/31_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0001/31_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0001/31_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0001/31_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0001/31_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0001/31_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0001/31_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0001/31_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0001/31_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0001/31_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0001/31_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0001/31_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Assertion (file out/31_0001/31_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/31_0001/31_merged.c, line 34):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/31_0001/31_merged.c:7: Warning: 
  No 'assigns' specification for function 'hoo31'.
  Callers assumptions might be imprecise.

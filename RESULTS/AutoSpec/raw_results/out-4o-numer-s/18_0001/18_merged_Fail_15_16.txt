[kernel] Parsing out/18_0001/18_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 16 goals scheduled
[wp] [Timeout] typed_hoo18_loop_invariant_3_established (Qed 0.51ms) (Z3)
[wp] Proved goals:   15 / 16
  Qed:              11
  Alt-Ergo 2.5.4:    3
  Z3 4.8.12:         1 (20ms)
  Timeout:           1
------------------------------------------------------------
  Function hoo18
------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0001/18_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0001/18_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0001/18_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0001/18_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0001/18_merged.c, line 14):
Let x = xa_1 + ya_0.
Let x_1 = -xa_0.
Assume {
  Type: is_sint32(xa_0) /\ is_sint32(xa_1) /\ is_sint32(ya_0) /\
      is_sint32(xa_0 - 1) /\ is_sint32(xa_1 + ya_0 - xa_0) /\
      is_sint32(1 + xa_1 + ya_0 - xa_0).
  (* Goal *)
  When: 0 <= i.
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 <= ya_0.
  (* Invariant *)
  Have: xa_0 <= xa_1.
  (* Invariant *)
  Have: xa_0 <= x.
  (* Then *)
  Have: 0 < xa_0.
}
Prove: xa_0 <= (1 + xa_1 + ya_0).
Prover Z3 4.8.12 returns Valid (Qed:2ms) (10ms) (31033)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (6ms) (15)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0001/18_merged.c, line 14):
Assume {
  Type: is_sint32(xa_0) /\ is_sint32(ya_0).
  (* Goal *)
  When: 0 <= i.
  (* Pre-condition *)
  Have: 0 < (xa_0 + ya_0).
}
Prove: 0 <= ya_0.
Prover Z3 4.8.12 returns Timeout (Qed:0.51ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.51ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0001/18_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0001/18_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0001/18_merged.c, line 16):
Let x = xa_1 + ya_0.
Let x_1 = -xa_0.
Assume {
  Type: is_sint32(xa_1) /\ is_sint32(xa_0) /\ is_sint32(ya_0) /\
      is_sint32(xa_0 - 1) /\ is_sint32(xa_1 + ya_0 - xa_0) /\
      is_sint32(1 + xa_1 + ya_0 - xa_0).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 <= ya_0.
  (* Invariant *)
  Have: xa_0 <= xa_1.
  (* Invariant *)
  Have: xa_0 <= x.
  (* Then *)
  Have: 0 < xa_0.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> (xa_0 <= (1 + xa_1 + ya_0))).
}
Prove: xa_0 <= (1 + xa_1).
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (31205)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (4ms) (15)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0001/18_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0001/18_merged.c, line 17):
Let x = 1 + xa_1 + ya_0.
Let x_1 = xa_1 + ya_0.
Let x_2 = -xa_0.
Assume {
  Type: is_sint32(xa_0) /\ is_sint32(xa_1) /\ is_sint32(ya_0) /\
      is_sint32(xa_0 - 1) /\ is_sint32(xa_1 + ya_0 - xa_0) /\
      is_sint32(1 + xa_1 + ya_0 - xa_0).
  (* Pre-condition *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: 0 <= ya_0.
  (* Invariant *)
  Have: xa_0 <= xa_1.
  (* Invariant *)
  Have: xa_0 <= x_1.
  (* Then *)
  Have: 0 < xa_0.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> (xa_0 <= x)).
  (* Invariant *)
  Have: xa_0 <= (1 + xa_1).
}
Prove: xa_0 <= x.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (31178)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (16)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0001/18_merged.c, line 17):
Assume {
  Type: is_sint32(xa_0) /\ is_sint32(ya_0).
  (* Pre-condition *)
  Have: 0 < (xa_0 + ya_0).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> (0 <= ya_0)).
}
Prove: 0 <= ya_0.
Prover Z3 4.8.12 returns Valid (Qed:1ms) (20ms) (29540)

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0001/18_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0001/18_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Assertion (file out/18_0001/18_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.96ms)

------------------------------------------------------------

Goal Loop assigns (file out/18_0001/18_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/18_0001/18_merged.c:6: Warning: 
  No 'assigns' specification for function 'hoo18'.
  Callers assumptions might be imprecise.

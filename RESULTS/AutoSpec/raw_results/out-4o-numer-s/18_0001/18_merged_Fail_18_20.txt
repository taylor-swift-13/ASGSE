[kernel] Parsing out/18_0001/18_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 20 goals scheduled
[wp] [Timeout] typed_hoo18_loop_invariant_3_established (Qed 0.52ms) (Z3)
[wp] [Timeout] typed_hoo18_loop_invariant_8_established (Qed 0.86ms) (Z3)
[wp] Proved goals:   18 / 20
  Qed:              14
  Alt-Ergo 2.5.4:    4 (4ms-5ms)
  Timeout:           2
------------------------------------------------------------
  Function hoo18
------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0001/18_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0001/18_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0001/18_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0001/18_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0001/18_merged.c, line 14):
Let x = xa_1 + ya_0.
Let x_1 = -xa_0.
Assume {
  Type: is_sint32(xa_0) /\ is_sint32(xa_1) /\ is_sint32(ya_0) /\
      is_sint32(xa_0 - 1) /\ is_sint32(xa_1 + ya_0 - xa_0) /\
      is_sint32(1 + xa_1 + ya_0 - xa_0).
  (* Goal *)
  When: 0 < xa_0.
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 <= ya_0.
  (* Invariant *)
  Have: 0 <= xa_1.
  (* Invariant *)
  Have: xa_0 <= xa_1.
  (* Invariant *)
  Have: xa_0 <= x.
}
Prove: xa_0 <= (1 + xa_1 + ya_0).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (31033)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (15)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0001/18_merged.c, line 14):
Assume {
  Type: is_sint32(xa_0) /\ is_sint32(ya_0).
  (* Goal *)
  When: 0 <= xa_0.
  (* Pre-condition *)
  Have: 0 < (xa_0 + ya_0).
}
Prove: 0 <= ya_0.
Prover Z3 4.8.12 returns Timeout (Qed:0.52ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.52ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0001/18_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0001/18_merged.c, line 15):
Assume {
  Type: is_sint32(xa_0) /\ is_sint32(ya_0).
  (* Goal *)
  When: 0 <= i.
  (* Pre-condition *)
  Have: 0 < (xa_0 + ya_0).
  (* Invariant *)
  Have: ((0 <= xa_0) -> (0 <= ya_0)).
}
Prove: 0 <= ya_0.
Prover Z3 4.8.12 returns Valid (Qed:1ms) (10ms) (29638)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (5ms) (16)

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0001/18_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0001/18_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.85ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0001/18_merged.c, line 17):
Let x = xa_1 + ya_0.
Let x_1 = -xa_0.
Assume {
  Type: is_sint32(xa_1) /\ is_sint32(xa_0) /\ is_sint32(ya_0) /\
      is_sint32(xa_0 - 1) /\ is_sint32(xa_1 + ya_0 - xa_0) /\
      is_sint32(1 + xa_1 + ya_0 - xa_0).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 <= ya_0.
  (* Invariant *)
  Have: 0 <= xa_1.
  (* Invariant *)
  Have: xa_0 <= xa_1.
  (* Invariant *)
  Have: xa_0 <= x.
  (* Invariant *)
  Have: 0 <= xa_0.
  (* Then *)
  Have: 0 < xa_0.
  (* Invariant *)
  Have: xa_0 <= (1 + xa_1 + ya_0).
}
Prove: xa_0 <= (1 + xa_1).
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (31225)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (5ms) (17)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0001/18_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0001/18_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0001/18_merged.c, line 18):
Assume {
  Type: is_sint32(xa_0) /\ is_sint32(ya_0).
  (* Pre-condition *)
  Have: 0 < (xa_0 + ya_0).
  (* Invariant *)
  Have: ((0 <= xa_0) -> (0 <= ya_0)).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> (0 <= ya_0)).
}
Prove: 0 <= ya_0.
Prover Z3 4.8.12 returns Valid (Qed:1ms) (20ms) (29650)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (4ms) (14)

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0001/18_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0001/18_merged.c, line 19):
Assume {
  Type: is_sint32(xa_0) /\ is_sint32(ya_0).
  (* Pre-condition *)
  Have: 0 < (xa_0 + ya_0).
  (* Invariant *)
  Have: 0 <= ya_0.
}
Prove: 0 <= xa_0.
Prover Z3 4.8.12 returns Timeout (Qed:0.86ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.86ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0001/18_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0001/18_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assertion (file out/18_0001/18_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/18_0001/18_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/18_0001/18_merged.c:6: Warning: 
  No 'assigns' specification for function 'hoo18'.
  Callers assumptions might be imprecise.

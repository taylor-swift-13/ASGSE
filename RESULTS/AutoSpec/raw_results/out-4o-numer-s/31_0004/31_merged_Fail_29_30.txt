[kernel] Parsing out/31_0004/31_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 30 goals scheduled
[wp] [Timeout] typed_hoo31_loop_invariant_11_preserved (Qed 6ms) (Z3)
[wp] Proved goals:   29 / 30
  Qed:              22
  Alt-Ergo 2.5.4:    6
  Z3 4.8.12:         1 (20ms)
  Timeout:           1
------------------------------------------------------------
  Function hoo31
------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 17):
Let x = R - 1.
Let x_1 = x * x.
Let x_2 = R * R.
Let x_3 = v - 1.
Let x_4 = x_3 * x_3.
Let x_5 = x_4 / 4.
Let x_6 = 1 + (2 * R).
Let x_7 = x_6 * x_6.
Let x_8 = 4 * R.
Let x_9 = 4 * x_2.
Let x_10 = x_2 - r - x_5.
Let x_11 = r + x_5.
Let x_12 = 2 + v.
Assume {
  Type: is_sint32(R) /\ is_sint32(r) /\ is_sint32(v) /\ is_sint32(x_12) /\
      is_sint32(x_6) /\ is_sint32(x_11) /\ is_sint32(x_10).
  (* Pre-condition *)
  Have: x_11 < x_2.
  (* Pre-condition *)
  Have: 0 <= x_11.
  (* Pre-condition *)
  Have: (x_10 % 2) = 1.
  (* Invariant *)
  Have: x_7 = (1 + x_8 + x_9).
  (* Invariant *)
  Have: (r + x_1 + x_5) < x_2.
  (* Invariant *)
  Have: (v % 2) = 1.
  (* Invariant *)
  Have: (-3) <= x_4.
  (* Invariant *)
  Have: ((2 * v) + x_7 + (4 * x_5)) = (2 + x_8 + (v * v) + x_9).
  (* Invariant *)
  Have: 0 < v.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: 0 < (r + v).
  (* Invariant *)
  Have: (r + x_1) < x_2.
  (* Then *)
  Have: 0 < r.
}
Prove: (x_12 % 2) = 1.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (20ms) (38879)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (29ms) (826)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 19):
Let x = 2 + v.
Let x_1 = R - 1.
Let x_2 = x_1 * x_1.
Let x_3 = R * R.
Let x_4 = v - 1.
Let x_5 = x_4 * x_4.
Let x_6 = x_5 / 4.
Let x_7 = 1 + (2 * R).
Let x_8 = x_7 * x_7.
Let x_9 = 4 * R.
Let x_10 = 4 * x_3.
Let x_11 = x_3 - r - x_6.
Let x_12 = r + x_6.
Let x_13 = 1 + v.
Assume {
  Type: is_sint32(R) /\ is_sint32(r) /\ is_sint32(v) /\ is_sint32(x) /\
      is_sint32(x_7) /\ is_sint32(r - v) /\ is_sint32(x_12) /\
      is_sint32(x_11).
  (* Pre-condition *)
  Have: x_12 < x_3.
  (* Pre-condition *)
  Have: 0 <= x_12.
  (* Pre-condition *)
  Have: (x_11 % 2) = 1.
  (* Invariant *)
  Have: x_8 = (1 + x_9 + x_10).
  (* Invariant *)
  Have: (r + x_2 + x_6) < x_3.
  (* Invariant *)
  Have: (v % 2) = 1.
  (* Invariant *)
  Have: (-3) <= x_5.
  (* Invariant *)
  Have: ((2 * v) + x_8 + (4 * x_6)) = (2 + x_9 + (v * v) + x_10).
  (* Invariant *)
  Have: 0 < v.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: 0 < (r + v).
  (* Invariant *)
  Have: (r + x_2) < x_3.
  (* Then *)
  Have: 0 < r.
  (* Invariant *)
  Have: (x % 2) = 1.
}
Prove: ((x_13 * x_13) / 4) = (v + x_6).
Prover Z3 4.8.12 returns Valid (Qed:7ms) (20ms) (39527)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1.00ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 21):
Let x = 2 + v.
Let x_1 = R - 1.
Let x_2 = 1 + v.
Let x_3 = x_2 * x_2.
Let x_4 = x_3 / 4.
Let x_5 = r + (x_1 * x_1) + x_4.
Let x_6 = R * R.
Let x_7 = v - 1.
Let x_8 = (x_7 * x_7) / 4.
Let x_9 = 1 + (2 * R).
Let x_10 = x_9 * x_9.
Let x_11 = 4 * R.
Let x_12 = 4 * x_6.
Let x_13 = v + x_6.
Let x_14 = v + x_6 - r - x_4.
Let x_15 = r + x_4.
Let x_16 = -v.
Assume {
  Type: is_sint32(R) /\ is_sint32(r) /\ is_sint32(v) /\ is_sint32(x) /\
      is_sint32(x_9) /\ is_sint32(r - v) /\ is_sint32(r + x_4 - v) /\
      is_sint32(x_14).
  (* Pre-condition *)
  Have: x_15 < x_13.
  (* Pre-condition *)
  Have: v <= x_15.
  (* Pre-condition *)
  Have: (x_14 % 2) = 1.
  (* Invariant *)
  Have: x_10 = (1 + x_11 + x_12).
  (* Invariant *)
  Have: x_5 < x_13.
  (* Invariant *)
  Have: (v % 2) = 1.
  (* Invariant *)
  Have: x_4 = (v + x_8).
  (* Invariant *)
  Have: v <= x_4.
  (* Invariant *)
  Have: (x_10 + (4 * x_4)) = (2 + (2 * v) + x_11 + (v * v) + x_12).
  (* Invariant *)
  Have: 0 < v.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: 0 < (r + v).
  (* Invariant *)
  Have: x_5 < (v + x_6 + x_8).
  (* Then *)
  Have: 0 < r.
  (* Invariant *)
  Have: (x % 2) = 1.
}
Prove: (-3) <= x_3.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (36469)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (6ms) (112)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.80ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 23):
Let x = 1 + v.
Let x_1 = x * x.
Let x_2 = 2 + v.
Let x_3 = R - 1.
Let x_4 = x_1 / 4.
Let x_5 = r + (x_3 * x_3) + x_4.
Let x_6 = R * R.
Let x_7 = v - 1.
Let x_8 = (x_7 * x_7) / 4.
Let x_9 = 4 * x_4.
Let x_10 = 1 + (2 * R).
Let x_11 = x_10 * x_10.
Let x_12 = 2 * v.
Let x_13 = 4 * R.
Let x_14 = 4 * x_6.
Let x_15 = v + x_6.
Let x_16 = v + x_6 - r - x_4.
Let x_17 = r + x_4.
Let x_18 = -v.
Assume {
  Type: is_sint32(R) /\ is_sint32(r) /\ is_sint32(v) /\ is_sint32(x_2) /\
      is_sint32(x_10) /\ is_sint32(r - v) /\ is_sint32(r + x_4 - v) /\
      is_sint32(x_16).
  (* Pre-condition *)
  Have: x_17 < x_15.
  (* Pre-condition *)
  Have: v <= x_17.
  (* Pre-condition *)
  Have: (x_16 % 2) = 1.
  (* Invariant *)
  Have: x_11 = (1 + x_13 + x_14).
  (* Invariant *)
  Have: x_5 < x_15.
  (* Invariant *)
  Have: (v % 2) = 1.
  (* Invariant *)
  Have: x_4 = (v + x_8).
  (* Invariant *)
  Have: v <= x_4.
  (* Invariant *)
  Have: (x_11 + x_9) = (2 + x_12 + x_13 + (v * v) + x_14).
  (* Invariant *)
  Have: 0 < v.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: 0 < (r + v).
  (* Invariant *)
  Have: x_5 < (v + x_6 + x_8).
  (* Then *)
  Have: 0 < r.
  (* Invariant *)
  Have: (x_2 % 2) = 1.
  (* Invariant *)
  Have: (-3) <= x_1.
}
Prove: (2 + x_12 + x_11 + x_9) = (x_13 + x_14 + (x_2 * x_2)).
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10575)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (8ms) (114)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 23):
Let x = R * R.
Let x_1 = x - r.
Let x_2 = R - 1.
Let x_3 = 1 + (2 * R).
Assume {
  Type: is_sint32(R) /\ is_sint32(r) /\ is_sint32(x_3) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: r < x.
  (* Pre-condition *)
  Have: (r + (x_2 * x_2)) < x.
  (* Pre-condition *)
  Have: 0 <= r.
  (* Pre-condition *)
  Have: (x_1 % 2) = 1.
}
Prove: (x_3 * x_3) = (1 + (4 * R) + (4 * x)).
Prover Z3 4.8.12 returns Valid (Qed:2ms) (10ms) (9575)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (27)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 27):
Let x = 2 * v.
Let x_1 = 1 + v.
Let x_2 = x_1 * x_1.
Let x_3 = x_2 / 4.
Let x_4 = 4 * x_3.
Let x_5 = 1 + (2 * R).
Let x_6 = x_5 * x_5.
Let x_7 = 4 * R.
Let x_8 = R * R.
Let x_9 = 4 * x_8.
Let x_10 = 2 + v.
Let x_11 = A + x_3.
Let x_12 = v + x_8.
Let x_13 = R - 1.
Let x_14 = x_13 * x_13.
Let x_15 = v - 1.
Let x_16 = (x_15 * x_15) / 4.
Let x_17 = -A.
Let x_18 = -x_3.
Assume {
  Type: is_sint32(A) /\ is_sint32(R) /\ is_sint32(v) /\ is_sint32(x_10) /\
      is_sint32(x_5) /\ is_sint32(x_8 - A) /\ is_sint32(x_8 - A - x_3) /\
      is_sint32(v + x_8 - A - x_3).
  (* Pre-condition *)
  Have: 0 < A.
  (* Pre-condition *)
  Have: A <= x_8.
  (* Pre-condition *)
  Have: (A % 2) = 1.
  (* Invariant *)
  Have: x_6 = (1 + x_7 + x_9).
  (* Invariant *)
  Have: x_14 < A.
  (* Invariant *)
  Have: (v % 2) = 1.
  (* Invariant *)
  Have: x_3 = (v + x_16).
  (* Invariant *)
  Have: v <= x_3.
  (* Invariant *)
  Have: (x_6 + x_4) = (2 + x + x_7 + (v * v) + x_9).
  (* Invariant *)
  Have: 0 < v.
  (* Invariant *)
  Have: x_11 <= x_12.
  (* Invariant *)
  Have: x_11 < (x + x_8).
  (* Invariant *)
  Have: x_14 < (A + x_16).
  (* Then *)
  Have: x_11 < x_12.
  (* Invariant *)
  Have: (x_10 % 2) = 1.
  (* Invariant *)
  Have: (-3) <= x_2.
  (* Invariant *)
  Have: (2 + x + x_6 + x_4) = (x_7 + x_9 + (x_10 * x_10)).
}
Prove: x_11 <= x_8.
Prover Z3 4.8.12 returns Timeout (Qed:6ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:6ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.81ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 29):
Let x = 1 + v.
Let x_1 = x * x.
Let x_2 = x_1 / 4.
Let x_3 = A + x_2.
Let x_4 = R * R.
Let x_5 = 2 * v.
Let x_6 = 4 * x_2.
Let x_7 = 1 + (2 * R).
Let x_8 = x_7 * x_7.
Let x_9 = 4 * R.
Let x_10 = 4 * x_4.
Let x_11 = 2 + v.
Let x_12 = v + x_4.
Let x_13 = R - 1.
Let x_14 = x_13 * x_13.
Let x_15 = v - 1.
Let x_16 = (x_15 * x_15) / 4.
Let x_17 = -A.
Let x_18 = -x_2.
Assume {
  Type: is_sint32(A) /\ is_sint32(R) /\ is_sint32(v) /\ is_sint32(x_11) /\
      is_sint32(x_7) /\ is_sint32(x_4 - A) /\ is_sint32(x_4 - A - x_2) /\
      is_sint32(v + x_4 - A - x_2).
  (* Pre-condition *)
  Have: 0 < A.
  (* Pre-condition *)
  Have: A <= x_4.
  (* Pre-condition *)
  Have: (A % 2) = 1.
  (* Invariant *)
  Have: x_8 = (1 + x_9 + x_10).
  (* Invariant *)
  Have: x_14 < A.
  (* Invariant *)
  Have: (v % 2) = 1.
  (* Invariant *)
  Have: x_2 = (v + x_16).
  (* Invariant *)
  Have: v <= x_2.
  (* Invariant *)
  Have: (x_8 + x_6) = (2 + x_5 + x_9 + (v * v) + x_10).
  (* Invariant *)
  Have: 0 < v.
  (* Invariant *)
  Have: x_3 <= x_12.
  (* Invariant *)
  Have: x_3 < (x_5 + x_4).
  (* Invariant *)
  Have: x_14 < (A + x_16).
  (* Then *)
  Have: x_3 < x_12.
  (* Invariant *)
  Have: (x_11 % 2) = 1.
  (* Invariant *)
  Have: (-3) <= x_1.
  (* Invariant *)
  Have: (2 + x_5 + x_8 + x_6) = (x_9 + x_10 + (x_11 * x_11)).
  (* Invariant *)
  Have: x_3 <= x_4.
}
Prove: x_3 <= (1 + v + x_4).
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (34224)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (4ms) (115)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 30):
Let x = 2 * v.
Let x_1 = 1 + v.
Let x_2 = x_1 * x_1.
Let x_3 = x_2 / 4.
Let x_4 = 4 * x_3.
Let x_5 = 1 + (2 * R).
Let x_6 = x_5 * x_5.
Let x_7 = 4 * R.
Let x_8 = R * R.
Let x_9 = 4 * x_8.
Let x_10 = 2 + v.
Let x_11 = R - 1.
Let x_12 = x_11 * x_11.
Let x_13 = r + x_12 + x_3.
Let x_14 = v - 1.
Let x_15 = (x_14 * x_14) / 4.
Let x_16 = v + x_8.
Let x_17 = v + x_8 - r - x_3.
Let x_18 = r + x_3.
Let x_19 = -v.
Assume {
  Type: is_sint32(R) /\ is_sint32(r) /\ is_sint32(v) /\ is_sint32(x_10) /\
      is_sint32(x_5) /\ is_sint32(r - v) /\ is_sint32(r + x_3 - v) /\
      is_sint32(x_17).
  (* Pre-condition *)
  Have: x_18 < x_16.
  (* Pre-condition *)
  Have: v <= x_18.
  (* Pre-condition *)
  Have: (x_17 % 2) = 1.
  (* Invariant *)
  Have: x_6 = (1 + x_7 + x_9).
  (* Invariant *)
  Have: x_13 < x_16.
  (* Invariant *)
  Have: (v % 2) = 1.
  (* Invariant *)
  Have: x_3 = (v + x_15).
  (* Invariant *)
  Have: v <= x_3.
  (* Invariant *)
  Have: (x_6 + x_4) = (2 + x + x_7 + (v * v) + x_9).
  (* Invariant *)
  Have: 0 < v.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: 0 < (r + v).
  (* Invariant *)
  Have: x_13 < (v + x_8 + x_15).
  (* Then *)
  Have: 0 < r.
  (* Invariant *)
  Have: (x_10 % 2) = 1.
  (* Invariant *)
  Have: (-3) <= x_2.
  (* Invariant *)
  Have: (2 + x + x_6 + x_4) = (x_7 + x_9 + (x_10 * x_10)).
  (* Invariant *)
  Have: v <= r.
}
Prove: (r + x_12) < x_16.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (34295)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (8ms) (138)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Assertion (file out/31_0004/31_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/31_0004/31_merged.c, line 31):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/31_0004/31_merged.c:7: Warning: 
  No 'assigns' specification for function 'hoo31'.
  Callers assumptions might be imprecise.

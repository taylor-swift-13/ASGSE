[kernel] Parsing out/31_0004/31_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 34 goals scheduled
[wp] [Timeout] typed_hoo31_loop_invariant_6_preserved (Qed 10ms) (Z3)
[wp] Proved goals:   33 / 34
  Qed:              24
  Alt-Ergo 2.5.4:    5 (3ms-11ms)
  Z3 4.8.12:         4
  Timeout:           1
------------------------------------------------------------
  Function hoo31
------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 17):
Let x = R - 1.
Let x_1 = v - 1.
Let x_2 = v * x_1.
Let x_3 = x_2 / 2.
Let x_4 = r + (x * x) + x_3.
Let x_5 = R * R.
Let x_6 = (x_1 * x_1) / 4.
Let x_7 = 1 + (2 * R).
Let x_8 = x_7 * x_7.
Let x_9 = (2 * v) + x_8 + (4 * x_3).
Let x_10 = 4 * R.
Let x_11 = 4 * x_5.
Let x_12 = v * v.
Let x_13 = x_5 - r - x_3.
Let x_14 = r + x_3.
Let x_15 = 2 + v.
Assume {
  Type: is_sint32(R) /\ is_sint32(r) /\ is_sint32(v) /\ is_sint32(x_15) /\
      is_sint32(x_7) /\ is_sint32(x_14) /\ is_sint32(x_13).
  (* Pre-condition *)
  Have: x_14 < x_5.
  (* Pre-condition *)
  Have: 0 <= x_14.
  (* Pre-condition *)
  Have: (x_13 % 2) = 1.
  (* Invariant *)
  Have: x_8 = (1 + x_10 + x_11).
  (* Invariant *)
  Have: x_4 < x_5.
  (* Invariant *)
  Have: (v % 2) = 1.
  (* Invariant *)
  Have: x_6 = x_3.
  (* Invariant *)
  Have: (-1) <= x_2.
  (* Invariant *)
  Have: x_9 = (2 + x_10 + x_12 + x_11 + (4 * (x_1 / 2))).
  (* Invariant *)
  Have: x_9 = (2 + x_10 + x_12 + x_11).
  (* Invariant *)
  Have: 0 < v.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: 0 < (r + v).
  (* Invariant *)
  Have: x_4 < (x_5 + x_6).
  (* Then *)
  Have: 0 < r.
}
Prove: (x_15 % 2) = 1.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (45314)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.79ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 19):
Let x = 2 + v.
Let x_1 = R - 1.
Let x_2 = v - 1.
Let x_3 = v * x_2.
Let x_4 = x_3 / 2.
Let x_5 = r + (x_1 * x_1) + x_4.
Let x_6 = R * R.
Let x_7 = (x_2 * x_2) / 4.
Let x_8 = 1 + (2 * R).
Let x_9 = x_8 * x_8.
Let x_10 = (2 * v) + x_9 + (4 * x_4).
Let x_11 = 4 * R.
Let x_12 = 4 * x_6.
Let x_13 = v * v.
Let x_14 = x_6 - r - x_4.
Let x_15 = r + x_4.
Let x_16 = 1 + v.
Assume {
  Type: is_sint32(R) /\ is_sint32(r) /\ is_sint32(v) /\ is_sint32(x) /\
      is_sint32(x_8) /\ is_sint32(r - v) /\ is_sint32(x_15) /\
      is_sint32(x_14).
  (* Pre-condition *)
  Have: x_15 < x_6.
  (* Pre-condition *)
  Have: 0 <= x_15.
  (* Pre-condition *)
  Have: (x_14 % 2) = 1.
  (* Invariant *)
  Have: x_9 = (1 + x_11 + x_12).
  (* Invariant *)
  Have: x_5 < x_6.
  (* Invariant *)
  Have: (v % 2) = 1.
  (* Invariant *)
  Have: x_7 = x_4.
  (* Invariant *)
  Have: (-1) <= x_3.
  (* Invariant *)
  Have: x_10 = (2 + x_11 + x_13 + x_12 + (4 * (x_2 / 2))).
  (* Invariant *)
  Have: x_10 = (2 + x_11 + x_13 + x_12).
  (* Invariant *)
  Have: 0 < v.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: 0 < (r + v).
  (* Invariant *)
  Have: x_5 < (x_6 + x_7).
  (* Then *)
  Have: 0 < r.
  (* Invariant *)
  Have: (x % 2) = 1.
}
Prove: ((x_16 * x_16) / 4) = (v + x_4).
Prover Z3 4.8.12 returns Valid (Qed:7ms) (20ms) (43412)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.92ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 21):
Let x = 2 + v.
Let x_1 = R - 1.
Let x_2 = 1 + v.
Let x_3 = x_2 * x_2.
Let x_4 = x_3 / 4.
Let x_5 = r + (x_1 * x_1) + x_4.
Let x_6 = R * R.
Let x_7 = v - 1.
Let x_8 = (x_7 * x_7) / 4.
Let x_9 = 1 + (2 * R).
Let x_10 = x_9 * x_9.
Let x_11 = x_10 + (4 * x_4).
Let x_12 = 2 * v.
Let x_13 = 4 * R.
Let x_14 = 4 * x_6.
Let x_15 = v * v.
Let x_16 = v + x_6.
Let x_17 = v + x_6 - r - x_4.
Let x_18 = r + x_4.
Let x_19 = -v.
Assume {
  Type: is_sint32(R) /\ is_sint32(r) /\ is_sint32(v) /\ is_sint32(x) /\
      is_sint32(x_9) /\ is_sint32(r - v) /\ is_sint32(r + x_4 - v) /\
      is_sint32(x_17).
  (* Pre-condition *)
  Have: x_18 < x_16.
  (* Pre-condition *)
  Have: v <= x_18.
  (* Pre-condition *)
  Have: (x_17 % 2) = 1.
  (* Invariant *)
  Have: x_10 = (1 + x_13 + x_14).
  (* Invariant *)
  Have: x_5 < x_16.
  (* Invariant *)
  Have: (v % 2) = 1.
  (* Invariant *)
  Have: x_4 = (v + x_8).
  (* Invariant *)
  Have: v <= x_4.
  (* Invariant *)
  Have: x_4 = (v + ((v * x_7) / 2)).
  (* Invariant *)
  Have: (2 + x_12 + x_13 + x_15 + x_14 + (4 * (x_7 / 2))) = x_11.
  (* Invariant *)
  Have: x_11 = (2 + x_12 + x_13 + x_15 + x_14).
  (* Invariant *)
  Have: 0 < v.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: 0 < (r + v).
  (* Invariant *)
  Have: x_5 < (v + x_6 + x_8).
  (* Then *)
  Have: 0 < r.
  (* Invariant *)
  Have: (x % 2) = 1.
}
Prove: (-3) <= x_3.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (37817)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (8ms) (133)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 22):
Let x = 1 + v.
Let x_1 = x * x.
Let x_2 = 2 + v.
Let x_3 = R - 1.
Let x_4 = x_1 / 4.
Let x_5 = r + (x_3 * x_3) + x_4.
Let x_6 = R * R.
Let x_7 = v - 1.
Let x_8 = (x_7 * x_7) / 4.
Let x_9 = 1 + (2 * R).
Let x_10 = x_9 * x_9.
Let x_11 = x_10 + (4 * x_4).
Let x_12 = 2 * v.
Let x_13 = 4 * R.
Let x_14 = 4 * x_6.
Let x_15 = v * v.
Let x_16 = v + x_6.
Let x_17 = v + x_6 - r - x_4.
Let x_18 = r + x_4.
Let x_19 = -v.
Assume {
  Type: is_sint32(R) /\ is_sint32(r) /\ is_sint32(v) /\ is_sint32(x_2) /\
      is_sint32(x_9) /\ is_sint32(r - v) /\ is_sint32(r + x_4 - v) /\
      is_sint32(x_17).
  (* Pre-condition *)
  Have: x_18 < x_16.
  (* Pre-condition *)
  Have: v <= x_18.
  (* Pre-condition *)
  Have: (x_17 % 2) = 1.
  (* Invariant *)
  Have: x_10 = (1 + x_13 + x_14).
  (* Invariant *)
  Have: x_5 < x_16.
  (* Invariant *)
  Have: (v % 2) = 1.
  (* Invariant *)
  Have: x_4 = (v + x_8).
  (* Invariant *)
  Have: v <= x_4.
  (* Invariant *)
  Have: x_4 = (v + ((v * x_7) / 2)).
  (* Invariant *)
  Have: (2 + x_12 + x_13 + x_15 + x_14 + (4 * (x_7 / 2))) = x_11.
  (* Invariant *)
  Have: x_11 = (2 + x_12 + x_13 + x_15 + x_14).
  (* Invariant *)
  Have: 0 < v.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: 0 < (r + v).
  (* Invariant *)
  Have: x_5 < (v + x_6 + x_8).
  (* Then *)
  Have: 0 < r.
  (* Invariant *)
  Have: (x_2 % 2) = 1.
  (* Invariant *)
  Have: (-3) <= x_1.
}
Prove: ((x * x_2) / 2) = x_4.
Prover Z3 4.8.12 returns Timeout (Qed:10ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:10ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.99ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.94ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 24):
Let x = 1 + v.
Let x_1 = 2 + v.
Let x_2 = x * x_1.
Let x_3 = x_2 / 2.
Let x_4 = R - 1.
Let x_5 = r + (x_4 * x_4) + x_3.
Let x_6 = R * R.
Let x_7 = v - 1.
Let x_8 = (x_7 * x_7) / 4.
Let x_9 = 4 * x_3.
Let x_10 = 1 + (2 * R).
Let x_11 = x_10 * x_10.
Let x_12 = x_11 + x_9.
Let x_13 = 2 * v.
Let x_14 = 4 * R.
Let x_15 = 4 * x_6.
Let x_16 = v * v.
Let x_17 = v + x_6.
Let x_18 = v + x_6 - r - x_3.
Let x_19 = r + x_3.
Let x_20 = -v.
Assume {
  Type: is_sint32(R) /\ is_sint32(r) /\ is_sint32(v) /\ is_sint32(x_1) /\
      is_sint32(x_10) /\ is_sint32(r - v) /\ is_sint32(r + x_3 - v) /\
      is_sint32(x_18).
  (* Pre-condition *)
  Have: x_19 < x_17.
  (* Pre-condition *)
  Have: v <= x_19.
  (* Pre-condition *)
  Have: (x_18 % 2) = 1.
  (* Invariant *)
  Have: x_11 = (1 + x_14 + x_15).
  (* Invariant *)
  Have: x_5 < x_17.
  (* Invariant *)
  Have: (v % 2) = 1.
  (* Invariant *)
  Have: x_3 = (v + x_8).
  (* Invariant *)
  Have: v <= x_3.
  (* Invariant *)
  Have: x_3 = (v + ((v * x_7) / 2)).
  (* Invariant *)
  Have: (2 + x_13 + x_14 + x_16 + x_15 + (4 * (x_7 / 2))) = x_12.
  (* Invariant *)
  Have: x_12 = (2 + x_13 + x_14 + x_16 + x_15).
  (* Invariant *)
  Have: 0 < v.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: 0 < (r + v).
  (* Invariant *)
  Have: x_5 < (v + x_6 + x_8).
  (* Then *)
  Have: 0 < r.
  (* Invariant *)
  Have: (x_1 % 2) = 1.
  (* Invariant *)
  Have: x_3 = ((x * x) / 4).
  (* Invariant *)
  Have: (-1) <= x_2.
}
Prove: (2 + x_13 + x_11 + x_9) = (x_14 + x_15 + (4 * (x / 2)) + (x_1 * x_1)).
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (46454)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 24):
Let x = R * R.
Let x_1 = x - r.
Let x_2 = R - 1.
Let x_3 = 1 + (2 * R).
Assume {
  Type: is_sint32(R) /\ is_sint32(r) /\ is_sint32(x_3) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: r < x.
  (* Pre-condition *)
  Have: (r + (x_2 * x_2)) < x.
  (* Pre-condition *)
  Have: 0 <= r.
  (* Pre-condition *)
  Have: (x_1 % 2) = 1.
}
Prove: (x_3 * x_3) = (1 + (4 * R) + (4 * x)).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (5ms) (27)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 25):
Let x = 2 * v.
Let x_1 = 1 + v.
Let x_2 = 2 + v.
Let x_3 = x_1 * x_2.
Let x_4 = x_3 / 2.
Let x_5 = 4 * x_4.
Let x_6 = 1 + (2 * R).
Let x_7 = x_6 * x_6.
Let x_8 = 2 + x + x_7 + x_5.
Let x_9 = 4 * R.
Let x_10 = R * R.
Let x_11 = 4 * x_10.
Let x_12 = x_2 * x_2.
Let x_13 = R - 1.
Let x_14 = r + (x_13 * x_13) + x_4.
Let x_15 = v - 1.
Let x_16 = (x_15 * x_15) / 4.
Let x_17 = x_7 + x_5.
Let x_18 = v * v.
Let x_19 = v + x_10.
Let x_20 = v + x_10 - r - x_4.
Let x_21 = r + x_4.
Let x_22 = -v.
Assume {
  Type: is_sint32(R) /\ is_sint32(r) /\ is_sint32(v) /\ is_sint32(x_2) /\
      is_sint32(x_6) /\ is_sint32(r - v) /\ is_sint32(r + x_4 - v) /\
      is_sint32(x_20).
  (* Pre-condition *)
  Have: x_21 < x_19.
  (* Pre-condition *)
  Have: v <= x_21.
  (* Pre-condition *)
  Have: (x_20 % 2) = 1.
  (* Invariant *)
  Have: x_7 = (1 + x_9 + x_11).
  (* Invariant *)
  Have: x_14 < x_19.
  (* Invariant *)
  Have: (v % 2) = 1.
  (* Invariant *)
  Have: x_4 = (v + x_16).
  (* Invariant *)
  Have: v <= x_4.
  (* Invariant *)
  Have: x_4 = (v + ((v * x_15) / 2)).
  (* Invariant *)
  Have: (2 + x + x_9 + x_18 + x_11 + (4 * (x_15 / 2))) = x_17.
  (* Invariant *)
  Have: x_17 = (2 + x + x_9 + x_18 + x_11).
  (* Invariant *)
  Have: 0 < v.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: 0 < (r + v).
  (* Invariant *)
  Have: x_14 < (v + x_10 + x_16).
  (* Then *)
  Have: 0 < r.
  (* Invariant *)
  Have: (x_2 % 2) = 1.
  (* Invariant *)
  Have: x_4 = ((x_1 * x_1) / 4).
  (* Invariant *)
  Have: (-1) <= x_3.
  (* Invariant *)
  Have: x_8 = (x_9 + x_11 + (4 * (x_1 / 2)) + x_12).
}
Prove: x_8 = (x_9 + x_11 + x_12).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (11ms) (131)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.94ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.87ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 29):
Let x = 2 * v.
Let x_1 = 1 + v.
Let x_2 = 2 + v.
Let x_3 = x_1 * x_2.
Let x_4 = x_3 / 2.
Let x_5 = 4 * x_4.
Let x_6 = 1 + (2 * R).
Let x_7 = x_6 * x_6.
Let x_8 = 2 + x + x_7 + x_5.
Let x_9 = 4 * R.
Let x_10 = R * R.
Let x_11 = 4 * x_10.
Let x_12 = x_2 * x_2.
Let x_13 = A + x_4.
Let x_14 = v + x_10.
Let x_15 = R - 1.
Let x_16 = x_15 * x_15.
Let x_17 = v - 1.
Let x_18 = (x_17 * x_17) / 4.
Let x_19 = x_7 + x_5.
Let x_20 = v * v.
Let x_21 = -A.
Let x_22 = -x_4.
Assume {
  Type: is_sint32(A) /\ is_sint32(R) /\ is_sint32(v) /\ is_sint32(x_2) /\
      is_sint32(x_6) /\ is_sint32(x_10 - A) /\ is_sint32(x_10 - A - x_4) /\
      is_sint32(v + x_10 - A - x_4).
  (* Pre-condition *)
  Have: 0 < A.
  (* Pre-condition *)
  Have: A <= x_10.
  (* Pre-condition *)
  Have: (A % 2) = 1.
  (* Invariant *)
  Have: x_7 = (1 + x_9 + x_11).
  (* Invariant *)
  Have: x_16 < A.
  (* Invariant *)
  Have: (v % 2) = 1.
  (* Invariant *)
  Have: x_4 = (v + x_18).
  (* Invariant *)
  Have: v <= x_4.
  (* Invariant *)
  Have: x_4 = (v + ((v * x_17) / 2)).
  (* Invariant *)
  Have: (2 + x + x_9 + x_20 + x_11 + (4 * (x_17 / 2))) = x_19.
  (* Invariant *)
  Have: x_19 = (2 + x + x_9 + x_20 + x_11).
  (* Invariant *)
  Have: 0 < v.
  (* Invariant *)
  Have: x_13 <= x_14.
  (* Invariant *)
  Have: x_13 < (x + x_10).
  (* Invariant *)
  Have: x_16 < (A + x_18).
  (* Then *)
  Have: x_13 < x_14.
  (* Invariant *)
  Have: (x_2 % 2) = 1.
  (* Invariant *)
  Have: x_4 = ((x_1 * x_1) / 4).
  (* Invariant *)
  Have: (-1) <= x_3.
  (* Invariant *)
  Have: x_8 = (x_9 + x_11 + (4 * (x_1 / 2)) + x_12).
  (* Invariant *)
  Have: x_8 = (x_9 + x_11 + x_12).
}
Prove: x_13 <= x_10.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (46684)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 31):
Let x = 1 + v.
Let x_1 = 2 + v.
Let x_2 = x * x_1.
Let x_3 = x_2 / 2.
Let x_4 = A + x_3.
Let x_5 = R * R.
Let x_6 = 2 * v.
Let x_7 = 4 * x_3.
Let x_8 = 1 + (2 * R).
Let x_9 = x_8 * x_8.
Let x_10 = 2 + x_6 + x_9 + x_7.
Let x_11 = 4 * R.
Let x_12 = 4 * x_5.
Let x_13 = x_1 * x_1.
Let x_14 = v + x_5.
Let x_15 = R - 1.
Let x_16 = x_15 * x_15.
Let x_17 = v - 1.
Let x_18 = (x_17 * x_17) / 4.
Let x_19 = x_9 + x_7.
Let x_20 = v * v.
Let x_21 = -A.
Let x_22 = -x_3.
Assume {
  Type: is_sint32(A) /\ is_sint32(R) /\ is_sint32(v) /\ is_sint32(x_1) /\
      is_sint32(x_8) /\ is_sint32(x_5 - A) /\ is_sint32(x_5 - A - x_3) /\
      is_sint32(v + x_5 - A - x_3).
  (* Pre-condition *)
  Have: 0 < A.
  (* Pre-condition *)
  Have: A <= x_5.
  (* Pre-condition *)
  Have: (A % 2) = 1.
  (* Invariant *)
  Have: x_9 = (1 + x_11 + x_12).
  (* Invariant *)
  Have: x_16 < A.
  (* Invariant *)
  Have: (v % 2) = 1.
  (* Invariant *)
  Have: x_3 = (v + x_18).
  (* Invariant *)
  Have: v <= x_3.
  (* Invariant *)
  Have: x_3 = (v + ((v * x_17) / 2)).
  (* Invariant *)
  Have: (2 + x_6 + x_11 + x_20 + x_12 + (4 * (x_17 / 2))) = x_19.
  (* Invariant *)
  Have: x_19 = (2 + x_6 + x_11 + x_20 + x_12).
  (* Invariant *)
  Have: 0 < v.
  (* Invariant *)
  Have: x_4 <= x_14.
  (* Invariant *)
  Have: x_4 < (x_6 + x_5).
  (* Invariant *)
  Have: x_16 < (A + x_18).
  (* Then *)
  Have: x_4 < x_14.
  (* Invariant *)
  Have: (x_1 % 2) = 1.
  (* Invariant *)
  Have: x_3 = ((x * x) / 4).
  (* Invariant *)
  Have: (-1) <= x_2.
  (* Invariant *)
  Have: x_10 = (x_11 + x_12 + (4 * (x / 2)) + x_13).
  (* Invariant *)
  Have: x_10 = (x_11 + x_12 + x_13).
  (* Invariant *)
  Have: x_4 <= x_5.
}
Prove: x_4 <= (1 + v + x_5).
Prover Z3 4.8.12 returns Valid (Qed:11ms) (20ms) (35581)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (8ms) (133)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (0.98ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/31_0004/31_merged.c, line 32):
Let x = 2 * v.
Let x_1 = 1 + v.
Let x_2 = 2 + v.
Let x_3 = x_1 * x_2.
Let x_4 = x_3 / 2.
Let x_5 = 4 * x_4.
Let x_6 = 1 + (2 * R).
Let x_7 = x_6 * x_6.
Let x_8 = 2 + x + x_7 + x_5.
Let x_9 = 4 * R.
Let x_10 = R * R.
Let x_11 = 4 * x_10.
Let x_12 = x_2 * x_2.
Let x_13 = (x_1 * x_1) / 4.
Let x_14 = R - 1.
Let x_15 = r + (x_14 * x_14) + x_4.
Let x_16 = v - 1.
Let x_17 = (x_16 * x_16) / 4.
Let x_18 = x_7 + x_5.
Let x_19 = v * v.
Let x_20 = v + x_10.
Let x_21 = v + x_10 - r - x_4.
Let x_22 = r + x_4.
Let x_23 = -v.
Assume {
  Type: is_sint32(R) /\ is_sint32(r) /\ is_sint32(v) /\ is_sint32(x_2) /\
      is_sint32(x_6) /\ is_sint32(r - v) /\ is_sint32(r + x_4 - v) /\
      is_sint32(x_21).
  (* Pre-condition *)
  Have: x_22 < x_20.
  (* Pre-condition *)
  Have: v <= x_22.
  (* Pre-condition *)
  Have: (x_21 % 2) = 1.
  (* Invariant *)
  Have: x_7 = (1 + x_9 + x_11).
  (* Invariant *)
  Have: x_15 < x_20.
  (* Invariant *)
  Have: (v % 2) = 1.
  (* Invariant *)
  Have: x_4 = (v + x_17).
  (* Invariant *)
  Have: v <= x_4.
  (* Invariant *)
  Have: x_4 = (v + ((v * x_16) / 2)).
  (* Invariant *)
  Have: (2 + x + x_9 + x_19 + x_11 + (4 * (x_16 / 2))) = x_18.
  (* Invariant *)
  Have: x_18 = (2 + x + x_9 + x_19 + x_11).
  (* Invariant *)
  Have: 0 < v.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: 0 < (r + v).
  (* Invariant *)
  Have: x_15 < (v + x_10 + x_17).
  (* Then *)
  Have: 0 < r.
  (* Invariant *)
  Have: (x_2 % 2) = 1.
  (* Invariant *)
  Have: x_4 = x_13.
  (* Invariant *)
  Have: (-1) <= x_3.
  (* Invariant *)
  Have: x_8 = (x_9 + x_11 + (4 * (x_1 / 2)) + x_12).
  (* Invariant *)
  Have: x_8 = (x_9 + x_11 + x_12).
  (* Invariant *)
  Have: v <= r.
}
Prove: x_15 < (v + x_10 + x_13).
Prover Z3 4.8.12 returns Valid (Qed:8ms) (20ms) (39723)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (3ms) (148)

------------------------------------------------------------

Goal Establishment of Invariant (file out/31_0004/31_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Assertion (file out/31_0004/31_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/31_0004/31_merged.c, line 33):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/31_0004/31_merged.c:7: Warning: 
  No 'assigns' specification for function 'hoo31'.
  Callers assumptions might be imprecise.

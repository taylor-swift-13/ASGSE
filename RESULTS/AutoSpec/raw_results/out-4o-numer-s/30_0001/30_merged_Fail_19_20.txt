[kernel] Parsing out/30_0001/30_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 20 goals scheduled
[wp] [Timeout] typed_hoo30_loop_invariant_3_preserved (Qed 4ms) (Z3)
[wp] Proved goals:   19 / 20
  Qed:              13
  Alt-Ergo 2.5.4:    6 (4ms-5ms-9ms)
  Timeout:           1
------------------------------------------------------------
  Function hoo30
------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0001/30_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0001/30_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0001/30_merged.c, line 16):
Let x_1 = -r.
Let x_2 = 2 * x.
Let x_3 = r * r.
Let x_4 = x_2 + x_3 - r.
Let x_5 = x_4 / 2.
Let x_6 = x_2 + x_3.
Assume {
  Type: is_sint32(r) /\ is_sint32(x) /\ is_sint32(1 + r) /\
      is_sint32(x - r) /\ is_sint32(x_4) /\ is_sint32(x_5).
  (* Pre-condition *)
  Have: (x_4 % 2) = 0.
  (* Pre-condition *)
  Have: r < x_6.
  (* Invariant *)
  Have: (r + (2 * x_5)) = x_6.
  (* Invariant *)
  Have: x <= x_5.
  (* Invariant *)
  Have: x_3 <= x_5.
  (* Invariant *)
  Have: r <= x.
  (* Invariant *)
  Have: r <= x_5.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= r.
  (* Then *)
  Have: r < x.
}
Prove: x <= (r + x_5).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (32088)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (4ms) (42)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0001/30_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0001/30_merged.c, line 17):
Let x_2 = -x_1.
Let x_3 = x - x_1.
Let x_4 = x_3 * x_3.
Let x_5 = x_1 + x + x_4.
Let x_6 = x_5 / 2.
Let x_7 = 1 + x - x_1.
Assume {
  Type: is_sint32(x_1) /\ is_sint32(x) /\ is_sint32(x_3) /\ is_sint32(x_7) /\
      is_sint32(x_5) /\ is_sint32(x_6).
  (* Pre-condition *)
  Have: (x_5 % 2) = 0.
  (* Pre-condition *)
  Have: 0 < x_5.
  (* Invariant *)
  Have: x_5 = (2 * x_6).
  (* Invariant *)
  Have: x <= x_6.
  (* Invariant *)
  Have: x_4 <= x_6.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: x <= (x_1 + x_6).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: x_1 <= x.
  (* Then *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: x_1 <= x_6.
}
Prove: (x_7 * x_7) <= x_6.
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0001/30_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0001/30_merged.c, line 18):
Let x_1 = 1 + r.
Let x_2 = -r.
Let x_3 = 2 * x.
Let x_4 = r * r.
Let x_5 = x_3 + x_4 - r.
Let x_6 = x_5 / 2.
Let x_7 = x_3 + x_4.
Assume {
  Type: is_sint32(r) /\ is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x - r) /\
      is_sint32(x_5) /\ is_sint32(x_6).
  (* Pre-condition *)
  Have: (x_5 % 2) = 0.
  (* Pre-condition *)
  Have: r < x_7.
  (* Invariant *)
  Have: (r + (2 * x_6)) = x_7.
  (* Invariant *)
  Have: x <= x_6.
  (* Invariant *)
  Have: x_4 <= x_6.
  (* Invariant *)
  Have: r <= x.
  (* Invariant *)
  Have: r <= x_6.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= r.
  (* Then *)
  Have: r < x.
  (* Invariant *)
  Have: x <= (r + x_6).
  (* Invariant *)
  Have: (x_1 * x_1) <= x_6.
}
Prove: (2 * r) < x.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (33943)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (4ms) (47)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0001/30_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0001/30_merged.c, line 19):
Let x_2 = -x_1.
Let x_3 = 1 + x - x_1.
Let x_4 = x - x_1.
Let x_5 = x_4 * x_4.
Let x_6 = x_1 + x + x_5.
Let x_7 = x_6 / 2.
Let x_8 = x_1 + x_7.
Assume {
  Type: is_sint32(x_1) /\ is_sint32(x) /\ is_sint32(x_4) /\ is_sint32(x_3) /\
      is_sint32(x_6) /\ is_sint32(x_7).
  (* Pre-condition *)
  Have: (x_6 % 2) = 0.
  (* Pre-condition *)
  Have: 0 < x_6.
  (* Invariant *)
  Have: x_6 = (2 * x_7).
  (* Invariant *)
  Have: x <= x_7.
  (* Invariant *)
  Have: x_5 <= x_7.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: x <= x_8.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: x_1 <= x.
  (* Then *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: x_1 <= x_7.
  (* Invariant *)
  Have: (x_3 * x_3) <= x_7.
  (* Invariant *)
  Have: x < (2 * x_1).
}
Prove: x < x_8.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (32761)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (6ms) (51)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0001/30_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0001/30_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0001/30_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0001/30_merged.c, line 21):
Let x_1 = -r.
Let x_2 = 2 * x.
Let x_3 = r * r.
Let x_4 = x_2 + x_3 - r.
Let x_5 = x_4 / 2.
Let x_6 = 2 * r.
Let x_7 = 1 + r.
Let x_8 = x_7 * x_7.
Let x_9 = x_2 + x_3.
Assume {
  Type: is_sint32(r) /\ is_sint32(x) /\ is_sint32(x_7) /\ is_sint32(x - r) /\
      is_sint32(x_4) /\ is_sint32(x_5).
  (* Pre-condition *)
  Have: (x_4 % 2) = 0.
  (* Pre-condition *)
  Have: r < x_9.
  (* Invariant *)
  Have: (r + (2 * x_5)) = x_9.
  (* Invariant *)
  Have: x <= x_5.
  (* Invariant *)
  Have: x_3 <= x_5.
  (* Invariant *)
  Have: r <= x.
  (* Invariant *)
  Have: r <= x_5.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= r.
  (* Then *)
  Have: r < x.
  (* Invariant *)
  Have: x <= (r + x_5).
  (* Invariant *)
  Have: x_8 <= x_5.
  (* Invariant *)
  Have: x_6 < x.
  (* Invariant *)
  Have: r < x_5.
}
Prove: x_8 = (1 + x_6 + x_3).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (9975)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (6ms) (45)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0001/30_merged.c, line 21):
Let x = a / 2.
Assume {
  Type: is_sint32(a) /\ is_sint32(x).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Pre-condition *)
  Have: 0 < a.
}
Prove: (2 * x) = a.
Prover Z3 4.8.12 returns Valid (Qed:2ms) (10ms) (30658)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (9ms) (93)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0001/30_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0001/30_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0001/30_merged.c, line 23):
Let x_2 = 3 * x.
Let x_3 = -x.
Let x_4 = 1 + x_1 - x.
Let x_5 = x_4 * x_4.
Let x_6 = x_2 + x_5 - 1 - x_1.
Let x_7 = x_6 / 2.
Let x_8 = x + x_7.
Let x_9 = 2 * x.
Let x_10 = x_1 - x.
Let x_11 = x_10 * x_10.
Let x_12 = x_2 + x_5.
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_10) /\
      is_sint32(x_4) /\ is_sint32(x_6) /\ is_sint32(x_7).
  (* Pre-condition *)
  Have: (x_6 % 2) = 0.
  (* Pre-condition *)
  Have: (2 + x_1) <= x_12.
  (* Invariant *)
  Have: x_1 <= x_12.
  (* Invariant *)
  Have: (1 + x_1 + (2 * x_7)) = x_12.
  (* Invariant *)
  Have: x_1 <= x_7.
  (* Invariant *)
  Have: x_11 <= x_7.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: x_1 <= x_8.
  (* Invariant *)
  Have: (x_9 + x_5) = (1 + (2 * x_1) + x_11).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: x <= x_1.
  (* Then *)
  Have: 0 < x.
  (* Invariant *)
  Have: x <= x_7.
  (* Invariant *)
  Have: x_5 <= x_7.
  (* Invariant *)
  Have: x_1 < x_9.
  (* Invariant *)
  Have: x_1 < x_8.
}
Prove: x <= (1 + x_1).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (33140)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (4ms) (54)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0001/30_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Assertion (file out/30_0001/30_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/30_0001/30_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/30_0001/30_merged.c:6: Warning: 
  No 'assigns' specification for function 'hoo30'.
  Callers assumptions might be imprecise.

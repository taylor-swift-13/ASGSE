[kernel] Parsing out/21_0004/21_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 28 goals scheduled
[wp] [Timeout] typed_hoo21_loop_invariant_4_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_hoo21_loop_invariant_4_preserved (Qed 9ms) (Z3)
[wp] [Timeout] typed_hoo21_loop_invariant_5_preserved (Qed 15ms) (Z3)
[wp] [Timeout] typed_hoo21_loop_invariant_10_preserved (Qed 9ms) (Z3)
[wp] Proved goals:   24 / 28
  Qed:              22
  Alt-Ergo 2.5.4:    2 (4ms-5ms)
  Timeout:           4
------------------------------------------------------------
  Function hoo21
------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0004/21_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0004/21_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0004/21_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0004/21_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0004/21_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0004/21_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0004/21_merged.c, line 20):
Let x_1 = 2 * Y.
Let x_2 = v + x.
Let x_3 = 1 + x.
Assume {
  Type: is_sint32(Y) /\ is_sint32(v) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32((3 * v) - x_1) /\ is_sint32(x_1 - v).
  (* Pre-condition *)
  Have: 0 < Y.
  (* Pre-condition *)
  Have: v <= Y.
  (* Invariant *)
  Have: 0 <= v.
  (* Invariant *)
  Have: x_2 <= (1 + x_1).
  (* Invariant *)
  Have: (Y * x) = 0.
  (* Then *)
  Have: x_2 <= x_1.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: v < x_1.
}
Prove: (Y * x_3) <= (2 * v).
Prover Z3 4.8.12 returns Timeout (Qed:9ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:9ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0004/21_merged.c, line 20):
Let x = 2 * Y.
Assume {
  Type: is_sint32(X) /\ is_sint32(Y) /\ is_sint32(x - X).
  (* Pre-condition *)
  Have: 0 < X.
  (* Pre-condition *)
  Have: 0 < Y.
  (* Pre-condition *)
  Have: Y <= X.
}
Prove: X <= x.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0004/21_merged.c, line 21):
Let x_1 = 1 + x.
Let x_2 = Y * x_1.
Let x_3 = 2 * Y.
Let x_4 = v + x.
Assume {
  Type: is_sint32(Y) /\ is_sint32(v) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32((3 * v) - x_3) /\ is_sint32(x_3 - v).
  (* Pre-condition *)
  Have: 0 < Y.
  (* Pre-condition *)
  Have: v <= Y.
  (* Invariant *)
  Have: 0 <= v.
  (* Invariant *)
  Have: x_4 <= (1 + x_3).
  (* Invariant *)
  Have: (Y * x) = 0.
  (* Then *)
  Have: x_4 <= x_3.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: v < x_3.
  (* Invariant *)
  Have: x_2 <= (2 * v).
}
Prove: (Y + x_2) = (1 + v + x).
Prover Z3 4.8.12 returns Timeout (Qed:15ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:15ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0004/21_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0004/21_merged.c, line 22):
Let x_1 = 1 + x.
Let x_2 = Y * x_1.
Assume {
  Type: is_sint32(Y) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(Y + x_2 - 1 - x) /\ is_sint32(Y + (3 * x_2) - 3 - (3 * x)) /\
      is_sint32(1 + Y + x - x_2).
  (* Pre-condition *)
  Have: 0 < Y.
  (* Pre-condition *)
  Have: x_2 <= x_1.
  (* Invariant *)
  Have: x < (Y + x_2).
  (* Invariant *)
  Have: x_2 <= (2 + Y).
  (* Invariant *)
  Have: (Y * x) = 0.
  (* Then *)
  Have: x_2 <= (1 + Y).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: x_2 <= (Y + x).
  (* Invariant *)
  Have: (2 + (2 * x)) <= ((2 * Y) + x_2).
}
Prove: x_2 = x_1.
Prover Z3 4.8.12 returns Valid (Qed:13ms) (10ms) (33515)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (5ms) (35)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0004/21_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0004/21_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0004/21_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.80ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0004/21_merged.c, line 24):
Let x_1 = 1 + x.
Assume {
  Type: is_sint32(Y) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Invariant *)
  Have: 0 <= Y.
  (* Invariant *)
  Have: x <= (1 + Y).
  (* Invariant *)
  Have: (Y * x) = 0.
  (* Then *)
  Have: x <= Y.
  Have: (Y * x_1) = x_1.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 < Y.
  (* Invariant *)
  Have: x < (2 * Y).
}
Prove: Y <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:10ms) (31177)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (4ms) (24)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0004/21_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0004/21_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (8ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0004/21_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.85ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0004/21_merged.c, line 26):
Let x_1 = 1 + x.
Assume {
  Type: is_sint32(Y) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Invariant *)
  Have: 0 <= Y.
  (* Invariant *)
  Have: x <= (1 + Y).
  (* Invariant *)
  Have: (Y * x) = 0.
  (* Then *)
  Have: x <= Y.
  Have: (Y * x_1) = x_1.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 < Y.
  (* Invariant *)
  Have: x < (2 * Y).
  (* Invariant *)
  Have: Y <= x_1.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:9ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:9ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0004/21_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0004/21_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0004/21_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0004/21_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0004/21_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.86ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0004/21_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0004/21_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Assertion (file out/21_0004/21_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/21_0004/21_merged.c, line 30):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/21_0004/21_merged.c:6: Warning: 
  No 'assigns' specification for function 'hoo21'.
  Callers assumptions might be imprecise.

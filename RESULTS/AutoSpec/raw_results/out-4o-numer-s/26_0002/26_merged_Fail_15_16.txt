[kernel] Parsing out/26_0002/26_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 16 goals scheduled
[wp] [Timeout] typed_hoo26_loop_invariant_2_preserved (Qed 2ms) (Z3)
[wp] Proved goals:   15 / 16
  Qed:              13
  Alt-Ergo 2.5.4:    2 (21ms-28ms)
  Timeout:           1
------------------------------------------------------------
  Function hoo26
------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0002/26_merged.c, line 12):
Let x = 1 + r.
Let x_1 = (r * x) / 2.
Let x_2 = a / 2.
Let x_3 = -x_1.
Assume {
  Type: is_sint32(a) /\ is_sint32(r) /\ is_sint32(x_2) /\ is_sint32(x) /\
      is_sint32(x_2 - x_1) /\ is_sint32(x_2 - r - x_1).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Pre-condition *)
  Have: 0 < a.
  (* Invariant *)
  Have: x_1 = ((r * (r - 1)) / 2).
  (* Invariant *)
  Have: x_1 <= x_2.
  (* Invariant *)
  Have: 0 <= r.
  (* Then *)
  Have: (r + x_1) < x_2.
}
Prove: r = 0.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (43895)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (28ms) (330)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0002/26_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0002/26_merged.c, line 13):
Assume {
  Type: is_sint32(a) /\ is_sint32(a / 2).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Pre-condition *)
  Have: 0 < a.
  (* Then *)
  Have: 2 <= a.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0002/26_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0002/26_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0002/26_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0002/26_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0002/26_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0002/26_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0002/26_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0002/26_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0002/26_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0002/26_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0002/26_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assertion (file out/26_0002/26_merged.c, line 27):
Let x = a / 2.
Let x_1 = 1 + r.
Let x_2 = (r * x_1) / 2.
Assume {
  Type: is_sint32(a) /\ is_sint32(r) /\ is_sint32(x) /\ is_sint32(x - x_2).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Pre-condition *)
  Have: 0 < a.
  (* Invariant *)
  Have: x_2 = ((r * (r - 1)) / 2).
  (* Invariant *)
  Have: x_2 <= x.
  (* Invariant *)
  Have: 0 <= r.
  (* Else *)
  Have: x <= (r + x_2).
}
Prove: a <= (x_1 * x_1).
Prover Z3 4.8.12 returns Valid (Qed:2ms) (10ms) (34761)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (21ms) (337)

------------------------------------------------------------

Goal Loop assigns (file out/26_0002/26_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/26_0002/26_merged.c:5: Warning: 
  No 'assigns' specification for function 'hoo26'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/35_0002/35_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 40 goals scheduled
[wp] [Timeout] typed_hoo35_loop_invariant_4_preserved (Qed 3ms) (Z3)
[wp] [Timeout] typed_hoo35_loop_invariant_4_established (Qed 0.62ms) (Z3)
[wp] [Timeout] typed_hoo35_loop_invariant_11_preserved (Qed 3ms) (Z3)
[wp] [Timeout] typed_hoo35_loop_invariant_11_established (Qed 2ms) (Z3)
[wp] Proved goals:   36 / 40
  Qed:              29
  Alt-Ergo 2.5.4:    3 (4ms-9ms-12ms)
  Z3 4.8.12:         4 (10ms-68ms-230ms)
  Timeout:           4
------------------------------------------------------------
  Function hoo35
------------------------------------------------------------

Goal Preservation of Invariant (file out/35_0002/35_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/35_0002/35_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/35_0002/35_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/35_0002/35_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/35_0002/35_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/35_0002/35_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/35_0002/35_merged.c, line 15):
Let x = prev_guess_0 * prev_guess_0.
Let x_1 = n / prev_guess_0.
Let x_2 = n / 4.
Let x_3 = n / 2.
Let x_4 = x_3 * x_3.
Let x_5 = (prev_guess_0 + x_1) / 2.
Assume {
  Type: is_sint32(n) /\ is_sint32(prev_guess_0) /\ is_sint32(prev_guess_1) /\
      is_sint32(x_3) /\ is_sint32(x_5).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_2 <= x_4.
  (* Invariant *)
  Have: x_3 <= n.
  (* Invariant *)
  Have: x_4 <= n.
  (* Invariant *)
  Have: x_4 <= (n + (n / x_3)).
  (* Invariant *)
  Have: x_3 != 0.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: prev_guess_1 <= n.
  (* Invariant *)
  Have: (prev_guess_1 * prev_guess_1) <= n.
  (* Invariant *)
  Have: prev_guess_1 != prev_guess_0.
  (* Invariant *)
  Have: prev_guess_0 != 0.
  (* Invariant *)
  Have: (0 < prev_guess_0) /\ (prev_guess_0 <= n).
  (* Invariant *)
  Have: x_2 <= x.
  (* Invariant *)
  Have: x <= n.
  (* Invariant *)
  Have: x <= (n + x_1).
  (* Invariant *)
  Have: 0 <= prev_guess_1.
}
Prove: x_5 != prev_guess_0.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/35_0002/35_merged.c, line 15):
Let x = n / 2.
Assume { Type: is_sint32(n) /\ is_sint32(x). (* Pre-condition *) Have: 0 < n.
}
Prove: x != 0.
Prover Z3 4.8.12 returns Timeout (Qed:0.62ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.62ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/35_0002/35_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/35_0002/35_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/35_0002/35_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/35_0002/35_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/35_0002/35_merged.c, line 18):
Let x = guess_0 * guess_0.
Let x_1 = n / guess_0.
Let x_2 = n / 4.
Let x_3 = n / 2.
Let x_4 = x_3 * x_3.
Let x_5 = (guess_0 + x_1) / 2.
Assume {
  Type: is_sint32(guess_0) /\ is_sint32(n) /\ is_sint32(prev_guess_0) /\
      is_sint32(x_3) /\ is_sint32(x_5).
  (* Goal *)
  When: x_5 != guess_0.
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_2 <= x_4.
  (* Invariant *)
  Have: x_3 <= n.
  (* Invariant *)
  Have: x_4 <= n.
  (* Invariant *)
  Have: x_4 <= (n + (n / x_3)).
  (* Invariant *)
  Have: x_3 != 0.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: prev_guess_0 <= n.
  (* Invariant *)
  Have: (prev_guess_0 * prev_guess_0) <= n.
  (* Invariant *)
  Have: prev_guess_0 != guess_0.
  (* Invariant *)
  Have: guess_0 != 0.
  (* Invariant *)
  Have: (0 < guess_0) /\ (guess_0 <= n).
  (* Invariant *)
  Have: x_2 <= x.
  (* Invariant *)
  Have: x <= n.
  (* Invariant *)
  Have: x <= (n + x_1).
  (* Invariant *)
  Have: 0 <= prev_guess_0.
}
Prove: x_5 != 0.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (20ms) (72510)

------------------------------------------------------------

Goal Establishment of Invariant (file out/35_0002/35_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/35_0002/35_merged.c, line 19):
Let x = n / guess_0.
Let x_1 = guess_0 + x.
Let x_2 = x_1 / 2.
Let x_3 = guess_0 * guess_0.
Let x_4 = n / 4.
Let x_5 = n / 2.
Let x_6 = x_5 * x_5.
Assume {
  Type: is_sint32(guess_0) /\ is_sint32(n) /\ is_sint32(prev_guess_0) /\
      is_sint32(x_5) /\ is_sint32(x_2).
  (* Goal *)
  When: x_2 != guess_0.
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_4 <= x_6.
  (* Invariant *)
  Have: x_5 <= n.
  (* Invariant *)
  Have: x_6 <= n.
  (* Invariant *)
  Have: x_6 <= (n + (n / x_5)).
  (* Invariant *)
  Have: x_5 != 0.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: prev_guess_0 <= n.
  (* Invariant *)
  Have: (prev_guess_0 * prev_guess_0) <= n.
  (* Invariant *)
  Have: prev_guess_0 != guess_0.
  (* Invariant *)
  Have: guess_0 != 0.
  (* Invariant *)
  Have: (0 < guess_0) /\ (guess_0 <= n).
  (* Invariant *)
  Have: x_4 <= x_3.
  (* Invariant *)
  Have: x_3 <= n.
  (* Invariant *)
  Have: x_3 <= (n + x).
  (* Invariant *)
  Have: 0 <= prev_guess_0.
  (* Invariant *)
  Have: x_2 != 0.
}
Prove: (x_2 <= n) /\ (2 <= x_1).
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (37911)

------------------------------------------------------------

Goal Establishment of Invariant (file out/35_0002/35_merged.c, line 19):
Let x = n / 2.
Assume {
  Type: is_sint32(n) /\ is_sint32(x).
  (* Goal *)
  When: x != 0.
  (* Pre-condition *)
  Have: 0 < n.
}
Prove: (x <= n) /\ (2 <= n).
Prover Z3 4.8.12 returns Valid (Qed:1ms) (10ms) (29991)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (4ms) (76)

------------------------------------------------------------

Goal Preservation of Invariant (file out/35_0002/35_merged.c, line 20):
Let x = n / guess_0.
Let x_1 = guess_0 + x.
Let x_2 = x_1 / 2.
Let x_3 = guess_0 * guess_0.
Let x_4 = n / 4.
Let x_5 = n / 2.
Let x_6 = x_5 * x_5.
Assume {
  Type: is_sint32(guess_0) /\ is_sint32(n) /\ is_sint32(prev_guess_0) /\
      is_sint32(x_5) /\ is_sint32(x_2).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_4 <= x_6.
  (* Invariant *)
  Have: x_5 <= n.
  (* Invariant *)
  Have: x_6 <= n.
  (* Invariant *)
  Have: x_6 <= (n + (n / x_5)).
  (* Invariant *)
  Have: x_5 != 0.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: prev_guess_0 <= n.
  (* Invariant *)
  Have: (prev_guess_0 * prev_guess_0) <= n.
  (* Invariant *)
  Have: prev_guess_0 != guess_0.
  (* Invariant *)
  Have: guess_0 != 0.
  (* Invariant *)
  Have: (0 < guess_0) /\ (guess_0 <= n).
  (* Invariant *)
  Have: x_4 <= x_3.
  (* Invariant *)
  Have: x_3 <= n.
  (* Invariant *)
  Have: x_3 <= (n + x).
  (* Invariant *)
  Have: 0 <= prev_guess_0.
  (* Invariant *)
  Have: x_2 != guess_0.
  (* Invariant *)
  Have: x_2 != 0.
  (* Invariant *)
  Have: (x_2 <= n) /\ (2 <= x_1).
}
Prove: x_4 <= (x_2 * x_2).
Prover Z3 4.8.12 returns Valid (Qed:3ms) (230ms) (448439)

------------------------------------------------------------

Goal Establishment of Invariant (file out/35_0002/35_merged.c, line 20):
Let x = n / 2.
Assume {
  Type: is_sint32(n) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x != 0.
  (* Invariant *)
  Have: (x <= n) /\ (2 <= n).
}
Prove: (n / 4) <= (x * x).
Prover Z3 4.8.12 returns Valid (Qed:1ms) (10ms) (37623)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (12ms) (145)

------------------------------------------------------------

Goal Preservation of Invariant (file out/35_0002/35_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/35_0002/35_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/35_0002/35_merged.c, line 22):
Let x = n / 4.
Let x_1 = n / guess_0.
Let x_2 = guess_0 + x_1.
Let x_3 = x_2 / 2.
Let x_4 = x_3 * x_3.
Let x_5 = guess_0 * guess_0.
Let x_6 = n / 2.
Let x_7 = x_6 * x_6.
Assume {
  Type: is_sint32(guess_0) /\ is_sint32(n) /\ is_sint32(prev_guess_0) /\
      is_sint32(x_6) /\ is_sint32(x_3).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x <= x_7.
  (* Invariant *)
  Have: x_6 <= n.
  (* Invariant *)
  Have: x_7 <= n.
  (* Invariant *)
  Have: x_7 <= (n + (n / x_6)).
  (* Invariant *)
  Have: x_6 != 0.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: prev_guess_0 <= n.
  (* Invariant *)
  Have: (prev_guess_0 * prev_guess_0) <= n.
  (* Invariant *)
  Have: prev_guess_0 != guess_0.
  (* Invariant *)
  Have: guess_0 != 0.
  (* Invariant *)
  Have: (0 < guess_0) /\ (guess_0 <= n).
  (* Invariant *)
  Have: x <= x_5.
  (* Invariant *)
  Have: x_5 <= n.
  (* Invariant *)
  Have: x_5 <= (n + x_1).
  (* Invariant *)
  Have: 0 <= prev_guess_0.
  (* Invariant *)
  Have: x_3 != guess_0.
  (* Invariant *)
  Have: x_3 != 0.
  (* Invariant *)
  Have: (x_3 <= n) /\ (2 <= x_2).
  (* Invariant *)
  Have: x <= x_4.
}
Prove: x_4 <= n.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/35_0002/35_merged.c, line 22):
Let x = n / 2.
Let x_1 = x * x.
Assume {
  Type: is_sint32(n) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x != 0.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: (n / 4) <= x_1.
  (* Invariant *)
  Have: x <= n.
}
Prove: x_1 <= n.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/35_0002/35_merged.c, line 23):
Let x = n / guess_0.
Let x_1 = guess_0 + x.
Let x_2 = x_1 / 2.
Let x_3 = x_2 * x_2.
Let x_4 = n / 4.
Let x_5 = guess_0 * guess_0.
Let x_6 = n / 2.
Let x_7 = x_6 * x_6.
Assume {
  Type: is_sint32(guess_0) /\ is_sint32(n) /\ is_sint32(prev_guess_0) /\
      is_sint32(x_6) /\ is_sint32(x_2).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_4 <= x_7.
  (* Invariant *)
  Have: x_6 <= n.
  (* Invariant *)
  Have: x_7 <= n.
  (* Invariant *)
  Have: x_7 <= (n + (n / x_6)).
  (* Invariant *)
  Have: x_6 != 0.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: prev_guess_0 <= n.
  (* Invariant *)
  Have: (prev_guess_0 * prev_guess_0) <= n.
  (* Invariant *)
  Have: prev_guess_0 != guess_0.
  (* Invariant *)
  Have: guess_0 != 0.
  (* Invariant *)
  Have: (0 < guess_0) /\ (guess_0 <= n).
  (* Invariant *)
  Have: x_4 <= x_5.
  (* Invariant *)
  Have: x_5 <= n.
  (* Invariant *)
  Have: x_5 <= (n + x).
  (* Invariant *)
  Have: 0 <= prev_guess_0.
  (* Invariant *)
  Have: x_2 != guess_0.
  (* Invariant *)
  Have: x_2 != 0.
  (* Invariant *)
  Have: (x_2 <= n) /\ (2 <= x_1).
  (* Invariant *)
  Have: x_4 <= x_3.
  (* Invariant *)
  Have: x_3 <= n.
}
Prove: x_3 <= (n + (n / x_2)).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (39452)

------------------------------------------------------------

Goal Establishment of Invariant (file out/35_0002/35_merged.c, line 23):
Let x = n / 2.
Let x_1 = x * x.
Assume {
  Type: is_sint32(n) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x != 0.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: (n / 4) <= x_1.
  (* Invariant *)
  Have: x <= n.
  (* Invariant *)
  Have: x_1 <= n.
}
Prove: x_1 <= (n + (n / x)).
Prover Z3 4.8.12 returns Valid (Qed:1ms) (10ms) (32796)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (12ms) (269)

------------------------------------------------------------

Goal Preservation of Invariant (file out/35_0002/35_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/35_0002/35_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.86ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/35_0002/35_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/35_0002/35_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/35_0002/35_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/35_0002/35_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/35_0002/35_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/35_0002/35_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/35_0002/35_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/35_0002/35_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/35_0002/35_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/35_0002/35_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/35_0002/35_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/35_0002/35_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Assertion (file out/35_0002/35_merged.c, line 39):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/35_0002/35_merged.c, line 31):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/35_0002/35_merged.c:4: Warning: 
  No 'assigns' specification for function 'hoo35'.
  Callers assumptions might be imprecise.

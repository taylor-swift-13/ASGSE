[kernel] Parsing out/21_0001/21_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 18 goals scheduled
[wp] [Timeout] typed_hoo21_loop_invariant_3_preserved (Qed 20ms) (Z3)
[wp] [Timeout] typed_hoo21_loop_invariant_4_preserved (Qed 27ms) (Z3)
[wp] Proved goals:   16 / 18
  Qed:              14
  Alt-Ergo 2.5.4:    1 (4ms)
  Z3 4.8.12:         1 (310ms)
  Timeout:           2
------------------------------------------------------------
  Function hoo21
------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 17):
Let x_1 = v + x.
Let x_2 = 2 * Y.
Let x_3 = Y * x.
Let x_4 = 2 * x_3.
Let x_5 = x_2 + x_4.
Assume {
  Type: is_sint32(Y) /\ is_sint32(v) /\ is_sint32(x) /\ is_sint32(1 + x) /\
      is_sint32(v - x_4) /\ is_sint32(x_2 + x_4 - v).
  (* Residual *)
  When: v < 0.
  (* Pre-condition *)
  Have: v < x_5.
  (* Pre-condition *)
  Have: 0 < Y.
  (* Pre-condition *)
  Have: v <= (Y + x_4).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: x_1 <= (1 + x_2 + x_4).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < x) ->
      ((x_4 + (2 * (Y * (x - 1 - i)))) = x))).
  (* Then *)
  Have: x_1 <= x_5.
}
Prove: (-1) <= x.
Prover Z3 4.8.12 returns Valid (Qed:12ms) (10ms) (32165)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:12ms) (4ms) (31)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 19):
Let x_1 = 1 + x.
Let x_2 = v_1 + x.
Let x_3 = 2 * Y.
Let x_4 = Y * x.
Let x_5 = 2 * x_4.
Let x_6 = x_3 + x_5.
Let x_7 = (-2) * x_4.
Assume {
  Type: is_sint32(Y) /\ is_sint32(v) /\ is_sint32(v_1) /\ is_sint32(x) /\
      is_sint32(y) /\ is_sint32(x_1) /\ is_sint32(v_1 - x_5) /\
      is_sint32(x_3 + x_5 - v_1).
  (* Pre-condition *)
  Have: v_1 < x_6.
  (* Pre-condition *)
  Have: 0 < Y.
  (* Pre-condition *)
  Have: v_1 <= (Y + x_5).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: x_2 <= (1 + x_3 + x_5).
  (* Invariant *)
  Have: forall i : Z. let x_8 = x - 1 - i in ((0 <= i) -> ((i < x) ->
      ((x_5
        + (if (v_1 < 0) then (v_1 + (2 * (Y * x_8)))
           else (v_1 + (2 * (x_8 * (v_1 - Y - x_5)))))) = x_2))).
  (* Then *)
  Have: x_2 <= x_6.
  If v_1 < 0
  Then { Have: y = 0. Have: (v_1 + x_3) = v. }
  Else { Have: (v + x_3 + (4 * x_4)) = (3 * v_1). Have: y = 1. }
  (* Invariant *)
  Have: y <= x_1.
}
Prove: (v + x_5 + (2 * (y * x_1))) = (v_1 + (2 * (Y * x_1))).
Prover Z3 4.8.12 returns Timeout (Qed:20ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:20ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 20):
Let x_1 = 1 + x.
Let x_2 = v + x.
Let x_3 = 2 * Y.
Let x_4 = Y * x.
Let x_5 = 2 * x_4.
Let x_6 = x_3 + x_5.
Let x_7 = (-2) * x_4.
Let x_8 = v - Y - x_5.
Let x_9 = y * x_1.
Let x_10 = (-2) * x_9.
Let x_11 = 2 * (Y * x_1).
Let x_12 = 2 * x_9.
Let x_13 = x - i.
Assume {
  Type: is_sint32(Y) /\ is_sint32(v_1) /\ is_sint32(v_2) /\ is_sint32(v) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_1) /\ is_sint32(v - x_5) /\
      is_sint32(x_3 + x_5 - v) /\ is_sint32(v + x_11 - x_5 - x_12).
  (* Goal *)
  When: (0 <= i) /\ (i <= x).
  (* Pre-condition *)
  Have: v < x_6.
  (* Pre-condition *)
  Have: 0 < Y.
  (* Pre-condition *)
  Have: v <= (Y + x_5).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: x_2 <= (1 + x_3 + x_5).
  (* Invariant *)
  Have: forall i_1 : Z. let x_14 = x - 1 - i_1 in ((0 <= i_1) ->
      ((i_1 < x) ->
      ((x_5
        + (if (v < 0) then (v + (2 * (Y * x_14)))
           else (v + (2 * (x_14 * x_8))))) = x_2))).
  (* Then *)
  Have: x_2 <= x_6.
  If v < 0
  Then {
    Have: (y = 0) /\ ((Y * x_1) = (Y + x_4)).
    Have: (v + x_11) = (v_1 + x_3 + x_5).
  }
  Else {
    Let x_14 = Y + x_4 + (Y * x_1).
    Have: (x_14 = (1 + v_2 + x)) /\ (x_14 = (1 + v + x)).
    Have: y = 1.
  }
  (* Invariant *)
  Have: y <= x_1.
}
Prove: (x_3 + x_5 + x_12
        + (if ((v + x_11) < (x_5 + x_12))
           then (v + x_11 + (2 * (Y * x_13)) - x_5 - x_12)
           else (v + x_11 + (2 * (x_13 * x_8)) - x_5 - x_12)))
         = (1 + v + x + (2 * (Y * (1 + y)))).
Prover Z3 4.8.12 returns Timeout (Qed:27ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:27ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 21):
Let x_1 = Y * x.
Let x_2 = 1 + x.
Let x_3 = Y * x_2.
Let x_4 = 3 * x_3.
Let x_5 = (-3) * x.
Let x_6 = -x_1.
Let x_7 = -x.
Let x_8 = x_3 - 1 - x - x_1.
Assume {
  Type: is_sint32(Y) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(Y + x_3 - 1 - x - x_1) /\ is_sint32(Y + x_1 + x_3 - 1 - x) /\
      is_sint32(Y + x_4 - 3 - (3 * x) - x_1) /\
      is_sint32(1 + Y + x + x_1 - x_3).
  (* Residual *)
  When: x < (Y + x_1 + x_3).
  (* Pre-condition *)
  Have: x_3 <= (Y + x + x_1).
  (* Pre-condition *)
  Have: 0 < Y.
  (* Pre-condition *)
  Have: x_3 <= (1 + x + x_1).
  (* Invariant *)
  Have: x_3 <= (2 + Y + x_1).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < x) ->
      (((2 * x_1) + (2 * ((x - 1 - i) * x_8))) = x))).
  (* Then *)
  Have: x_3 <= (1 + Y + x_1).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: forall i : Z. let x_9 = x - i in ((0 <= i) -> ((i <= x) ->
      ((2 + (2 * x) + x_1
        + (if ((Y + x_4) <= (2 + (3 * x) + x_1))
           then (Y + x_4 + (2 * (Y * x_9)) - 3 - (3 * x) - x_1)
           else (Y + x_4 + (2 * (x_9 * x_8)) - 3 - (3 * x) - x_1)))
         = ((3 * Y) + x_3)))).
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:23ms) (310ms) (177938)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.78ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.73ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Assertion (file out/21_0001/21_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/21_0001/21_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/21_0001/21_merged.c:6: Warning: 
  No 'assigns' specification for function 'hoo21'.
  Callers assumptions might be imprecise.

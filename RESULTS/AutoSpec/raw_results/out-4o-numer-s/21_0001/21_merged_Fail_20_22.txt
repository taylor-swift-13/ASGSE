[kernel] Parsing out/21_0001/21_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 22 goals scheduled
[wp] [Timeout] typed_hoo21_loop_invariant_3_preserved (Qed 25ms) (Z3)
[wp] [Timeout] typed_hoo21_loop_invariant_5_preserved (Qed 17ms) (Z3)
[wp] Proved goals:   20 / 22
  Qed:            18
  Z3 4.8.12:       2 (10ms-150ms)
  Timeout:         2
------------------------------------------------------------
  Function hoo21
------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 17):
Let x_1 = x * y.
Let x_2 = 2 * x_1.
Let x_3 = v + x_2.
Let x_4 = Y * (1 + y).
Let x_5 = 2 * x_4.
Let x_6 = x + x_5.
Let x_7 = 2 * Y.
Let x_8 = 2 * (Y * x).
Let x_9 = 1 + x.
Assume {
  Type: is_sint32(Y) /\ is_sint32(v) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_9) /\ is_sint32(x + x_5 - v - x_2) /\
      is_sint32(v + x_7 + x_2 - x - x_5).
  (* Residual *)
  When: v < 0.
  (* Pre-condition *)
  Have: x_3 < x_6.
  (* Pre-condition *)
  Have: 0 < Y.
  (* Pre-condition *)
  Have: (Y + v + x_2) <= x_6.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: x_3 <= (1 + x_5).
  (* Invariant *)
  Have: x_6 = (x_7 + (2 * y) + x_8).
  (* Invariant *)
  Have: x_6 = (x_7 + x_8).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < x) -> ((Y * (x - 1 - i)) = 0))).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: x_3 <= x_5.
}
Prove: y <= x_9.
Prover Z3 4.8.12 returns Valid (Qed:12ms) (10ms) (33309)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 19):
Let x_1 = 1 + x.
Let x_2 = x * y_1.
Let x_3 = 2 * x_2.
Let x_4 = v + x_3.
Let x_5 = Y * (1 + y_1).
Let x_6 = 2 * x_5.
Let x_7 = -x.
Let x_8 = (-2) * x_5.
Let x_9 = x + x_6.
Let x_10 = 2 * Y.
Let x_11 = 2 * (Y * x).
Assume {
  Type: is_sint32(Y) /\ is_sint32(v_1) /\ is_sint32(v) /\ is_sint32(x) /\
      is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_1) /\
      is_sint32(x + x_6 - v - x_3) /\ is_sint32(v + x_10 + x_3 - x - x_6).
  (* Pre-condition *)
  Have: x_4 < x_9.
  (* Pre-condition *)
  Have: 0 < Y.
  (* Pre-condition *)
  Have: (Y + v + x_3) <= x_9.
  (* Invariant *)
  Have: y_1 <= x.
  (* Invariant *)
  Have: x_4 <= (1 + x_6).
  (* Invariant *)
  Have: x_9 = (x_10 + (2 * y_1) + x_11).
  (* Invariant *)
  Have: x_9 = (x_10 + x_11).
  (* Invariant *)
  Have: forall i : Z. let x_12 = x - 1 - i in ((0 <= i) -> ((i < x) ->
      (if (v < 0) then ((Y * x_12) = 0)
       else ((x_12 * (Y + v + x_3 - x - x_6)) = 0)))).
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: x_4 <= x_6.
  If v < 0
  Then { Have: y_1 = y. Have: (v + x_10) = v_1. }
  Else {
    Have: (v_1 + (2 * x) + (4 * x_5)) = (x_10 + (3 * v) + (4 * x_2)).
    Have: (1 + y_1) = y.
  }
  (* Invariant *)
  Have: y <= x_1.
}
Prove: (v + x_10 + (2 * y) + x_3 + (2 * (Y * x_1)))
         = (v_1 + x + x_6 + (2 * (y * x_1))).
Prover Z3 4.8.12 returns Timeout (Qed:25ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:25ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 20):
Let x_1 = 1 + x.
Let x_2 = x * y_2.
Let x_3 = 2 * x_2.
Let x_4 = v_2 + x_3.
Let x_5 = Y * (1 + y_2).
Let x_6 = 2 * x_5.
Let x_7 = -x.
Let x_8 = (-2) * x_5.
Let x_9 = x + x_6.
Let x_10 = 2 * Y.
Let x_11 = 2 * (Y * x).
Assume {
  Type: is_sint32(Y) /\ is_sint32(v) /\ is_sint32(v_1) /\ is_sint32(v_2) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(y_2) /\
      is_sint32(x_1) /\ is_sint32(x + x_6 - v_2 - x_3) /\
      is_sint32(v_2 + x_10 + x_3 - x - x_6) /\
      is_sint32(v_2 + x_10 + (2 * y) + x_3 + (2 * (Y * x_1)) - x - x_6
        - (2 * (y * x_1))).
  (* Pre-condition *)
  Have: x_4 < x_9.
  (* Pre-condition *)
  Have: 0 < Y.
  (* Pre-condition *)
  Have: (Y + v_2 + x_3) <= x_9.
  (* Invariant *)
  Have: y_2 <= x.
  (* Invariant *)
  Have: x_4 <= (1 + x_6).
  (* Invariant *)
  Have: x_9 = (x_10 + (2 * y_2) + x_11).
  (* Invariant *)
  Have: x_9 = (x_10 + x_11).
  (* Invariant *)
  Have: forall i : Z. let x_12 = x - 1 - i in ((0 <= i) -> ((i < x) ->
      (if (v_2 < 0) then ((Y * x_12) = 0)
       else ((x_12 * (Y + v_2 + x_3 - x - x_6)) = 0)))).
  (* Invariant *)
  Have: 0 <= y_2.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: x_4 <= x_6.
  If v_2 < 0
  Then {
    Let x_12 = 2 * y.
    Let x_13 = 2 * (x * y).
    Let x_14 = 2 * (Y * x_1).
    Let x_15 = 2 * (Y * (1 + y)).
    Let x_16 = 2 * (y * x_1).
    Have: (y_2 = y) /\ ((x_12 + x_13 + x_14) = (x + x_15 + x_16)) /\
        ((v_2 + x_12 + x_13 + x_14) = (v + x + x_15 + x_16)).
  }
  Else {
    Let x_17 = 1 + y_1.
    Let x_18 = 2 + x + (2 * y_1) + x_14 + (2 * (Y * x_17)).
    Let x_19 = 2 * (x * y_1).
    Let x_20 = 2 * (x_1 * x_17).
    Have: (y_2 = y_1) /\ (x_18 = ((2 * v_2) + x_19 + x_20)) /\
        (x_18 = (v_1 + v_2 + x_19 + x_20)).
    Have: x_17 = y.
  }
  (* Invariant *)
  Have: y <= x_1.
}
Prove: y = 0.
Prover Z3 4.8.12 returns Valid (Qed:29ms) (150ms) (276334)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 21):
Let x_1 = 2 * Y.
Let x_2 = x + x_1.
Let x_3 = 1 + x.
Let x_4 = 2 * (Y * x_3).
Let x_5 = -x.
Assume {
  Type: is_sint32(Y) /\ is_sint32(v) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(v - x) /\ is_sint32(x + x_1 - v) /\ is_sint32(v + x_4 - x) /\
      is_sint32(v + x_4 - x - x_1).
  (* Residual *)
  When: v < 0.
  (* Pre-condition *)
  Have: v < x_2.
  (* Pre-condition *)
  Have: 0 < Y.
  (* Pre-condition *)
  Have: v <= (Y + x).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: v <= (1 + x_1).
  (* Invariant *)
  Have: (2 * (Y * x)) = x.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < x) -> ((Y * (x - 1 - i)) = 0))).
  (* Then *)
  Have: v <= x_1.
  Have: x_2 = x_4.
  (* Invariant *)
  Have: (-1) <= x.
}
Prove: x_3 = x_4.
Prover Z3 4.8.12 returns Timeout (Qed:17ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:17ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.79ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.88ms)

------------------------------------------------------------

Goal Assertion (file out/21_0001/21_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/21_0001/21_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/21_0001/21_merged.c:6: Warning: 
  No 'assigns' specification for function 'hoo21'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/03_0003/03_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] out/03_0003/03_merged.c:11: Warning: 
  Missing assigns clause (assigns 'everything' instead)
[wp] 19 goals scheduled
[wp] [Timeout] typed_foo03_loop_invariant_4_established (Qed 0.86ms) (Z3)
[wp] [Timeout] typed_foo03_loop_invariant_5_preserved (Qed 3ms) (Z3)
[wp] [Timeout] typed_foo03_loop_invariant_9_established (Qed 1ms) (Z3)
[wp] Proved goals:   16 / 19
  Qed:              14
  Alt-Ergo 2.5.4:    2 (5ms-8ms)
  Timeout:           3
------------------------------------------------------------
  Function foo03
------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0003/03_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0003/03_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0003/03_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0003/03_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0003/03_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0003/03_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0003/03_merged.c, line 17):
Let x = 1 + i.
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n) /\
      is_sint32(n_1) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n_1.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: i < n.
}
Prove: (x = n) \/ ((2 + i) <= n).
Prover Z3 4.8.12 returns Valid (Qed:2ms) (10ms) (31319)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (8ms) (17)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0003/03_merged.c, line 17):
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n) /\
      is_sint32(n_1).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n_1.
  (* Then *)
  Have: k < n.
}
Prove: (n = i) \/ (i < n).
Prover Z3 4.8.12 returns Timeout (Qed:0.86ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.86ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0003/03_merged.c, line 18):
Let x = 1 + l.
Assume {
  Type: is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\ is_sint32(n) /\
      is_sint32(n_1) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 < n_1.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l <= n.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: l < n.
  (* Invariant *)
  Have: (x = n) \/ ((2 + l) <= n).
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0003/03_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0003/03_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0003/03_merged.c, line 19):
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n) /\
      is_sint32(n_1).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n_1.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: (n = i) \/ (i < n).
}
Prove: i <= n.
Prover Z3 4.8.12 returns Valid (Qed:1ms) (10ms) (30922)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (5ms) (26)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0003/03_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0003/03_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0003/03_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0003/03_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0003/03_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0003/03_merged.c, line 22):
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n) /\
      is_sint32(n_1).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n_1.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: (n = i) \/ (i < n).
  (* Invariant *)
  Have: i <= n.
}
Prove: 0 < k.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/03_0003/03_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/03_0003/03_merged.c:7: Warning: 
  No 'assigns' specification for function 'foo03'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/03_0001/03_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] out/03_0001/03_merged.c:11: Warning: 
  Missing assigns clause (assigns 'everything' instead)
[wp] 23 goals scheduled
[wp] [Timeout] typed_foo03_loop_invariant_2_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_foo03_loop_invariant_3_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_foo03_loop_invariant_5_preserved (Qed 3ms) (Z3)
[wp] Proved goals:   20 / 23
  Qed:              15
  Alt-Ergo 2.5.4:    5 (1ms-6ms)
  Timeout:           3
------------------------------------------------------------
  Function foo03
------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0001/03_merged.c, line 14):
Let x = 1 + i.
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 < n_1.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l < n.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: l <= i.
  (* Invariant *)
  Have: (l = i) \/ (n = i).
  (* Invariant *)
  Have: (l = i) \/ (l < i).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 < i) -> ((l <= i_1) -> (0 < i_1))).
  (* Then *)
  Have: i < n.
}
Prove: l <= x.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (32479)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (1ms) (16)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0001/03_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0001/03_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0001/03_merged.c, line 15):
Assume {
  Type: is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\ is_sint32(n) /\
      is_sint32(n_1).
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 < n_1.
  (* Then *)
  Have: k < n.
}
Prove: l < n.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0001/03_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0001/03_merged.c, line 16):
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n) /\
      is_sint32(n_1).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n_1.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: i < n.
}
Prove: (k = 1) \/ (0 < k).
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0001/03_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0001/03_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.88ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0001/03_merged.c, line 18):
Let x = 1 + i.
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 < n_1.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l < n.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: l <= i.
  (* Invariant *)
  Have: (l = i) \/ (n = i).
  (* Invariant *)
  Have: (l = i) \/ (l < i).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 < i) -> ((l <= i_1) -> (0 < i_1))).
  (* Then *)
  Have: i < n.
  (* Invariant *)
  Have: l <= x.
}
Prove: (x = l) \/ (x = n).
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0001/03_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0001/03_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0001/03_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0001/03_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0001/03_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0001/03_merged.c, line 21):
Let x = 1 + i_1.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(k) /\ is_sint32(l) /\
      is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x).
  (* Goal *)
  When: (i_2 <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n_1.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: i_2 < n.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: i_2 <= i_1.
  (* Invariant *)
  Have: (i_2 = i_1) \/ (n = i_1).
  (* Invariant *)
  Have: (i_2 = i_1) \/ (i_2 < i_1).
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: forall i_3 : Z. ((i_3 < i_1) -> ((i_2 <= i_3) -> (0 < i_3))).
  (* Then *)
  Have: i_1 < n.
  (* Invariant *)
  Have: i_2 <= x.
  (* Invariant *)
  Have: (x = i_2) \/ (x = n).
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (33503)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (4ms) (51)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0001/03_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.92ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0001/03_merged.c, line 22):
Let x = 1 + i_1.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(k) /\ is_sint32(l) /\
      is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x).
  (* Goal *)
  When: (i_2 <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n_1.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: i_2 < n.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: i_2 <= i_1.
  (* Invariant *)
  Have: (i_2 = i_1) \/ (n = i_1).
  (* Invariant *)
  Have: (i_2 = i_1) \/ (i_2 < i_1).
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: forall i_3 : Z. ((i_3 < i_1) -> ((i_2 <= i_3) -> (0 < i_3))).
  (* Then *)
  Have: i_1 < n.
  (* Invariant *)
  Have: i_2 <= x.
  (* Invariant *)
  Have: (x = i_2) \/ (x = n).
  (* Invariant *)
  Have: forall i_3 : Z. ((i_3 <= i_1) -> ((i_2 <= i_3) -> (0 < i_3))).
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (34171)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (6ms) (53)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0001/03_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.73ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0001/03_merged.c, line 23):
Let x = 1 + i_1.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(k) /\ is_sint32(l) /\
      is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x).
  (* Goal *)
  When: (i_2 <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n_1.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: i_2 < n.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: i_2 <= i_1.
  (* Invariant *)
  Have: (i_2 = i_1) \/ (n = i_1).
  (* Invariant *)
  Have: (i_2 = i_1) \/ (i_2 < i_1).
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: forall i_3 : Z. ((i_3 < i_1) -> ((i_2 <= i_3) -> (0 < i_3))).
  (* Then *)
  Have: i_1 < n.
  (* Invariant *)
  Have: i_2 <= x.
  (* Invariant *)
  Have: (x = i_2) \/ (x = n).
  (* Invariant *)
  Have: forall i_3 : Z. ((i_3 <= i_1) -> ((i_2 <= i_3) -> (0 < i_3))).
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (34171)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (4ms) (53)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0001/03_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0001/03_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0001/03_merged.c, line 24):
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n) /\
      is_sint32(n_1).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n_1.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: i < n.
  (* Invariant *)
  Have: (k = 1) \/ (0 < k).
}
Prove: 0 < k.
Prover Z3 4.8.12 returns Valid (Qed:2ms) (10ms) (30880)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (4ms) (26)

------------------------------------------------------------

Goal Loop assigns (file out/03_0001/03_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/03_0001/03_merged.c:7: Warning: 
  No 'assigns' specification for function 'foo03'.
  Callers assumptions might be imprecise.

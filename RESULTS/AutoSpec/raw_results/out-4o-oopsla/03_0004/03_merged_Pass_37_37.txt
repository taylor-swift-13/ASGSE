[kernel] Parsing out/03_0004/03_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 37 goals scheduled
[wp] Proved goals:   37 / 37
  Qed:              25
  Alt-Ergo 2.5.4:   12
------------------------------------------------------------
  Function foo03
------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0004/03_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0004/03_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0004/03_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0004/03_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0004/03_merged.c, line 14):
Assume {
  Type: is_sint32(k) /\ is_sint32(l) /\ is_sint32(n) /\ is_sint32(1 + k).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (30825)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (32)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0004/03_merged.c, line 14):
Assume {
  Type: is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n.
  (* Invariant *)
  Have: 0 < n.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:0.56ms) (10ms) (30008)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:0.56ms) (7ms) (22)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0004/03_merged.c, line 15):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(1 + k).
  (* Goal *)
  When: (i < i_1) /\ (l <= i).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < i_1.
  (* Invariant *)
  Have: 0 < i_1.
  (* Invariant *)
  Have: k <= i_1.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < i_1.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (30811)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (5ms) (31)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0004/03_merged.c, line 15):
Assume {
  Type: is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (i < i_1) /\ (l <= i).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n.
  (* Invariant *)
  Have: 0 < n.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:1ms) (10ms) (30052)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (4ms) (22)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0004/03_merged.c, line 16):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(1 + k).
  (* Goal *)
  When: (i < i_1) /\ (l <= i).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < i_1.
  (* Invariant *)
  Have: 0 < i_1.
  (* Invariant *)
  Have: k <= i_1.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < i_1.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (20ms) (30811)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (4ms) (31)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0004/03_merged.c, line 16):
Assume {
  Type: is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (i < i_1) /\ (l <= i).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n.
  (* Invariant *)
  Have: 0 < n.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:1ms) (10ms) (30052)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (4ms) (22)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0004/03_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0004/03_merged.c, line 17):
Assume {
  Type: is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (i_1 < n) /\ (i < i_1) /\ (l <= i).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n.
  (* Invariant *)
  Have: 0 < n.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:2ms) (10ms) (30201)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (5ms) (24)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0004/03_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0004/03_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0004/03_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0004/03_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0004/03_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0004/03_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0004/03_merged.c, line 27):
Let x = 1 + i.
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n) /\
      is_sint32(x).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l <= i.
  (* Invariant *)
  Have: i <= n.
  (* Then *)
  Have: i < n.
}
Prove: l <= x.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (31099)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (5ms) (15)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0004/03_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0004/03_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0004/03_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0004/03_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0004/03_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0004/03_merged.c, line 30):
Let x = 1 + i.
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n) /\
      is_sint32(x).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l <= i.
  (* Invariant *)
  Have: i <= n.
  (* Then *)
  Have: i < n.
  (* Invariant *)
  Have: l <= x.
}
Prove: (x = n) \/ ((2 + i) <= n).
Prover Z3 4.8.12 returns Valid (Qed:6ms) (20ms) (31557)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (4ms) (19)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0004/03_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0004/03_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0004/03_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0004/03_merged.c, line 32):
Let x = 1 + i_1.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n) /\
      is_sint32(x).
  (* Goal *)
  When: (l <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Then *)
  Have: i_1 < n.
  (* Invariant *)
  Have: l <= x.
  (* Invariant *)
  Have: (x = n) \/ ((2 + i_1) <= n).
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (31824)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (3ms) (19)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0004/03_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0004/03_merged.c, line 33):
Let x = 1 + i_1.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n) /\
      is_sint32(x).
  (* Goal *)
  When: (l <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Then *)
  Have: i_1 < n.
  (* Invariant *)
  Have: l <= x.
  (* Invariant *)
  Have: (x = n) \/ ((2 + i_1) <= n).
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (31824)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (4ms) (19)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0004/03_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0004/03_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0004/03_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Assertion (file out/03_0004/03_merged.c, line 42):
Assume {
  Type: is_sint32(k) /\ is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: 0 < k.
  (* Else *)
  Have: n <= k.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (30595)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (5ms) (29)

------------------------------------------------------------

Goal Loop assigns (file out/03_0004/03_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/03_0004/03_merged.c, line 35):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/03_0004/03_merged.c:7: Warning: 
  No 'assigns' specification for function 'foo03'.
  Callers assumptions might be imprecise.

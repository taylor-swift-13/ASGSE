[kernel] Parsing out/036_0005/036_loop_assigns.c (with preprocessing)
[kernel:typing:no-proto] out/036_0005/036_loop_assigns.c:53: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/036_0005/036_loop_assigns.c:15: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/036_0005/036_loop_assigns.c:70: Warning: 
  Calling function unknown3 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/036_0005/036_loop_assigns.c:5: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[kernel:annot:missing-spec] out/036_0005/036_loop_assigns.c:5: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[kernel:annot:missing-spec] out/036_0005/036_loop_assigns.c:5: Warning: 
  Neither code nor specification for function unknown3, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] out/036_0005/036_loop_assigns.c:70: Warning: 
  Missing assigns clause (assigns 'everything' instead)
[wp] out/036_0005/036_loop_assigns.c:15: Warning: 
  Missing assigns clause (assigns 'everything' instead)
[wp] 31 goals scheduled
[wp] [Timeout] typed_foo036_loop_invariant_established (Qed 3ms) (Z3)
[wp] [Timeout] typed_foo036_loop_invariant_5_preserved (Qed 9ms) (Z3)
[wp] [Timeout] typed_foo036_loop_assigns_2_part4 (Qed 17ms) (Z3)
[wp] [Timeout] typed_foo036_loop_assigns_2_part3 (Qed 18ms) (Z3)
[wp] Proved goals:   27 / 31
  Qed:              26
  Alt-Ergo 2.5.4:    1 (4ms)
  Timeout:           4
------------------------------------------------------------
  Function foo036
------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0005/036_loop_assigns.c, line 20):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0005/036_loop_assigns.c, line 20):
Assume {
  Type: is_sint32(j) /\ is_sint32(tmp_0_0) /\ is_sint32(z).
  (* Then *)
  Have: tmp_0_0 != 0.
}
Prove: z <= j.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (3s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (3s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0005/036_loop_assigns.c, line 21):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0005/036_loop_assigns.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0005/036_loop_assigns.c, line 22):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0005/036_loop_assigns.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0005/036_loop_assigns.c, line 23):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0005/036_loop_assigns.c, line 23):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0005/036_loop_assigns.c, line 24):
Let x = k + z.
Let x_1 = 2 * k.
Assume {
  Type: is_sint32(j) /\ is_sint32(k) /\ is_sint32(tmp_0_0) /\ is_sint32(z) /\
      is_sint32(1 + k) /\ is_sint32(x) /\ is_sint32(1 + k + z).
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: z <= j.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x <= j.
  (* Invariant *)
  Have: (z + x_1) <= j.
  (* Invariant *)
  Have: forall i : Z. ((z <= i) -> ((i < x) -> (i < j))).
  (* Then *)
  Have: x < j.
  (* Invariant *)
  Have: (-1) <= k.
}
Prove: (2 + z + x_1) <= j.
Prover Z3 4.8.12 returns Timeout (Qed:9ms) (3s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:9ms) (3s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0005/036_loop_assigns.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0005/036_loop_assigns.c, line 25):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0005/036_loop_assigns.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0005/036_loop_assigns.c, line 26):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0005/036_loop_assigns.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0005/036_loop_assigns.c, line 27):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0005/036_loop_assigns.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0005/036_loop_assigns.c, line 28):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0005/036_loop_assigns.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0005/036_loop_assigns.c, line 29):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0005/036_loop_assigns.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0005/036_loop_assigns.c, line 30):
Let x = 2 * k.
Let x_1 = k + z.
Assume {
  Type: is_sint32(k) /\ is_sint32(tmp_0_0) /\ is_sint32(w) /\ is_sint32(z) /\
      is_sint32(1 + k) /\ is_sint32(x_1) /\ is_sint32(1 + k + z).
  (* Goal *)
  When: (z <= i) /\ (i <= x_1).
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: z <= w.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_1 <= w.
  (* Invariant *)
  Have: (z + x) <= w.
  (* Invariant *)
  Have: forall i_1 : Z. ((z <= i_1) -> ((i_1 < x_1) -> (i_1 < w))).
  (* Then *)
  Have: x_1 < w.
  (* Invariant *)
  Have: (-1) <= k.
  (* Invariant *)
  Have: (2 + z + x) <= w.
}
Prove: i < w.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (32498)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (4ms) (23)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0005/036_loop_assigns.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0005/036_loop_assigns.c, line 31):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0005/036_loop_assigns.c, line 31):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0005/036_loop_assigns.c, line 32):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0005/036_loop_assigns.c, line 32):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Loop assigns (file out/036_0005/036_loop_assigns.c, line 33):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/036_0005/036_loop_assigns.c, line 51) (1/4):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/036_0005/036_loop_assigns.c, line 51) (2/4):
Call Result at line 53
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Loop assigns (file out/036_0005/036_loop_assigns.c, line 51) (3/4):
Effect at line 55
Let x_3 = k + x_2.
Assume {
  Type: is_sint32(j) /\ is_sint32(k) /\ is_sint32(tmp_0) /\
      is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_2) /\ is_sint32(x_3).
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: x_2 <= j.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_3 <= j.
  (* Invariant *)
  Have: (x_2 + (2 * k)) <= j.
  (* Invariant *)
  Have: forall i : Z. ((x_2 <= i) -> ((i < x_3) -> (i < j))).
  (* Else *)
  Have: j <= x_3.
  If (x_2 % 2) = 1
  Then { Have: x_2 = x_1. Have: (1 + x_1) = x. }
  Else { Have: x_2 = x. }
  (* Then *)
  Have: tmp_0 != 0.
  (* Then *)
  Have: (x % 2) = 0.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:18ms) (3s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:18ms) (3s)

------------------------------------------------------------

Goal Loop assigns (file out/036_0005/036_loop_assigns.c, line 51) (4/4):
Effect at line 58
Let x_3 = k + x_2.
Assume {
  Type: is_sint32(j) /\ is_sint32(k) /\ is_sint32(tmp_0) /\
      is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_2) /\ is_sint32(x_3).
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: x_2 <= j.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_3 <= j.
  (* Invariant *)
  Have: (x_2 + (2 * k)) <= j.
  (* Invariant *)
  Have: forall i : Z. ((x_2 <= i) -> ((i < x_3) -> (i < j))).
  (* Else *)
  Have: j <= x_3.
  If (x_2 % 2) = 1
  Then { Have: x_2 = x_1. Have: (1 + x_1) = x. }
  Else { Have: x_2 = x. }
  (* Then *)
  Have: tmp_0 != 0.
  (* Else *)
  Have: (x % 2) != 0.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:17ms) (3s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:17ms) (3s)

------------------------------------------------------------
[wp:pedantic-assigns] out/036_0005/036_loop_assigns.c:1: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/036_0005/036_loop_assigns.c:2: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/036_0005/036_loop_assigns.c:3: Warning: 
  No 'assigns' specification for function 'unknown3'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/036_0005/036_loop_assigns.c:5: Warning: 
  No 'assigns' specification for function 'foo036'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/04_0005/04_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 23 goals scheduled
[wp] [Timeout] typed_foo04_loop_invariant_4_established (Z3)
[wp] [Timeout] typed_foo04_loop_invariant_5_preserved (Qed 3ms) (Z3)
[wp] [Timeout] typed_foo04_loop_invariant_7_established (Qed 0.62ms) (Z3)
[wp] Proved goals:   20 / 23
  Qed:              14
  Alt-Ergo 2.5.4:    4
  Z3 4.8.12:         2 (20ms-30ms)
  Timeout:           3
------------------------------------------------------------
  Function foo04
------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0005/04_merged.c, line 8):
Let x_1 = 1 + y.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_1) /\
      is_sint32(x + y).
  (* Invariant *)
  Have: (-1) <= (y_1 * (y_1 - 1)).
  (* Invariant *)
  Have: (-49) <= (y_1 * y_1).
  (* Invariant *)
  Have: (-99) <= (y_1 * (49 + y_1)).
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (50 + x) <= ((y * (y - 1)) / 2).
  (* Invariant *)
  Have: x < (y * y).
  (* Invariant *)
  Have: x < ((y * (49 + y)) / 2).
  (* Invariant *)
  Have: x < 0.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: (-50) <= x.
}
Prove: (50 + x + y) <= ((y * x_1) / 2).
Prover Z3 4.8.12 returns Valid (Qed:2ms) (30ms) (67332)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0005/04_merged.c, line 8):
Assume { Type: is_sint32(y). }
Prove: (-1) <= (y * (y - 1)).
Prover Z3 4.8.12 returns Valid (10ms) (29638)
Prover Alt-Ergo 2.5.4 returns Valid (7ms) (22)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0005/04_merged.c, line 9):
Let x_1 = 1 + y.
Let x_2 = x + y.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_1) /\
      is_sint32(x_2).
  (* Invariant *)
  Have: (-1) <= (y_1 * (y_1 - 1)).
  (* Invariant *)
  Have: (-49) <= (y_1 * y_1).
  (* Invariant *)
  Have: (-99) <= (y_1 * (49 + y_1)).
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (50 + x) <= ((y * (y - 1)) / 2).
  (* Invariant *)
  Have: x < (y * y).
  (* Invariant *)
  Have: x < ((y * (49 + y)) / 2).
  (* Invariant *)
  Have: x < 0.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: (-50) <= x.
  (* Invariant *)
  Have: (50 + x + y) <= ((y * x_1) / 2).
}
Prove: x_2 < (x_1 * x_1).
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (32434)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (23)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0005/04_merged.c, line 9):
Assume { Type: is_sint32(y). (* Invariant *) Have: (-1) <= (y * (y - 1)). }
Prove: (-49) <= (y * y).
Prover Z3 4.8.12 returns Valid (10ms) (29508)
Prover Alt-Ergo 2.5.4 returns Valid (4ms) (12)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0005/04_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0005/04_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0005/04_merged.c, line 11):
Let x_1 = x + y.
Let x_2 = 1 + y.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_2) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: (-1) <= (y_1 * (y_1 - 1)).
  (* Invariant *)
  Have: (-49) <= (y_1 * y_1).
  (* Invariant *)
  Have: (-99) <= (y_1 * (49 + y_1)).
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (50 + x) <= ((y * (y - 1)) / 2).
  (* Invariant *)
  Have: x < (y * y).
  (* Invariant *)
  Have: x < ((y * (49 + y)) / 2).
  (* Invariant *)
  Have: x < 0.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: (-50) <= x.
  (* Invariant *)
  Have: (50 + x + y) <= ((y * x_2) / 2).
  (* Invariant *)
  Have: x_1 < (x_2 * x_2).
}
Prove: x_1 < ((x_2 * (50 + y)) / 2).
Prover Z3 4.8.12 returns Valid (Qed:3ms) (20ms) (37801)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0005/04_merged.c, line 11):
Assume {
  Type: is_sint32(y).
  (* Invariant *)
  Have: (-1) <= (y * (y - 1)).
  (* Invariant *)
  Have: (-49) <= (y * y).
}
Prove: (-99) <= (y * (49 + y)).
Prover Z3 4.8.12 returns Timeout (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0005/04_merged.c, line 12):
Let x_1 = x + y.
Let x_2 = 1 + y.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_2) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: (-1) <= (y_1 * (y_1 - 1)).
  (* Invariant *)
  Have: (-49) <= (y_1 * y_1).
  (* Invariant *)
  Have: (-99) <= (y_1 * (49 + y_1)).
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (50 + x) <= ((y * (y - 1)) / 2).
  (* Invariant *)
  Have: x < (y * y).
  (* Invariant *)
  Have: x < ((y * (49 + y)) / 2).
  (* Invariant *)
  Have: x < 0.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: (-50) <= x.
  (* Invariant *)
  Have: (50 + x + y) <= ((y * x_2) / 2).
  (* Invariant *)
  Have: x_1 < (x_2 * x_2).
  (* Invariant *)
  Have: x_1 < ((x_2 * (50 + y)) / 2).
}
Prove: x_1 < 0.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0005/04_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0005/04_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0005/04_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0005/04_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0005/04_merged.c, line 14):
Assume {
  Type: is_sint32(y).
  (* Invariant *)
  Have: (-1) <= (y * (y - 1)).
  (* Invariant *)
  Have: (-49) <= (y * y).
  (* Invariant *)
  Have: (-99) <= (y * (49 + y)).
}
Prove: 0 < y.
Prover Z3 4.8.12 returns Timeout (Qed:0.62ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.62ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0005/04_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0005/04_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0005/04_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0005/04_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0005/04_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0005/04_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0005/04_merged.c, line 18):
Let x_1 = x + y.
Let x_2 = 1 + y.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_2) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: (-1) <= (y_1 * (y_1 - 1)).
  (* Invariant *)
  Have: (-49) <= (y_1 * y_1).
  (* Invariant *)
  Have: (-99) <= (y_1 * (49 + y_1)).
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (50 + x) <= ((y * (y - 1)) / 2).
  (* Invariant *)
  Have: x < (y * y).
  (* Invariant *)
  Have: x < ((y * (49 + y)) / 2).
  (* Invariant *)
  Have: x < 0.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: (-50) <= x.
  (* Invariant *)
  Have: (50 + x + y) <= ((y * x_2) / 2).
  (* Invariant *)
  Have: x_1 < (x_2 * x_2).
  (* Invariant *)
  Have: x_1 < ((x_2 * (50 + y)) / 2).
  (* Invariant *)
  Have: x_1 < 0.
}
Prove: (-50) <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (20ms) (33005)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (5ms) (25)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0005/04_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/04_0005/04_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/04_0005/04_merged.c:2: Warning: 
  No 'assigns' specification for function 'foo04'.
  Callers assumptions might be imprecise.

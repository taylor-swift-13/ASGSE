[kernel] Parsing out/044_0017/044_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] Computing [100 goals...]
[wp] 109 goals scheduled
[wp] [Timeout] typed_foo044_loop_invariant_5_established (Qed 3ms) (Z3)
[wp] [Timeout] typed_foo044_loop_invariant_12_established (Qed 3ms) (Z3)
[wp] [Timeout] typed_foo044_loop_invariant_18_preserved (Qed 7ms) (Z3)
[wp] Proved goals:  106 / 109
  Qed:             101
  Alt-Ergo 2.5.4:    5 (7ms-16ms-27ms)
  Timeout:           3
------------------------------------------------------------
  Function foo044
------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 18):
Let x = i * (if (flag_0 = 1) then 1 else 2).
Let x_1 = 2 * i.
Let x_2 = 1 + k.
Let x_3 = x_2 * (if (flag_0 = 1) then 1 else 2).
Let x_4 = 1 + i.
Let x_5 = (if (flag_0 = 1) then 1 else 2) + x.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(k) /\
      is_sint32(x_4) /\ is_sint32(x) /\ is_sint32(x_5).
  (* Invariant *)
  Have: (0 % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: (0 <= x_3) \/ ((-1) <= k).
  (* Invariant *)
  Have: 0 <= (0 / (if (flag_0 = 1) then 1 else 2)).
  (* Invariant *)
  Have: (flag_0 = 0) \/ (flag_0 = 1).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (flag_0 != 1)).
  (* Invariant *)
  Have: ((flag_0 = 1) -> ((-1) <= k)).
  (* Invariant *)
  Have: (flag_0 != 1) <-> (flag_0 = 0).
  (* Invariant *)
  Have: (x % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: (x <= x_3) \/ (i <= x_2).
  (* Invariant *)
  Have: i <= (x / (if (flag_0 = 1) then 1 else 2)).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x = i)).
  (* Invariant *)
  Have: ((flag_0 != 1) -> (x = x_1)).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      ((i_1 * (if (flag_0 = 1) then 1 else 2)) = x))).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x <= x_2)).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x = x_1)).
  (* Invariant *)
  Have: i <= x.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i <= k.
}
Prove: x_5 <= (x_4 * (if (flag_0 = 1) then 1 else 2)).
Prover Z3 4.8.12 returns Valid (Qed:6ms) (20ms) (10439)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (7ms) (144)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 20):
Let x = i * (if (flag_0 = 1) then 1 else 2).
Let x_1 = (if (flag_0 = 1) then 1 else 2) + x.
Let x_2 = 1 + i.
Let x_3 = 2 * i.
Let x_4 = 1 + k.
Let x_5 = x_4 * (if (flag_0 = 1) then 1 else 2).
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(k) /\
      is_sint32(x_2) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Invariant *)
  Have: (0 % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: (0 <= x_5) \/ ((-1) <= k).
  (* Invariant *)
  Have: 0 <= (0 / (if (flag_0 = 1) then 1 else 2)).
  (* Invariant *)
  Have: (flag_0 = 0) \/ (flag_0 = 1).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (flag_0 != 1)).
  (* Invariant *)
  Have: ((flag_0 = 1) -> ((-1) <= k)).
  (* Invariant *)
  Have: (flag_0 != 1) <-> (flag_0 = 0).
  (* Invariant *)
  Have: (x % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: (x <= x_5) \/ (i <= x_4).
  (* Invariant *)
  Have: i <= (x / (if (flag_0 = 1) then 1 else 2)).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x = i)).
  (* Invariant *)
  Have: ((flag_0 != 1) -> (x = x_3)).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      ((i_1 * (if (flag_0 = 1) then 1 else 2)) = x))).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x <= x_4)).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x = x_3)).
  (* Invariant *)
  Have: i <= x.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i <= k.
  (* Invariant *)
  Have: x_1 <= (x_2 * (if (flag_0 = 1) then 1 else 2)).
}
Prove: (x_1 % (if (flag_0 = 1) then 1 else 2)) = 0.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (63851)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (25ms) (754)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.89ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 22):
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(k) /\ is_sint32(n).
  If flag_0 = 1
  Then { Have: n = 1. }
  Else { Have: n = 2. }
  (* Invariant *)
  Have: (0 % n) = 0.
}
Prove: (0 <= (n * (1 + k))) \/ ((-1) <= k).
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 23):
Let x = i * (if (flag_0 = 1) then 1 else 2).
Let x_1 = (if (flag_0 = 1) then 1 else 2) + x.
Let x_2 = 1 + i.
Let x_3 = 2 * i.
Let x_4 = 1 + k.
Let x_5 = x_4 * (if (flag_0 = 1) then 1 else 2).
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(k) /\
      is_sint32(x_2) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Invariant *)
  Have: (0 % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: (0 <= x_5) \/ ((-1) <= k).
  (* Invariant *)
  Have: 0 <= (0 / (if (flag_0 = 1) then 1 else 2)).
  (* Invariant *)
  Have: (flag_0 = 0) \/ (flag_0 = 1).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (flag_0 != 1)).
  (* Invariant *)
  Have: ((flag_0 = 1) -> ((-1) <= k)).
  (* Invariant *)
  Have: (flag_0 != 1) <-> (flag_0 = 0).
  (* Invariant *)
  Have: (x % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: (x <= x_5) \/ (i <= x_4).
  (* Invariant *)
  Have: i <= (x / (if (flag_0 = 1) then 1 else 2)).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x = i)).
  (* Invariant *)
  Have: ((flag_0 != 1) -> (x = x_3)).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      ((i_1 * (if (flag_0 = 1) then 1 else 2)) = x))).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x <= x_4)).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x = x_3)).
  (* Invariant *)
  Have: i <= x.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i <= k.
  (* Invariant *)
  Have: x_1 <= (x_2 * (if (flag_0 = 1) then 1 else 2)).
  (* Invariant *)
  Have: (x_1 % (if (flag_0 = 1) then 1 else 2)) = 0.
}
Prove: i < (x_1 / (if (flag_0 = 1) then 1 else 2)).
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (44169)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (27ms) (830)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.82ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 29):
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(k).
  (* Residual *)
  When: flag_0 != 1.
  (* Invariant *)
  Have: (-1) <= k.
}
Prove: flag_0 = 0.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (0.81ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 34):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 34):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 35):
Let x = i_1 * (if (flag_0 = 1) then 1 else 2).
Let x_1 = (if (flag_0 = 1) then 1 else 2) + x.
Let x_2 = 2 * i_1.
Let x_3 = 1 + i_1.
Let x_4 = 1 + k.
Let x_5 = x_4 * (if (flag_0 = 1) then 1 else 2).
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i_1) /\ is_sint32(k) /\
      is_sint32(x_3) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Goal *)
  When: (0 <= i) /\ (i <= i_1).
  (* Invariant *)
  Have: (0 % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: (0 <= x_5) \/ ((-1) <= k).
  (* Invariant *)
  Have: 0 <= (0 / (if (flag_0 = 1) then 1 else 2)).
  (* Invariant *)
  Have: (flag_0 = 0) \/ (flag_0 = 1).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (flag_0 != 1)).
  (* Invariant *)
  Have: ((flag_0 = 1) -> ((-1) <= k)).
  (* Invariant *)
  Have: (flag_0 != 1) <-> (flag_0 = 0).
  (* Invariant *)
  Have: (x % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: (x <= x_5) \/ (i_1 <= x_4).
  (* Invariant *)
  Have: i_1 <= (x / (if (flag_0 = 1) then 1 else 2)).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x = i_1)).
  (* Invariant *)
  Have: ((flag_0 != 1) -> (x = x_2)).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      ((i_2 * (if (flag_0 = 1) then 1 else 2)) = x))).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x <= x_4)).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x = x_2)).
  (* Invariant *)
  Have: i_1 <= x.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: i_1 <= k.
  (* Invariant *)
  Have: x_1 <= (x_3 * (if (flag_0 = 1) then 1 else 2)).
  (* Invariant *)
  Have: (x_1 % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: i_1 < (x_1 / (if (flag_0 = 1) then 1 else 2)).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x_1 = x_3)).
  (* Invariant *)
  Have: ((flag_0 != 1) -> (x_1 = (2 + x_2))).
}
Prove: (i * (if (flag_0 = 1) then 1 else 2)) = x_1.
Prover Z3 4.8.12 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (0.87ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 48):
Let x = i * (if (flag_0 = 1) then 1 else 2).
Let x_1 = (if (flag_0 = 1) then 1 else 2) + x.
Let x_2 = 2 * i.
Let x_3 = 2 + x_2.
Let x_4 = 1 + k.
Let x_5 = 1 + i.
Let x_6 = x_5 * (if (flag_0 = 1) then 1 else 2).
Let x_7 = x_4 * (if (flag_0 = 1) then 1 else 2).
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(k) /\
      is_sint32(x_5) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Invariant *)
  Have: (0 % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: (0 <= x_7) \/ ((-1) <= k).
  (* Invariant *)
  Have: 0 <= (0 / (if (flag_0 = 1) then 1 else 2)).
  (* Invariant *)
  Have: (flag_0 = 0) \/ (flag_0 = 1).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (flag_0 != 1)).
  (* Invariant *)
  Have: ((flag_0 = 1) -> ((-1) <= k)).
  (* Invariant *)
  Have: (flag_0 != 1) <-> (flag_0 = 0).
  (* Invariant *)
  Have: (x % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: (x <= x_7) \/ (i <= x_4).
  (* Invariant *)
  Have: i <= (x / (if (flag_0 = 1) then 1 else 2)).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x = i)).
  (* Invariant *)
  Have: ((flag_0 != 1) -> (x = x_2)).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      ((i_1 * (if (flag_0 = 1) then 1 else 2)) = x))).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x <= x_4)).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x = x_2)).
  (* Invariant *)
  Have: i <= x.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i <= k.
  (* Invariant *)
  Have: x_1 <= x_6.
  (* Invariant *)
  Have: (x_1 % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: i < (x_1 / (if (flag_0 = 1) then 1 else 2)).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x_1 = x_5)).
  (* Invariant *)
  Have: ((flag_0 != 1) -> (x_1 = x_3)).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= i) -> ((0 <= i_1) ->
      ((i_1 * (if (flag_0 = 1) then 1 else 2)) = x_1))).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x_1 <= x_4)).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x_1 = x_3)).
}
Prove: x_6 = x_1.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10975)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (11ms) (252)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 49):
Let x = 1 + i.
Let x_1 = x * (if (flag_0 = 1) then 1 else 2).
Let x_2 = 2 * i.
Let x_3 = 2 + x_2.
Let x_4 = 1 + k.
Let x_5 = i + (if (flag_0 = 1) then 1 else 2).
Let x_6 = (if (flag_0 = 1) then 1 else 2)
    + (i * (if (flag_0 = 1) then 1 else 2)).
Let x_7 = x_2 + (if (flag_0 = 1) then 1 else 2).
Let x_8 = x_1 - (if (flag_0 = 1) then 1 else 2).
Let x_9 = x_4 * (if (flag_0 = 1) then 1 else 2).
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(k) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_8).
  (* Invariant *)
  Have: (0 % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: (0 <= x_9) \/ ((-1) <= k).
  (* Invariant *)
  Have: 0 <= (0 / (if (flag_0 = 1) then 1 else 2)).
  (* Invariant *)
  Have: (flag_0 = 0) \/ (flag_0 = 1).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (flag_0 != 1)).
  (* Invariant *)
  Have: ((flag_0 = 1) -> ((-1) <= k)).
  (* Invariant *)
  Have: (flag_0 != 1) <-> (flag_0 = 0).
  (* Invariant *)
  Have: x_1 <= x_6.
  (* Invariant *)
  Have: (x_8 % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: (x_1 <= ((if (flag_0 = 1) then 1 else 2) + x_9)) \/ (i <= x_4).
  (* Invariant *)
  Have: i <= (x_8 / (if (flag_0 = 1) then 1 else 2)).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x_1 = x_5)).
  (* Invariant *)
  Have: ((flag_0 != 1) -> (x_1 = x_7)).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (x_1
         = ((if (flag_0 = 1) then 1 else 2)
            + (i_1 * (if (flag_0 = 1) then 1 else 2)))))).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x_1 <= (1 + k + (if (flag_0 = 1) then 1 else 2)))).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x_1 = x_7)).
  (* Invariant *)
  Have: x_1 = x_6.
  (* Invariant *)
  Have: x_5 <= x_1.
  (* Invariant *)
  Have: if (flag_0 = 1) then (0 < x_1) else (2 <= x_1).
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i <= k.
  (* Invariant *)
  Have: (x_1 % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: i < (x_1 / (if (flag_0 = 1) then 1 else 2)).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x_1 = x)).
  (* Invariant *)
  Have: ((flag_0 != 1) -> (x_1 = x_3)).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= i) -> ((0 <= i_1) ->
      (x_1 = (i_1 * (if (flag_0 = 1) then 1 else 2))))).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x_1 <= x_4)).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x_1 = x_3)).
}
Prove: i < x_1.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (39485)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (11ms) (328)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 50):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 50):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 53):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 53):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 54):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 54):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 55):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 55):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 56):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 56):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 57):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 57):
Prove: true.
Prover Qed returns Valid (0.92ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 58):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 58):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 59):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 59):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 60):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 60):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 61):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 61):
Prove: true.
Prover Qed returns Valid (0.80ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 62):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 62):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 63):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 63):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 65):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 65):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 67):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 67):
Prove: true.
Prover Qed returns Valid (0.99ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 68):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 68):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 69):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 69):
Prove: true.
Prover Qed returns Valid (0.89ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 70):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 70):
Prove: true.
Prover Qed returns Valid (0.80ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0017/044_merged.c, line 71):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0017/044_merged.c, line 71):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/044_0017/044_merged.c, line 72):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/044_0017/044_merged.c:3: Warning: 
  No 'assigns' specification for function 'foo044'.
  Callers assumptions might be imprecise.

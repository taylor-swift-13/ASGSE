[kernel] Parsing out/025_0002/025_merged.c (with preprocessing)
[kernel:typing:no-proto] out/025_0002/025_merged.c:38: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/025_0002/025_merged.c:26: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/025_0002/025_merged.c:6: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[kernel:annot:missing-spec] out/025_0002/025_merged.c:6: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 29 goals scheduled
[wp] [Timeout] typed_foo025_loop_invariant_preserved (Qed 9ms) (Z3)
[wp] [Timeout] typed_foo025_loop_invariant_3_preserved (Qed 8ms) (Z3)
[wp] [Timeout] typed_foo025_loop_invariant_4_preserved (Qed 7ms) (Z3)
[wp] Proved goals:   26 / 29
  Qed:              22
  Alt-Ergo 2.5.4:    4
  Timeout:           3
------------------------------------------------------------
  Function foo025
------------------------------------------------------------

Goal Preservation of Invariant (file out/025_0002/025_merged.c, line 14):
Let x_1 = 1 + y.
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(j) /\ is_sint32(j_1) /\
      is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_1).
  (* Residual *)
  When: i < j.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (y = x) \/ (x_1 = x).
  (* Invariant *)
  Have: j_1 <= i_1.
  (* Invariant *)
  Have: (j_1 = i_1) \/ ((1 + j_1) = i_1).
  (* Invariant *)
  Have: (0 <= x) /\ (0 <= y).
  (* Invariant *)
  Have: 0 <= j_1.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= i.
}
Prove: y < x.
Prover Z3 4.8.12 returns Timeout (Qed:9ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:9ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/025_0002/025_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/025_0002/025_merged.c, line 15):
Let x_1 = 1 + y.
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(j) /\ is_sint32(j_1) /\
      is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_1).
  (* Residual *)
  When: i < j.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (y = x) \/ (x_1 = x).
  (* Invariant *)
  Have: j_1 <= i_1.
  (* Invariant *)
  Have: (j_1 = i_1) \/ ((1 + j_1) = i_1).
  (* Invariant *)
  Have: (0 <= x) /\ (0 <= y).
  (* Invariant *)
  Have: 0 <= j_1.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: y < x.
}
Prove: (x_1 = x) \/ ((2 + y) = x).
Prover Z3 4.8.12 returns Valid (Qed:10ms) (10ms) (32364)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (23)

------------------------------------------------------------

Goal Establishment of Invariant (file out/025_0002/025_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.80ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/025_0002/025_merged.c, line 16):
Let x_1 = 1 + y.
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(j) /\ is_sint32(j_1) /\
      is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_1).
  (* Residual *)
  When: i < j.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (y = x) \/ (x_1 = x).
  (* Invariant *)
  Have: j_1 <= i_1.
  (* Invariant *)
  Have: (j_1 = i_1) \/ ((1 + j_1) = i_1).
  (* Invariant *)
  Have: (0 <= x) /\ (0 <= y).
  (* Invariant *)
  Have: 0 <= j_1.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: y < x.
  (* Invariant *)
  Have: (x_1 = x) \/ ((2 + y) = x).
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:8ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:8ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/025_0002/025_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/025_0002/025_merged.c, line 17):
Let x_1 = 1 + y.
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(j) /\ is_sint32(j_1) /\
      is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(1 + x) /\ is_sint32(x_1).
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (y = x) \/ (x_1 = x).
  (* Invariant *)
  Have: j_1 <= i_1.
  (* Invariant *)
  Have: (j_1 = i_1) \/ ((1 + j_1) = i_1).
  (* Invariant *)
  Have: (0 <= x) /\ (0 <= y).
  (* Invariant *)
  Have: 0 <= j_1.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: j <= i.
}
Prove: (j = i) \/ ((1 + j) = i).
Prover Z3 4.8.12 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/025_0002/025_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/025_0002/025_merged.c, line 18):
Let x_1 = 1 + y.
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(j) /\ is_sint32(j_1) /\
      is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(1 + x) /\ is_sint32(x_1).
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (y = x) \/ (x_1 = x).
  (* Invariant *)
  Have: j_1 <= i_1.
  (* Invariant *)
  Have: (j_1 = i_1) \/ ((1 + j_1) = i_1).
  (* Invariant *)
  Have: (0 <= x) /\ (0 <= y).
  (* Invariant *)
  Have: 0 <= j_1.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: j <= i.
  (* Invariant *)
  Have: (j = i) \/ ((1 + j) = i).
}
Prove: ((-1) <= x) /\ ((-1) <= y).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (51)

------------------------------------------------------------

Goal Establishment of Invariant (file out/025_0002/025_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/025_0002/025_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/025_0002/025_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/025_0002/025_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/025_0002/025_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/025_0002/025_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/025_0002/025_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/025_0002/025_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/025_0002/025_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/025_0002/025_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/025_0002/025_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/025_0002/025_merged.c, line 33):
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(j) /\ is_sint32(j_1) /\
      is_sint32(j_2) /\ is_sint32(j_3) /\ is_sint32(tmp_0) /\
      is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (y = x) \/ ((1 + y) = x).
  (* Invariant *)
  Have: j_3 <= i_1.
  (* Invariant *)
  Have: (j_3 = i_1) \/ ((1 + j_3) = i_1).
  (* Invariant *)
  Have: (0 <= x) /\ (0 <= y).
  (* Invariant *)
  Have: 0 <= j_3.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: 0 <= j_2.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: tmp_0 != 0.
  If y = x
  Then { Have: j_2 = j. }
  Else { Have: j_2 = j_1. Have: (1 + j_1) = j. }
}
Prove: 0 <= j.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (33539)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (5ms) (51)

------------------------------------------------------------

Goal Establishment of Invariant (file out/025_0002/025_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/025_0002/025_merged.c, line 34):
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(i_3) /\
      is_sint32(j) /\ is_sint32(j_1) /\ is_sint32(j_2) /\ is_sint32(j_3) /\
      is_sint32(tmp_0) /\ is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (y = x) \/ ((1 + y) = x).
  (* Invariant *)
  Have: j_3 <= i_3.
  (* Invariant *)
  Have: (j_3 = i_3) \/ ((1 + j_3) = i_3).
  (* Invariant *)
  Have: (0 <= x) /\ (0 <= y).
  (* Invariant *)
  Have: 0 <= j_3.
  (* Invariant *)
  Have: 0 <= i_3.
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: 0 <= j_2.
  (* Invariant *)
  Have: 0 <= i_2.
  (* Then *)
  Have: tmp_0 != 0.
  If y = x
  Then { Have: (i_2 = i_1) /\ (j_2 = j). Have: (1 + i_1) = i. }
  Else { Have: (i_2 = i) /\ (j_2 = j_1). Have: (1 + j_1) = j. }
  (* Invariant *)
  Have: 0 <= j.
}
Prove: 0 <= i.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (34689)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (4ms) (57)

------------------------------------------------------------

Goal Establishment of Invariant (file out/025_0002/025_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/025_0002/025_merged.c, line 21) (1/3):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/025_0002/025_merged.c, line 21) (2/3):
Call Result at line 26
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Loop assigns (file out/025_0002/025_merged.c, line 21) (3/3):
Call Result at line 38
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Loop assigns (file out/025_0002/025_merged.c, line 35) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/025_0002/025_merged.c, line 35) (2/2):
Call Result at line 38
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/025_0002/025_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/025_0002/025_merged.c:3: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/025_0002/025_merged.c:6: Warning: 
  No 'assigns' specification for function 'foo025'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/041_0005/041_merged.c (with preprocessing)
[kernel:typing:implicit-function-declaration] out/041_0005/041_merged.c:15: Warning: 
  Calling undeclared function unknown1. Old style K&R code?
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/041_0005/041_merged.c:12: Warning: 
  Neither code nor implicit assigns clause for function unknown, generating default assigns from the prototype
[kernel:annot:missing-spec] out/041_0005/041_merged.c:12: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 25 goals scheduled
[wp] [Timeout] typed_foo041_loop_invariant_2_preserved (Qed 8ms) (Z3)
[wp] Proved goals:   24 / 25
  Qed:              20
  Alt-Ergo 2.5.4:    4 (5ms-19ms-42ms)
  Timeout:           1
------------------------------------------------------------
  Function foo041
------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0005/041_merged.c, line 19):
Let x = -j_1.
Let x_1 = j - 1 - j_1.
Let x_2 = j - j_1.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(j_1) /\
      is_sint32(n) /\ is_sint32(x_2) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: ((x_2 * x_1) / 2) = j_1.
  (* Invariant *)
  Have: j <= (1 + j_1 + n).
  (* Invariant *)
  Have: (1 + ((x_1 * (2 + j - j_1)) / 2)) = j.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> (((2 + j_1 + i) <= j) -> (i <= j_1))).
  (* Invariant *)
  Have: 0 <= j_1.
  (* Invariant *)
  Have: j <= (2 + j_1 + n).
  (* Invariant *)
  Have: j_1 < j.
}
Prove: ((x_2 * (1 + j - j_1)) / 2) = j.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (20ms) (57563)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (42ms) (495)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0005/041_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0005/041_merged.c, line 20):
Let x = 1 + i.
Let x_1 = (x * (2 + i)) / 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(n) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_1 - 1 - i).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_1 = (1 + i + ((i * x) / 2)).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: x_1 = (1 + ((i * (3 + i)) / 2)).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) -> ((i + i_1) < x_1))).
  (* Invariant *)
  Have: i < x_1.
  (* Invariant *)
  Have: i <= (1 + n).
  (* Invariant *)
  Have: 0 <= i.
}
Prove: i < n.
Prover Z3 4.8.12 returns Timeout (Qed:8ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:8ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0005/041_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.82ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0005/041_merged.c, line 21):
Let x = 1 + i.
Let x_1 = (x * (2 + i)) / 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(n) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_1 - 1 - i).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_1 = (1 + i + ((i * x) / 2)).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: x_1 = (1 + ((i * (3 + i)) / 2)).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) -> ((i + i_1) < x_1))).
  (* Invariant *)
  Have: i < x_1.
  (* Invariant *)
  Have: i <= (1 + n).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: i < n.
}
Prove: ((x * (4 + i)) / 2) = (1 + i + x_1).
Prover Z3 4.8.12 returns Valid (Qed:8ms) (20ms) (37943)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (23ms) (395)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0005/041_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0005/041_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0005/041_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0005/041_merged.c, line 23):
Let x = 1 + i_1.
Let x_1 = (x * (4 + i_1)) / 2.
Let x_2 = 2 * i_1.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i_1) /\ is_sint32(n) /\
      is_sint32(x) /\ is_sint32(x_1 - 2 - x_2) /\ is_sint32(x_1 - 1 - i_1).
  (* Goal *)
  When: (0 <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_1 = (2 + x_2 + ((i_1 * x) / 2)).
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: x_1 = (2 + i_1 + ((i_1 * (3 + i_1)) / 2)).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      ((2 + i_2 + x_2) <= x_1))).
  (* Invariant *)
  Have: (2 + x_2) <= x_1.
  (* Invariant *)
  Have: i_1 <= (1 + n).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: x_1 = (1 + i_1 + ((x * (2 + i_1)) / 2)).
  (* Invariant *)
  Have: i_1 < n.
}
Prove: (i + i_1) < x_1.
Prover Z3 4.8.12 returns Valid (Qed:10ms) (10ms) (33495)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (5ms) (29)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0005/041_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0005/041_merged.c, line 24):
Let x = 1 + i.
Let x_1 = (x * (4 + i)) / 2.
Let x_2 = 2 * i.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(n) /\ is_sint32(x) /\
      is_sint32(x_1 - 2 - x_2) /\ is_sint32(x_1 - 1 - i).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_1 = (2 + x_2 + ((i * x) / 2)).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: x_1 = (2 + i + ((i * (3 + i)) / 2)).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      ((2 + i_1 + x_2) <= x_1))).
  (* Invariant *)
  Have: (2 + x_2) <= x_1.
  (* Invariant *)
  Have: i <= (1 + n).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: x_1 = (1 + i + ((x * (2 + i)) / 2)).
  (* Invariant *)
  Have: i < n.
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= i) -> ((0 <= i_1) -> ((i + i_1) < x_1))).
}
Prove: i < x_1.
Prover Z3 4.8.12 returns Valid (Qed:11ms) (10ms) (34170)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (5ms) (28)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0005/041_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0005/041_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0005/041_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.85ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0005/041_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0005/041_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.86ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0005/041_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0005/041_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0005/041_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0005/041_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.94ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0005/041_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0005/041_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.94ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0005/041_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0005/041_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/041_0005/041_merged.c, line 31):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/041_0005/041_merged.c:12: Warning: 
  No 'assigns' specification for function 'foo041'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/041_0005/041_merged.c:15: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.

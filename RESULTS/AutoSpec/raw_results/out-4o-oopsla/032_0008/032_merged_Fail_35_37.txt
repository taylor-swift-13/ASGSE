[kernel] Parsing out/032_0008/032_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 37 goals scheduled
[wp] [Timeout] typed_foo032_loop_invariant_established (Qed 0.61ms) (Z3)
[wp] [Timeout] typed_foo032_loop_invariant_preserved (Qed 6ms) (Z3)
[wp] Proved goals:   35 / 37
  Qed:              28
  Alt-Ergo 2.5.4:    7 (3ms-10ms-15ms)
  Timeout:           2
------------------------------------------------------------
  Function foo032
------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0008/032_merged.c, line 8):
Let x = 1 + n.
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(n) /\ is_sint32(x).
  (* Invariant *)
  Have: (n % 2) = 0.
  (* Invariant *)
  Have: j <= (i + n).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 1) -> ((0 <= i_1) -> ((i_1 <= n) ->
      false))).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 1) -> ((0 <= i_1) -> ((i_1 < n) ->
      ((1 + i + (i_1 / 2)) = j)))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= n) -> ((i_1 % 2) = 0))).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((0 <= i_1) -> ((i_1 < n) ->
      false))).
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: n <= 199.
}
Prove: (x % 2) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:6ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:6ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0008/032_merged.c, line 8):
Assume { Type: is_sint32(b). }
Prove: b = 0.
Prover Z3 4.8.12 returns Timeout (Qed:0.61ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.61ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0008/032_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0008/032_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (0.87ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0008/032_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0008/032_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (0.80ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0008/032_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0008/032_merged.c, line 11):
Assume { (* Goal *) When: ((i % 2) = 1) /\ (i <= 0) /\ (0 <= i). }
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:0.96ms) (10ms) (19477)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:0.96ms) (5ms) (67)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0008/032_merged.c, line 12):
Let x = 1 + n.
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(n) /\ is_sint32(1 + j) /\
      is_sint32(x).
  (* Goal *)
  When: ((i_1 % 2) = 0) /\ (0 <= i_1) /\ (i_1 <= x).
  (* Invariant *)
  Have: (n % 2) = 0.
  (* Invariant *)
  Have: j <= (i + n).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 1) -> ((0 <= i_2) -> ((i_2 <= n) ->
      false))).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 1) -> ((0 <= i_2) -> ((i_2 < n) ->
      ((1 + i + (i_2 / 2)) = j)))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= n) -> ((i_2 % 2) = 0))).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((0 <= i_2) -> ((i_2 < n) ->
      false))).
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: n <= 199.
  (* Invariant *)
  Have: (x % 2) = 0.
}
Prove: false.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (13ms) (174)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0008/032_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0008/032_merged.c, line 13):
Let x = 1 + n.
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(n) /\ is_sint32(1 + j) /\
      is_sint32(x).
  (* Goal *)
  When: ((i_1 % 2) = 1) /\ (0 <= i_1) /\ (i_1 <= n).
  (* Invariant *)
  Have: (n % 2) = 0.
  (* Invariant *)
  Have: j <= (i + n).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 1) -> ((0 <= i_2) -> ((i_2 <= n) ->
      false))).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 1) -> ((0 <= i_2) -> ((i_2 < n) ->
      ((1 + i + (i_2 / 2)) = j)))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= n) -> ((i_2 % 2) = 0))).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((0 <= i_2) -> ((i_2 < n) ->
      false))).
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: n <= 199.
  (* Invariant *)
  Have: (x % 2) = 0.
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((0 <= i_2) -> ((i_2 <= x) ->
      false))).
}
Prove: (i + (i_1 / 2)) = j.
Prover Z3 4.8.12 returns Valid (Qed:11ms) (10ms) (36675)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (15ms) (217)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0008/032_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0008/032_merged.c, line 14):
Let x = 1 + n.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(j) /\ is_sint32(n) /\ is_sint32(1 + j) /\
      is_sint32(x).
  (* Goal *)
  When: (0 <= i) /\ (i <= x).
  (* Invariant *)
  Have: (n % 2) = 0.
  (* Invariant *)
  Have: j <= (i_1 + n).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 1) -> ((0 <= i_2) -> ((i_2 <= n) ->
      false))).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 1) -> ((0 <= i_2) -> ((i_2 < n) ->
      ((1 + i_1 + (i_2 / 2)) = j)))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= n) -> ((i_2 % 2) = 0))).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((0 <= i_2) -> ((i_2 < n) ->
      false))).
  (* Invariant *)
  Have: i_1 <= j.
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: n <= 199.
  (* Invariant *)
  Have: (x % 2) = 0.
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((0 <= i_2) -> ((i_2 <= x) ->
      false))).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 1) -> ((0 <= i_2) -> ((i_2 <= n) ->
      ((i_1 + (i_2 / 2)) = j)))).
}
Prove: (i % 2) != 0.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (37301)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (13ms) (179)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0008/032_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0008/032_merged.c, line 15):
Let x = 1 + n.
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(n) /\ is_sint32(1 + j) /\
      is_sint32(x).
  (* Goal *)
  When: ((i_1 % 2) = 1) /\ (0 <= i_1) /\ (i_1 <= n).
  (* Invariant *)
  Have: (n % 2) = 0.
  (* Invariant *)
  Have: j <= (i + n).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 1) -> ((0 <= i_2) -> ((i_2 <= n) ->
      false))).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 1) -> ((0 <= i_2) -> ((i_2 < n) ->
      ((1 + i + (i_2 / 2)) = j)))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= n) -> ((i_2 % 2) = 0))).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((0 <= i_2) -> ((i_2 < n) ->
      false))).
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: n <= 199.
  (* Invariant *)
  Have: (x % 2) = 0.
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((0 <= i_2) -> ((i_2 <= x) ->
      false))).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 1) -> ((0 <= i_2) -> ((i_2 <= n) ->
      ((i + (i_2 / 2)) = j)))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= x) -> ((i_2 % 2) != 0))).
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:10ms) (10ms) (37209)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (9ms) (185)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0008/032_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0008/032_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0008/032_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0008/032_merged.c, line 17):
Let x = 1 + n.
Let x_1 = 1 + j.
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(n) /\ is_sint32(x_1) /\
      is_sint32(x).
  (* Invariant *)
  Have: (n % 2) = 0.
  (* Invariant *)
  Have: j <= (i + n).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 1) -> ((0 <= i_1) -> ((i_1 <= n) ->
      false))).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 1) -> ((0 <= i_1) -> ((i_1 < n) ->
      ((1 + i + (i_1 / 2)) = j)))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= n) -> ((i_1 % 2) = 0))).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((0 <= i_1) -> ((i_1 < n) ->
      false))).
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: n <= 199.
  (* Invariant *)
  Have: (x % 2) = 0.
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((0 <= i_1) -> ((i_1 <= x) ->
      false))).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 1) -> ((0 <= i_1) -> ((i_1 <= n) ->
      ((i + (i_1 / 2)) = j)))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= x) -> ((i_1 % 2) != 0))).
}
Prove: i <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:11ms) (10ms) (34977)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (3ms) (17)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0008/032_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0008/032_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0008/032_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0008/032_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0008/032_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0008/032_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0008/032_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0008/032_merged.c, line 21):
Let x = 1 + j.
Let x_1 = 1 + n.
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(n) /\ is_sint32(x) /\
      is_sint32(x_1).
  (* Goal *)
  When: (x_1 % 2) = 0.
  (* Invariant *)
  Have: (n % 2) = 0.
  (* Invariant *)
  Have: j <= (i + n).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 1) -> ((0 <= i_1) -> ((i_1 <= n) ->
      false))).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 1) -> ((0 <= i_1) -> ((i_1 < n) ->
      ((1 + i + (i_1 / 2)) = j)))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= n) -> ((i_1 % 2) = 0))).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((0 <= i_1) -> ((i_1 < n) ->
      false))).
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: n <= 199.
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((0 <= i_1) -> ((i_1 <= x_1) ->
      false))).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 1) -> ((0 <= i_1) -> ((i_1 <= n) ->
      ((i + (i_1 / 2)) = j)))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= x_1) -> ((i_1 % 2) != 0))).
  (* Invariant *)
  Have: i <= x.
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (36148)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (11ms) (133)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0008/032_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0008/032_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0008/032_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0008/032_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0008/032_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0008/032_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0008/032_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.88ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0008/032_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0008/032_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.97ms)

------------------------------------------------------------

Goal Loop assigns (file out/032_0008/032_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/032_0008/032_merged.c:3: Warning: 
  No 'assigns' specification for function 'foo032'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/040_0004/040_merged.c (with preprocessing)
[kernel:typing:no-proto] out/040_0004/040_merged.c:52: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/040_0004/040_merged.c:96: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/040_0004/040_merged.c:7: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[kernel:annot:missing-spec] out/040_0004/040_merged.c:7: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] Computing [100 goals...]
[wp] 129 goals scheduled
[wp] [Timeout] typed_foo040_assert (Qed 11ms) (Z3)
[wp] Proved goals:  128 / 129
  Qed:             115
  Alt-Ergo 2.5.4:   13 (4ms-21ms-63ms)
  Timeout:           1
------------------------------------------------------------
  Function foo040
------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 17):
Let x = 1 + j.
Let x_1 = 2 + i.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Residual *)
  When: (x_1 % 2) != 0.
  (* Goal *)
  When: (x % 2) = 1.
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: forall i_1 : Z. let x_2 = i_1 % 2 in ((x_2 = 0) -> ((0 <= i_1) ->
      (x_2 != 1))).
  (* Invariant *)
  Have: (i / 2) <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (i < (j + i_1))).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (36759)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (15ms) (242)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 18):
Let x = 2 + j.
Let x_1 = 2 + i.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x).
  (* Residual *)
  When: (x_1 % 2) = 0.
  (* Goal *)
  When: (x % 2) = 0.
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: forall i_1 : Z. let x_2 = i_1 % 2 in ((x_2 = 0) -> ((0 <= i_1) ->
      (x_2 != 1))).
  (* Invariant *)
  Have: (i / 2) <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (i < (j + i_1))).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (40ms) (105592)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (16ms) (248)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 19):
Let x = j % 2.
Let x_1 = 2 + i.
Let x_2 = x_1 % 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(j_1) /\ is_sint32(j_2) /\ is_sint32(j_3) /\
      is_sint32(tmp_0) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: forall i_1 : Z. let x_3 = i_1 % 2 in ((x_3 = 0) -> ((0 <= i_1) ->
      (x_3 != 1))).
  (* Invariant *)
  Have: (i / 2) <= j_3.
  (* Invariant *)
  Have: (j_3 % 2) = 1.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (i < (j_3 + i_1))).
  (* Invariant *)
  Have: 0 < j_3.
  (* Invariant *)
  Have: i < j_3.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: tmp_0 != 0.
  If x_2 = 0
  Then { Have: j_3 = j_1. Have: (2 + j_1) = j. }
  Else { Have: j_3 = j_2. Have: (1 + j_2) = j. }
  (* Invariant *)
  Have: ((x = 1) -> (x_2 = 0)).
  (* Invariant *)
  Have: ((x = 0) -> (x_2 != 0)).
}
Prove: (x_1 / 2) <= j.
Prover Z3 4.8.12 returns Valid (Qed:14ms) (10ms) (38757)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:14ms) (20ms) (370)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 20):
Let x = 2 + i.
Let x_1 = 1 + j.
Let x_2 = x % 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x).
  (* Residual *)
  When: x_2 != 0.
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: forall i_1 : Z. let x_3 = i_1 % 2 in ((x_3 = 0) -> ((0 <= i_1) ->
      (x_3 != 1))).
  (* Invariant *)
  Have: (i / 2) <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (i < (j + i_1))).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x_1 % 2) != 1.
  (* Invariant *)
  Have: (x / 2) <= x_1.
}
Prove: x_2 = 1.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (37196)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (21ms) (315)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.85ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 21):
Let x = 2 + i.
Let x_1 = 1 + j.
Let x_2 = x_1 % 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x).
  (* Goal *)
  When: (x % 2) = 1.
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: forall i_1 : Z. let x_3 = i_1 % 2 in ((x_3 = 0) -> ((0 <= i_1) ->
      (x_3 != 1))).
  (* Invariant *)
  Have: (i / 2) <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (i < (j + i_1))).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: x_2 != 1.
  (* Invariant *)
  Have: (x / 2) <= x_1.
}
Prove: x_2 = 0.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (37183)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (16ms) (287)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.82ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 23):
Let x = 2 + i.
Let x_1 = 2 + j.
Let x_2 = x_1 % 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Goal *)
  When: (x % 2) = 0.
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: forall i_1 : Z. let x_3 = i_1 % 2 in ((x_3 = 0) -> ((0 <= i_1) ->
      (x_3 != 1))).
  (* Invariant *)
  Have: (i / 2) <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (i < (j + i_1))).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: x_2 != 0.
  (* Invariant *)
  Have: (x / 2) <= x_1.
}
Prove: x_2 = 1.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (37161)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (20ms) (315)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 25):
Let x = 1 + j.
Let x_1 = 2 + i.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Goal *)
  When: 0 < flag_0.
  (* Invariant *)
  Have: forall i_1 : Z. let x_2 = i_1 % 2 in ((x_2 = 0) -> ((0 <= i_1) ->
      (x_2 != 1))).
  (* Invariant *)
  Have: (i / 2) <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (i < (j + i_1))).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x_1 / 2) <= x.
  (* Invariant *)
  Have: (x_1 % 2) = 1.
  (* Invariant *)
  Have: (x % 2) = 0.
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (37952)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (15ms) (283)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 28):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 30):
Let x = 2 + i.
Let x_1 = 2 + j.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Goal *)
  When: 0 <= i_1.
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: forall i_2 : Z. let x_2 = i_2 % 2 in ((x_2 = 0) -> ((0 <= i_2) ->
      (x_2 != 1))).
  (* Invariant *)
  Have: (i / 2) <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> (i < (j + i_2))).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x / 2) <= x_1.
  (* Invariant *)
  Have: (x_1 % 2) = 1.
  (* Invariant *)
  Have: (x % 2) = 0.
}
Prove: i < (i_1 + j).
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (33042)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (4ms) (29)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (0.97ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (0.79ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 37):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (0.73ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 41):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 42):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 43):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 44):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (0.98ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 45):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (0.81ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 63):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 63):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 65):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 65):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 66):
Let x = -i.
Let x_1 = j - i.
Let x_2 = i_1 * x_1.
Let x_3 = a * x_1.
Let x_4 = 1 + a.
Assume {
  Type: is_sint32(a) /\ is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0_0) /\ is_sint32(x_4) /\ is_sint32(x_2) /\
      is_sint32(j + x_2 - i).
  (* Goal *)
  When: 0 < flag_0.
  (* Invariant *)
  Have: forall i_3 : Z. let x_5 = i_3 % 2 in ((x_5 = 0) -> ((0 <= i_3) ->
      (x_5 != 1))).
  (* Invariant *)
  Have: (i / 2) <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> (i < (j + i_3))).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: ((i_2 * x_1) = 0) /\ (i_2 <= 0) /\ (0 <= i_2).
  (* Invariant *)
  Have: x_3 <= x_2.
  (* Invariant *)
  Have: x_2 = x_3.
  (* Invariant *)
  Have: forall i_3 : Z. ((i_3 <= a) -> ((0 <= i_3) -> ((i_3 * x_1) <= x_2))).
  (* Invariant *)
  Have: (i_1 <= a) /\ (0 <= i_1).
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: ((x_2 = 0) -> (a = 0)).
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: tmp_0_0 != 0.
}
Prove: (i + (x_4 * x_1)) <= (j + x_2).
Prover Z3 4.8.12 returns Valid (Qed:14ms) (10ms) (10757)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:14ms) (7ms) (134)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 67):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 67):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 68):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 68):
Prove: true.
Prover Qed returns Valid (0.78ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 69):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 69):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 70):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 70):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 71):
Let x = 1 + a.
Let x_1 = -i_1.
Let x_2 = j - i_1.
Let x_3 = i_1 + (x * x_2).
Let x_4 = i * x_2.
Let x_5 = j + x_4.
Let x_6 = a * x_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(flag_0) /\ is_sint32(i_1) /\
      is_sint32(j) /\ is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(x_4) /\
      is_sint32(j + x_4 - i_1).
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: forall i_3 : Z. let x_7 = i_3 % 2 in ((x_7 = 0) -> ((0 <= i_3) ->
      (x_7 != 1))).
  (* Invariant *)
  Have: (i_1 / 2) <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i_1 % 2) = 0.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> (i_1 < (j + i_3))).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: i_1 < j.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: ((i_2 * x_2) = 0) /\ (i_2 <= 0) /\ (0 <= i_2).
  (* Invariant *)
  Have: x_6 <= x_4.
  (* Invariant *)
  Have: x_4 = x_6.
  (* Invariant *)
  Have: forall i_3 : Z. ((i_3 <= a) -> ((0 <= i_3) -> ((i_3 * x_2) <= x_4))).
  (* Invariant *)
  Have: (i <= a) /\ (0 <= i).
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: ((x_4 = 0) -> (a = 0)).
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: x_3 <= x_5.
}
Prove: x_5 = x_3.
Prover Z3 4.8.12 returns Valid (Qed:15ms) (10801)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:15ms) (7ms) (144)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 71):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 72):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 72):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 73):
Let x = 1 + a.
Let x_1 = j - i_1.
Let x_2 = x * x_1.
Let x_3 = i_1 + x_2.
Let x_4 = j + (a * x_1).
Assume {
  Type: is_sint32(a) /\ is_sint32(flag_0) /\ is_sint32(i_1) /\
      is_sint32(j) /\ is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(i_1 + x_2 - j).
  (* Goal *)
  When: (0 <= i) /\ (i <= x).
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: forall i_4 : Z. let x_5 = i_4 % 2 in ((x_5 = 0) -> ((0 <= i_4) ->
      (x_5 != 1))).
  (* Invariant *)
  Have: (i_1 / 2) <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i_1 % 2) = 0.
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> (i_1 < (j + i_4))).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: i_1 < j.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: ((i_2 * x_1) = 0) /\ (i_2 <= 0) /\ (0 <= i_2).
  (* Invariant *)
  Have: x_4 <= x_3.
  (* Invariant *)
  Have: x_4 = x_3.
  (* Invariant *)
  Have: forall i_4 : Z. ((i_4 <= a) -> ((0 <= i_4) ->
      ((j + (i_4 * x_1)) <= x_3))).
  (* Invariant *)
  Have: ((j + (i_3 * x_1)) = x_3) /\ (i_3 <= a) /\ (0 <= i_3).
  (* Invariant *)
  Have: j <= x_3.
  (* Invariant *)
  Have: ((x_3 = j) -> (a = 0)).
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: tmp_0_0 != 0.
}
Prove: (i * x_1) <= x_2.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:17ms) (63ms) (1094)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 73):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 74):
Let x = 1 + a.
Let x_1 = j - i.
Let x_2 = x * x_1.
Let x_3 = i + x_2.
Let x_4 = j + (a * x_1).
Assume {
  Type: is_sint32(a) /\ is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(i + x_2 - j).
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: forall i_3 : Z. let x_5 = i_3 % 2 in ((x_5 = 0) -> ((0 <= i_3) ->
      (x_5 != 1))).
  (* Invariant *)
  Have: (i / 2) <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> (i < (j + i_3))).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: ((i_1 * x_1) = 0) /\ (i_1 <= 0) /\ (0 <= i_1).
  (* Invariant *)
  Have: x_4 <= x_3.
  (* Invariant *)
  Have: x_4 = x_3.
  (* Invariant *)
  Have: forall i_3 : Z. ((i_3 <= a) -> ((0 <= i_3) ->
      ((j + (i_3 * x_1)) <= x_3))).
  (* Invariant *)
  Have: ((j + (i_2 * x_1)) = x_3) /\ (i_2 <= a) /\ (0 <= i_2).
  (* Invariant *)
  Have: j <= x_3.
  (* Invariant *)
  Have: ((x_3 = j) -> (a = 0)).
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 <= x) -> ((i_3 * x_1) <= x_2))).
}
Prove: exists i_3 : Z. (x_2 = (i_3 * x_1)) /\ (0 <= i_3) /\ (i_3 <= x).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:15ms) (59ms) (1109)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 74):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 75):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 75):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 76):
Let x = 1 + a.
Let x_1 = j - i_1.
Let x_2 = i * x_1.
Let x_3 = x * x_1.
Let x_4 = i_1 + x_2.
Let x_5 = j + (a * x_1).
Assume {
  Type: is_sint32(a) /\ is_sint32(flag_0) /\ is_sint32(i_1) /\
      is_sint32(j) /\ is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(i_1 + x_2 - j).
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: forall i_4 : Z. let x_6 = i_4 % 2 in ((x_6 = 0) -> ((0 <= i_4) ->
      (x_6 != 1))).
  (* Invariant *)
  Have: (i_1 / 2) <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i_1 % 2) = 0.
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> (i_1 < (j + i_4))).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: i_1 < j.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: ((i_2 * x_1) = 0) /\ (i_2 <= 0) /\ (0 <= i_2).
  (* Invariant *)
  Have: x_5 <= x_4.
  (* Invariant *)
  Have: x_5 = x_4.
  (* Invariant *)
  Have: forall i_4 : Z. ((i_4 <= a) -> ((0 <= i_4) ->
      ((j + (i_4 * x_1)) <= x_4))).
  (* Invariant *)
  Have: ((j + (i_3 * x_1)) = x_4) /\ (i_3 <= a) /\ (0 <= i_3).
  (* Invariant *)
  Have: j <= x_4.
  (* Invariant *)
  Have: ((x_4 = j) -> (a = 0)).
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: x_3 <= x_2.
  (* Invariant *)
  Have: x_3 = x_2.
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 <= x) -> ((i_4 * x_1) <= x_2))).
  (* Invariant *)
  Have: (0 <= i) /\ (i <= x).
}
Prove: 0 <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:13ms) (10ms) (37231)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (9ms) (187)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 76):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 77):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 77):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 78):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 78):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 79):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 79):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 80):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 80):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 81):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 81):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 82):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 82):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 83):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 83):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 84):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 84):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 85):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 85):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 86):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 86):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 87):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 87):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 88):
Prove: true.
Prover Qed returns Valid (9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 88):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 89):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 89):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 90):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 90):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 91):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 91):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0004/040_merged.c, line 92):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0004/040_merged.c, line 92):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Assertion (file out/040_0004/040_merged.c, line 100):
Let x = j - i_1.
Let x_1 = i * x.
Let x_2 = a * x.
Assume {
  Type: is_sint32(a) /\ is_sint32(flag_0) /\ is_sint32(i_1) /\
      is_sint32(j) /\ is_sint32(x_1).
  (* Goal *)
  When: flag_0 != 0.
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: forall i_3 : Z. let x_3 = i_3 % 2 in ((x_3 = 0) -> ((0 <= i_3) ->
      (x_3 != 1))).
  (* Invariant *)
  Have: (i_1 / 2) <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i_1 % 2) = 0.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> (i_1 < (j + i_3))).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: i_1 < j.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: ((i_2 * x) = 0) /\ (i_2 <= 0) /\ (0 <= i_2).
  (* Invariant *)
  Have: x_2 <= x_1.
  (* Invariant *)
  Have: x_1 = x_2.
  (* Invariant *)
  Have: forall i_3 : Z. ((i_3 <= a) -> ((0 <= i_3) -> ((i_3 * x) <= x_1))).
  (* Invariant *)
  Have: (i <= a) /\ (0 <= i).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: ((x_1 = 0) -> (a = 0)).
  (* Invariant *)
  Have: 0 <= a.
}
Prove: x_1 = a.
Prover Z3 4.8.12 returns Timeout (Qed:11ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:11ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/040_0004/040_merged.c, line 49) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/040_0004/040_merged.c, line 49) (2/2):
Call Result at line 52
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Loop assigns (file out/040_0004/040_merged.c, line 93) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/040_0004/040_merged.c, line 93) (2/2):
Call Result at line 96
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/040_0004/040_merged.c:1: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/040_0004/040_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/040_0004/040_merged.c:7: Warning: 
  No 'assigns' specification for function 'foo040'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/041_0015/041_merged.c (with preprocessing)
[kernel:typing:implicit-function-declaration] out/041_0015/041_merged.c:15: Warning: 
  Calling undeclared function unknown1. Old style K&R code?
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/041_0015/041_merged.c:12: Warning: 
  Neither code nor implicit assigns clause for function unknown, generating default assigns from the prototype
[kernel:annot:missing-spec] out/041_0015/041_merged.c:12: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 97 goals scheduled
[wp] [Timeout] typed_foo041_loop_invariant_6_preserved (Qed 19ms) (Z3)
[wp] [Timeout] typed_foo041_loop_invariant_18_established (Qed 3ms) (Z3)
[wp] Proved goals:   95 / 97
  Qed:              89
  Alt-Ergo 2.5.4:    6 (4ms-6ms)
  Timeout:           2
------------------------------------------------------------
  Function foo041
------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 24):
Let x = 1 + i.
Let x_1 = i * x.
Let x_2 = x_1 / 2.
Let x_3 = (i * (i - 1)) / 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(k) /\ is_sint32(n) /\
      is_sint32(x) /\ is_sint32(x_2) /\ is_sint32(1 + i + x_2).
  (* Pre-condition *)
  Have: 0 < n.
  If flag_0 != 0
  Else { Have: k = 1. }
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: x_3 <= x_2.
  (* Invariant *)
  Have: x_2 = (i + x_3).
  (* Invariant *)
  Have: x_2 = x_3.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: i <= (1 + n).
  (* Invariant *)
  Have: ((i = 0) -> (x_2 = 0)).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 < i) ->
      (((i_1 * (1 + i_1)) / 2) <= x_2))).
  (* Invariant *)
  Have: (-1) <= x_1.
  (* Invariant *)
  Have: ((0 < i) -> (i <= x_2)).
  (* Invariant *)
  Have: ((0 < i) -> (2 <= x_1)).
  (* Invariant *)
  Have: (i = 0) \/ (2 <= x_1).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 < i) ->
      (((i_1 * (i_1 - 1)) / 2) <= x_2))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) -> (i_1 <= x_2))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (((i_1 * (1 + i_1)) / 2) <= x_2))).
  (* Then *)
  Have: i <= n.
  (* Invariant *)
  Have: (-1) <= i.
}
Prove: i = (-1).
Prover Z3 4.8.12 returns Timeout (Qed:19ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:19ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.99ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.84ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 36):
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(k) /\ is_sint32(n).
  (* Residual *)
  When: flag_0 != 0.
  (* Pre-condition *)
  Have: 0 < n.
}
Prove: 0 < k.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (0.99ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 44):
Let x = 1 + i_1.
Let x_1 = 2 + i_1.
Let x_2 = (x * x_1) / 2.
Let x_3 = (i_1 * x) / 2.
Let x_4 = 2 * i_1.
Let x_5 = 1 + i_1 + x_3.
Let x_6 = (i_1 * (i_1 - 1)) / 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i_1) /\ is_sint32(k) /\
      is_sint32(n) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_2 - 1 - i_1).
  (* Goal *)
  When: (0 < i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 < n.
  If flag_0 != 0
  Else { Have: k = 1. }
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (i_1 + x_6) < x_2.
  (* Invariant *)
  Have: x_2 = (1 + x_4 + x_6).
  (* Invariant *)
  Have: x_2 = (1 + i_1 + x_6).
  (* Invariant *)
  Have: (x_2 = x_5) /\ (0 <= i_1).
  (* Invariant *)
  Have: x_2 <= x_5.
  (* Invariant *)
  Have: i_1 <= (1 + n).
  (* Invariant *)
  Have: ((i_1 = 0) -> (x_2 = x)).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < i_1) ->
      ((i_1 + ((i_2 * (1 + i_2)) / 2)) < x_2))).
  (* Invariant *)
  Have: i_1 < x_2.
  (* Invariant *)
  Have: ((0 < i_1) -> (x_4 < x_2)).
  (* Invariant *)
  Have: ((0 < i_1) -> (x_1 <= x_2)).
  (* Invariant *)
  Have: (i_1 = 0) \/ (x_1 <= x_2).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < i_1) ->
      ((i_1 + ((i_2 * (i_2 - 1)) / 2)) < x_2))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) -> ((i_1 + i_2) < x_2))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      ((i_1 + ((i_2 * (1 + i_2)) / 2)) < x_2))).
  (* Then *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: x_3 <= x_2.
  (* Invariant *)
  Have: x_2 = x_3.
  (* Invariant *)
  Have: (-1) <= i_1.
  (* Invariant *)
  Have: ((i_1 = (-1)) -> (x_2 = 0)).
}
Prove: ((i * (1 + i)) / 2) <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:23ms) (10ms) (40737)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:23ms) (5ms) (34)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 47):
Let x = 1 + i.
Let x_1 = 2 + i.
Let x_2 = x * x_1.
Let x_3 = x_2 / 2.
Let x_4 = (i * x) / 2.
Let x_5 = 2 * i.
Let x_6 = 1 + i + x_4.
Let x_7 = (i * (i - 1)) / 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(k) /\ is_sint32(n) /\
      is_sint32(x) /\ is_sint32(x_3) /\ is_sint32(x_3 - 1 - i).
  (* Pre-condition *)
  Have: 0 < n.
  If flag_0 != 0
  Else { Have: k = 1. }
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (i + x_7) < x_3.
  (* Invariant *)
  Have: x_3 = (1 + x_5 + x_7).
  (* Invariant *)
  Have: x_3 = (1 + i + x_7).
  (* Invariant *)
  Have: (x_3 = x_6) /\ (0 <= i).
  (* Invariant *)
  Have: x_3 <= x_6.
  (* Invariant *)
  Have: i <= (1 + n).
  (* Invariant *)
  Have: ((i = 0) -> (x_3 = x)).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 < i) ->
      ((i + ((i_1 * (1 + i_1)) / 2)) < x_3))).
  (* Invariant *)
  Have: i < x_3.
  (* Invariant *)
  Have: ((0 < i) -> (x_5 < x_3)).
  (* Invariant *)
  Have: ((0 < i) -> (x_1 <= x_3)).
  (* Invariant *)
  Have: (i = 0) \/ (x_1 <= x_3).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 < i) ->
      ((i + ((i_1 * (i_1 - 1)) / 2)) < x_3))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) -> ((i + i_1) < x_3))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      ((i + ((i_1 * (1 + i_1)) / 2)) < x_3))).
  (* Then *)
  Have: i <= n.
  (* Invariant *)
  Have: x_4 <= x_3.
  (* Invariant *)
  Have: x_3 = x_4.
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: ((i = (-1)) -> (x_3 = 0)).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= i) ->
      (((i_1 * (1 + i_1)) / 2) <= x_3))).
}
Prove: (-1) <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:25ms) (10ms) (40636)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:25ms) (5ms) (34)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (0.96ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 53):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 53):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 54):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 54):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 55):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 55):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 56):
Let x = 1 + i.
Let x_1 = 2 + i.
Let x_2 = x * x_1.
Let x_3 = x_2 / 2.
Let x_4 = (i * x) / 2.
Let x_5 = 2 * i.
Let x_6 = 1 + i + x_4.
Let x_7 = (i * (i - 1)) / 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(k) /\ is_sint32(n) /\
      is_sint32(x) /\ is_sint32(x_3) /\ is_sint32(x_3 - 1 - i).
  (* Goal *)
  When: 0 <= i.
  (* Pre-condition *)
  Have: 0 < n.
  If flag_0 != 0
  Else { Have: k = 1. }
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (i + x_7) < x_3.
  (* Invariant *)
  Have: x_3 = (1 + x_5 + x_7).
  (* Invariant *)
  Have: x_3 = (1 + i + x_7).
  (* Invariant *)
  Have: x_3 = x_6.
  (* Invariant *)
  Have: x_3 <= x_6.
  (* Invariant *)
  Have: i <= (1 + n).
  (* Invariant *)
  Have: ((i = 0) -> (x_3 = x)).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 < i) ->
      ((i + ((i_1 * (1 + i_1)) / 2)) < x_3))).
  (* Invariant *)
  Have: i < x_3.
  (* Invariant *)
  Have: ((0 < i) -> (x_5 < x_3)).
  (* Invariant *)
  Have: ((0 < i) -> (x_1 <= x_3)).
  (* Invariant *)
  Have: (i = 0) \/ (x_1 <= x_3).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 < i) ->
      ((i + ((i_1 * (i_1 - 1)) / 2)) < x_3))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) -> ((i + i_1) < x_3))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      ((i + ((i_1 * (1 + i_1)) / 2)) < x_3))).
  (* Then *)
  Have: i <= n.
  (* Invariant *)
  Have: x_4 <= x_3.
  (* Invariant *)
  Have: x_3 = x_4.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= i) ->
      (((i_1 * (1 + i_1)) / 2) <= x_3))).
  (* Invariant *)
  Have: (-1) <= x_2.
}
Prove: 2 <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:22ms) (20ms) (40440)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:22ms) (5ms) (33)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 56):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 57):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 57):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 58):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 58):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 59):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 59):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 60):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 60):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 61):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 61):
Prove: true.
Prover Qed returns Valid (0.99ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 62):
Let x = 1 + i_1.
Let x_1 = 2 + i_1.
Let x_2 = x * x_1.
Let x_3 = x_2 / 2.
Let x_4 = (i_1 * x) / 2.
Let x_5 = 2 * i_1.
Let x_6 = 1 + i_1 + x_4.
Let x_7 = (i_1 * (i_1 - 1)) / 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i_1) /\ is_sint32(k) /\
      is_sint32(n) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_3 - 1 - i_1).
  (* Goal *)
  When: (0 < i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 < n.
  If flag_0 != 0
  Else { Have: k = 1. }
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (i_1 + x_7) < x_3.
  (* Invariant *)
  Have: x_3 = (1 + x_5 + x_7).
  (* Invariant *)
  Have: x_3 = (1 + i_1 + x_7).
  (* Invariant *)
  Have: (x_3 = x_6) /\ (0 <= i_1).
  (* Invariant *)
  Have: x_3 <= x_6.
  (* Invariant *)
  Have: i_1 <= (1 + n).
  (* Invariant *)
  Have: ((i_1 = 0) -> (x_3 = x)).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < i_1) ->
      ((i_1 + ((i_2 * (1 + i_2)) / 2)) < x_3))).
  (* Invariant *)
  Have: i_1 < x_3.
  (* Invariant *)
  Have: ((0 < i_1) -> (x_5 < x_3)).
  (* Invariant *)
  Have: ((0 < i_1) -> (x_1 <= x_3)).
  (* Invariant *)
  Have: (i_1 = 0) \/ (x_1 <= x_3).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < i_1) ->
      ((i_1 + ((i_2 * (i_2 - 1)) / 2)) < x_3))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) -> ((i_1 + i_2) < x_3))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      ((i_1 + ((i_2 * (1 + i_2)) / 2)) < x_3))).
  (* Then *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: x_4 <= x_3.
  (* Invariant *)
  Have: x_3 = x_4.
  (* Invariant *)
  Have: (-1) <= i_1.
  (* Invariant *)
  Have: ((i_1 = (-1)) -> (x_3 = 0)).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 <= i_1) ->
      (((i_2 * (1 + i_2)) / 2) <= x_3))).
  (* Invariant *)
  Have: (-1) <= x_2.
  (* Invariant *)
  Have: 2 <= x_2.
}
Prove: ((i * (i - 1)) / 2) <= x_3.
Prover Z3 4.8.12 returns Valid (Qed:26ms) (10ms) (41943)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:26ms) (4ms) (35)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 62):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 63):
Let x = 1 + i_1.
Let x_1 = 2 + i_1.
Let x_2 = x * x_1.
Let x_3 = x_2 / 2.
Let x_4 = (i_1 * x) / 2.
Let x_5 = 2 * i_1.
Let x_6 = 1 + i_1 + x_4.
Let x_7 = (i_1 * (i_1 - 1)) / 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i_1) /\ is_sint32(k) /\
      is_sint32(n) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_3 - 1 - i_1).
  (* Goal *)
  When: (0 <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 < n.
  If flag_0 != 0
  Else { Have: k = 1. }
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (i_1 + x_7) < x_3.
  (* Invariant *)
  Have: x_3 = (1 + x_5 + x_7).
  (* Invariant *)
  Have: x_3 = (1 + i_1 + x_7).
  (* Invariant *)
  Have: (x_3 = x_6) /\ (0 <= i_1).
  (* Invariant *)
  Have: x_3 <= x_6.
  (* Invariant *)
  Have: i_1 <= (1 + n).
  (* Invariant *)
  Have: ((i_1 = 0) -> (x_3 = x)).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < i_1) ->
      ((i_1 + ((i_2 * (1 + i_2)) / 2)) < x_3))).
  (* Invariant *)
  Have: i_1 < x_3.
  (* Invariant *)
  Have: ((0 < i_1) -> (x_5 < x_3)).
  (* Invariant *)
  Have: ((0 < i_1) -> (x_1 <= x_3)).
  (* Invariant *)
  Have: (i_1 = 0) \/ (x_1 <= x_3).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < i_1) ->
      ((i_1 + ((i_2 * (i_2 - 1)) / 2)) < x_3))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) -> ((i_1 + i_2) < x_3))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      ((i_1 + ((i_2 * (1 + i_2)) / 2)) < x_3))).
  (* Then *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: x_4 <= x_3.
  (* Invariant *)
  Have: x_3 = x_4.
  (* Invariant *)
  Have: (-1) <= i_1.
  (* Invariant *)
  Have: ((i_1 = (-1)) -> (x_3 = 0)).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 <= i_1) ->
      (((i_2 * (1 + i_2)) / 2) <= x_3))).
  (* Invariant *)
  Have: (-1) <= x_2.
  (* Invariant *)
  Have: 2 <= x_2.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 <= i_1) ->
      (((i_2 * (i_2 - 1)) / 2) <= x_3))).
}
Prove: i <= x_3.
Prover Z3 4.8.12 returns Valid (Qed:31ms) (10ms) (40705)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:31ms) (5ms) (35)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 63):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 64):
Let x = 1 + i_1.
Let x_1 = 2 + i_1.
Let x_2 = x * x_1.
Let x_3 = x_2 / 2.
Let x_4 = (i_1 * x) / 2.
Let x_5 = 2 * i_1.
Let x_6 = 1 + i_1 + x_4.
Let x_7 = (i_1 * (i_1 - 1)) / 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i_1) /\ is_sint32(k) /\
      is_sint32(n) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_3 - 1 - i_1).
  (* Goal *)
  When: (0 <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 < n.
  If flag_0 != 0
  Else { Have: k = 1. }
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (i_1 + x_7) < x_3.
  (* Invariant *)
  Have: x_3 = (1 + x_5 + x_7).
  (* Invariant *)
  Have: x_3 = (1 + i_1 + x_7).
  (* Invariant *)
  Have: (x_3 = x_6) /\ (0 <= i_1).
  (* Invariant *)
  Have: x_3 <= x_6.
  (* Invariant *)
  Have: i_1 <= (1 + n).
  (* Invariant *)
  Have: ((i_1 = 0) -> (x_3 = x)).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < i_1) ->
      ((i_1 + ((i_2 * (1 + i_2)) / 2)) < x_3))).
  (* Invariant *)
  Have: i_1 < x_3.
  (* Invariant *)
  Have: ((0 < i_1) -> (x_5 < x_3)).
  (* Invariant *)
  Have: ((0 < i_1) -> (x_1 <= x_3)).
  (* Invariant *)
  Have: (i_1 = 0) \/ (x_1 <= x_3).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < i_1) ->
      ((i_1 + ((i_2 * (i_2 - 1)) / 2)) < x_3))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) -> ((i_1 + i_2) < x_3))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      ((i_1 + ((i_2 * (1 + i_2)) / 2)) < x_3))).
  (* Then *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: x_4 <= x_3.
  (* Invariant *)
  Have: x_3 = x_4.
  (* Invariant *)
  Have: (-1) <= i_1.
  (* Invariant *)
  Have: ((i_1 = (-1)) -> (x_3 = 0)).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 <= i_1) ->
      (((i_2 * (1 + i_2)) / 2) <= x_3))).
  (* Invariant *)
  Have: (-1) <= x_2.
  (* Invariant *)
  Have: 2 <= x_2.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 <= i_1) ->
      (((i_2 * (i_2 - 1)) / 2) <= x_3))).
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= i_1) -> ((0 <= i_2) -> (i_2 <= x_3))).
}
Prove: ((i * (1 + i)) / 2) <= x_3.
Prover Z3 4.8.12 returns Valid (Qed:33ms) (10ms) (43868)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:33ms) (6ms) (35)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 65):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 65):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0015/041_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0015/041_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/041_0015/041_merged.c, line 67):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/041_0015/041_merged.c:12: Warning: 
  No 'assigns' specification for function 'foo041'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/041_0015/041_merged.c:15: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/045_0004/045_merged.c (with preprocessing)
[kernel:typing:no-proto] out/045_0004/045_merged.c:48: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/045_0004/045_merged.c:109: Warning: 
  Calling function unknown3 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/045_0004/045_merged.c:89: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/045_0004/045_merged.c:7: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[kernel:annot:missing-spec] out/045_0004/045_merged.c:7: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[kernel:annot:missing-spec] out/045_0004/045_merged.c:7: Warning: 
  Neither code nor specification for function unknown3, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] Computing [100 goals...]
[wp] 127 goals scheduled
[wp] [Timeout] typed_foo045_loop_invariant_2_established (Qed 0.83ms) (Z3)
[wp] Proved goals:  126 / 127
  Qed:             115
  Alt-Ergo 2.5.4:   11 (4ms-17ms-31ms)
  Timeout:           1
------------------------------------------------------------
  Function foo045
------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 16):
Assume { Type: is_sint32(flag_0). }
Prove: flag_0 = 0.
Prover Z3 4.8.12 returns Timeout (Qed:0.83ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.83ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 22):
Let x = -j_1.
Let x_1 = j - j_1.
Let x_2 = j - 1 - j_1.
Assume {
  Type: is_sint32(j) /\ is_sint32(j_1) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_2).
  (* Goal *)
  When: (0 <= i) /\ ((i + j_1) <= j).
  (* Invariant *)
  Have: ((x_1 * x_2) / 2) = j_1.
  (* Invariant *)
  Have: j_1 < j.
  (* Invariant *)
  Have: 0 <= j_1.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: ((x_1 * (1 + j - j_1)) / 2) = j.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (20ms) (46191)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (27ms) (296)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.81ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.99ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.78ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 30):
Let x = -j_1.
Let x_1 = j - j_1.
Let x_2 = (x_1 * (1 + j - j_1)) / 2.
Let x_3 = j - 1 - j_1.
Assume {
  Type: is_sint32(j) /\ is_sint32(j_1) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_3).
  (* Invariant *)
  Have: ((x_1 * x_3) / 2) = j_1.
  (* Invariant *)
  Have: j_1 < j.
  (* Invariant *)
  Have: 0 <= j_1.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> (((j_1 + i) <= j) -> (x_2 = j))).
}
Prove: x_2 = j.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (30ms) (91304)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (31ms) (297)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (0.88ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (0.81ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 35):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 38):
Let x_1 = 1 + x.
Let x_2 = x_1 * (2 + x).
Let x_3 = x_2 / 2.
Let x_4 = x * x_1.
Let x_5 = x_4 / 2.
Let x_6 = 1 + x + x_5.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_5) /\ is_sint32(x_3) /\ is_sint32(x_3 - 1 - x).
  (* Invariant *)
  Have: (x + x_5) < x_3.
  (* Invariant *)
  Have: x_3 = x_6.
  (* Invariant *)
  Have: x_3 <= x_6.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: (-1) <= x_4.
  (* Invariant *)
  Have: x < x_3.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (-1) <= x.
}
Prove: (-1) <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (20ms) (31621)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (5ms) (38)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (0.81ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 67):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 67):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 68):
Let x_2 = 1 + z_1.
Let x_3 = x_2 % 2.
Let x_4 = 2 * y.
Let x_5 = z_1 % 2.
Let x_6 = 1 + x_4.
Let x_7 = 1 + y_1.
Let x_8 = x_1 * (1 + x_1).
Assume {
  Type: is_sint32(tmp_1_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(z) /\ is_sint32(z_1) /\
      is_sint32(1 + z) /\ is_sint32(x_2) /\ is_sint32(z - y) /\
      is_sint32(x_8 / 2).
  (* Goal *)
  When: (z % 2) = 1.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: (-1) <= x_8.
  (* Invariant *)
  Have: ((x_5 = 1) -> (x_7 = x)).
  (* Invariant *)
  Have: ((x_5 = 0) -> (y_1 = x)).
  (* Invariant *)
  Have: y_1 <= x.
  (* Invariant *)
  Have: (y_1 = x) \/ (x_7 = x).
  (* Invariant *)
  Have: x <= x_7.
  (* Invariant *)
  Have: ((x_5 = 0) -> (x <= y_1)).
  (* Invariant *)
  Have: ((x_3 = 1) -> (y_1 = x)).
  (* Invariant *)
  Have: 0 <= z_1.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: x_4 <= z.
  (* Invariant *)
  Have: (x_4 = z) \/ (x_6 = z).
  (* Invariant *)
  Have: z <= x_6.
  (* Invariant *)
  Have: ((x_5 = 0) -> (z <= x_4)).
  (* Invariant *)
  Have: ((x_5 = 0) -> (x_4 = z)).
  (* Invariant *)
  Have: ((x_3 = 1) -> (x_4 = z)).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: y <= z.
}
Prove: x_6 = z.
Prover Z3 4.8.12 returns Valid (Qed:11ms) (30ms) (74459)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (15ms) (486)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 68):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 69):
Let x_2 = 1 + z_1.
Let x_3 = x_2 % 2.
Let x_4 = 2 * y.
Let x_5 = z_1 % 2.
Let x_6 = 1 + x_4.
Let x_7 = 1 + y_1.
Let x_8 = x_1 * (1 + x_1).
Assume {
  Type: is_sint32(tmp_1_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(z) /\ is_sint32(z_1) /\
      is_sint32(1 + z) /\ is_sint32(x_2) /\ is_sint32(z - y) /\
      is_sint32(x_8 / 2).
  (* Goal *)
  When: (z % 2) = 0.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: (-1) <= x_8.
  (* Invariant *)
  Have: ((x_5 = 1) -> (x_7 = x)).
  (* Invariant *)
  Have: ((x_5 = 0) -> (y_1 = x)).
  (* Invariant *)
  Have: y_1 <= x.
  (* Invariant *)
  Have: (y_1 = x) \/ (x_7 = x).
  (* Invariant *)
  Have: x <= x_7.
  (* Invariant *)
  Have: ((x_5 = 0) -> (x <= y_1)).
  (* Invariant *)
  Have: ((x_3 = 1) -> (y_1 = x)).
  (* Invariant *)
  Have: 0 <= z_1.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: x_4 <= z.
  (* Invariant *)
  Have: (x_4 = z) \/ (x_6 = z).
  (* Invariant *)
  Have: z <= x_6.
  (* Invariant *)
  Have: ((x_5 = 0) -> (z <= x_4)).
  (* Invariant *)
  Have: ((x_5 = 0) -> (x_4 = z)).
  (* Invariant *)
  Have: ((x_3 = 1) -> (x_4 = z)).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: y <= z.
}
Prove: x_4 = z.
Prover Z3 4.8.12 returns Valid (Qed:12ms) (20ms) (59273)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:12ms) (20ms) (489)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 69):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 70):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 70):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 71):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 71):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 72):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 72):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 73):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 73):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 74):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 74):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 75):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 75):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 76):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 76):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 77):
Let x_2 = z % 2.
Let x_3 = 2 * y.
Let x_4 = 1 + x_3.
Let x_5 = 1 + z_1.
Let x_6 = x_5 % 2.
Let x_7 = z_1 % 2.
Let x_8 = 1 + y_1.
Let x_9 = x_1 * (1 + x_1).
Let x_10 = 1 + z.
Assume {
  Type: is_sint32(tmp_1_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(z) /\ is_sint32(z_1) /\
      is_sint32(x_10) /\ is_sint32(x_5) /\ is_sint32(z - y) /\
      is_sint32(x_9 / 2).
  (* Goal *)
  When: (x_10 % 2) = 1.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: (-1) <= x_9.
  (* Invariant *)
  Have: ((x_7 = 1) -> (x_8 = x)).
  (* Invariant *)
  Have: ((x_7 = 0) -> (y_1 = x)).
  (* Invariant *)
  Have: y_1 <= x.
  (* Invariant *)
  Have: (y_1 = x) \/ (x_8 = x).
  (* Invariant *)
  Have: x <= x_8.
  (* Invariant *)
  Have: ((x_7 = 0) -> (x <= y_1)).
  (* Invariant *)
  Have: ((x_6 = 1) -> (y_1 = x)).
  (* Invariant *)
  Have: 0 <= z_1.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: x_3 <= z.
  (* Invariant *)
  Have: (x_3 = z) \/ (x_4 = z).
  (* Invariant *)
  Have: z <= x_4.
  (* Invariant *)
  Have: ((x_7 = 0) -> (z <= x_3)).
  (* Invariant *)
  Have: ((x_7 = 0) -> (x_3 = z)).
  (* Invariant *)
  Have: ((x_6 = 1) -> (x_3 = z)).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: y <= z.
  (* Invariant *)
  Have: ((x_2 = 1) -> (x_4 = z)).
  (* Invariant *)
  Have: ((x_2 = 0) -> (x_3 = z)).
  (* Invariant *)
  Have: ((x_2 = 0) -> (z <= x_3)).
}
Prove: x_3 = z.
Prover Z3 4.8.12 returns Valid (Qed:13ms) (10ms) (40100)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (22ms) (650)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 77):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 78):
Prove: true.
Prover Qed returns Valid (12ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 78):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 79):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 79):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 80):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 80):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 81):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 81):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 82):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 82):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 83):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 83):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 92):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 92):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 93):
Let x_5 = z % 2.
Let x_6 = 1 + z.
Let x_7 = x_6 % 2.
Let x_8 = 1 + y_2.
Let x_9 = 1 + y_3.
Let x_10 = x_4 * (1 + x_4).
Assume {
  Type: is_sint32(tmp_0_0) /\ is_sint32(tmp_1_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_3) /\ is_sint32(x_4) /\
      is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(y_2) /\ is_sint32(y_3) /\
      is_sint32(z) /\ is_sint32(x_6) /\ is_sint32(x_10 / 2).
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: (-1) <= x_10.
  (* Invariant *)
  Have: ((x_5 = 1) -> (x_9 = x_3)).
  (* Invariant *)
  Have: ((x_5 = 0) -> (y_3 = x_3)).
  (* Invariant *)
  Have: y_3 <= x_3.
  (* Invariant *)
  Have: (y_3 = x_3) \/ (x_9 = x_3).
  (* Invariant *)
  Have: x_3 <= x_9.
  (* Invariant *)
  Have: ((x_5 = 0) -> (x_3 <= y_3)).
  (* Invariant *)
  Have: ((x_7 = 1) -> (y_3 = x_3)).
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: 0 <= y_3.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: y_2 <= x_2.
  (* Invariant *)
  Have: (y_2 = x_2) \/ (x_8 = x_2).
  (* Invariant *)
  Have: x_2 <= x_8.
  (* Invariant *)
  Have: ((x_5 = 0) -> (x_2 <= y_2)).
  (* Invariant *)
  Have: ((x_5 = 0) -> (y_2 = x_2)).
  (* Invariant *)
  Have: ((x_7 = 1) -> (y_2 = x_2)).
  (* Invariant *)
  Have: 0 <= y_2.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Then *)
  Have: tmp_0_0 != 0.
  If x_7 = 1
  Then { Have: x_2 = x_1. Have: (1 + x_1) = x. }
  Else { Have: x_2 = x. }
  If x_5 = 0
  Then { Have: y_2 = y_1. Have: (1 + y_1) = y. }
  Else { Have: y_2 = y. }
}
Prove: y <= x.
Prover Z3 4.8.12 returns Valid (Qed:46ms) (10ms) (40766)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:46ms) (28ms) (609)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 93):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 94):
Let x_5 = z % 2.
Let x_6 = 1 + z.
Let x_7 = x_6 % 2.
Let x_8 = 1 + y_2.
Let x_9 = 1 + y_3.
Let x_10 = x_4 * (1 + x_4).
Assume {
  Type: is_sint32(tmp_0_0) /\ is_sint32(tmp_1_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_3) /\ is_sint32(x_4) /\
      is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(y_2) /\ is_sint32(y_3) /\
      is_sint32(z) /\ is_sint32(x_6) /\ is_sint32(x_10 / 2).
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: (-1) <= x_10.
  (* Invariant *)
  Have: ((x_5 = 1) -> (x_9 = x_3)).
  (* Invariant *)
  Have: ((x_5 = 0) -> (y_3 = x_3)).
  (* Invariant *)
  Have: y_3 <= x_3.
  (* Invariant *)
  Have: (y_3 = x_3) \/ (x_9 = x_3).
  (* Invariant *)
  Have: x_3 <= x_9.
  (* Invariant *)
  Have: ((x_5 = 0) -> (x_3 <= y_3)).
  (* Invariant *)
  Have: ((x_7 = 1) -> (y_3 = x_3)).
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: 0 <= y_3.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: y_2 <= x_2.
  (* Invariant *)
  Have: (y_2 = x_2) \/ (x_8 = x_2).
  (* Invariant *)
  Have: x_2 <= x_8.
  (* Invariant *)
  Have: ((x_5 = 0) -> (x_2 <= y_2)).
  (* Invariant *)
  Have: ((x_5 = 0) -> (y_2 = x_2)).
  (* Invariant *)
  Have: ((x_7 = 1) -> (y_2 = x_2)).
  (* Invariant *)
  Have: 0 <= y_2.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Then *)
  Have: tmp_0_0 != 0.
  If x_7 = 1
  Then { Have: x_2 = x_1. Have: (1 + x_1) = x. }
  Else { Have: x_2 = x. }
  If x_5 = 0
  Then { Have: y_2 = y_1. Have: (1 + y_1) = y. }
  Else { Have: y_2 = y. }
  (* Invariant *)
  Have: y <= x.
}
Prove: (y = x) \/ ((1 + y) = x).
Prover Z3 4.8.12 returns Valid (Qed:43ms) (10ms) (40527)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:43ms) (8ms) (148)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 94):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 95):
Let x_5 = 1 + y.
Let x_6 = z % 2.
Let x_7 = 1 + z.
Let x_8 = x_7 % 2.
Let x_9 = 1 + y_2.
Let x_10 = 1 + y_3.
Let x_11 = x_4 * (1 + x_4).
Assume {
  Type: is_sint32(tmp_0_0) /\ is_sint32(tmp_1_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_3) /\ is_sint32(x_4) /\
      is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(y_2) /\ is_sint32(y_3) /\
      is_sint32(z) /\ is_sint32(x_7) /\ is_sint32(x_11 / 2).
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: (-1) <= x_11.
  (* Invariant *)
  Have: ((x_6 = 1) -> (x_10 = x_3)).
  (* Invariant *)
  Have: ((x_6 = 0) -> (y_3 = x_3)).
  (* Invariant *)
  Have: y_3 <= x_3.
  (* Invariant *)
  Have: (y_3 = x_3) \/ (x_10 = x_3).
  (* Invariant *)
  Have: x_3 <= x_10.
  (* Invariant *)
  Have: ((x_6 = 0) -> (x_3 <= y_3)).
  (* Invariant *)
  Have: ((x_8 = 1) -> (y_3 = x_3)).
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: 0 <= y_3.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: y_2 <= x_2.
  (* Invariant *)
  Have: (y_2 = x_2) \/ (x_9 = x_2).
  (* Invariant *)
  Have: x_2 <= x_9.
  (* Invariant *)
  Have: ((x_6 = 0) -> (x_2 <= y_2)).
  (* Invariant *)
  Have: ((x_6 = 0) -> (y_2 = x_2)).
  (* Invariant *)
  Have: ((x_8 = 1) -> (y_2 = x_2)).
  (* Invariant *)
  Have: 0 <= y_2.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Then *)
  Have: tmp_0_0 != 0.
  If x_8 = 1
  Then { Have: x_2 = x_1. Have: (1 + x_1) = x. }
  Else { Have: x_2 = x. }
  If x_6 = 0
  Then { Have: y_2 = y_1. Have: (1 + y_1) = y. }
  Else { Have: y_2 = y. }
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (y = x) \/ (x_5 = x).
}
Prove: x <= x_5.
Prover Z3 4.8.12 returns Valid (Qed:58ms) (20ms) (37331)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:58ms) (8ms) (152)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 95):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 96):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 96):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 97):
Prove: true.
Prover Qed returns Valid (15ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 97):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 98):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 98):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 99):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 99):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 100):
Let x_3 = z % 2.
Let x_4 = x_2 * (1 + x_2).
Let x_5 = 1 + z.
Assume {
  Type: is_sint32(tmp_0_0) /\ is_sint32(tmp_1_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(z) /\ is_sint32(1 + x) /\
      is_sint32(x_5) /\ is_sint32(x_4 / 2).
  (* Residual *)
  When: x_3 != 0.
  (* Goal *)
  When: (x_5 % 2) = 1.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: (-1) <= x_4.
  (* Invariant *)
  Have: x_3 != 1.
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0_0 != 0.
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:30ms) (10ms) (34839)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:30ms) (13ms) (304)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 100):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 101):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 101):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 102):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 102):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 103):
Let x_3 = x_2 * (1 + x_2).
Let x_4 = 1 + z.
Assume {
  Type: is_sint32(tmp_0_0) /\ is_sint32(tmp_1_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(z) /\ is_sint32(1 + x) /\
      is_sint32(x_4) /\ is_sint32(x_3 / 2).
  (* Residual *)
  When: (x_4 % 2) = 1.
  (* Residual *)
  When: (z % 2) = 0.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: (-1) <= x_3.
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0_0 != 0.
}
Prove: (-1) <= x.
Prover Z3 4.8.12 returns Valid (Qed:28ms) (31979)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:28ms) (4ms) (22)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 103):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 104):
Prove: true.
Prover Qed returns Valid (29ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 104):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0004/045_merged.c, line 105):
Prove: true.
Prover Qed returns Valid (9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0004/045_merged.c, line 105):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Loop assigns (file out/045_0004/045_merged.c, line 43) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/045_0004/045_merged.c, line 43) (2/2):
Call Result at line 48
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Loop assigns (file out/045_0004/045_merged.c, line 84) (1/3):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/045_0004/045_merged.c, line 84) (2/3):
Call Result at line 89
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Loop assigns (file out/045_0004/045_merged.c, line 84) (3/3):
Call Result at line 109
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Loop assigns (file out/045_0004/045_merged.c, line 106) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/045_0004/045_merged.c, line 106) (2/2):
Call Result at line 109
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/045_0004/045_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/045_0004/045_merged.c:3: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/045_0004/045_merged.c:4: Warning: 
  No 'assigns' specification for function 'unknown3'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/045_0004/045_merged.c:7: Warning: 
  No 'assigns' specification for function 'foo045'.
  Callers assumptions might be imprecise.

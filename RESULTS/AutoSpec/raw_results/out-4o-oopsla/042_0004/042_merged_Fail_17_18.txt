[kernel] Parsing out/042_0004/042_merged.c (with preprocessing)
[kernel:typing:no-proto] out/042_0004/042_merged.c:27: Warning: 
  Calling function unknown that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/042_0004/042_merged.c:3: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 18 goals scheduled
[wp] [Timeout] typed_foo042_loop_invariant_8_established (Qed 0.99ms) (Z3)
[wp] Proved goals:   17 / 18
  Qed:              13
  Alt-Ergo 2.5.4:    4 (5ms-8ms-17ms)
  Timeout:           1
------------------------------------------------------------
  Function foo042
------------------------------------------------------------

Goal Preservation of Invariant (file out/042_0004/042_merged.c, line 15):
Let x_2 = x_1 + y_2.
Let x_3 = x_2 % 2.
Let x_4 = a % 2.
Assume {
  Type: is_sint32(a) /\ is_sint32(flag_0) /\ is_sint32(tmp_0) /\
      is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(y) /\ is_sint32(y_1) /\
      is_sint32(y_2) /\ is_sint32(1 + x_1) /\ is_sint32(x_2).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: (0 < x_1) /\ (0 < y_2).
  (* Invariant *)
  Have: (x_4 = 0) \/ (x_4 = 1).
  (* Invariant *)
  Have: x_3 = x_4.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: tmp_0 != 0.
  If x_3 = 1
  Then { Have: (y_2 = y_1) /\ ((1 + x_1) = x). Have: (1 + y_1) = y. }
  Else { Have: y_2 = y. Have: (2 + x_1) = x. }
}
Prove: (0 < x) /\ (0 < y).
Prover Z3 4.8.12 returns Valid (Qed:13ms) (35776)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (5ms) (59)

------------------------------------------------------------

Goal Establishment of Invariant (file out/042_0004/042_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/042_0004/042_merged.c, line 16):
Let x_3 = x + y.
Let x_4 = x_3 % 2.
Let x_5 = a % 2.
Assume {
  Type: is_sint32(a) /\ is_sint32(flag_0) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x) /\ is_sint32(y_1) /\
      is_sint32(y) /\ is_sint32(1 + x) /\ is_sint32(x_3).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: (0 < x) /\ (0 < y).
  (* Invariant *)
  Have: (x_5 = 0) \/ (x_5 = 1).
  (* Invariant *)
  Have: x_4 = x_5.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: tmp_0 != 0.
  If x_4 = 1
  Then { Have: (1 + x) = x_1. Have: (1 + y) = y_1. }
  Else { Have: (y = y_1) /\ ((1 + x) = x_2). Have: (1 + x_2) = x_1. }
  (* Invariant *)
  Have: (0 < x_1) /\ (0 < y_1).
}
Prove: (x_4 = 0) \/ (x_4 = 1).
Prover Z3 4.8.12 returns Valid (Qed:15ms) (10ms) (34982)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:15ms) (5ms) (62)

------------------------------------------------------------

Goal Establishment of Invariant (file out/042_0004/042_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/042_0004/042_merged.c, line 17):
Let x_3 = x + y.
Let x_4 = x_3 % 2.
Let x_5 = a % 2.
Assume {
  Type: is_sint32(a) /\ is_sint32(flag_0) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x) /\ is_sint32(y_1) /\
      is_sint32(y) /\ is_sint32(1 + x) /\ is_sint32(x_3).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: (0 < x) /\ (0 < y).
  (* Invariant *)
  Have: (x_5 = 0) \/ (x_5 = 1).
  (* Invariant *)
  Have: x_4 = x_5.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: tmp_0 != 0.
  If x_4 = 1
  Then { Have: (1 + x) = x_1. Have: (1 + y) = y_1. }
  Else { Have: (y = y_1) /\ ((1 + x) = x_2). Have: (1 + x_2) = x_1. }
  (* Invariant *)
  Have: (0 < x_1) /\ (0 < y_1).
  (* Invariant *)
  Have: (x_4 = 0) \/ (x_4 = 1).
}
Prove: x_4 = ((x_1 + y_1) % 2).
Prover Z3 4.8.12 returns Valid (Qed:15ms) (30ms) (100836)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:15ms) (17ms) (240)

------------------------------------------------------------

Goal Establishment of Invariant (file out/042_0004/042_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/042_0004/042_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/042_0004/042_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/042_0004/042_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/042_0004/042_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/042_0004/042_merged.c, line 20):
Let x_3 = x + y.
Let x_4 = x_3 % 2.
Let x_5 = a % 2.
Assume {
  Type: is_sint32(a) /\ is_sint32(flag_0) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x) /\ is_sint32(y_1) /\
      is_sint32(y) /\ is_sint32(1 + x) /\ is_sint32(x_3).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: (0 < x) /\ (0 < y).
  (* Invariant *)
  Have: (x_5 = 0) \/ (x_5 = 1).
  (* Invariant *)
  Have: x_4 = x_5.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: tmp_0 != 0.
  If x_4 = 1
  Then { Have: (1 + x) = x_1. Have: (1 + y) = y_1. }
  Else { Have: (y = y_1) /\ ((1 + x) = x_2). Have: (1 + x_2) = x_1. }
  (* Invariant *)
  Have: (0 < x_1) /\ (0 < y_1).
  (* Invariant *)
  Have: (x_4 = 0) \/ (x_4 = 1).
  (* Invariant *)
  Have: x_4 = ((x_1 + y_1) % 2).
}
Prove: 0 <= x_3.
Prover Z3 4.8.12 returns Valid (Qed:15ms) (10ms) (33715)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:15ms) (5ms) (34)

------------------------------------------------------------

Goal Establishment of Invariant (file out/042_0004/042_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/042_0004/042_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/042_0004/042_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.98ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/042_0004/042_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/042_0004/042_merged.c, line 22):
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:0.99ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.99ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/042_0004/042_merged.c, line 23) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/042_0004/042_merged.c, line 23) (2/2):
Call Result at line 27
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/042_0004/042_merged.c:1: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/042_0004/042_merged.c:3: Warning: 
  No 'assigns' specification for function 'foo042'.
  Callers assumptions might be imprecise.

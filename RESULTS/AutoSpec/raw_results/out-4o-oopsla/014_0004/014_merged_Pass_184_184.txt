[kernel] Parsing out/014_0004/014_merged.c (with preprocessing)
[kernel:typing:no-proto] out/014_0004/014_merged.c:106: Warning: 
  Calling function unknown that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/014_0004/014_merged.c:6: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] Computing [100 goals...]
[wp] 184 goals scheduled
[wp] Proved goals:  184 / 184
  Qed:             167
  Alt-Ergo 2.5.4:   17 (0.80ms-6ms-12ms)
------------------------------------------------------------
  Function foo014
------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 14):
Let a_4 = IAbs.abs(a_3).
Let x = 1 + j.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: a_3 <= x.
  (* Invariant *)
  Have: a_3 <= j.
  (* Invariant *)
  Have: a_4 <= j.
  (* Invariant *)
  Have: a_4 < j.
  (* Invariant *)
  Have: j <= (1 + m).
  (* Invariant *)
  Have: (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Invariant *)
  Have: (a_3 < j) /\ (0 < (a_3 + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
}
Prove: (a <= m) \/ (j < (a + m)).
Prover Z3 4.8.12 returns Valid (Qed:10ms) (10ms) (33892)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (5ms) (27)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (10ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 16):
Let x = 1 + m.
Let x_1 = 2 + j.
Let x_2 = a + m.
Let a_1 = IAbs.abs(a).
Let x_3 = 1 + j.
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(a - 1) /\
      is_sint32(x_3).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: a <= x_3.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: a_1 <= j.
  (* Invariant *)
  Have: a_1 < j.
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: (a <= m) /\ (0 <= x_2).
  (* Invariant *)
  Have: (a < j) /\ (0 < (a + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Then *)
  Have: j <= m.
  (* Invariant *)
  Have: (a <= x) \/ (x_1 <= x_2).
}
Prove: (a <= (3 + j)) \/ (x_1 <= x_2).
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (32399)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (6ms) (23)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 17):
Let x = 2 + j.
Let x_1 = a + m.
Let x_2 = 1 + m.
Let a_1 = IAbs.abs(a).
Let x_3 = 1 + j.
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(a - 1) /\
      is_sint32(x_3).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: a <= x_3.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: a_1 <= j.
  (* Invariant *)
  Have: a_1 < j.
  (* Invariant *)
  Have: j <= x_2.
  (* Invariant *)
  Have: (a <= m) /\ (0 <= x_1).
  (* Invariant *)
  Have: (a < j) /\ (0 < (a + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Then *)
  Have: j <= m.
  (* Invariant *)
  Have: (a <= x_2) \/ (x <= x_1).
  (* Invariant *)
  Have: (a <= (3 + j)) \/ (x <= x_1).
}
Prove: (a <= x) \/ (x <= x_1).
Prover Z3 4.8.12 returns Valid (Qed:14ms) (20ms) (32525)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:14ms) (6ms) (23)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 19):
Let x = a + m.
Let x_1 = 1 + j.
Let a_4 = IAbs.abs(a_3).
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: a_3 <= x_1.
  (* Invariant *)
  Have: a_3 <= j.
  (* Invariant *)
  Have: a_4 <= j.
  (* Invariant *)
  Have: a_4 < j.
  (* Invariant *)
  Have: j <= (1 + m).
  (* Invariant *)
  Have: (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Invariant *)
  Have: (a_3 < j) /\ (0 < (a_3 + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (a <= m) \/ (j < x).
  (* Invariant *)
  Have: (a <= j) \/ (j < x).
  (* Invariant *)
  Have: (j < x) \/ (a <= (2 + j)).
  (* Invariant *)
  Have: (j < x) \/ (a <= x_1).
}
Prove: (j < x) \/ (IAbs.abs(a) <= x_1).
Prover Z3 4.8.12 returns Valid (Qed:11ms) (20ms) (36287)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (5ms) (134)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 20):
Let x = a + m.
Let a_4 = IAbs.abs(a).
Let x_1 = 1 + j.
Let a_5 = IAbs.abs(a_3).
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: a_3 <= x_1.
  (* Invariant *)
  Have: a_3 <= j.
  (* Invariant *)
  Have: a_5 <= j.
  (* Invariant *)
  Have: a_5 < j.
  (* Invariant *)
  Have: j <= (1 + m).
  (* Invariant *)
  Have: (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Invariant *)
  Have: (a_3 < j) /\ (0 < (a_3 + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (a <= m) \/ (j < x).
  (* Invariant *)
  Have: (a <= j) \/ (j < x).
  (* Invariant *)
  Have: (j < x) \/ (a <= (2 + j)).
  (* Invariant *)
  Have: (j < x) \/ (a <= x_1).
  (* Invariant *)
  Have: (j < x) \/ (a_4 <= x_1).
}
Prove: (a_4 <= j) \/ (j < x).
Prover Z3 4.8.12 returns Valid (Qed:12ms) (10ms) (36397)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:12ms) (12ms) (148)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 22):
Let a_4 = IAbs.abs(a).
Let x = a + m.
Let x_1 = 1 + j.
Let a_5 = IAbs.abs(a_3).
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: a_3 <= x_1.
  (* Invariant *)
  Have: a_3 <= j.
  (* Invariant *)
  Have: a_5 <= j.
  (* Invariant *)
  Have: a_5 < j.
  (* Invariant *)
  Have: j <= (1 + m).
  (* Invariant *)
  Have: (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Invariant *)
  Have: (a_3 < j) /\ (0 < (a_3 + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (a <= m) \/ (j < x).
  (* Invariant *)
  Have: (a <= j) \/ (j < x).
  (* Invariant *)
  Have: (j < x) \/ (a <= (2 + j)).
  (* Invariant *)
  Have: (j < x) \/ (a <= x_1).
  (* Invariant *)
  Have: (j < x) \/ (a_4 <= x_1).
  (* Invariant *)
  Have: (a_4 <= j) \/ (j < x).
}
Prove: (a <= m) \/ (j <= x).
Prover Z3 4.8.12 returns Valid (Qed:12ms) (20ms) (34099)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:12ms) (5ms) (27)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (8ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 24):
Let x = a + m.
Let x_1 = 1 + m.
Let x_2 = a - 1.
Let a_1 = IAbs.abs(x_2).
Let x_3 = 2 + j.
Let x_4 = 1 + j.
Let x_5 = 3 + j.
Let a_2 = IAbs.abs(a).
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(x_2) /\
      is_sint32(x_4).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: a <= x_4.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: a_2 <= j.
  (* Invariant *)
  Have: a_2 < j.
  (* Invariant *)
  Have: j <= x_1.
  (* Invariant *)
  Have: (a <= m) /\ (0 <= x).
  (* Invariant *)
  Have: (a < j) /\ (0 < (a + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Then *)
  Have: j <= m.
  (* Invariant *)
  Have: (a <= x_1) \/ (x_3 <= x).
  (* Invariant *)
  Have: (a <= x_5) \/ (x_3 <= x).
  (* Invariant *)
  Have: (a <= x_3) \/ (x_3 <= x).
  (* Invariant *)
  Have: (x_3 <= x) \/ (a_1 <= x_4).
  (* Invariant *)
  Have: (a_1 <= j) \/ (x_3 <= x).
  (* Invariant *)
  Have: (j < x) \/ (a <= x_1).
}
Prove: (j < x) \/ (a <= x_5).
Prover Z3 4.8.12 returns Valid (Qed:12ms) (20ms) (32629)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:12ms) (5ms) (27)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 25):
Let x = a + m.
Let x_1 = 3 + j.
Let x_2 = 1 + m.
Let x_3 = a - 1.
Let a_1 = IAbs.abs(x_3).
Let x_4 = 2 + j.
Let x_5 = 1 + j.
Let a_2 = IAbs.abs(a).
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(x_3) /\
      is_sint32(x_5).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: a <= x_5.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: a_2 <= j.
  (* Invariant *)
  Have: a_2 < j.
  (* Invariant *)
  Have: j <= x_2.
  (* Invariant *)
  Have: (a <= m) /\ (0 <= x).
  (* Invariant *)
  Have: (a < j) /\ (0 < (a + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Then *)
  Have: j <= m.
  (* Invariant *)
  Have: (a <= x_2) \/ (x_4 <= x).
  (* Invariant *)
  Have: (a <= x_1) \/ (x_4 <= x).
  (* Invariant *)
  Have: (a <= x_4) \/ (x_4 <= x).
  (* Invariant *)
  Have: (x_4 <= x) \/ (a_1 <= x_5).
  (* Invariant *)
  Have: (a_1 <= j) \/ (x_4 <= x).
  (* Invariant *)
  Have: (j < x) \/ (a <= x_2).
  (* Invariant *)
  Have: (j < x) \/ (a <= x_1).
}
Prove: (j < x) \/ (a <= x_4).
Prover Z3 4.8.12 returns Valid (Qed:13ms) (20ms) (32743)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (4ms) (27)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 27):
Let x = a + m.
Let x_1 = 1 + j.
Let x_2 = 2 + j.
Let a_4 = IAbs.abs(a).
Let a_5 = IAbs.abs(a_3).
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: a_3 <= x_1.
  (* Invariant *)
  Have: a_3 <= j.
  (* Invariant *)
  Have: a_5 <= j.
  (* Invariant *)
  Have: a_5 < j.
  (* Invariant *)
  Have: j <= (1 + m).
  (* Invariant *)
  Have: (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Invariant *)
  Have: (a_3 < j) /\ (0 < (a_3 + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (a <= m) \/ (j < x).
  (* Invariant *)
  Have: (a <= j) \/ (j < x).
  (* Invariant *)
  Have: (j < x) \/ (a <= x_2).
  (* Invariant *)
  Have: (j < x) \/ (a <= x_1).
  (* Invariant *)
  Have: (j < x) \/ (a_4 <= x_1).
  (* Invariant *)
  Have: (a_4 <= j) \/ (j < x).
  (* Invariant *)
  Have: (a <= m) \/ (j <= x).
  (* Invariant *)
  Have: (a <= j) \/ (j <= x).
  (* Invariant *)
  Have: (j <= x) \/ (a <= x_2).
  (* Invariant *)
  Have: (j <= x) \/ (a <= x_1).
}
Prove: (j <= x) \/ (a_4 <= x_1).
Prover Z3 4.8.12 returns Valid (Qed:15ms) (34699)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:15ms) (7ms) (30)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 28):
Let x = a + m.
Let a_4 = IAbs.abs(a).
Let x_1 = 1 + j.
Let x_2 = 2 + j.
Let a_5 = IAbs.abs(a_3).
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: a_3 <= x_1.
  (* Invariant *)
  Have: a_3 <= j.
  (* Invariant *)
  Have: a_5 <= j.
  (* Invariant *)
  Have: a_5 < j.
  (* Invariant *)
  Have: j <= (1 + m).
  (* Invariant *)
  Have: (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Invariant *)
  Have: (a_3 < j) /\ (0 < (a_3 + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (a <= m) \/ (j < x).
  (* Invariant *)
  Have: (a <= j) \/ (j < x).
  (* Invariant *)
  Have: (j < x) \/ (a <= x_2).
  (* Invariant *)
  Have: (j < x) \/ (a <= x_1).
  (* Invariant *)
  Have: (j < x) \/ (a_4 <= x_1).
  (* Invariant *)
  Have: (a_4 <= j) \/ (j < x).
  (* Invariant *)
  Have: (a <= m) \/ (j <= x).
  (* Invariant *)
  Have: (a <= j) \/ (j <= x).
  (* Invariant *)
  Have: (j <= x) \/ (a <= x_2).
  (* Invariant *)
  Have: (j <= x) \/ (a <= x_1).
  (* Invariant *)
  Have: (j <= x) \/ (a_4 <= x_1).
}
Prove: (a_4 <= j) \/ (j <= x).
Prover Z3 4.8.12 returns Valid (Qed:16ms) (10ms) (34797)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:16ms) (6ms) (30)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 29):
Let x = a + m.
Let x_1 = a - 1.
Let a_1 = IAbs.abs(x_1).
Let x_2 = 1 + j.
Let x_3 = 2 + j.
Let x_4 = 3 + j.
Let x_5 = 1 + m.
Let a_2 = IAbs.abs(a).
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(x_1) /\
      is_sint32(x_2).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: a <= x_2.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: a_2 <= j.
  (* Invariant *)
  Have: a_2 < j.
  (* Invariant *)
  Have: j <= x_5.
  (* Invariant *)
  Have: (a <= m) /\ (0 <= x).
  (* Invariant *)
  Have: (a < j) /\ (0 < (a + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Then *)
  Have: j <= m.
  (* Invariant *)
  Have: (a <= x_5) \/ (x_3 <= x).
  (* Invariant *)
  Have: (a <= x_4) \/ (x_3 <= x).
  (* Invariant *)
  Have: (a <= x_3) \/ (x_3 <= x).
  (* Invariant *)
  Have: (x_3 <= x) \/ (a_1 <= x_2).
  (* Invariant *)
  Have: (a_1 <= j) \/ (x_3 <= x).
  (* Invariant *)
  Have: (j < x) \/ (a <= x_5).
  (* Invariant *)
  Have: (j < x) \/ (a <= x_4).
  (* Invariant *)
  Have: (j < x) \/ (a <= x_3).
  (* Invariant *)
  Have: (j < x) \/ (a_1 <= x_2).
  (* Invariant *)
  Have: (j < x) \/ (a_1 <= j).
}
Prove: (a <= x_5) \/ (a <= x_4).
Prover Z3 4.8.12 returns Valid (Qed:21ms) (10ms) (32685)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:21ms) (5ms) (28)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 30):
Let x = 1 + m.
Let x_1 = 3 + j.
Let x_2 = a + m.
Let x_3 = a - 1.
Let a_1 = IAbs.abs(x_3).
Let x_4 = 1 + j.
Let x_5 = 2 + j.
Let a_2 = IAbs.abs(a).
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(x_3) /\
      is_sint32(x_4).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: a <= x_4.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: a_2 <= j.
  (* Invariant *)
  Have: a_2 < j.
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: (a <= m) /\ (0 <= x_2).
  (* Invariant *)
  Have: (a < j) /\ (0 < (a + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Then *)
  Have: j <= m.
  (* Invariant *)
  Have: (a <= x) \/ (x_5 <= x_2).
  (* Invariant *)
  Have: (a <= x_1) \/ (x_5 <= x_2).
  (* Invariant *)
  Have: (a <= x_5) \/ (x_5 <= x_2).
  (* Invariant *)
  Have: (x_5 <= x_2) \/ (a_1 <= x_4).
  (* Invariant *)
  Have: (a_1 <= j) \/ (x_5 <= x_2).
  (* Invariant *)
  Have: (j < x_2) \/ (a <= x).
  (* Invariant *)
  Have: (j < x_2) \/ (a <= x_1).
  (* Invariant *)
  Have: (j < x_2) \/ (a <= x_5).
  (* Invariant *)
  Have: (j < x_2) \/ (a_1 <= x_4).
  (* Invariant *)
  Have: (j < x_2) \/ (a_1 <= j).
  (* Invariant *)
  Have: (a <= x) \/ (a <= x_1).
}
Prove: (a <= x) \/ (a <= x_5).
Prover Z3 4.8.12 returns Valid (Qed:14ms) (20ms) (32799)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:14ms) (0.80ms) (28)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 31):
Let x = 1 + m.
Let x_1 = 2 + j.
Let x_2 = 3 + j.
Let x_3 = a + m.
Let x_4 = a - 1.
Let a_1 = IAbs.abs(x_4).
Let x_5 = 1 + j.
Let a_2 = IAbs.abs(a).
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(x_4) /\
      is_sint32(x_5).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: a <= x_5.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: a_2 <= j.
  (* Invariant *)
  Have: a_2 < j.
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: (a <= m) /\ (0 <= x_3).
  (* Invariant *)
  Have: (a < j) /\ (0 < (a + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Then *)
  Have: j <= m.
  (* Invariant *)
  Have: (a <= x) \/ (x_1 <= x_3).
  (* Invariant *)
  Have: (a <= x_2) \/ (x_1 <= x_3).
  (* Invariant *)
  Have: (a <= x_1) \/ (x_1 <= x_3).
  (* Invariant *)
  Have: (x_1 <= x_3) \/ (a_1 <= x_5).
  (* Invariant *)
  Have: (a_1 <= j) \/ (x_1 <= x_3).
  (* Invariant *)
  Have: (j < x_3) \/ (a <= x).
  (* Invariant *)
  Have: (j < x_3) \/ (a <= x_2).
  (* Invariant *)
  Have: (j < x_3) \/ (a <= x_1).
  (* Invariant *)
  Have: (j < x_3) \/ (a_1 <= x_5).
  (* Invariant *)
  Have: (j < x_3) \/ (a_1 <= j).
  (* Invariant *)
  Have: (a <= x) \/ (a <= x_2).
  (* Invariant *)
  Have: (a <= x) \/ (a <= x_1).
}
Prove: a <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:13ms) (10ms) (32717)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (5ms) (28)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 31):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 32):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 33):
Let x = 1 + m.
Let x_1 = 2 + j.
Let x_2 = a + m.
Let x_3 = a - 1.
Let a_1 = IAbs.abs(x_3).
Let x_4 = 1 + j.
Let a_2 = IAbs.abs(a).
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(x_3) /\
      is_sint32(x_4).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: a <= x_4.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: a_2 <= j.
  (* Invariant *)
  Have: a_2 < j.
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: (a <= m) /\ (0 <= x_2).
  (* Invariant *)
  Have: (a < j) /\ (0 < (a + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Then *)
  Have: j <= m.
  (* Invariant *)
  Have: (a <= x) \/ (x_1 <= x_2).
  (* Invariant *)
  Have: (a <= x_1) \/ (x_1 <= x_2).
  (* Invariant *)
  Have: (x_1 <= x_2) \/ (a_1 <= x_4).
  (* Invariant *)
  Have: (a_1 <= j) \/ (x_1 <= x_2).
  (* Invariant *)
  Have: (j < x_2) \/ (a <= x).
  (* Invariant *)
  Have: (j < x_2) \/ (a <= x_1).
  (* Invariant *)
  Have: (j < x_2) \/ (a_1 <= x_4).
  (* Invariant *)
  Have: (j < x_2) \/ (a_1 <= j).
  (* Invariant *)
  Have: (a <= x) \/ (a <= x_1).
  (* Invariant *)
  Have: a <= (3 + j).
}
Prove: a <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:12ms) (10ms) (32775)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:12ms) (5ms) (27)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 33):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 35):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 36):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 37):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 38):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 39):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 40):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 41):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 42):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 43):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 44):
Let x = 1 + j.
Let a_4 = IAbs.abs(a).
Let x_1 = a + m.
Let a_5 = IAbs.abs(a_3).
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: a_3 <= x.
  (* Invariant *)
  Have: a_3 <= j.
  (* Invariant *)
  Have: a_5 <= j.
  (* Invariant *)
  Have: a_5 < j.
  (* Invariant *)
  Have: j <= (1 + m).
  (* Invariant *)
  Have: (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Invariant *)
  Have: (a_3 < j) /\ (0 < (a_3 + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (a <= m) \/ (j < x_1).
  (* Invariant *)
  Have: (a <= j) \/ (j < x_1).
  (* Invariant *)
  Have: (j < x_1) \/ (a_4 <= x).
  (* Invariant *)
  Have: (a_4 <= j) \/ (j < x_1).
  (* Invariant *)
  Have: (a <= m) \/ (j <= x_1).
  (* Invariant *)
  Have: (a <= j) \/ (j <= x_1).
  (* Invariant *)
  Have: (j <= x_1) \/ (a_4 <= x).
  (* Invariant *)
  Have: (a_4 <= j) \/ (j <= x_1).
  (* Invariant *)
  Have: a <= (2 + j).
  (* Invariant *)
  Have: a <= x.
}
Prove: a_4 <= x.
Prover Z3 4.8.12 returns Valid (Qed:14ms) (10ms) (36156)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:14ms) (12ms) (136)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 44):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 46):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 47):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 48):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 49):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 50):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 51):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 52):
Let a_4 = IAbs.abs(a).
Let x = 1 + j.
Let x_1 = a + m.
Let a_5 = IAbs.abs(a_3).
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: a_3 <= x.
  (* Invariant *)
  Have: a_3 <= j.
  (* Invariant *)
  Have: a_5 <= j.
  (* Invariant *)
  Have: a_5 < j.
  (* Invariant *)
  Have: j <= (1 + m).
  (* Invariant *)
  Have: (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Invariant *)
  Have: (a_3 < j) /\ (0 < (a_3 + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (a <= m) \/ (j < x_1).
  (* Invariant *)
  Have: (a <= j) \/ (j < x_1).
  (* Invariant *)
  Have: (a_4 <= j) \/ (j < x_1).
  (* Invariant *)
  Have: (a <= m) \/ (j <= x_1).
  (* Invariant *)
  Have: (a <= j) \/ (j <= x_1).
  (* Invariant *)
  Have: (a_4 <= j) \/ (j <= x_1).
  (* Invariant *)
  Have: a <= (2 + j).
  (* Invariant *)
  Have: a <= x.
  (* Invariant *)
  Have: a_4 <= x.
}
Prove: a_4 <= j.
Prover Z3 4.8.12 returns Valid (Qed:13ms) (10ms) (36218)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (12ms) (150)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 52):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 53):
Prove: true.
Prover Qed returns Valid (13ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 53):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 54):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 54):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 55):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 55):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 56):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 56):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 57):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 57):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 58):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 58):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 59):
Let x = a + m.
Let a_4 = IAbs.abs(a).
Let x_1 = 1 + j.
Let a_5 = IAbs.abs(a_3).
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: a_3 <= x_1.
  (* Invariant *)
  Have: a_3 <= j.
  (* Invariant *)
  Have: a_5 <= j.
  (* Invariant *)
  Have: a_5 < j.
  (* Invariant *)
  Have: j <= (1 + m).
  (* Invariant *)
  Have: (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Invariant *)
  Have: (a_3 < j) /\ (0 < (a_3 + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (a <= m) \/ (j < x).
  (* Invariant *)
  Have: (a <= j) \/ (j < x).
  (* Invariant *)
  Have: (a <= m) \/ (j <= x).
  (* Invariant *)
  Have: (a <= j) \/ (j <= x).
  (* Invariant *)
  Have: a <= (2 + j).
  (* Invariant *)
  Have: a <= x_1.
  (* Invariant *)
  Have: a_4 <= x_1.
  (* Invariant *)
  Have: a_4 <= j.
  (* Invariant *)
  Have: ((m = j) -> ((a <= m) /\ (0 <= x))).
}
Prove: (a <= m) /\ (0 <= x).
Prover Z3 4.8.12 returns Valid (Qed:12ms) (36956)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:12ms) (4ms) (75)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 59):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 60):
Prove: true.
Prover Qed returns Valid (9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 60):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 61):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 61):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 62):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 62):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 63):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 63):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 65):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 65):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 66):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 67):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 67):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 68):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 68):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 69):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 69):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 70):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 70):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 71):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 71):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 72):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 72):
Prove: true.
Prover Qed returns Valid (0.80ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 73):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 73):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 74):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 74):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 75):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 75):
Prove: true.
Prover Qed returns Valid (0.85ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 76):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 76):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 77):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 77):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 78):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 78):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 79):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 79):
Prove: true.
Prover Qed returns Valid (0.81ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 80):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 80):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 81):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 81):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 82):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 82):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 83):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 83):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 84):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 84):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 85):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 85):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 86):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 86):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 87):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 87):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 88):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 88):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 89):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 89):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 90):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 90):
Prove: true.
Prover Qed returns Valid (0.50ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 91):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 91):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 92):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 92):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 93):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 93):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 94):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 94):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 95):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 95):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 96):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 96):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 97):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 97):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 98):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 98):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 99):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 99):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 100):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 100):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0004/014_merged.c, line 101):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0004/014_merged.c, line 101):
Prove: true.
Prover Qed returns Valid (0.80ms)

------------------------------------------------------------

Goal Loop assigns (file out/014_0004/014_merged.c, line 102) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/014_0004/014_merged.c, line 102) (2/2):
Call Result at line 106
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/014_0004/014_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/014_0004/014_merged.c:6: Warning: 
  No 'assigns' specification for function 'foo014'.
  Callers assumptions might be imprecise.

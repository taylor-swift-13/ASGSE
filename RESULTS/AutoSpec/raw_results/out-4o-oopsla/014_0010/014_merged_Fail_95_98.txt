[kernel] Parsing out/014_0010/014_merged.c (with preprocessing)
[kernel:typing:no-proto] out/014_0010/014_merged.c:63: Warning: 
  Calling function unknown that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/014_0010/014_merged.c:6: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 98 goals scheduled
[wp] [Timeout] typed_foo014_loop_invariant_preserved (Qed 13ms) (Z3)
[wp] [Timeout] typed_foo014_loop_invariant_2_preserved (Qed 28ms) (Z3)
[wp] [Timeout] typed_foo014_loop_invariant_3_preserved (Qed 28ms) (Z3)
[wp] Proved goals:   95 / 98
  Qed:              88
  Alt-Ergo 2.5.4:    6 (4ms-8ms-18ms)
  Z3 4.8.12:         1 (330ms)
  Timeout:           3
------------------------------------------------------------
  Function foo014
------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 11):
Let a_1 = IAbs.abs(a).
Let x = 1 + m.
Let x_1 = a + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(a - 1) /\
      is_sint32(1 + j).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: (0 < i) /\ (i <= 1).
  (* Invariant *)
  Have: j <= (1 + a + m).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < j) ->
      ((a <= i_2) /\ (0 <= (a + i_2))))).
  (* Invariant *)
  Have: (j + a_1) <= x.
  (* Invariant *)
  Have: (0 < i_1) /\ (i_1 <= j) /\ (a <= m) /\ (0 <= x_1).
  (* Invariant *)
  Have: (0 < j) /\ (j <= x).
  (* Invariant *)
  Have: a < j.
  (* Invariant *)
  Have: 0 < (a + j).
  (* Invariant *)
  Have: ((a = 0) -> (forall i_2 : Z. ((0 < i_2) -> ((i_2 < j) -> (a = 0))))).
  (* Invariant *)
  Have: a_1 <= m.
  (* Invariant *)
  Have: a_1 < j.
  (* Then *)
  Have: j <= m.
}
Prove: j < x_1.
Prover Z3 4.8.12 returns Timeout (Qed:13ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:13ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 12):
Let a_4 = IAbs.abs(a_3).
Let x = 1 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(1 + j).
  (* Goal *)
  When: (0 < i) /\ (i <= j).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: (0 < i_1) /\ (i_1 <= 1).
  (* Invariant *)
  Have: j <= (1 + a_3 + m).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 < i_3) -> ((i_3 < j) ->
      ((a_3 <= i_3) /\ (0 <= (a_3 + i_3))))).
  (* Invariant *)
  Have: (j + a_4) <= x.
  (* Invariant *)
  Have: (0 < i_2) /\ (i_2 <= j) /\ (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Invariant *)
  Have: (0 < j) /\ (j <= x).
  (* Invariant *)
  Have: a_3 < j.
  (* Invariant *)
  Have: 0 < (a_3 + j).
  (* Invariant *)
  Have: ((a_3 = 0) ->
      (forall i_3 : Z. ((0 < i_3) -> ((i_3 < j) -> (a_3 = 0))))).
  (* Invariant *)
  Have: a_4 <= m.
  (* Invariant *)
  Have: a_4 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: j <= (a + m).
}
Prove: (a <= i) /\ (0 <= (a + i)).
Prover Z3 4.8.12 returns Timeout (Qed:28ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:28ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 13):
Let a_4 = IAbs.abs(a_3).
Let x = 1 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(1 + j).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: (0 < i) /\ (i <= 1).
  (* Invariant *)
  Have: j <= (1 + a_3 + m).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < j) ->
      ((a_3 <= i_2) /\ (0 <= (a_3 + i_2))))).
  (* Invariant *)
  Have: (j + a_4) <= x.
  (* Invariant *)
  Have: (0 < i_1) /\ (i_1 <= j) /\ (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Invariant *)
  Have: (0 < j) /\ (j <= x).
  (* Invariant *)
  Have: a_3 < j.
  (* Invariant *)
  Have: 0 < (a_3 + j).
  (* Invariant *)
  Have: ((a_3 = 0) ->
      (forall i_2 : Z. ((0 < i_2) -> ((i_2 < j) -> (a_3 = 0))))).
  (* Invariant *)
  Have: a_4 <= m.
  (* Invariant *)
  Have: a_4 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: j <= (a + m).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 <= j) ->
      ((a <= i_2) /\ (0 <= (a + i_2))))).
}
Prove: (j + IAbs.abs(a)) <= m.
Prover Z3 4.8.12 returns Timeout (Qed:28ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:28ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 14):
Let x = a + m.
Let a_4 = IAbs.abs(a_3).
Let x_1 = 1 + m.
Let x_2 = 1 + j.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(x_2).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: (0 < i) /\ (i <= 1).
  (* Invariant *)
  Have: j <= (1 + a_3 + m).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < j) ->
      ((a_3 <= i_2) /\ (0 <= (a_3 + i_2))))).
  (* Invariant *)
  Have: (j + a_4) <= x_1.
  (* Invariant *)
  Have: (0 < i_1) /\ (i_1 <= j) /\ (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Invariant *)
  Have: (0 < j) /\ (j <= x_1).
  (* Invariant *)
  Have: a_3 < j.
  (* Invariant *)
  Have: 0 < (a_3 + j).
  (* Invariant *)
  Have: ((a_3 = 0) ->
      (forall i_2 : Z. ((0 < i_2) -> ((i_2 < j) -> (a_3 = 0))))).
  (* Invariant *)
  Have: a_4 <= m.
  (* Invariant *)
  Have: a_4 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 <= j) ->
      ((a <= i_2) /\ (0 <= (a + i_2))))).
  (* Invariant *)
  Have: (j + IAbs.abs(a)) <= m.
}
Prove: exists i_2 : Z. (0 < i_2) /\ (a <= m) /\ (0 <= x) /\ (i_2 <= x_2).
Prover Z3 4.8.12 returns Valid (Qed:22ms) (330ms) (322137)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 18):
Let x = a + m.
Let x_1 = 1 + m.
Let x_2 = 1 + j.
Let x_3 = a - 1.
Let a_1 = IAbs.abs(x_3).
Let a_2 = IAbs.abs(a).
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(x_3) /\
      is_sint32(x_2).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: (0 < i) /\ (i <= 1).
  (* Invariant *)
  Have: j <= (1 + a + m).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 < i_3) -> ((i_3 < j) ->
      ((a <= i_3) /\ (0 <= (a + i_3))))).
  (* Invariant *)
  Have: (j + a_2) <= x_1.
  (* Invariant *)
  Have: (0 < i_1) /\ (i_1 <= j) /\ (a <= m) /\ (0 <= x).
  (* Invariant *)
  Have: (0 < j) /\ (j <= x_1).
  (* Invariant *)
  Have: a < j.
  (* Invariant *)
  Have: 0 < (a + j).
  (* Invariant *)
  Have: ((a = 0) -> (forall i_3 : Z. ((0 < i_3) -> ((i_3 < j) -> (a = 0))))).
  (* Invariant *)
  Have: a_2 <= m.
  (* Invariant *)
  Have: a_2 < j.
  (* Then *)
  Have: j <= m.
  (* Invariant *)
  Have: j < x.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 < i_3) -> ((i_3 <= j) ->
      ((0 < (a + i_3)) /\ (a <= (1 + i_3))))).
  (* Invariant *)
  Have: (j + a_1) <= m.
  (* Invariant *)
  Have: (0 < i_2) /\ (0 < x) /\ (a <= x_1) /\ (i_2 <= x_2).
}
Prove: (j <= a_1) \/ (a <= x_2).
Prover Z3 4.8.12 returns Valid (Qed:17ms) (10ms) (35884)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:17ms) (5ms) (30)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 19):
Let a_4 = IAbs.abs(a).
Let x = a + m.
Let x_1 = 1 + j.
Let a_5 = IAbs.abs(a_3).
Let x_2 = 1 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: (0 < i) /\ (i <= 1).
  (* Invariant *)
  Have: j <= (1 + a_3 + m).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 < i_3) -> ((i_3 < j) ->
      ((a_3 <= i_3) /\ (0 <= (a_3 + i_3))))).
  (* Invariant *)
  Have: (j + a_5) <= x_2.
  (* Invariant *)
  Have: (0 < i_1) /\ (i_1 <= j) /\ (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Invariant *)
  Have: (0 < j) /\ (j <= x_2).
  (* Invariant *)
  Have: a_3 < j.
  (* Invariant *)
  Have: 0 < (a_3 + j).
  (* Invariant *)
  Have: ((a_3 = 0) ->
      (forall i_3 : Z. ((0 < i_3) -> ((i_3 < j) -> (a_3 = 0))))).
  (* Invariant *)
  Have: a_5 <= m.
  (* Invariant *)
  Have: a_5 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 < i_3) -> ((i_3 <= j) ->
      ((a <= i_3) /\ (0 <= (a + i_3))))).
  (* Invariant *)
  Have: (j + a_4) <= m.
  (* Invariant *)
  Have: (0 < i_2) /\ (a <= m) /\ (0 <= x) /\ (i_2 <= x_1).
  (* Invariant *)
  Have: (a <= j) \/ (j <= a_4).
}
Prove: (a_4 <= m) \/ (j <= a_4).
Prover Z3 4.8.12 returns Valid (Qed:21ms) (10ms) (37673)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:21ms) (6ms) (36)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 20):
Let a_4 = IAbs.abs(a).
Let x = a + m.
Let x_1 = 1 + j.
Let a_5 = IAbs.abs(a_3).
Let x_2 = 1 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: (0 < i) /\ (i <= 1).
  (* Invariant *)
  Have: j <= (1 + a_3 + m).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 < i_3) -> ((i_3 < j) ->
      ((a_3 <= i_3) /\ (0 <= (a_3 + i_3))))).
  (* Invariant *)
  Have: (j + a_5) <= x_2.
  (* Invariant *)
  Have: (0 < i_1) /\ (i_1 <= j) /\ (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Invariant *)
  Have: (0 < j) /\ (j <= x_2).
  (* Invariant *)
  Have: a_3 < j.
  (* Invariant *)
  Have: 0 < (a_3 + j).
  (* Invariant *)
  Have: ((a_3 = 0) ->
      (forall i_3 : Z. ((0 < i_3) -> ((i_3 < j) -> (a_3 = 0))))).
  (* Invariant *)
  Have: a_5 <= m.
  (* Invariant *)
  Have: a_5 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 < i_3) -> ((i_3 <= j) ->
      ((a <= i_3) /\ (0 <= (a + i_3))))).
  (* Invariant *)
  Have: (j + a_4) <= m.
  (* Invariant *)
  Have: (0 < i_2) /\ (a <= m) /\ (0 <= x) /\ (i_2 <= x_1).
  (* Invariant *)
  Have: (a <= j) \/ (j <= a_4).
  (* Invariant *)
  Have: (a_4 <= m) \/ (j <= a_4).
}
Prove: (a_4 <= j) \/ (j <= a_4).
Prover Z3 4.8.12 returns Valid (Qed:20ms) (20ms) (37739)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:20ms) (6ms) (32)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 23):
Let x = a - 1.
Let a_1 = IAbs.abs(x).
Let x_1 = 1 + j.
Let x_2 = a + m.
Let x_3 = 1 + m.
Let a_2 = IAbs.abs(a).
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(x) /\
      is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: (0 < i) /\ (i <= 1).
  (* Invariant *)
  Have: j <= (1 + a + m).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 < i_3) -> ((i_3 < j) ->
      ((a <= i_3) /\ (0 <= (a + i_3))))).
  (* Invariant *)
  Have: (j + a_2) <= x_3.
  (* Invariant *)
  Have: (0 < i_1) /\ (i_1 <= j) /\ (a <= m) /\ (0 <= x_2).
  (* Invariant *)
  Have: (0 < j) /\ (j <= x_3).
  (* Invariant *)
  Have: a < j.
  (* Invariant *)
  Have: 0 < (a + j).
  (* Invariant *)
  Have: ((a = 0) -> (forall i_3 : Z. ((0 < i_3) -> ((i_3 < j) -> (a = 0))))).
  (* Invariant *)
  Have: a_2 <= m.
  (* Invariant *)
  Have: a_2 < j.
  (* Then *)
  Have: j <= m.
  (* Invariant *)
  Have: j < x_2.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 < i_3) -> ((i_3 <= j) ->
      ((0 < (a + i_3)) /\ (a <= (1 + i_3))))).
  (* Invariant *)
  Have: (j + a_1) <= m.
  (* Invariant *)
  Have: (0 < i_2) /\ (0 < x_2) /\ (a <= x_3) /\ (i_2 <= x_1).
  (* Invariant *)
  Have: (j <= a_1) \/ (a <= x_1).
  (* Invariant *)
  Have: (a_1 <= m) \/ (j <= a_1).
  (* Invariant *)
  Have: (a_1 <= j) \/ (j <= a_1).
}
Prove: a <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:20ms) (20ms) (35946)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:20ms) (4ms) (31)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (17ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.80ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (0.87ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (0.98ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 40):
Let a_4 = IAbs.abs(a).
Let x = a + m.
Let x_1 = 1 + j.
Let a_5 = IAbs.abs(a_3).
Let x_2 = 1 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: (0 < i) /\ (i <= 1).
  (* Invariant *)
  Have: j <= (1 + a_3 + m).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 < i_3) -> ((i_3 < j) ->
      ((a_3 <= i_3) /\ (0 <= (a_3 + i_3))))).
  (* Invariant *)
  Have: (j + a_5) <= x_2.
  (* Invariant *)
  Have: (0 < i_1) /\ (i_1 <= j) /\ (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Invariant *)
  Have: (0 < j) /\ (j <= x_2).
  (* Invariant *)
  Have: a_3 < j.
  (* Invariant *)
  Have: 0 < (a_3 + j).
  (* Invariant *)
  Have: ((a_3 = 0) ->
      (forall i_3 : Z. ((0 < i_3) -> ((i_3 < j) -> (a_3 = 0))))).
  (* Invariant *)
  Have: a_5 <= m.
  (* Invariant *)
  Have: a_5 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 < i_3) -> ((i_3 <= j) ->
      ((a <= i_3) /\ (0 <= (a + i_3))))).
  (* Invariant *)
  Have: (j + a_4) <= m.
  (* Invariant *)
  Have: (0 < i_2) /\ (a <= m) /\ (0 <= x) /\ (i_2 <= x_1).
  (* Invariant *)
  Have: (a_4 <= m) \/ (j <= a_4).
  (* Invariant *)
  Have: (a_4 <= j) \/ (j <= a_4).
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: 0 <= (a + j).
  (* Invariant *)
  Have: ((a = 0) ->
      (forall i_3 : Z. ((0 < i_3) -> ((i_3 <= j) -> (a = 0))))).
}
Prove: a_4 <= m.
Prover Z3 4.8.12 returns Valid (Qed:26ms) (10ms) (38490)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:26ms) (9ms) (37)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 43):
Let a_4 = IAbs.abs(a).
Let x = a + m.
Let x_1 = 1 + j.
Let a_5 = IAbs.abs(a_3).
Let x_2 = 1 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: (0 < i) /\ (i <= 1).
  (* Invariant *)
  Have: j <= (1 + a_3 + m).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 < i_3) -> ((i_3 < j) ->
      ((a_3 <= i_3) /\ (0 <= (a_3 + i_3))))).
  (* Invariant *)
  Have: (j + a_5) <= x_2.
  (* Invariant *)
  Have: (0 < i_1) /\ (i_1 <= j) /\ (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Invariant *)
  Have: (0 < j) /\ (j <= x_2).
  (* Invariant *)
  Have: a_3 < j.
  (* Invariant *)
  Have: 0 < (a_3 + j).
  (* Invariant *)
  Have: ((a_3 = 0) ->
      (forall i_3 : Z. ((0 < i_3) -> ((i_3 < j) -> (a_3 = 0))))).
  (* Invariant *)
  Have: a_5 <= m.
  (* Invariant *)
  Have: a_5 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 < i_3) -> ((i_3 <= j) ->
      ((a <= i_3) /\ (0 <= (a + i_3))))).
  (* Invariant *)
  Have: (j + a_4) <= m.
  (* Invariant *)
  Have: (0 < i_2) /\ (a <= m) /\ (0 <= x) /\ (i_2 <= x_1).
  (* Invariant *)
  Have: (a_4 <= j) \/ (j <= a_4).
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: 0 <= (a + j).
  (* Invariant *)
  Have: ((a = 0) ->
      (forall i_3 : Z. ((0 < i_3) -> ((i_3 <= j) -> (a = 0))))).
  (* Invariant *)
  Have: a_4 <= m.
}
Prove: a_4 <= j.
Prover Z3 4.8.12 returns Valid (Qed:33ms) (20ms) (39765)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:33ms) (18ms) (239)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (0.86ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (0.81ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (0.98ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (0.80ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 53):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 53):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 54):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 54):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 55):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 55):
Prove: true.
Prover Qed returns Valid (0.99ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 56):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 56):
Prove: true.
Prover Qed returns Valid (0.98ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 57):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 57):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0010/014_merged.c, line 58):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0010/014_merged.c, line 58):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/014_0010/014_merged.c, line 59) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/014_0010/014_merged.c, line 59) (2/2):
Call Result at line 63
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/014_0010/014_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/014_0010/014_merged.c:6: Warning: 
  No 'assigns' specification for function 'foo014'.
  Callers assumptions might be imprecise.

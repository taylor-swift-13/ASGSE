[kernel] Parsing out/025_0001/025_merged.c (with preprocessing)
[kernel:typing:no-proto] out/025_0001/025_merged.c:27: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/025_0001/025_merged.c:13: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/025_0001/025_merged.c:6: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[kernel:annot:missing-spec] out/025_0001/025_merged.c:6: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] out/025_0001/025_merged.c:13: Warning: 
  Missing assigns clause (assigns 'everything' instead)
[wp] 16 goals scheduled
[wp] [Timeout] typed_foo025_loop_invariant_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_foo025_loop_invariant_2_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_foo025_loop_invariant_3_preserved (Qed 7ms) (Z3)
[wp] [Timeout] typed_foo025_loop_invariant_3_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_foo025_loop_invariant_4_preserved (Qed 5ms) (Z3)
[wp] [Timeout] typed_foo025_loop_invariant_4_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_foo025_loop_invariant_5_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_foo025_loop_invariant_6_established (Qed 2ms) (Z3)
[wp] Proved goals:    8 / 16
  Qed:               5
  Alt-Ergo 2.5.4:    3 (4ms-6ms-8ms)
  Timeout:           8
------------------------------------------------------------
  Function foo025
------------------------------------------------------------

Goal Preservation of Invariant (file out/025_0001/025_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/025_0001/025_merged.c, line 17):
Assume {
  Type: is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(y).
  (* Then *)
  Have: tmp_0_0 != 0.
}
Prove: y <= x.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/025_0001/025_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/025_0001/025_merged.c, line 18):
Assume {
  Type: is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(y).
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: y <= x.
}
Prove: (y = x) \/ ((1 + y) = x).
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/025_0001/025_merged.c, line 19):
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(i_3) /\
      is_sint32(j) /\ is_sint32(j_1) /\ is_sint32(j_2) /\ is_sint32(j_3) /\
      is_sint32(tmp_0) /\ is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(y).
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (y = x) \/ ((1 + y) = x).
  (* Invariant *)
  Have: j_3 <= i_3.
  (* Invariant *)
  Have: (j_3 = i_3) \/ ((1 + j_3) = i_3).
  (* Invariant *)
  Have: (0 <= x) /\ (0 <= y).
  (* Invariant *)
  Have: 0 <= j_3.
  (* Invariant *)
  Have: 0 <= i_3.
  (* Invariant *)
  Have: j_2 <= i_2.
  (* Invariant *)
  Have: (j_2 = i_2) \/ ((1 + j_2) = i_2).
  (* Invariant *)
  Have: 0 <= j_2.
  (* Invariant *)
  Have: 0 <= i_2.
  (* Then *)
  Have: tmp_0 != 0.
  If y = x
  Then { Have: (i_2 = i_1) /\ (j_2 = j). Have: (1 + i_1) = i. }
  Else { Have: (i_2 = i) /\ (j_2 = j_1). Have: (1 + j_1) = j. }
}
Prove: j <= i.
Prover Z3 4.8.12 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/025_0001/025_merged.c, line 19):
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(tmp_0_0) /\ is_sint32(x) /\
      is_sint32(y).
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (y = x) \/ ((1 + y) = x).
}
Prove: j <= i.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/025_0001/025_merged.c, line 20):
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(i_3) /\
      is_sint32(j) /\ is_sint32(j_1) /\ is_sint32(j_2) /\ is_sint32(j_3) /\
      is_sint32(tmp_0) /\ is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(y).
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (y = x) \/ ((1 + y) = x).
  (* Invariant *)
  Have: j_3 <= i_3.
  (* Invariant *)
  Have: (j_3 = i_3) \/ ((1 + j_3) = i_3).
  (* Invariant *)
  Have: (0 <= x) /\ (0 <= y).
  (* Invariant *)
  Have: 0 <= j_3.
  (* Invariant *)
  Have: 0 <= i_3.
  (* Invariant *)
  Have: j_2 <= i_2.
  (* Invariant *)
  Have: (j_2 = i_2) \/ ((1 + j_2) = i_2).
  (* Invariant *)
  Have: 0 <= j_2.
  (* Invariant *)
  Have: 0 <= i_2.
  (* Then *)
  Have: tmp_0 != 0.
  If y = x
  Then { Have: (i_2 = i_1) /\ (j_2 = j). Have: (1 + i_1) = i. }
  Else { Have: (i_2 = i) /\ (j_2 = j_1). Have: (1 + j_1) = j. }
  (* Invariant *)
  Have: j <= i.
}
Prove: (j = i) \/ ((1 + j) = i).
Prover Z3 4.8.12 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/025_0001/025_merged.c, line 20):
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(tmp_0_0) /\ is_sint32(x) /\
      is_sint32(y).
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (y = x) \/ ((1 + y) = x).
  (* Invariant *)
  Have: j <= i.
}
Prove: (j = i) \/ ((1 + j) = i).
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/025_0001/025_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/025_0001/025_merged.c, line 21):
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(tmp_0_0) /\ is_sint32(x) /\
      is_sint32(y).
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (y = x) \/ ((1 + y) = x).
  (* Invariant *)
  Have: j <= i.
  (* Invariant *)
  Have: (j = i) \/ ((1 + j) = i).
}
Prove: (0 <= x) /\ (0 <= y).
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/025_0001/025_merged.c, line 22):
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(i_3) /\
      is_sint32(j) /\ is_sint32(j_1) /\ is_sint32(j_2) /\ is_sint32(j_3) /\
      is_sint32(tmp_0) /\ is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(y).
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (y = x) \/ ((1 + y) = x).
  (* Invariant *)
  Have: j_3 <= i_3.
  (* Invariant *)
  Have: (j_3 = i_3) \/ ((1 + j_3) = i_3).
  (* Invariant *)
  Have: (0 <= x) /\ (0 <= y).
  (* Invariant *)
  Have: 0 <= j_3.
  (* Invariant *)
  Have: 0 <= i_3.
  (* Invariant *)
  Have: j_2 <= i_2.
  (* Invariant *)
  Have: (j_2 = i_2) \/ ((1 + j_2) = i_2).
  (* Invariant *)
  Have: 0 <= j_2.
  (* Invariant *)
  Have: 0 <= i_2.
  (* Then *)
  Have: tmp_0 != 0.
  If y = x
  Then { Have: (i_2 = i_1) /\ (j_2 = j). Have: (1 + i_1) = i. }
  Else { Have: (i_2 = i) /\ (j_2 = j_1). Have: (1 + j_1) = j. }
  (* Invariant *)
  Have: j <= i.
  (* Invariant *)
  Have: (j = i) \/ ((1 + j) = i).
}
Prove: 0 <= j.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (8ms) (70)

------------------------------------------------------------

Goal Establishment of Invariant (file out/025_0001/025_merged.c, line 22):
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(tmp_0_0) /\ is_sint32(x) /\
      is_sint32(y).
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (y = x) \/ ((1 + y) = x).
  (* Invariant *)
  Have: j <= i.
  (* Invariant *)
  Have: (j = i) \/ ((1 + j) = i).
  (* Invariant *)
  Have: (0 <= x) /\ (0 <= y).
}
Prove: 0 <= j.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/025_0001/025_merged.c, line 23):
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(i_3) /\
      is_sint32(j) /\ is_sint32(j_1) /\ is_sint32(j_2) /\ is_sint32(j_3) /\
      is_sint32(tmp_0) /\ is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(y).
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (y = x) \/ ((1 + y) = x).
  (* Invariant *)
  Have: j_3 <= i_3.
  (* Invariant *)
  Have: (j_3 = i_3) \/ ((1 + j_3) = i_3).
  (* Invariant *)
  Have: (0 <= x) /\ (0 <= y).
  (* Invariant *)
  Have: 0 <= j_3.
  (* Invariant *)
  Have: 0 <= i_3.
  (* Invariant *)
  Have: j_2 <= i_2.
  (* Invariant *)
  Have: (j_2 = i_2) \/ ((1 + j_2) = i_2).
  (* Invariant *)
  Have: 0 <= j_2.
  (* Invariant *)
  Have: 0 <= i_2.
  (* Then *)
  Have: tmp_0 != 0.
  If y = x
  Then { Have: (i_2 = i_1) /\ (j_2 = j). Have: (1 + i_1) = i. }
  Else { Have: (i_2 = i) /\ (j_2 = j_1). Have: (1 + j_1) = j. }
  (* Invariant *)
  Have: j <= i.
  (* Invariant *)
  Have: (j = i) \/ ((1 + j) = i).
  (* Invariant *)
  Have: 0 <= j.
}
Prove: 0 <= i.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (4ms) (58)

------------------------------------------------------------

Goal Establishment of Invariant (file out/025_0001/025_merged.c, line 23):
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(tmp_0_0) /\ is_sint32(x) /\
      is_sint32(y).
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (y = x) \/ ((1 + y) = x).
  (* Invariant *)
  Have: j <= i.
  (* Invariant *)
  Have: (j = i) \/ ((1 + j) = i).
  (* Invariant *)
  Have: (0 <= x) /\ (0 <= y).
  (* Invariant *)
  Have: 0 <= j.
}
Prove: 0 <= i.
Prover Z3 4.8.12 returns Valid (Qed:2ms) (31122)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (4ms) (30)

------------------------------------------------------------

Goal Loop assigns (file out/025_0001/025_merged.c, line 24) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/025_0001/025_merged.c, line 24) (2/2):
Call Result at line 27
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/025_0001/025_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/025_0001/025_merged.c:3: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/025_0001/025_merged.c:6: Warning: 
  No 'assigns' specification for function 'foo025'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/014_0018/014_merged.c (with preprocessing)
[kernel:typing:no-proto] out/014_0018/014_merged.c:42: Warning: 
  Calling function unknown that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/014_0018/014_merged.c:6: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 56 goals scheduled
[wp] [Timeout] typed_foo014_loop_invariant_3_preserved (Qed 17ms) (Z3)
[wp] [Timeout] typed_foo014_loop_invariant_4_preserved (Qed 16ms) (Z3)
[wp] Proved goals:   54 / 56
  Qed:              50
  Alt-Ergo 2.5.4:    4 (5ms-14ms)
  Timeout:           2
------------------------------------------------------------
  Function foo014
------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 11):
Let a_1 = IAbs.abs(a).
Let x = 1 + m.
Let a_2 = j + a_1.
Let x_1 = 1 + j.
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(a - 1) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: (a < j) /\ (0 < (a + j)).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < j) ->
      ((0 < (a + m + i)) /\ ((a + i) <= x)))).
  (* Invariant *)
  Have: a_2 <= x.
  (* Invariant *)
  Have: a_2 <= m.
  (* Invariant *)
  Have: (0 < j) /\ (j <= x).
  (* Invariant *)
  Have: (a <= m) /\ (0 <= (a + m)).
  (* Invariant *)
  Have: a_1 < j.
  (* Then *)
  Have: j <= m.
}
Prove: a <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:11ms) (20ms) (32806)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (5ms) (20)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 12):
Let a_4 = IAbs.abs(a_3).
Let x = 1 + m.
Let a_5 = j + a_4.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(1 + j).
  (* Goal *)
  When: (0 < i) /\ (i <= j).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: (a_3 < j) /\ (0 < (a_3 + j)).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 < j) ->
      ((0 < (a_3 + m + i_1)) /\ ((a_3 + i_1) <= x)))).
  (* Invariant *)
  Have: a_5 <= x.
  (* Invariant *)
  Have: a_5 <= m.
  (* Invariant *)
  Have: (0 < j) /\ (j <= x).
  (* Invariant *)
  Have: (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Invariant *)
  Have: a_4 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (a <= j) /\ (0 <= (a + j)).
}
Prove: (0 < (a + i + m)) /\ ((a + i) <= x).
Prover Z3 4.8.12 returns Valid (Qed:12ms) (20ms) (36288)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:12ms) (12ms) (135)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 13):
Let x = 1 + m.
Let a_4 = IAbs.abs(a_3).
Let a_5 = j + a_4.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(1 + j).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: (a_3 < j) /\ (0 < (a_3 + j)).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < j) ->
      ((0 < (a_3 + m + i)) /\ ((a_3 + i) <= x)))).
  (* Invariant *)
  Have: a_5 <= x.
  (* Invariant *)
  Have: a_5 <= m.
  (* Invariant *)
  Have: (0 < j) /\ (j <= x).
  (* Invariant *)
  Have: (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Invariant *)
  Have: a_4 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (a <= j) /\ (0 <= (a + j)).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) ->
      ((0 < (a + m + i)) /\ ((a + i) <= x)))).
}
Prove: (j + IAbs.abs(a)) <= m.
Prover Z3 4.8.12 returns Timeout (Qed:17ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:17ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 14):
Let a_4 = j + IAbs.abs(a).
Let x = 1 + m.
Let a_5 = IAbs.abs(a_3).
Let a_6 = j + a_5.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(1 + j).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: (a_3 < j) /\ (0 < (a_3 + j)).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < j) ->
      ((0 < (a_3 + m + i)) /\ ((a_3 + i) <= x)))).
  (* Invariant *)
  Have: a_6 <= x.
  (* Invariant *)
  Have: a_6 <= m.
  (* Invariant *)
  Have: (0 < j) /\ (j <= x).
  (* Invariant *)
  Have: (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Invariant *)
  Have: a_5 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (a <= j) /\ (0 <= (a + j)).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) ->
      ((0 < (a + m + i)) /\ ((a + i) <= x)))).
  (* Invariant *)
  Have: a_4 <= m.
}
Prove: a_4 < m.
Prover Z3 4.8.12 returns Timeout (Qed:16ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:16ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 19):
Let a_4 = j + IAbs.abs(a).
Let x = 1 + m.
Let a_5 = IAbs.abs(a_3).
Let a_6 = j + a_5.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(1 + j).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: (a_3 < j) /\ (0 < (a_3 + j)).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < j) ->
      ((0 < (a_3 + m + i)) /\ ((a_3 + i) <= x)))).
  (* Invariant *)
  Have: a_6 <= x.
  (* Invariant *)
  Have: a_6 <= m.
  (* Invariant *)
  Have: (0 < j) /\ (j <= x).
  (* Invariant *)
  Have: (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Invariant *)
  Have: a_5 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (a <= j) /\ (0 <= (a + j)).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) ->
      ((0 < (a + m + i)) /\ ((a + i) <= x)))).
  (* Invariant *)
  Have: a_4 <= m.
  (* Invariant *)
  Have: a_4 < m.
}
Prove: (a <= m) /\ (0 <= (a + m)).
Prover Z3 4.8.12 returns Valid (Qed:15ms) (20ms) (37364)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:15ms) (7ms) (75)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.84ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 27):
Let a_4 = IAbs.abs(a).
Let a_5 = j + a_4.
Let x = 1 + m.
Let a_6 = IAbs.abs(a_3).
Let a_7 = j + a_6.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(1 + j).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: (a_3 < j) /\ (0 < (a_3 + j)).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < j) ->
      ((0 < (a_3 + m + i)) /\ ((a_3 + i) <= x)))).
  (* Invariant *)
  Have: a_7 <= x.
  (* Invariant *)
  Have: a_7 <= m.
  (* Invariant *)
  Have: (0 < j) /\ (j <= x).
  (* Invariant *)
  Have: (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Invariant *)
  Have: a_6 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (a <= j) /\ (0 <= (a + j)).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) ->
      ((0 < (a + m + i)) /\ ((a + i) <= x)))).
  (* Invariant *)
  Have: a_5 <= m.
  (* Invariant *)
  Have: a_5 < m.
  (* Invariant *)
  Have: (a <= m) /\ (0 <= (a + m)).
}
Prove: a_4 <= j.
Prover Z3 4.8.12 returns Valid (Qed:14ms) (37093)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:14ms) (14ms) (160)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 31):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 35):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (0.80ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0018/014_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0018/014_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (0.79ms)

------------------------------------------------------------

Goal Loop assigns (file out/014_0018/014_merged.c, line 38) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/014_0018/014_merged.c, line 38) (2/2):
Call Result at line 42
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/014_0018/014_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/014_0018/014_merged.c:6: Warning: 
  No 'assigns' specification for function 'foo014'.
  Callers assumptions might be imprecise.

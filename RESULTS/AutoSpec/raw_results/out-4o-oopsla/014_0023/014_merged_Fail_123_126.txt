[kernel] Parsing out/014_0023/014_merged.c (with preprocessing)
[kernel:typing:no-proto] out/014_0023/014_merged.c:77: Warning: 
  Calling function unknown that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/014_0023/014_merged.c:6: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] Computing [100 goals...]
[wp] 126 goals scheduled
[wp] [Timeout] typed_foo014_loop_invariant_5_preserved (Qed 10ms) (Z3)
[wp] [Timeout] typed_foo014_loop_invariant_12_preserved (Qed 11ms) (Z3)
[wp] [Timeout] typed_foo014_loop_invariant_21_preserved (Qed 9ms) (Z3)
[wp] Proved goals:  123 / 126
  Qed:             115
  Alt-Ergo 2.5.4:    5 (5ms-9ms)
  Z3 4.8.12:         3 (10ms-17ms-20ms)
  Timeout:           3
------------------------------------------------------------
  Function foo014
------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 15):
Let a_1 = IAbs.abs(a).
Let x = a + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(a - 1) /\
      is_sint32(1 + j).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= (1 + a + m).
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: ((a = 0) -> (((j - 1) % 2) = 0)).
  (* Invariant *)
  Have: 0 < (a + j).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: a < j.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: (0 < j) /\ (j <= (1 + m)).
  (* Invariant *)
  Have: a <= m.
  (* Invariant *)
  Have: a_1 <= m.
  (* Invariant *)
  Have: a_1 < j.
  (* Then *)
  Have: j <= m.
}
Prove: j < x.
Prover Z3 4.8.12 returns Timeout (Qed:10ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:10ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.79ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.73ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 22):
Let x = a + m.
Let a_1 = IAbs.abs(a).
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(a - 1) /\
      is_sint32(1 + j).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= (1 + a + m).
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: ((a = 0) -> (((j - 1) % 2) = 0)).
  (* Invariant *)
  Have: 0 < (a + j).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: a < j.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: (0 < j) /\ (j <= (1 + m)).
  (* Invariant *)
  Have: a <= m.
  (* Invariant *)
  Have: a_1 <= m.
  (* Invariant *)
  Have: a_1 < j.
  (* Then *)
  Have: j <= m.
  (* Invariant *)
  Have: j < x.
}
Prove: (2 + j) <= x.
Prover Z3 4.8.12 returns Timeout (Qed:11ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:11ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.81ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.78ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 31):
Let a_1 = IAbs.abs(a).
Let x = a + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\
      is_sint32(1 + j).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= (1 + a + m).
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: ((a = 0) -> (((j - 1) % 2) = 0)).
  (* Invariant *)
  Have: 0 < (a + j).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: a < j.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: (0 < j) /\ (j <= (1 + m)).
  (* Invariant *)
  Have: a <= m.
  (* Invariant *)
  Have: a_1 <= m.
  (* Invariant *)
  Have: a_1 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a = (-1). }
  Else { Have: a = 1. }
  (* Invariant *)
  Have: j < m.
}
Prove: (j % 2) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:9ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:9ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 32):
Let x = a + m.
Let a_1 = IAbs.abs(a).
Let x_1 = 1 + m.
Let x_2 = 1 + j.
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(a - 1) /\
      is_sint32(x_2).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= (1 + a + m).
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: ((a = 0) -> (((j - 1) % 2) = 0)).
  (* Invariant *)
  Have: 0 < (a + j).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: a < j.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: (0 < j) /\ (j <= x_1).
  (* Invariant *)
  Have: a <= m.
  (* Invariant *)
  Have: a_1 <= m.
  (* Invariant *)
  Have: a_1 < j.
  (* Then *)
  Have: j <= m.
  (* Invariant *)
  Have: j < x.
  (* Invariant *)
  Have: (2 + j) <= x.
  (* Invariant *)
  Have: ((a = 1) -> ((j % 2) = 0)).
}
Prove: (a <= x_2) \/ (a <= x_1).
Prover Z3 4.8.12 returns Valid (Qed:11ms) (10ms) (33345)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (5ms) (26)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (0.80ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 34):
Let x = a + m.
Let a_4 = IAbs.abs(a_3).
Let x_1 = a_3 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(1 + j).
  (* Goal *)
  When: (0 < i) /\ (i <= j).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= (1 + a_3 + m).
  (* Invariant *)
  Have: j <= x_1.
  (* Invariant *)
  Have: ((a_3 = 0) -> (((j - 1) % 2) = 0)).
  (* Invariant *)
  Have: 0 < (a_3 + j).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: a_3 < j.
  (* Invariant *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: (0 < j) /\ (j <= (1 + m)).
  (* Invariant *)
  Have: a_3 <= m.
  (* Invariant *)
  Have: a_4 <= m.
  (* Invariant *)
  Have: a_4 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: j < x.
  (* Invariant *)
  Have: (0 <= a) \/ (0 <= x).
  (* Invariant *)
  Have: ((a = 0) -> ((j % 2) = 0)).
  (* Invariant *)
  Have: (a <= j) \/ (a <= m).
  (* Invariant *)
  Have: (a <= m) \/ (0 <= x).
}
Prove: IAbs.abs(a) <= m.
Prover Z3 4.8.12 returns Valid (Qed:12ms) (20ms) (37032)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (0.87ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 38):
Let a_4 = IAbs.abs(a).
Let x = a + m.
Let a_5 = IAbs.abs(a_3).
Let x_1 = a_3 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(1 + j).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= (1 + a_3 + m).
  (* Invariant *)
  Have: j <= x_1.
  (* Invariant *)
  Have: ((a_3 = 0) -> (((j - 1) % 2) = 0)).
  (* Invariant *)
  Have: 0 < (a_3 + j).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: a_3 < j.
  (* Invariant *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: (0 < j) /\ (j <= (1 + m)).
  (* Invariant *)
  Have: a_3 <= m.
  (* Invariant *)
  Have: a_5 <= m.
  (* Invariant *)
  Have: a_5 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: j < x.
  (* Invariant *)
  Have: (0 <= a) \/ (0 <= x).
  (* Invariant *)
  Have: ((a = 0) -> ((j % 2) = 0)).
  (* Invariant *)
  Have: (a <= j) \/ (a <= m).
  (* Invariant *)
  Have: (a <= m) \/ (0 <= x).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a_4 <= m))).
}
Prove: (a <= m) \/ (a_4 <= j).
Prover Z3 4.8.12 returns Valid (Qed:14ms) (10ms) (35905)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:14ms) (8ms) (38)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 39):
Let x = a - 1.
Let a_1 = IAbs.abs(x).
Let x_1 = 1 + m.
Let x_2 = 1 + j.
Let x_3 = a + m.
Let a_2 = IAbs.abs(a).
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(x) /\
      is_sint32(x_2).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= (1 + a + m).
  (* Invariant *)
  Have: j <= x_3.
  (* Invariant *)
  Have: ((a = 0) -> (((j - 1) % 2) = 0)).
  (* Invariant *)
  Have: 0 < (a + j).
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: a < j.
  (* Invariant *)
  Have: 0 < x_3.
  (* Invariant *)
  Have: (0 < j) /\ (j <= x_1).
  (* Invariant *)
  Have: a <= m.
  (* Invariant *)
  Have: a_2 <= m.
  (* Invariant *)
  Have: a_2 < j.
  (* Then *)
  Have: j <= m.
  (* Invariant *)
  Have: j < x_3.
  (* Invariant *)
  Have: (2 + j) <= x_3.
  (* Invariant *)
  Have: ((a = 1) -> ((j % 2) = 0)).
  (* Invariant *)
  Have: (a <= x_2) \/ (a <= x_1).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a_1 <= m))).
  (* Invariant *)
  Have: (a_1 <= j) \/ (a <= x_1).
}
Prove: (a_1 <= j) \/ (a <= x_2).
Prover Z3 4.8.12 returns Valid (Qed:19ms) (10ms) (34197)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:19ms) (9ms) (29)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (12ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (0.96ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (12ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (0.94ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (0.85ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 49):
Let x = a - 1.
Let a_1 = IAbs.abs(x).
Let x_1 = 1 + j.
Let x_2 = 1 + m.
Let x_3 = a + m.
Let a_2 = IAbs.abs(a).
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(x) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= (1 + a + m).
  (* Invariant *)
  Have: j <= x_3.
  (* Invariant *)
  Have: ((a = 0) -> (((j - 1) % 2) = 0)).
  (* Invariant *)
  Have: 0 < (a + j).
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: a < j.
  (* Invariant *)
  Have: 0 < x_3.
  (* Invariant *)
  Have: (0 < j) /\ (j <= x_2).
  (* Invariant *)
  Have: a <= m.
  (* Invariant *)
  Have: a_2 <= m.
  (* Invariant *)
  Have: a_2 < j.
  (* Then *)
  Have: j <= m.
  (* Invariant *)
  Have: j < x_3.
  (* Invariant *)
  Have: (2 + j) <= x_3.
  (* Invariant *)
  Have: ((a = 1) -> ((j % 2) = 0)).
  (* Invariant *)
  Have: (a <= x_1) \/ (a <= x_2).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a_1 <= m))).
  (* Invariant *)
  Have: (a_1 <= j) \/ (a <= x_2).
  (* Invariant *)
  Have: (a_1 <= j) \/ (a <= x_1).
}
Prove: a <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:13ms) (20ms) (34211)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (8ms) (29)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (0.80ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (0.80ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 53):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 53):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 54):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 54):
Prove: true.
Prover Qed returns Valid (0.73ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 55):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 55):
Prove: true.
Prover Qed returns Valid (0.73ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 56):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 56):
Prove: true.
Prover Qed returns Valid (0.87ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 57):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 57):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 58):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 58):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 59):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 59):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 60):
Let x = a + m.
Let a_4 = IAbs.abs(a).
Let a_5 = IAbs.abs(a_3).
Let x_1 = a_3 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(1 + j).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= (1 + a_3 + m).
  (* Invariant *)
  Have: j <= x_1.
  (* Invariant *)
  Have: ((a_3 = 0) -> (((j - 1) % 2) = 0)).
  (* Invariant *)
  Have: 0 < (a_3 + j).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: a_3 < j.
  (* Invariant *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: (0 < j) /\ (j <= (1 + m)).
  (* Invariant *)
  Have: a_3 <= m.
  (* Invariant *)
  Have: a_5 <= m.
  (* Invariant *)
  Have: a_5 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: j < x.
  (* Invariant *)
  Have: ((a = 0) -> ((j % 2) = 0)).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a_4 <= m))).
  (* Invariant *)
  Have: (a <= m) \/ (a_4 <= j).
  (* Invariant *)
  Have: 0 <= (a + j).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: 0 < x.
}
Prove: a <= m.
Prover Z3 4.8.12 returns Valid (Qed:16ms) (10ms) (36137)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:16ms) (6ms) (39)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 60):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 61):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 61):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 62):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 62):
Prove: true.
Prover Qed returns Valid (0.73ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 63):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 63):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (0.79ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 65):
Let x = a + m.
Let a_4 = IAbs.abs(a).
Let a_5 = IAbs.abs(a_3).
Let x_1 = a_3 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(1 + j).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= (1 + a_3 + m).
  (* Invariant *)
  Have: j <= x_1.
  (* Invariant *)
  Have: ((a_3 = 0) -> (((j - 1) % 2) = 0)).
  (* Invariant *)
  Have: 0 < (a_3 + j).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: a_3 < j.
  (* Invariant *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: (0 < j) /\ (j <= (1 + m)).
  (* Invariant *)
  Have: a_3 <= m.
  (* Invariant *)
  Have: a_5 <= m.
  (* Invariant *)
  Have: a_5 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: j < x.
  (* Invariant *)
  Have: ((a = 0) -> ((j % 2) = 0)).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a_4 <= m))).
  (* Invariant *)
  Have: 0 <= (a + j).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: a <= m.
}
Prove: a_4 <= m.
Prover Z3 4.8.12 returns Valid (Qed:22ms) (10ms) (37068)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 65):
Prove: true.
Prover Qed returns Valid (0.79ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 66):
Let a_4 = IAbs.abs(a).
Let x = a + m.
Let a_5 = IAbs.abs(a_3).
Let x_1 = a_3 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(1 + j).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= (1 + a_3 + m).
  (* Invariant *)
  Have: j <= x_1.
  (* Invariant *)
  Have: ((a_3 = 0) -> (((j - 1) % 2) = 0)).
  (* Invariant *)
  Have: 0 < (a_3 + j).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: a_3 < j.
  (* Invariant *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: (0 < j) /\ (j <= (1 + m)).
  (* Invariant *)
  Have: a_3 <= m.
  (* Invariant *)
  Have: a_5 <= m.
  (* Invariant *)
  Have: a_5 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: j < x.
  (* Invariant *)
  Have: ((a = 0) -> ((j % 2) = 0)).
  (* Invariant *)
  Have: 0 <= (a + j).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: a <= m.
  (* Invariant *)
  Have: a_4 <= m.
}
Prove: a_4 <= j.
Prover Z3 4.8.12 returns Valid (Qed:17ms) (20ms) (36738)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 67):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 67):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 68):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 68):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 69):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 69):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 70):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 70):
Prove: true.
Prover Qed returns Valid (0.80ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 71):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 71):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0023/014_merged.c, line 72):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0023/014_merged.c, line 72):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/014_0023/014_merged.c, line 73) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/014_0023/014_merged.c, line 73) (2/2):
Call Result at line 77
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/014_0023/014_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/014_0023/014_merged.c:6: Warning: 
  No 'assigns' specification for function 'foo014'.
  Callers assumptions might be imprecise.

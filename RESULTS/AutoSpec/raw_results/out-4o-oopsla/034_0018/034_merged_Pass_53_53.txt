[kernel] Parsing out/034_0018/034_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 53 goals scheduled
[wp] Proved goals:   53 / 53
  Qed:              47
  Alt-Ergo 2.5.4:    6 (5ms-21ms)
------------------------------------------------------------
  Function foo034
------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 11):
Let x = 1 + i.
Let x_1 = i / 2.
Let x_2 = 2 * x_1.
Let x_3 = i % 2.
Let x_4 = 1 + x_2.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(y) /\ is_sint32(x_1) /\
      is_sint32(x).
  (* Invariant *)
  Have: (x_2 = i) \/ (x_4 = i).
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: (x_3 + x_2) = i.
  (* Invariant *)
  Have: x_1 <= i.
  (* Invariant *)
  Have: ((x_3 = 1) -> (x_4 = i)).
  (* Invariant *)
  Have: ((x_3 = 0) -> (x_2 = i)).
  (* Invariant *)
  Have: x_2 <= i.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
  If (x % 2) = 0
  Then { Have: (1 + x_1) = y. }
  Else { Have: x_1 = y. }
}
Prove: y <= (x / 2).
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (34661)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (19ms) (277)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 12):
Let x = 1 + i.
Let x_1 = i / 2.
Let x_2 = 2 * x_1.
Let x_3 = i % 2.
Let x_4 = 1 + x_2.
Let x_5 = 2 * y.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(y) /\ is_sint32(x_1) /\
      is_sint32(x).
  (* Invariant *)
  Have: (x_2 = i) \/ (x_4 = i).
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: (x_3 + x_2) = i.
  (* Invariant *)
  Have: x_1 <= i.
  (* Invariant *)
  Have: ((x_3 = 1) -> (x_4 = i)).
  (* Invariant *)
  Have: ((x_3 = 0) -> (x_2 = i)).
  (* Invariant *)
  Have: x_2 <= i.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
  If (x % 2) = 0
  Then { Have: (1 + x_1) = y. }
  Else { Have: x_1 = y. }
  (* Invariant *)
  Have: y <= (x / 2).
}
Prove: (x_5 = i) \/ (x = x_5).
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (35187)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (20ms) (288)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 14):
Let x = i / 2.
Let x_1 = 2 * x.
Let x_2 = 1 + x_1.
Let x_3 = 1 + i.
Let x_4 = i % 2.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(1 + x).
  (* Residual *)
  When: (x_3 % 2) = 0.
  (* Invariant *)
  Have: (x_1 = i) \/ (x_2 = i).
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: (x_4 + x_1) = i.
  (* Invariant *)
  Have: x <= i.
  (* Invariant *)
  Have: ((x_4 = 1) -> (x_2 = i)).
  (* Invariant *)
  Have: ((x_4 = 0) -> (x_1 = i)).
  (* Invariant *)
  Have: x_1 <= i.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
  (* Invariant *)
  Have: x < (x_3 / 2).
  (* Invariant *)
  Have: (x_2 = i) \/ ((2 + x_1) = i).
}
Prove: (-3) <= i.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (32299)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (5ms) (23)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 15):
Let x = 2 * y.
Let x_1 = 1 + i.
Let x_2 = x_1 % 2.
Let x_3 = i / 2.
Let x_4 = 2 * x_3.
Let x_5 = i % 2.
Let x_6 = 1 + x_4.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(y) /\ is_sint32(x_3) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: (x_4 = i) \/ (x_6 = i).
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: (x_5 + x_4) = i.
  (* Invariant *)
  Have: x_3 <= i.
  (* Invariant *)
  Have: ((x_5 = 1) -> (x_6 = i)).
  (* Invariant *)
  Have: ((x_5 = 0) -> (x_4 = i)).
  (* Invariant *)
  Have: x_4 <= i.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
  If x_2 = 0
  Then { Have: (1 + x_3) = y. }
  Else { Have: x_3 = y. }
  (* Invariant *)
  Have: y <= (x_1 / 2).
  (* Invariant *)
  Have: (x = i) \/ (x_1 = x).
  (* Invariant *)
  Have: 0 <= y.
}
Prove: (x + x_2) = x_1.
Prover Z3 4.8.12 returns Valid (Qed:10ms) (10ms) (35692)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (21ms) (293)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 16):
Let x = 2 * y.
Let x_1 = 1 + x.
Let x_2 = x_1 / 2.
Assume {
  Type: is_sint32(n) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: x < n.
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: (x_1 % 2) = 1.
}
Prove: x_2 <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (31177)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (10ms) (156)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (10ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (8ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 22):
Let x = 2 * y.
Let x_1 = 1 + x.
Let x_2 = x_1 / 2.
Assume {
  Type: is_sint32(n) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: x < n.
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: (x_1 % 2) = 1.
  (* Invariant *)
  Have: x_2 <= x_1.
}
Prove: x_2 = y.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (32197)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (6ms) (164)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 28):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 29):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 30):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 31):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 32):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 33):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 34):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 35):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0018/034_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0018/034_merged.c, line 36):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/034_0018/034_merged.c, line 37):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/034_0018/034_merged.c:3: Warning: 
  No 'assigns' specification for function 'foo034'.
  Callers assumptions might be imprecise.

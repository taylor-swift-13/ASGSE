[kernel] Parsing out/044_0007/044_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] Computing [100 goals...]
[wp] 111 goals scheduled
[wp] [Timeout] typed_foo044_loop_invariant_3_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_foo044_loop_invariant_5_preserved (Qed 5ms) (Z3)
[wp] [Timeout] typed_foo044_loop_invariant_5_established (Qed 4ms) (Z3)
[wp] [Timeout] typed_foo044_loop_invariant_31_preserved (Qed 6ms) (Z3)
[wp] Proved goals:  107 / 111
  Qed:             101
  Alt-Ergo 2.5.4:    4 (6ms-8ms-9ms)
  Z3 4.8.12:         2 (10ms-20ms)
  Timeout:           4
------------------------------------------------------------
  Function foo044
------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 18):
Let x = j / (if (flag_0 = 1) then 1 else 2).
Let x_1 = 2 * x.
Let x_2 = j + (if (flag_0 = 1) then 1 else 2).
Let x_3 = 1 + x.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(k) /\ is_sint32(x) /\
      is_sint32(x_2) /\ is_sint32(x_3).
  (* Invariant *)
  Have: (-1) <= k.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: ((0 / (if (flag_0 = 1) then 1 else 2)) = 0) /\
      ((0 % (if (flag_0 = 1) then 1 else 2)) = 0).
  (* Invariant *)
  Have: (x * (if (flag_0 = 1) then 1 else 2)) = j.
  (* Invariant *)
  Have: (j % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: x <= (1 + k).
  (* Invariant *)
  Have: x <= k.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < x) ->
      ((i * (if (flag_0 = 1) then 1 else 2)) = j))).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x_1 = j)).
  (* Invariant *)
  Have: if (flag_0 = 1) then (x = j) else (x_1 = j).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x = j)).
  (* Invariant *)
  Have: ((flag_0 != 1) -> (x_1 = j)).
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= x.
}
Prove: (x_3 * (if (flag_0 = 1) then 1 else 2)) = x_2.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (10189)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (6ms) (100)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 19):
Let x = 1 + i.
Let x_1 = x * (if (flag_0 = 1) then 1 else 2).
Let x_2 = (2 * i) + (if (flag_0 = 1) then 1 else 2).
Let x_3 = i + (if (flag_0 = 1) then 1 else 2).
Let x_4 = x_1 - (if (flag_0 = 1) then 1 else 2).
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(k) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_4).
  (* Invariant *)
  Have: (-1) <= k.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: ((0 / (if (flag_0 = 1) then 1 else 2)) = 0) /\
      ((0 % (if (flag_0 = 1) then 1 else 2)) = 0).
  (* Invariant *)
  Have: x_1
          = ((if (flag_0 = 1) then 1 else 2)
             + (i * (if (flag_0 = 1) then 1 else 2))).
  (* Invariant *)
  Have: (x_4 % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: i <= (1 + k).
  (* Invariant *)
  Have: i <= k.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (x_1
         = ((if (flag_0 = 1) then 1 else 2)
            + (i_1 * (if (flag_0 = 1) then 1 else 2)))))).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x_1 = x_2)).
  (* Invariant *)
  Have: (x_4 / (if (flag_0 = 1) then 1 else 2)) = i.
  (* Invariant *)
  Have: if (flag_0 = 1) then (x_1 = x_3) else (x_1 = x_2).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x_1 = x_3)).
  (* Invariant *)
  Have: ((flag_0 != 1) -> (x_1 = x_2)).
  (* Invariant *)
  Have: if (flag_0 = 1) then (0 < x_1) else (2 <= x_1).
  (* Invariant *)
  Have: 0 <= i.
}
Prove: (x_1 % (if (flag_0 = 1) then 1 else 2)) = 0.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (75988)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 20):
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(k) /\ is_sint32(n).
  If flag_0 = 1
  Then { Have: n = 1. }
  Else { Have: n = 2. }
  (* Invariant *)
  Have: (0 % n) = 0.
}
Prove: (-1) <= k.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.88ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 22):
Let x = 1 + i.
Let x_1 = x * (if (flag_0 = 1) then 1 else 2).
Let x_2 = (2 * i) + (if (flag_0 = 1) then 1 else 2).
Let x_3 = i + (if (flag_0 = 1) then 1 else 2).
Let x_4 = x_1 - (if (flag_0 = 1) then 1 else 2).
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(k) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_4).
  (* Invariant *)
  Have: (-1) <= k.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: ((0 / (if (flag_0 = 1) then 1 else 2)) = 0) /\
      ((0 % (if (flag_0 = 1) then 1 else 2)) = 0).
  (* Invariant *)
  Have: x_1
          = ((if (flag_0 = 1) then 1 else 2)
             + (i * (if (flag_0 = 1) then 1 else 2))).
  (* Invariant *)
  Have: (x_4 % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: i <= (1 + k).
  (* Invariant *)
  Have: i <= k.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (x_1
         = ((if (flag_0 = 1) then 1 else 2)
            + (i_1 * (if (flag_0 = 1) then 1 else 2)))))).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x_1 = x_2)).
  (* Invariant *)
  Have: (x_4 / (if (flag_0 = 1) then 1 else 2)) = i.
  (* Invariant *)
  Have: if (flag_0 = 1) then (x_1 = x_3) else (x_1 = x_2).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x_1 = x_3)).
  (* Invariant *)
  Have: ((flag_0 != 1) -> (x_1 = x_2)).
  (* Invariant *)
  Have: if (flag_0 = 1) then (0 < x_1) else (2 <= x_1).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (x_1 % (if (flag_0 = 1) then 1 else 2)) = 0.
}
Prove: i < k.
Prover Z3 4.8.12 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 22):
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(k) /\ is_sint32(n).
  If flag_0 = 1
  Then { Have: n = 1. }
  Else { Have: n = 2. }
  (* Invariant *)
  Have: (0 % n) = 0.
  (* Invariant *)
  Have: (-1) <= k.
}
Prove: 0 <= k.
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.86ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.92ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.85ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.89ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (0.78ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (0.84ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (0.89ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (0.85ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (0.81ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (0.87ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (0.92ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (0.88ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (0.99ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 48):
Let x = 1 + i.
Let x_1 = x * (if (flag_0 = 1) then 1 else 2).
Let x_2 = (2 * i) + (if (flag_0 = 1) then 1 else 2).
Let x_3 = i + (if (flag_0 = 1) then 1 else 2).
Let x_4 = x_1 - (if (flag_0 = 1) then 1 else 2).
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(k) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_4).
  (* Goal *)
  When: (0 <= i_1) /\ (i_1 <= i).
  (* Invariant *)
  Have: (-1) <= k.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: ((0 / (if (flag_0 = 1) then 1 else 2)) = 0) /\
      ((0 % (if (flag_0 = 1) then 1 else 2)) = 0).
  (* Invariant *)
  Have: x_1
          = ((if (flag_0 = 1) then 1 else 2)
             + (i * (if (flag_0 = 1) then 1 else 2))).
  (* Invariant *)
  Have: (x_4 % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: i <= (1 + k).
  (* Invariant *)
  Have: i <= k.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i) ->
      (x_1
         = ((if (flag_0 = 1) then 1 else 2)
            + (i_2 * (if (flag_0 = 1) then 1 else 2)))))).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x_1 = x_2)).
  (* Invariant *)
  Have: (x_4 / (if (flag_0 = 1) then 1 else 2)) = i.
  (* Invariant *)
  Have: if (flag_0 = 1) then (x_1 = x_3) else (x_1 = x_2).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x_1 = x_3)).
  (* Invariant *)
  Have: ((flag_0 != 1) -> (x_1 = x_2)).
  (* Invariant *)
  Have: if (flag_0 = 1) then (0 < x_1) else (2 <= x_1).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (x_1 % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: i < k.
}
Prove: x_1 = (i_1 * (if (flag_0 = 1) then 1 else 2)).
Prover Z3 4.8.12 returns Timeout (Qed:6ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:6ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 53):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 53):
Prove: true.
Prover Qed returns Valid (0.87ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 54):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 54):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 55):
Let x = 1 + i.
Let x_1 = x * (if (flag_0 = 1) then 1 else 2).
Let x_2 = 2 * i.
Let x_3 = x_2 + (if (flag_0 = 1) then 1 else 2).
Let x_4 = i + (if (flag_0 = 1) then 1 else 2).
Let x_5 = x_1 - (if (flag_0 = 1) then 1 else 2).
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(k) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_5).
  (* Invariant *)
  Have: (-1) <= k.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: ((0 / (if (flag_0 = 1) then 1 else 2)) = 0) /\
      ((0 % (if (flag_0 = 1) then 1 else 2)) = 0).
  (* Invariant *)
  Have: x_1
          = ((if (flag_0 = 1) then 1 else 2)
             + (i * (if (flag_0 = 1) then 1 else 2))).
  (* Invariant *)
  Have: (x_5 % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: i <= (1 + k).
  (* Invariant *)
  Have: i <= k.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (x_1
         = ((if (flag_0 = 1) then 1 else 2)
            + (i_1 * (if (flag_0 = 1) then 1 else 2)))))).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x_1 = x_3)).
  (* Invariant *)
  Have: (x_5 / (if (flag_0 = 1) then 1 else 2)) = i.
  (* Invariant *)
  Have: if (flag_0 = 1) then (x_1 = x_4) else (x_1 = x_3).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x_1 = x_4)).
  (* Invariant *)
  Have: ((flag_0 != 1) -> (x_1 = x_3)).
  (* Invariant *)
  Have: if (flag_0 = 1) then (0 < x_1) else (2 <= x_1).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (x_1 % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: i < k.
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= i) -> ((0 <= i_1) ->
      (x_1 = (i_1 * (if (flag_0 = 1) then 1 else 2))))).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x_1 = (2 + x_2))).
}
Prove: (x_1 / (if (flag_0 = 1) then 1 else 2)) = x.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (39930)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 55):
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(k).
  (* Invariant *)
  Have: (0 % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: (-1) <= k.
  (* Invariant *)
  Have: 0 <= k.
}
Prove: (0 / (if (flag_0 = 1) then 1 else 2)) = 0.
Prover Z3 4.8.12 returns Valid (Qed:2ms) (30426)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (8ms) (66)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 56):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 56):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 57):
Let x = j + (if (flag_0 = 1) then 1 else 2).
Let x_1 = x / (if (flag_0 = 1) then 1 else 2).
Let x_2 = 2 * x_1.
Let x_3 = 2 + j.
Let x_4 = 1 + j.
Let x_5 = x_1 - 1.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(k) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_5).
  (* Invariant *)
  Have: (-1) <= k.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: ((0 / (if (flag_0 = 1) then 1 else 2)) = 0) /\
      ((0 % (if (flag_0 = 1) then 1 else 2)) = 0).
  (* Invariant *)
  Have: (x_5 * (if (flag_0 = 1) then 1 else 2)) = j.
  (* Invariant *)
  Have: (j % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: x_1 <= (2 + k).
  (* Invariant *)
  Have: x_1 <= (1 + k).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> (((2 + i) <= x_1) ->
      ((i * (if (flag_0 = 1) then 1 else 2)) = j))).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x_3 = x_2)).
  (* Invariant *)
  Have: x_1 = (1 + (j / (if (flag_0 = 1) then 1 else 2))).
  (* Invariant *)
  Have: if (flag_0 = 1) then (x_1 = x_4) else (x_3 = x_2).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x_1 = x_4)).
  (* Invariant *)
  Have: ((flag_0 != 1) -> (x_3 = x_2)).
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: (x_1 * (if (flag_0 = 1) then 1 else 2)) = x.
  (* Invariant *)
  Have: (x % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: x_1 <= k.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < x_1) ->
      ((i * (if (flag_0 = 1) then 1 else 2)) = x))).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x = x_2)).
}
Prove: if (flag_0 = 1) then (x_1 = x) else (x = x_2).
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (39634)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (9ms) (188)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 57):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 58):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 58):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 59):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 59):
Prove: true.
Prover Qed returns Valid (0.84ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 60):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 60):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 61):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 61):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 62):
Let x = j + (if (flag_0 = 1) then 1 else 2).
Let x_1 = x / (if (flag_0 = 1) then 1 else 2).
Let x_2 = 2 * x_1.
Let x_3 = 2 + j.
Let x_4 = 1 + j.
Let x_5 = x_1 - 1.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(k) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_5).
  (* Invariant *)
  Have: (-1) <= k.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: ((0 / (if (flag_0 = 1) then 1 else 2)) = 0) /\
      ((0 % (if (flag_0 = 1) then 1 else 2)) = 0).
  (* Invariant *)
  Have: (x_5 * (if (flag_0 = 1) then 1 else 2)) = j.
  (* Invariant *)
  Have: (j % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: x_1 <= (2 + k).
  (* Invariant *)
  Have: x_1 <= (1 + k).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> (((2 + i) <= x_1) ->
      ((i * (if (flag_0 = 1) then 1 else 2)) = j))).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x_3 = x_2)).
  (* Invariant *)
  Have: x_1 = (1 + (j / (if (flag_0 = 1) then 1 else 2))).
  (* Invariant *)
  Have: if (flag_0 = 1) then (x_1 = x_4) else (x_3 = x_2).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x_1 = x_4)).
  (* Invariant *)
  Have: ((flag_0 != 1) -> (x_3 = x_2)).
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: (x_1 * (if (flag_0 = 1) then 1 else 2)) = x.
  (* Invariant *)
  Have: (x % (if (flag_0 = 1) then 1 else 2)) = 0.
  (* Invariant *)
  Have: x_1 <= k.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < x_1) ->
      ((i * (if (flag_0 = 1) then 1 else 2)) = x))).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x = x_2)).
  (* Invariant *)
  Have: if (flag_0 = 1) then (x_1 = x) else (x = x_2).
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x_1 = x)).
  (* Invariant *)
  Have: ((flag_0 != 1) -> (x = x_2)).
}
Prove: 0 <= x.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (20ms) (37966)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (9ms) (193)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 62):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 63):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 63):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 65):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 65):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 67):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 67):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 68):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 68):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 69):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 69):
Prove: true.
Prover Qed returns Valid (0.78ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 70):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 70):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 71):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 71):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0007/044_merged.c, line 72):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0007/044_merged.c, line 72):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/044_0007/044_merged.c, line 73):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/044_0007/044_merged.c:3: Warning: 
  No 'assigns' specification for function 'foo044'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/03_0002/03_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 38 goals scheduled
[wp] [Timeout] typed_foo03_loop_invariant_3_established (Qed 0.63ms) (Z3)
[wp] Proved goals:   37 / 38
  Qed:              27
  Alt-Ergo 2.5.4:   10
  Timeout:           1
------------------------------------------------------------
  Function foo03
------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0002/03_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0002/03_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0002/03_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0002/03_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0002/03_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0002/03_merged.c, line 14):
Assume {
  Type: is_sint32(i) /\ is_sint32(l) /\ is_sint32(n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n.
  (* Invariant *)
  Have: 0 < n.
}
Prove: i <= n.
Prover Z3 4.8.12 returns Timeout (Qed:0.63ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.63ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0002/03_merged.c, line 15):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(i_3) /\ is_sint32(k) /\
      is_sint32(l) /\ is_sint32(n) /\ is_sint32(1 + k).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: i_3 <= n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: i_2 <= n.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l <= i_1.
  (* Invariant *)
  Have: (l = i_1) \/ (l < i_1).
  (* Invariant *)
  Have: i_1 <= n.
  (* Else *)
  Have: n <= i_1.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (32537)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (6ms) (47)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0002/03_merged.c, line 15):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: i_1 <= n.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:1ms) (10ms) (30403)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (26)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0002/03_merged.c, line 16):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(i_3) /\ is_sint32(k) /\
      is_sint32(l) /\ is_sint32(n) /\ is_sint32(1 + k).
  (* Goal *)
  When: (i < i_1) /\ (l <= i).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: i_3 <= n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: i_2 <= n.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l <= i_1.
  (* Invariant *)
  Have: (l = i_1) \/ (l < i_1).
  (* Invariant *)
  Have: i_1 <= n.
  (* Else *)
  Have: n <= i_1.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (32541)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (6ms) (47)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0002/03_merged.c, line 16):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (i < i_1) /\ (l <= i).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: i_1 <= n.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:2ms) (10ms) (30405)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (26)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0002/03_merged.c, line 17):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(i_3) /\ is_sint32(k) /\
      is_sint32(l) /\ is_sint32(n) /\ is_sint32(1 + k).
  (* Goal *)
  When: (i < i_1) /\ (l <= i).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: i_3 <= n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: i_2 <= n.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l <= i_1.
  (* Invariant *)
  Have: (l = i_1) \/ (l < i_1).
  (* Invariant *)
  Have: i_1 <= n.
  (* Else *)
  Have: n <= i_1.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (32541)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (5ms) (47)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0002/03_merged.c, line 17):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (i < i_1) /\ (l <= i).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: i_1 <= n.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:2ms) (10ms) (30405)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (5ms) (26)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0002/03_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0002/03_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0002/03_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0002/03_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0002/03_merged.c, line 26):
Let x = 1 + i.
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(k) /\
      is_sint32(l) /\ is_sint32(n) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: i_2 <= n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l <= i.
  (* Invariant *)
  Have: (l = i) \/ (l < i).
  (* Invariant *)
  Have: i <= n.
  (* Then *)
  Have: i < n.
}
Prove: l <= x.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (32160)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (4ms) (17)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0002/03_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0002/03_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0002/03_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0002/03_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0002/03_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0002/03_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0002/03_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0002/03_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0002/03_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0002/03_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0002/03_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0002/03_merged.c, line 32):
Let x = 1 + i_1.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(i_3) /\ is_sint32(k) /\
      is_sint32(l) /\ is_sint32(n) /\ is_sint32(x).
  (* Goal *)
  When: (l <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: i_3 <= n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: i_2 <= n.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l <= i_1.
  (* Invariant *)
  Have: (l = i_1) \/ (l < i_1).
  (* Invariant *)
  Have: i_1 <= n.
  (* Then *)
  Have: i_1 < n.
  (* Invariant *)
  Have: l <= x.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (32648)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (5ms) (20)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0002/03_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0002/03_merged.c, line 33):
Let x = 1 + i_1.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(i_3) /\ is_sint32(k) /\
      is_sint32(l) /\ is_sint32(n) /\ is_sint32(x).
  (* Goal *)
  When: (l <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: i_3 <= n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: i_2 <= n.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l <= i_1.
  (* Invariant *)
  Have: (l = i_1) \/ (l < i_1).
  (* Invariant *)
  Have: i_1 <= n.
  (* Then *)
  Have: i_1 < n.
  (* Invariant *)
  Have: l <= x.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (32648)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (20)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0002/03_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (0.97ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0002/03_merged.c, line 34):
Let x = 1 + i_1.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(i_3) /\ is_sint32(k) /\
      is_sint32(l) /\ is_sint32(n) /\ is_sint32(x).
  (* Goal *)
  When: (l <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: i_3 <= n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: i_2 <= n.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l <= i_1.
  (* Invariant *)
  Have: (l = i_1) \/ (l < i_1).
  (* Invariant *)
  Have: i_1 <= n.
  (* Then *)
  Have: i_1 < n.
  (* Invariant *)
  Have: l <= x.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (32648)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (1ms) (20)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0002/03_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0002/03_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0002/03_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/03_0002/03_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/03_0002/03_merged.c, line 36):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/03_0002/03_merged.c:7: Warning: 
  No 'assigns' specification for function 'foo03'.
  Callers assumptions might be imprecise.

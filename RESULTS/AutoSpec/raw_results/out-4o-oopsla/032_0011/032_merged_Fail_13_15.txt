[kernel] Parsing out/032_0011/032_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 15 goals scheduled
[wp] [Timeout] typed_foo032_loop_invariant_preserved (Qed 5ms) (Z3)
[wp] [Timeout] typed_foo032_loop_invariant_2_preserved (Qed 16ms) (Z3)
[wp] Proved goals:   13 / 15
  Qed:              10
  Alt-Ergo 2.5.4:    2 (13ms-38ms)
  Z3 4.8.12:         1 (10ms)
  Timeout:           2
------------------------------------------------------------
  Function foo032
------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0011/032_merged.c, line 8):
Let x = n / 2.
Let x_1 = i % 2.
Assume {
  Type: is_sint32(b) /\ is_sint32(i_1) /\ is_sint32(j) /\ is_sint32(n) /\
      is_sint32(1 + n).
  (* Goal *)
  When: (0 <= i) /\ (i <= n).
  (* Invariant *)
  Have: forall i_2 : Z. let x_2 = i_2 % 2 in ((0 <= i_2) -> ((i_2 < n) ->
      ((((x_2 != 0) -> (b = 0))) /\ (((x_2 = 0) -> (b = 1)))))).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((0 <= i_2) -> ((i_2 < n) ->
      ((j + (i_2 / 2)) = i_1)))).
  (* Invariant *)
  Have: (((n % 2) = 1) -> (b = 1)).
  (* Invariant *)
  Have: ((i_1 + x) = j) \/ ((j + x) = i_1).
  (* Invariant *)
  Have: (((b = 1) -> ((i_1 + n) = j))) /\ (((b = 0) -> ((j + n) = i_1))).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: n <= 199.
}
Prove: (((x_1 = 0) -> (b = 0))) /\ (((x_1 != 0) -> (b != 0))).
Prover Z3 4.8.12 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0011/032_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0011/032_merged.c, line 9):
Let x = n / 2.
Assume {
  Type: is_sint32(b) /\ is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(i_3) /\
      is_sint32(j) /\ is_sint32(j_1) /\ is_sint32(j_2) /\ is_sint32(n) /\
      is_sint32(1 + n).
  (* Goal *)
  When: ((i % 2) = 0) /\ (0 <= i) /\ (i <= n).
  (* Invariant *)
  Have: forall i_4 : Z. let x_1 = i_4 % 2 in ((0 <= i_4) -> ((i_4 < n) ->
      ((((x_1 != 0) -> (b = 0))) /\ (((x_1 = 0) -> (b = 1)))))).
  (* Invariant *)
  Have: forall i_4 : Z. (((i_4 % 2) = 0) -> ((0 <= i_4) -> ((i_4 < n) ->
      ((j_2 + (i_4 / 2)) = i_3)))).
  (* Invariant *)
  Have: (((n % 2) = 1) -> (b = 1)).
  (* Invariant *)
  Have: ((i_3 + x) = j_2) \/ ((j_2 + x) = i_3).
  (* Invariant *)
  Have: (((b = 1) -> ((i_3 + n) = j_2))) /\ (((b = 0) -> ((j_2 + n) = i_3))).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: n <= 199.
  If b != 0
  Then { Have: (i_3 = i_2) /\ (j_2 = j). Have: (1 + i_2) = i_1. }
  Else { Have: (i_3 = i_1) /\ (j_2 = j_1). Have: (1 + j_1) = j. }
  (* Invariant *)
  Have: forall i_4 : Z. let x_1 = i_4 % 2 in ((0 <= i_4) -> ((i_4 <= n) ->
      ((((x_1 = 0) -> (b = 0))) /\ (((x_1 != 0) -> (b != 0)))))).
}
Prove: (j + (i / 2)) = i_1.
Prover Z3 4.8.12 returns Timeout (Qed:16ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:16ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0011/032_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0011/032_merged.c, line 10):
Let x = 1 + i.
Let x_1 = n / 2.
Let x_2 = 1 + n.
Assume {
  Type: is_sint32(b) /\ is_sint32(i) /\ is_sint32(j) /\ is_sint32(n) /\
      is_sint32(x) /\ is_sint32(x_2).
  (* Residual *)
  When: b != 0.
  (* Goal *)
  When: (x_2 % 2) = 1.
  (* Invariant *)
  Have: forall i_1 : Z. let x_3 = i_1 % 2 in ((0 <= i_1) -> ((i_1 < n) ->
      ((x_3 = 0) /\ (((x_3 = 0) -> (b = 1)))))).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((0 <= i_1) -> ((i_1 < n) ->
      ((j + (i_1 / 2)) = i)))).
  (* Invariant *)
  Have: (((n % 2) = 1) -> (b = 1)).
  (* Invariant *)
  Have: ((i + x_1) = j) \/ ((j + x_1) = i).
  (* Invariant *)
  Have: ((b = 1) -> ((i + n) = j)).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: n <= 199.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= n) -> ((i_1 % 2) != 0))).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((0 <= i_1) -> ((i_1 <= n) ->
      ((j + (i_1 / 2)) = x)))).
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:13ms) (10ms) (37241)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (13ms) (196)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0011/032_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0011/032_merged.c, line 11):
Let x = 1 + n.
Let x_1 = n / 2.
Let x_2 = x / 2.
Assume {
  Type: is_sint32(b) /\ is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(i_2) /\
      is_sint32(j) /\ is_sint32(j_1) /\ is_sint32(j_2) /\ is_sint32(n) /\
      is_sint32(x).
  (* Invariant *)
  Have: forall i_3 : Z. let x_3 = i_3 % 2 in ((0 <= i_3) -> ((i_3 < n) ->
      ((((x_3 != 0) -> (b = 0))) /\ (((x_3 = 0) -> (b = 1)))))).
  (* Invariant *)
  Have: forall i_3 : Z. (((i_3 % 2) = 0) -> ((0 <= i_3) -> ((i_3 < n) ->
      ((j_2 + (i_3 / 2)) = i_2)))).
  (* Invariant *)
  Have: (((n % 2) = 1) -> (b = 1)).
  (* Invariant *)
  Have: ((i_2 + x_1) = j_2) \/ ((j_2 + x_1) = i_2).
  (* Invariant *)
  Have: (((b = 1) -> ((i_2 + n) = j_2))) /\ (((b = 0) -> ((j_2 + n) = i_2))).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: n <= 199.
  If b != 0
  Then { Have: (i_2 = i_1) /\ (j_2 = j). Have: (1 + i_1) = i. }
  Else { Have: (i_2 = i) /\ (j_2 = j_1). Have: (1 + j_1) = j. }
  (* Invariant *)
  Have: forall i_3 : Z. let x_3 = i_3 % 2 in ((0 <= i_3) -> ((i_3 <= n) ->
      ((((x_3 = 0) -> (b = 0))) /\ (((x_3 != 0) -> (b != 0)))))).
  (* Invariant *)
  Have: forall i_3 : Z. (((i_3 % 2) = 0) -> ((0 <= i_3) -> ((i_3 <= n) ->
      ((j + (i_3 / 2)) = i)))).
  (* Invariant *)
  Have: (((x % 2) = 1) -> (b = 0)).
}
Prove: ((i + x_2) = j) \/ ((j + x_2) = i).
Prover Z3 4.8.12 returns Valid (Qed:18ms) (10ms) (43407)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:18ms) (38ms) (790)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0011/032_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0011/032_merged.c, line 12):
Let x = 1 + n.
Let x_1 = x / 2.
Let x_2 = n / 2.
Assume {
  Type: is_sint32(b) /\ is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(i_2) /\
      is_sint32(j) /\ is_sint32(j_1) /\ is_sint32(j_2) /\ is_sint32(n) /\
      is_sint32(x).
  (* Invariant *)
  Have: forall i_3 : Z. let x_3 = i_3 % 2 in ((0 <= i_3) -> ((i_3 < n) ->
      ((((x_3 != 0) -> (b = 0))) /\ (((x_3 = 0) -> (b = 1)))))).
  (* Invariant *)
  Have: forall i_3 : Z. (((i_3 % 2) = 0) -> ((0 <= i_3) -> ((i_3 < n) ->
      ((j_2 + (i_3 / 2)) = i_2)))).
  (* Invariant *)
  Have: (((n % 2) = 1) -> (b = 1)).
  (* Invariant *)
  Have: ((i_2 + x_2) = j_2) \/ ((j_2 + x_2) = i_2).
  (* Invariant *)
  Have: (((b = 1) -> ((i_2 + n) = j_2))) /\ (((b = 0) -> ((j_2 + n) = i_2))).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: n <= 199.
  If b != 0
  Then { Have: (i_2 = i_1) /\ (j_2 = j). Have: (1 + i_1) = i. }
  Else { Have: (i_2 = i) /\ (j_2 = j_1). Have: (1 + j_1) = j. }
  (* Invariant *)
  Have: forall i_3 : Z. let x_3 = i_3 % 2 in ((0 <= i_3) -> ((i_3 <= n) ->
      ((((x_3 = 0) -> (b = 0))) /\ (((x_3 != 0) -> (b != 0)))))).
  (* Invariant *)
  Have: forall i_3 : Z. (((i_3 % 2) = 0) -> ((0 <= i_3) -> ((i_3 <= n) ->
      ((j + (i_3 / 2)) = i)))).
  (* Invariant *)
  Have: (((x % 2) = 1) -> (b = 0)).
  (* Invariant *)
  Have: ((i + x_1) = j) \/ ((j + x_1) = i).
}
Prove: (((b = 0) -> ((1 + i + n) = j))) /\ (((b != 0) -> ((1 + j + n) = i))).
Prover Z3 4.8.12 returns Valid (Qed:18ms) (10ms) (45887)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0011/032_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0011/032_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0011/032_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0011/032_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0011/032_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Loop assigns (file out/032_0011/032_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/032_0011/032_merged.c:3: Warning: 
  No 'assigns' specification for function 'foo032'.
  Callers assumptions might be imprecise.

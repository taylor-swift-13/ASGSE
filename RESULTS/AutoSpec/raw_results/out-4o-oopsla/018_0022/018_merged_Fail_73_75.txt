[kernel] Parsing out/018_0022/018_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 75 goals scheduled
[wp] [Timeout] typed_foo018_loop_invariant_3_preserved (Qed 4ms) (Z3)
[wp] [Timeout] typed_foo018_loop_invariant_19_preserved (Qed 7ms) (Z3)
[wp] Proved goals:   73 / 75
  Qed:              64
  Alt-Ergo 2.5.4:    7 (6ms-251ms-409ms)
  Z3 4.8.12:         2 (220ms)
  Timeout:           2
------------------------------------------------------------
  Function foo018
------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 12):
Let x = 1 + b.
Assume {
  Type: is_sint32(b) /\ is_sint32(flag_0) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: (b * flag_0) = b.
  (* Invariant *)
  Have: b <= (100 * flag_0).
  (* Invariant *)
  Have: 0 <= b.
  (* Invariant *)
  Have: b <= 100.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < b) -> (i_1 <= b))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < b) -> (i_1 = b))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < b) -> ((1 + i_1) = b))).
  (* Invariant *)
  Have: ((0 <= i) -> ((i < b) -> ((1 + i) = b))).
  (* Then *)
  Have: b <= 99.
}
Prove: (flag_0 * x) = x.
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 14):
Let x = 1 + b.
Let x_1 = 100 * flag_0.
Assume {
  Type: is_sint32(b) /\ is_sint32(flag_0) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: (b * flag_0) = b.
  (* Invariant *)
  Have: b <= x_1.
  (* Invariant *)
  Have: 0 <= b.
  (* Invariant *)
  Have: b <= 100.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < b) -> (i_1 <= b))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < b) -> (i_1 = b))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < b) -> ((1 + i_1) = b))).
  (* Invariant *)
  Have: ((0 <= i) -> ((i < b) -> ((1 + i) = b))).
  (* Then *)
  Have: b <= 99.
  Have: (flag_0 * x) = x.
}
Prove: b < x_1.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (32397)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (6ms) (22)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.73ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.84ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 23):
Let x = 100 * flag_0.
Let x_1 = 1 + b.
Assume {
  Type: is_sint32(b) /\ is_sint32(flag_0) /\ is_sint32(x_1).
  (* Goal *)
  When: (i <= b) /\ (0 <= i).
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: (b * flag_0) = b.
  (* Invariant *)
  Have: b <= x.
  (* Invariant *)
  Have: 0 <= b.
  (* Invariant *)
  Have: b <= 100.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < b) -> (i_2 <= b))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < b) -> (i_2 = b))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < b) -> ((1 + i_2) = b))).
  (* Invariant *)
  Have: ((0 <= i_1) -> ((i_1 < b) -> ((1 + i_1) = b))).
  Have: (flag_0 * x_1) = x_1.
  (* Invariant *)
  Have: b < x.
  (* Invariant *)
  Have: (-1) <= b.
  (* Invariant *)
  Have: b <= 99.
}
Prove: i <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (32806)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (8ms) (25)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 24):
Let x = 1 + b.
Let x_1 = 100 * flag_0.
Assume {
  Type: is_sint32(b) /\ is_sint32(flag_0) /\ is_sint32(x).
  (* Goal *)
  When: (i <= b) /\ (0 <= i).
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: (b * flag_0) = b.
  (* Invariant *)
  Have: b <= x_1.
  (* Invariant *)
  Have: 0 <= b.
  (* Invariant *)
  Have: b <= 100.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < b) -> (i_2 <= b))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < b) -> (i_2 = b))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < b) -> ((1 + i_2) = b))).
  (* Invariant *)
  Have: ((0 <= i_1) -> ((i_1 < b) -> ((1 + i_1) = b))).
  Have: (flag_0 * x) = x.
  (* Invariant *)
  Have: b < x_1.
  (* Invariant *)
  Have: (-1) <= b.
  (* Invariant *)
  Have: b <= 99.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= b) -> ((0 <= i_2) -> (i_2 <= x))).
}
Prove: i = b.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (312ms) (3693)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 26):
Let x = 1 + b.
Let x_1 = 100 * flag_0.
Assume {
  Type: is_sint32(b) /\ is_sint32(flag_0) /\ is_sint32(x).
  (* Goal *)
  When: (0 < flag_0) /\ (i <= b) /\ (0 <= i).
  (* Invariant *)
  Have: (b * flag_0) = b.
  (* Invariant *)
  Have: b <= x_1.
  (* Invariant *)
  Have: 0 <= b.
  (* Invariant *)
  Have: b <= 100.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < b) -> (i_2 <= b))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < b) -> (i_2 = b))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < b) -> ((1 + i_2) = b))).
  (* Invariant *)
  Have: ((0 <= i_1) -> ((i_1 < b) -> ((1 + i_1) = b))).
  Have: (flag_0 * x) = x.
  (* Invariant *)
  Have: b < x_1.
  (* Invariant *)
  Have: (-1) <= b.
  (* Invariant *)
  Have: b <= 99.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= b) -> ((0 <= i_2) -> (i_2 <= x))).
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= b) -> ((0 <= i_2) -> (i_2 = b))).
}
Prove: i = b.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (220ms) (251455)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 27):
Let x = 1 + b.
Let x_1 = 100 * flag_0.
Assume {
  Type: is_sint32(b) /\ is_sint32(flag_0) /\ is_sint32(x).
  (* Goal *)
  When: (0 < flag_0) /\ (i <= b) /\ (0 <= i).
  (* Invariant *)
  Have: (b * flag_0) = b.
  (* Invariant *)
  Have: b <= x_1.
  (* Invariant *)
  Have: 0 <= b.
  (* Invariant *)
  Have: b <= 100.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < b) -> (i_2 <= b))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < b) -> (i_2 = b))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < b) -> ((1 + i_2) = b))).
  (* Invariant *)
  Have: ((0 <= i_1) -> ((i_1 < b) -> ((1 + i_1) = b))).
  Have: (flag_0 * x) = x.
  (* Invariant *)
  Have: b < x_1.
  (* Invariant *)
  Have: (-1) <= b.
  (* Invariant *)
  Have: b <= 99.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= b) -> ((0 <= i_2) -> (i_2 <= x))).
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= b) -> ((0 <= i_2) -> (i_2 = b))).
}
Prove: i = b.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (220ms) (251455)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 28):
Let x = 1 + b.
Let x_1 = 100 * flag_0.
Assume {
  Type: is_sint32(b) /\ is_sint32(flag_0) /\ is_sint32(x).
  (* Goal *)
  When: (0 < flag_0) /\ (i <= b) /\ (0 <= i).
  (* Invariant *)
  Have: (b * flag_0) = b.
  (* Invariant *)
  Have: b <= x_1.
  (* Invariant *)
  Have: 0 <= b.
  (* Invariant *)
  Have: b <= 100.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < b) -> (i_2 <= b))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < b) -> (i_2 = b))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < b) -> ((1 + i_2) = b))).
  (* Invariant *)
  Have: ((0 <= i_1) -> ((i_1 < b) -> ((1 + i_1) = b))).
  Have: (flag_0 * x) = x.
  (* Invariant *)
  Have: b < x_1.
  (* Invariant *)
  Have: (-1) <= b.
  (* Invariant *)
  Have: b <= 99.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= b) -> ((0 <= i_2) -> (i_2 <= x))).
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= b) -> ((0 <= i_2) -> (i_2 = b))).
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 29):
Let x = 1 + b.
Let x_1 = 100 * flag_0.
Assume {
  Type: is_sint32(b) /\ is_sint32(flag_0) /\ is_sint32(x).
  (* Goal *)
  When: (0 < flag_0) /\ (i <= b) /\ (0 <= i).
  (* Invariant *)
  Have: (b * flag_0) = b.
  (* Invariant *)
  Have: b <= x_1.
  (* Invariant *)
  Have: 0 <= b.
  (* Invariant *)
  Have: b <= 100.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < b) -> (i_2 <= b))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < b) -> (i_2 = b))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < b) -> ((1 + i_2) = b))).
  (* Invariant *)
  Have: ((0 <= i_1) -> ((i_1 < b) -> ((1 + i_1) = b))).
  Have: (flag_0 * x) = x.
  (* Invariant *)
  Have: b < x_1.
  (* Invariant *)
  Have: (-1) <= b.
  (* Invariant *)
  Have: b <= 99.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= b) -> ((0 <= i_2) -> (i_2 <= x))).
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= b) -> ((0 <= i_2) -> (i_2 = b))).
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= b) -> ((0 <= i_2) -> (x = i_2))).
}
Prove: x = i.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (409ms) (3859)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 30):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 31):
Let x = 1 + b.
Let x_1 = 100 * flag_0.
Assume {
  Type: is_sint32(b) /\ is_sint32(flag_0) /\ is_sint32(x).
  (* Goal *)
  When: (0 < flag_0) /\ (i <= b) /\ (0 <= i).
  (* Invariant *)
  Have: (b * flag_0) = b.
  (* Invariant *)
  Have: b <= x_1.
  (* Invariant *)
  Have: 0 <= b.
  (* Invariant *)
  Have: b <= 100.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < b) -> (i_2 <= b))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < b) -> (i_2 = b))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < b) -> ((1 + i_2) = b))).
  (* Invariant *)
  Have: ((0 <= i_1) -> ((i_1 < b) -> ((1 + i_1) = b))).
  Have: (flag_0 * x) = x.
  (* Invariant *)
  Have: b < x_1.
  (* Invariant *)
  Have: (-1) <= b.
  (* Invariant *)
  Have: b <= 99.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= b) -> ((0 <= i_2) -> (i_2 <= x))).
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= b) -> ((0 <= i_2) -> (i_2 = b))).
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= b) -> ((0 <= i_2) -> (x = i_2))).
}
Prove: x = i.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (389ms) (3859)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 32):
Let x = 1 + b.
Let x_1 = 100 * flag_0.
Assume {
  Type: is_sint32(b) /\ is_sint32(flag_0) /\ is_sint32(x).
  (* Goal *)
  When: (0 < flag_0) /\ (i <= b) /\ (0 <= i).
  (* Invariant *)
  Have: (b * flag_0) = b.
  (* Invariant *)
  Have: b <= x_1.
  (* Invariant *)
  Have: 0 <= b.
  (* Invariant *)
  Have: b <= 100.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < b) -> (i_2 <= b))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < b) -> (i_2 = b))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < b) -> ((1 + i_2) = b))).
  (* Invariant *)
  Have: ((0 <= i_1) -> ((i_1 < b) -> ((1 + i_1) = b))).
  Have: (flag_0 * x) = x.
  (* Invariant *)
  Have: b < x_1.
  (* Invariant *)
  Have: (-1) <= b.
  (* Invariant *)
  Have: b <= 99.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= b) -> ((0 <= i_2) -> (i_2 <= x))).
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= b) -> ((0 <= i_2) -> (i_2 = b))).
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= b) -> ((0 <= i_2) -> (x = i_2))).
}
Prove: i = b.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (386ms) (3725)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 32):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 33):
Let x = 1 + b.
Let x_1 = 100 * flag_0.
Assume {
  Type: is_sint32(b) /\ is_sint32(flag_0) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: (b * flag_0) = b.
  (* Invariant *)
  Have: b <= x_1.
  (* Invariant *)
  Have: 0 <= b.
  (* Invariant *)
  Have: b <= 100.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < b) -> (i_1 <= b))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < b) -> (i_1 = b))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < b) -> ((1 + i_1) = b))).
  (* Invariant *)
  Have: ((0 <= i) -> ((i < b) -> ((1 + i) = b))).
  Have: (flag_0 * x) = x.
  (* Invariant *)
  Have: b < x_1.
  (* Invariant *)
  Have: (-1) <= b.
  (* Invariant *)
  Have: b <= 99.
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= b) -> ((0 <= i_1) -> (i_1 <= x))).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= b) -> ((0 <= i_1) -> (x = i_1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= b) -> ((0 <= i_1) -> (i_1 = b))).
}
Prove: exists i_1 : Z. ((i_1 <= b) -> ((0 <= i_1) -> (i_1 = b))).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (247ms) (3591)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 39):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 39):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 40):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 41):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 41):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 42):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 43):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 44):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/018_0022/018_merged.c, line 46):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/018_0022/018_merged.c, line 46):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/018_0022/018_merged.c, line 47):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/018_0022/018_merged.c:5: Warning: 
  No 'assigns' specification for function 'foo018'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/04_0004/04_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 11 goals scheduled
[wp] Proved goals:   11 / 11
  Qed:               6
  Alt-Ergo 2.5.4:    4 (4ms-5ms)
  Z3 4.8.12:         1 (30ms)
------------------------------------------------------------
  Function foo04
------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0004/04_merged.c, line 8):
Let x_1 = (y * (y - 1)) / 2.
Let x_2 = y_1 * (y_1 - 1).
Let x_3 = 1 + y.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_3) /\
      is_sint32(x + y).
  (* Invariant *)
  Have: (-1) <= x_2.
  (* Invariant *)
  Have: (-99) <= x_2.
  (* Invariant *)
  Have: (50 + x) <= x_1.
  (* Invariant *)
  Have: x < x_1.
  (* Then *)
  Have: x < 0.
}
Prove: (50 + x + y) <= ((y * x_3) / 2).
Prover Z3 4.8.12 returns Valid (Qed:2ms) (30ms) (76082)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0004/04_merged.c, line 8):
Assume { Type: is_sint32(y). }
Prove: (-1) <= (y * (y - 1)).
Prover Z3 4.8.12 returns Valid (20ms) (29638)
Prover Alt-Ergo 2.5.4 returns Valid (4ms) (22)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0004/04_merged.c, line 9):
Let x_1 = 1 + y.
Let x_2 = (y * x_1) / 2.
Let x_3 = (y * (y - 1)) / 2.
Let x_4 = y_1 * (y_1 - 1).
Let x_5 = x + y.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_1) /\
      is_sint32(x_5).
  (* Invariant *)
  Have: (-1) <= x_4.
  (* Invariant *)
  Have: (-99) <= x_4.
  (* Invariant *)
  Have: (50 + x) <= x_3.
  (* Invariant *)
  Have: x < x_3.
  (* Then *)
  Have: x < 0.
  (* Invariant *)
  Have: (50 + x + y) <= x_2.
}
Prove: x_5 < x_2.
Prover Z3 4.8.12 returns Valid (Qed:2ms) (20ms) (31273)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (4ms) (22)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0004/04_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0004/04_merged.c, line 10):
Let x_1 = x + y.
Let x_2 = 1 + y.
Let x_3 = (y * x_2) / 2.
Let x_4 = (y * (y - 1)) / 2.
Let x_5 = y_1 * (y_1 - 1).
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_2) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: (-1) <= x_5.
  (* Invariant *)
  Have: (-99) <= x_5.
  (* Invariant *)
  Have: (50 + x) <= x_4.
  (* Invariant *)
  Have: x < x_4.
  (* Then *)
  Have: x < 0.
  (* Invariant *)
  Have: (50 + x + y) <= x_3.
  (* Invariant *)
  Have: x_1 < x_3.
}
Prove: (0 <= y) \/ (x_1 < 0).
Prover Z3 4.8.12 returns Valid (Qed:2ms) (20ms) (31503)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (4ms) (29)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0004/04_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0004/04_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0004/04_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0004/04_merged.c, line 12):
Let x_1 = x + y.
Let x_2 = 1 + y.
Let x_3 = (y * x_2) / 2.
Let x_4 = (y * (y - 1)) / 2.
Let x_5 = y_1 * (y_1 - 1).
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_2) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: (-1) <= x_5.
  (* Invariant *)
  Have: (-99) <= x_5.
  (* Invariant *)
  Have: (50 + x) <= x_4.
  (* Invariant *)
  Have: x < x_4.
  (* Then *)
  Have: x < 0.
  (* Invariant *)
  Have: (50 + x + y) <= x_3.
  (* Invariant *)
  Have: x_1 < x_3.
  (* Invariant *)
  Have: (0 <= y) \/ (x_1 < 0).
}
Prove: (x_1 < 0) \/ ((0 <= y) /\ (0 <= x_1)).
Prover Z3 4.8.12 returns Valid (Qed:3ms) (20ms) (31500)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (5ms) (24)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0004/04_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/04_0004/04_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/04_0004/04_merged.c:2: Warning: 
  No 'assigns' specification for function 'foo04'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/041_0011/041_merged.c (with preprocessing)
[kernel:typing:implicit-function-declaration] out/041_0011/041_merged.c:15: Warning: 
  Calling undeclared function unknown1. Old style K&R code?
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/041_0011/041_merged.c:12: Warning: 
  Neither code nor implicit assigns clause for function unknown, generating default assigns from the prototype
[kernel:annot:missing-spec] out/041_0011/041_merged.c:12: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 27 goals scheduled
[wp] [Timeout] typed_foo041_loop_invariant_preserved (Qed 8ms) (Z3)
[wp] Proved goals:   26 / 27
  Qed:              25
  Alt-Ergo 2.5.4:    1
  Timeout:           1
------------------------------------------------------------
  Function foo041
------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0011/041_merged.c, line 19):
Let x = 2 + j_1 + n.
Let x_1 = -j_1.
Let x_2 = j - j_1.
Let x_3 = j - 1 - j_1.
Let x_4 = x_2 * x_3.
Let x_5 = 2 * j_1.
Let x_6 = (n * (1 + n)) / 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(j_1) /\
      is_sint32(n) /\ is_sint32(x_2) /\ is_sint32(x_3).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: ((n = (-1)) -> ((n + x_6) = (-1))).
  (* Invariant *)
  Have: (((j - 2 - j_1) * x_3) / 2) = j_1.
  (* Invariant *)
  Have: j_1 < j.
  (* Invariant *)
  Have: ((x = j) -> ((1 + n + x_6) = j_1)).
  (* Invariant *)
  Have: j <= (1 + j_1 + n).
  (* Invariant *)
  Have: j <= (1 + x_5).
  (* Invariant *)
  Have: x_4 <= x_5.
  (* Invariant *)
  Have: (x_4 / 2) = j_1.
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: 0 <= j_1.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:8ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:8ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0011/041_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0011/041_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0011/041_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.96ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0011/041_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0011/041_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.79ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0011/041_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0011/041_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0011/041_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0011/041_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0011/041_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0011/041_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0011/041_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0011/041_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.81ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0011/041_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0011/041_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0011/041_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0011/041_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0011/041_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0011/041_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0011/041_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0011/041_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0011/041_merged.c, line 30):
Let x = 1 + i.
Let x_1 = x * (2 + i).
Let x_2 = x_1 / 2.
Let x_3 = 2 * x_2.
Let x_4 = i * x.
Let x_5 = x_4 / 2.
Let x_6 = 1 + n.
Let x_7 = (n * x_6) / 2.
Let x_8 = 1 + i + x_5.
Let x_9 = 2 * i.
Let x_10 = (i * (i - 1)) / 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(n) /\ is_sint32(x) /\
      is_sint32(x_2) /\ is_sint32(x_2 - 1 - i).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: ((n = (-1)) -> ((n + x_7) = (-1))).
  (* Invariant *)
  Have: x_2 = (1 + i + x_10).
  (* Invariant *)
  Have: x_2 <= x_8.
  (* Invariant *)
  Have: x_2 <= (1 + x_9 + x_10).
  (* Invariant *)
  Have: ((x_6 = i) -> (x_2 = (2 + i + n + x_7))).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: x_9 < x_2.
  (* Invariant *)
  Have: (i + x_10) < x_2.
  (* Invariant *)
  Have: (2 + x_9 + x_4) <= x_3.
  (* Invariant *)
  Have: x_2 = x_8.
  (* Invariant *)
  Have: i <= x_6.
  (* Invariant *)
  Have: i < x_2.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: x_2 = x_5.
  (* Invariant *)
  Have: ((n = i) -> (x_2 = (1 + n + x_7))).
  (* Invariant *)
  Have: i < n.
  (* Invariant *)
  Have: x_5 <= x_2.
  (* Invariant *)
  Have: x_1 <= x_3.
}
Prove: (-1) <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:13ms) (10ms) (35902)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (55)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0011/041_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/041_0011/041_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/041_0011/041_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/041_0011/041_merged.c, line 32):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/041_0011/041_merged.c:12: Warning: 
  No 'assigns' specification for function 'foo041'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/041_0011/041_merged.c:15: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.

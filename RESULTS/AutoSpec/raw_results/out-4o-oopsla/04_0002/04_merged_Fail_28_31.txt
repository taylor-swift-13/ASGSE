[kernel] Parsing out/04_0002/04_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 31 goals scheduled
[wp] [Timeout] typed_foo04_loop_invariant_established (Z3)
[wp] [Timeout] typed_foo04_loop_invariant_5_preserved (Qed 3ms) (Z3)
[wp] [Timeout] typed_foo04_loop_invariant_6_established (Qed 0.57ms) (Z3)
[wp] Proved goals:   28 / 31
  Qed:              21
  Alt-Ergo 2.5.4:    5
  Z3 4.8.12:         2 (10ms-30ms)
  Timeout:           3
------------------------------------------------------------
  Function foo04
------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0002/04_merged.c, line 8):
Let x = y * (y - 1).
Let x_1 = x / 2.
Let x_2 = 1 + y.
Let x_3 = (y * x_2) / 2.
Let x_4 = y_1 * (y_1 - 1).
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_2) /\
      is_sint32(x_1 - 50) /\ is_sint32(y + x_1 - 50).
  (* Invariant *)
  Have: (x_4 / 2) = 0.
  (* Invariant *)
  Have: (-99) <= (y_1 * (1 + y_1)).
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (-99) <= x_4.
  (* Invariant *)
  Have: (-49) <= (y_1 * y_1).
  (* Invariant *)
  Have: x_1 <= (49 + x_3).
  (* Invariant *)
  Have: x <= 99.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: (-99) <= x.
  (* Invariant *)
  Have: x_1 <= (49 + (y * y)).
}
Prove: x_3 = (y + x_1).
Prover Z3 4.8.12 returns Valid (Qed:3ms) (30ms) (50158)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0002/04_merged.c, line 8):
Assume { Type: is_sint32(y). }
Prove: ((y * (y - 1)) / 2) = 0.
Prover Z3 4.8.12 returns Timeout (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0002/04_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0002/04_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0002/04_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0002/04_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0002/04_merged.c, line 11):
Let x = 1 + y.
Let x_1 = (y * x) / 2.
Let x_2 = y * (y - 1).
Let x_3 = x_2 / 2.
Let x_4 = y + x_3.
Let x_5 = y_1 * (y_1 - 1).
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x) /\
      is_sint32(x_1 - 50) /\ is_sint32(x_1 - 50 - y).
  (* Invariant *)
  Have: (x_5 / 2) = 0.
  (* Invariant *)
  Have: (-99) <= (y_1 * (1 + y_1)).
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (-99) <= x_5.
  (* Invariant *)
  Have: (-49) <= (y_1 * y_1).
  (* Invariant *)
  Have: x_1 = x_4.
  (* Invariant *)
  Have: x_1 <= x_4.
  (* Invariant *)
  Have: (-49) <= y.
  (* Invariant *)
  Have: x_1 <= (49 + y).
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: y <= x_1.
  (* Invariant *)
  Have: (-99) <= x_2.
  (* Invariant *)
  Have: x_1 <= (49 + y + (y * y)).
  (* Invariant *)
  Have: x_1 <= (49 + y + x_3).
}
Prove: x_1 <= (49 + ((x * (2 + y)) / 2)).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (37545)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0002/04_merged.c, line 11):
Assume { Type: is_sint32(y). (* Invariant *) Have: ((y * (y - 1)) / 2) = 0. }
Prove: (-99) <= (y * (1 + y)).
Prover Z3 4.8.12 returns Valid (Qed:0.68ms) (10ms) (33326)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:0.68ms) (8ms) (84)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0002/04_merged.c, line 12):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = x_1 / 2.
Let x_3 = y * (y - 1).
Let x_4 = x_3 / 2.
Let x_5 = y + x_4.
Let x_6 = y_1 * (y_1 - 1).
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x) /\
      is_sint32(x_2 - 50) /\ is_sint32(x_2 - 50 - y).
  (* Invariant *)
  Have: (x_6 / 2) = 0.
  (* Invariant *)
  Have: (-99) <= (y_1 * (1 + y_1)).
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (-99) <= x_6.
  (* Invariant *)
  Have: (-49) <= (y_1 * y_1).
  (* Invariant *)
  Have: x_2 = x_5.
  (* Invariant *)
  Have: x_2 <= x_5.
  (* Invariant *)
  Have: (-49) <= y.
  (* Invariant *)
  Have: x_2 <= (49 + y).
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: (-99) <= x_3.
  (* Invariant *)
  Have: x_2 <= (49 + y + (y * y)).
  (* Invariant *)
  Have: x_2 <= (49 + y + x_4).
  (* Invariant *)
  Have: x_2 <= (49 + ((x * (2 + y)) / 2)).
}
Prove: x_1 <= 99.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0002/04_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0002/04_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0002/04_merged.c, line 13):
Assume {
  Type: is_sint32(y).
  (* Invariant *)
  Have: ((y * (y - 1)) / 2) = 0.
  (* Invariant *)
  Have: (-99) <= (y * (1 + y)).
}
Prove: 0 < y.
Prover Z3 4.8.12 returns Timeout (Qed:0.57ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.57ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0002/04_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0002/04_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0002/04_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0002/04_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0002/04_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0002/04_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0002/04_merged.c, line 17):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = x_1 / 2.
Let x_3 = y * (y - 1).
Let x_4 = x_3 / 2.
Let x_5 = y + x_4.
Let x_6 = y_1 * (y_1 - 1).
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x) /\
      is_sint32(x_2 - 50) /\ is_sint32(x_2 - 50 - y).
  (* Invariant *)
  Have: (x_6 / 2) = 0.
  (* Invariant *)
  Have: (-99) <= (y_1 * (1 + y_1)).
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (-99) <= x_6.
  (* Invariant *)
  Have: (-49) <= (y_1 * y_1).
  (* Invariant *)
  Have: x_2 = x_5.
  (* Invariant *)
  Have: x_2 <= x_5.
  (* Invariant *)
  Have: (-49) <= y.
  (* Invariant *)
  Have: x_2 <= (49 + y).
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: (-99) <= x_3.
  (* Invariant *)
  Have: x_2 <= (49 + y + (y * y)).
  (* Invariant *)
  Have: x_2 <= (49 + y + x_4).
  (* Invariant *)
  Have: x_2 <= (49 + ((x * (2 + y)) / 2)).
  (* Invariant *)
  Have: x_1 <= 99.
}
Prove: (-1) <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (34473)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (6ms) (62)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0002/04_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0002/04_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0002/04_merged.c, line 18):
Let x = y * (y - 1).
Assume {
  Type: is_sint32(y).
  (* Invariant *)
  Have: (x / 2) = 0.
  (* Invariant *)
  Have: (-99) <= (y * (1 + y)).
  (* Invariant *)
  Have: 0 < y.
}
Prove: (-99) <= x.
Prover Z3 4.8.12 returns Valid (Qed:0.72ms) (10ms) (30732)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:0.72ms) (8ms) (110)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0002/04_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0002/04_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0002/04_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0002/04_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0002/04_merged.c, line 21):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = x_1 / 2.
Let x_3 = y * (y - 1).
Let x_4 = x_3 / 2.
Let x_5 = y + x_4.
Let x_6 = y_1 * (y_1 - 1).
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x) /\
      is_sint32(x_2 - 50) /\ is_sint32(x_2 - 50 - y).
  (* Invariant *)
  Have: (x_6 / 2) = 0.
  (* Invariant *)
  Have: (-99) <= (y_1 * (1 + y_1)).
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (-99) <= x_6.
  (* Invariant *)
  Have: (-49) <= (y_1 * y_1).
  (* Invariant *)
  Have: x_2 = x_5.
  (* Invariant *)
  Have: x_2 <= x_5.
  (* Invariant *)
  Have: (-49) <= y.
  (* Invariant *)
  Have: x_2 <= (49 + y).
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: (-99) <= x_3.
  (* Invariant *)
  Have: x_2 <= (49 + y + (y * y)).
  (* Invariant *)
  Have: x_2 <= (49 + y + x_4).
  (* Invariant *)
  Have: x_2 <= (49 + ((x * (2 + y)) / 2)).
  (* Invariant *)
  Have: x_1 <= 99.
  (* Invariant *)
  Have: (-1) <= x_1.
  (* Invariant *)
  Have: (-99) <= x_1.
}
Prove: x_2 <= (49 + (x * x)).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (33398)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (68)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0002/04_merged.c, line 21):
Let x = y * (y - 1).
Assume {
  Type: is_sint32(y).
  (* Invariant *)
  Have: (x / 2) = 0.
  (* Invariant *)
  Have: (-99) <= (y * (1 + y)).
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: (-99) <= x.
}
Prove: (-49) <= (y * y).
Prover Z3 4.8.12 returns Valid (Qed:0.99ms) (10ms) (30334)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:0.99ms) (11)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0002/04_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0002/04_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/04_0002/04_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/04_0002/04_merged.c:2: Warning: 
  No 'assigns' specification for function 'foo04'.
  Callers assumptions might be imprecise.

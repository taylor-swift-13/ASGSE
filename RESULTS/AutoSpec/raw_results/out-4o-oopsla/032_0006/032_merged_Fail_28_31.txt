[kernel] Parsing out/032_0006/032_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 31 goals scheduled
[wp] [Timeout] typed_foo032_loop_invariant_preserved (Qed 23ms) (Z3)
[wp] [Timeout] typed_foo032_loop_invariant_2_preserved (Qed 12ms) (Z3)
[wp] [Timeout] typed_foo032_loop_invariant_3_preserved (Qed 26ms) (Z3)
[wp] Proved goals:   28 / 31
  Qed:              25
  Alt-Ergo 2.5.4:    3 (13ms-29ms)
  Timeout:           3
------------------------------------------------------------
  Function foo032
------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0006/032_merged.c, line 8):
Let x = n % 2.
Let x_1 = n / 2.
Let x_2 = 1 + x_1.
Let x_3 = 1 + n.
Assume {
  Type: is_sint32(b) /\ is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(j) /\
      is_sint32(j_1) /\ is_sint32(j_2) /\ is_sint32(n) /\ is_sint32(x_3) /\
      is_sint32(j_2 + n).
  (* Goal *)
  When: (x_3 % 2) = 1.
  (* Invariant *)
  Have: ((x = 1) -> (x_2 = n)).
  (* Invariant *)
  Have: ((x = 1) -> (b = 1)).
  (* Invariant *)
  Have: if (x = 0) then (x_1 = n) else (x_2 = n).
  (* Invariant *)
  Have: ((x = 0) -> (x_1 = n)).
  (* Invariant *)
  Have: (n = 0) \/ (n = 1).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 1) -> ((0 <= i_2) -> ((i_2 < n) ->
      (b = 0)))).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((0 <= i_2) -> ((i_2 < n) ->
      (b = 1)))).
  (* Invariant *)
  Have: ((x = 1) -> ((n != 0) <-> (b != 0))).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: n <= 199.
  If b != 0
  Then { Have: (j_2 = j) /\ ((j + n) = i_1). Have: (1 + i_1) = i. }
  Else { Have: (j_2 = j_1) /\ ((j_2 + n) = i). Have: (1 + j_2) = j. }
}
Prove: (1 + j + (x_3 / 2)) = i.
Prover Z3 4.8.12 returns Timeout (Qed:23ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:23ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0006/032_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0006/032_merged.c, line 9):
Let x = 1 + n.
Let x_1 = n % 2.
Let x_2 = n / 2.
Let x_3 = 1 + x_2.
Assume {
  Type: is_sint32(b) /\ is_sint32(n) /\ is_sint32(x).
  (* Residual *)
  When: b != 0.
  (* Goal *)
  When: (x % 2) = 1.
  (* Invariant *)
  Have: ((x_1 = 1) -> (x_3 = n)).
  (* Invariant *)
  Have: ((x_1 = 1) -> (b = 1)).
  (* Invariant *)
  Have: if (x_1 = 0) then (x_2 = n) else (x_3 = n).
  (* Invariant *)
  Have: ((x_1 = 0) -> (x_2 = n)).
  (* Invariant *)
  Have: (n = 0) \/ (n = 1).
  (* Invariant *)
  Have: forall i : Z. (((i % 2) = 1) -> ((0 <= i) -> ((i < n) -> false))).
  (* Invariant *)
  Have: forall i : Z. (((i % 2) = 0) -> ((0 <= i) -> ((i < n) -> (b = 1)))).
  (* Invariant *)
  Have: ((x_1 = 1) -> (n != 0)).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: n <= 199.
  Have: (x / 2) = n.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:12ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:12ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0006/032_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0006/032_merged.c, line 10):
Let x = 1 + n.
Let x_1 = x % 2.
Let x_2 = x / 2.
Let x_3 = 1 + j + x_2.
Let x_4 = n % 2.
Let x_5 = n / 2.
Let x_6 = 1 + x_5.
Assume {
  Type: is_sint32(b) /\ is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(j) /\
      is_sint32(j_1) /\ is_sint32(j_2) /\ is_sint32(n) /\ is_sint32(x) /\
      is_sint32(j_2 + n).
  (* Invariant *)
  Have: ((x_4 = 1) -> (x_6 = n)).
  (* Invariant *)
  Have: ((x_4 = 1) -> (b = 1)).
  (* Invariant *)
  Have: if (x_4 = 0) then (x_5 = n) else (x_6 = n).
  (* Invariant *)
  Have: ((x_4 = 0) -> (x_5 = n)).
  (* Invariant *)
  Have: (n = 0) \/ (n = 1).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 1) -> ((0 <= i_2) -> ((i_2 < n) ->
      (b = 0)))).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((0 <= i_2) -> ((i_2 < n) ->
      (b = 1)))).
  (* Invariant *)
  Have: ((x_4 = 1) -> ((n != 0) <-> (b != 0))).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: n <= 199.
  If b != 0
  Then { Have: (j_2 = j) /\ ((j + n) = i_1). Have: (1 + i_1) = i. }
  Else { Have: (j_2 = j_1) /\ ((j_2 + n) = i). Have: (1 + j_2) = j. }
  (* Invariant *)
  Have: ((x_1 = 1) -> (x_3 = i)).
  (* Invariant *)
  Have: ((x_1 = 1) -> (b = 0)).
}
Prove: if (x_1 = 0) then ((j + x_2) = i) else (x_3 = i).
Prover Z3 4.8.12 returns Timeout (Qed:26ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:26ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0006/032_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0006/032_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0006/032_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (0.78ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0006/032_merged.c, line 12):
Let x = 1 + n.
Let x_1 = x % 2.
Let x_2 = x / 2.
Let x_3 = j + x_2.
Let x_4 = 1 + j + x_2.
Let x_5 = n % 2.
Let x_6 = n / 2.
Let x_7 = 1 + x_6.
Assume {
  Type: is_sint32(b) /\ is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(j) /\
      is_sint32(j_1) /\ is_sint32(j_2) /\ is_sint32(n) /\ is_sint32(x) /\
      is_sint32(j_2 + n).
  (* Invariant *)
  Have: ((x_5 = 1) -> (x_7 = n)).
  (* Invariant *)
  Have: ((x_5 = 1) -> (b = 1)).
  (* Invariant *)
  Have: if (x_5 = 0) then (x_6 = n) else (x_7 = n).
  (* Invariant *)
  Have: ((x_5 = 0) -> (x_6 = n)).
  (* Invariant *)
  Have: (n = 0) \/ (n = 1).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 1) -> ((0 <= i_2) -> ((i_2 < n) ->
      (b = 0)))).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((0 <= i_2) -> ((i_2 < n) ->
      (b = 1)))).
  (* Invariant *)
  Have: ((x_5 = 1) -> ((n != 0) <-> (b != 0))).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: n <= 199.
  If b != 0
  Then { Have: (j_2 = j) /\ ((j + n) = i_1). Have: (1 + i_1) = i. }
  Else { Have: (j_2 = j_1) /\ ((j_2 + n) = i). Have: (1 + j_2) = j. }
  (* Invariant *)
  Have: ((x_1 = 1) -> (x_4 = i)).
  (* Invariant *)
  Have: ((x_1 = 1) -> (b = 0)).
  (* Invariant *)
  Have: if (x_1 = 0) then (x_3 = i) else (x_4 = i).
  (* Invariant *)
  Have: ((x_1 = 0) -> (x_3 = i)).
}
Prove: (j = i) \/ ((1 + j) = i).
Prover Z3 4.8.12 returns Valid (Qed:26ms) (20ms) (43077)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:26ms) (29ms) (551)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0006/032_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0006/032_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (22ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0006/032_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0006/032_merged.c, line 14):
Let x = 1 + n.
Let x_1 = x % 2.
Let x_2 = x / 2.
Let x_3 = 1 + x_2.
Let x_4 = 2 + x_2.
Let x_5 = n % 2.
Let x_6 = n / 2.
Assume {
  Type: is_sint32(n) /\ is_sint32(x).
  (* Invariant *)
  Have: x_5 != 1.
  (* Invariant *)
  Have: if (x_5 = 0) then (x_6 = n) else ((1 + x_6) = n).
  (* Invariant *)
  Have: ((x_5 = 0) -> (x_6 = n)).
  (* Invariant *)
  Have: (n = 0) \/ (n = 1).
  (* Invariant *)
  Have: forall i : Z. (((i % 2) = 0) -> ((0 <= i) -> ((i < n) -> false))).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: n <= 199.
  (* Invariant *)
  Have: ((x_1 = 1) -> (x_4 = n)).
  (* Invariant *)
  Have: if (x_1 = 0) then (x_3 = n) else (x_4 = n).
  (* Invariant *)
  Have: ((x_1 = 0) -> (x_3 = n)).
  (* Invariant *)
  Have: (n = 1) \/ (n = 2).
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:25ms) (33409)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:25ms) (22ms) (281)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0006/032_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0006/032_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0006/032_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0006/032_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0006/032_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0006/032_merged.c, line 17):
Let x = 1 + n.
Let x_1 = x % 2.
Let x_2 = x / 2.
Let x_3 = n % 2.
Let x_4 = n / 2.
Let x_5 = 1 + x_4.
Assume {
  Type: is_sint32(b) /\ is_sint32(n) /\ is_sint32(x).
  (* Goal *)
  When: ((i % 2) = 0) /\ (0 <= i) /\ (i <= n).
  (* Invariant *)
  Have: ((x_3 = 1) -> (x_5 = n)).
  (* Invariant *)
  Have: ((x_3 = 1) -> (b = 1)).
  (* Invariant *)
  Have: if (x_3 = 0) then (x_4 = n) else (x_5 = n).
  (* Invariant *)
  Have: ((x_3 = 0) -> (x_4 = n)).
  (* Invariant *)
  Have: (n = 0) \/ (n = 1).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 1) -> ((0 <= i_1) -> ((i_1 < n) ->
      false))).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((0 <= i_1) -> ((i_1 < n) ->
      (b = 1)))).
  (* Invariant *)
  Have: ((x_3 = 1) -> (n != 0)).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: n <= 199.
  Have: b != 0.
  (* Invariant *)
  Have: x_1 != 1.
  (* Invariant *)
  Have: if (x_1 = 0) then (x_2 = x) else (x_2 = n).
  (* Invariant *)
  Have: ((x_1 = 0) -> (x_2 = x)).
  (* Invariant *)
  Have: (n = (-1)) \/ (n = 0).
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (36800)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (13ms) (328)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0006/032_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.50ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0006/032_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0006/032_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0006/032_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0006/032_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0006/032_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0006/032_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.92ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0006/032_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0006/032_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0006/032_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0006/032_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Loop assigns (file out/032_0006/032_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/032_0006/032_merged.c:3: Warning: 
  No 'assigns' specification for function 'foo032'.
  Callers assumptions might be imprecise.

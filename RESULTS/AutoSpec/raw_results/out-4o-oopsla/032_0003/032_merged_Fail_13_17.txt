[kernel] Parsing out/032_0003/032_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 17 goals scheduled
[wp] [Timeout] typed_foo032_loop_invariant_2_preserved (Qed 9ms) (Z3)
[wp] [Timeout] typed_foo032_loop_invariant_7_preserved (Qed 6ms) (Z3)
[wp] [Timeout] typed_foo032_loop_invariant_8_preserved (Qed 11ms) (Z3)
[wp] [Timeout] typed_foo032_loop_invariant_8_established (Qed 1ms) (Z3)
[wp] Proved goals:   13 / 17
  Qed:              11
  Alt-Ergo 2.5.4:    2 (9ms-10ms)
  Timeout:           4
------------------------------------------------------------
  Function foo032
------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0003/032_merged.c, line 8):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0003/032_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0003/032_merged.c, line 9):
Let x = n % 2.
Let x_1 = 1 + n.
Let x_2 = n / 2.
Assume {
  Type: is_sint32(b) /\ is_sint32(b_1) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(n) /\ is_sint32(x_1) /\ is_sint32(j - x_2).
  (* Residual *)
  When: b_1 != 0.
  (* Invariant *)
  Have: (b != 0) /\ (b != 1).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: ((x = 1) -> (b_1 != b)).
  (* Invariant *)
  Have: ((x = 0) -> (b_1 = b)).
  (* Invariant *)
  Have: ((b_1 = b) /\ (x = 0)) \/ ((b_1 != b) /\ (x = 1)).
  (* Invariant *)
  Have: ((b_1 = 1) -> ((1 + j) = i)).
  (* Then *)
  Have: n <= 199.
}
Prove: (x_1 / 2) = x_2.
Prover Z3 4.8.12 returns Timeout (Qed:9ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:9ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0003/032_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0003/032_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0003/032_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0003/032_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0003/032_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0003/032_merged.c, line 12):
Let x = 1 + n.
Let x_1 = x / 2.
Let x_2 = n / 2.
Let x_3 = n % 2.
Let x_4 = -x_2.
Assume {
  Type: is_sint32(b) /\ is_sint32(b_1) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(n) /\ is_sint32(x) /\ is_sint32(j - x_2) /\
      is_sint32(j + x_1 - x_2).
  (* Residual *)
  When: b_1 != 0.
  (* Goal *)
  When: (x % 2) = 0.
  (* Invariant *)
  Have: (b != 0) /\ (b != 1).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: ((x_3 = 1) -> (b_1 != b)).
  (* Invariant *)
  Have: ((x_3 = 0) -> (b_1 = b)).
  (* Invariant *)
  Have: ((b_1 = b) /\ (x_3 = 0)) \/ ((b_1 != b) /\ (x_3 = 1)).
  (* Invariant *)
  Have: ((b_1 = 1) -> ((1 + j) = i)).
  (* Then *)
  Have: n <= 199.
  Have: x_1 = x_2.
  (* Invariant *)
  Have: (-1) <= n.
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (34902)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (9ms) (236)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0003/032_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0003/032_merged.c, line 13):
Let x = 1 + n.
Let x_1 = x % 2.
Let x_2 = x / 2.
Let x_3 = n / 2.
Let x_4 = n % 2.
Let x_5 = -x_3.
Assume {
  Type: is_sint32(b) /\ is_sint32(b_1) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(n) /\ is_sint32(x) /\ is_sint32(j - x_3) /\
      is_sint32(j + x_2 - x_3).
  (* Residual *)
  When: b_1 != 0.
  (* Invariant *)
  Have: (b != 0) /\ (b != 1).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: ((x_4 = 1) -> (b_1 != b)).
  (* Invariant *)
  Have: ((x_4 = 0) -> (b_1 = b)).
  (* Invariant *)
  Have: ((b_1 = b) /\ (x_4 = 0)) \/ ((b_1 != b) /\ (x_4 = 1)).
  (* Invariant *)
  Have: ((b_1 = 1) -> ((1 + j) = i)).
  (* Then *)
  Have: n <= 199.
  Have: x_2 = x_3.
  (* Invariant *)
  Have: (-1) <= n.
  (* Invariant *)
  Have: x_1 != 0.
}
Prove: x_1 = 1.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (20ms) (35124)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (10ms) (248)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0003/032_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0003/032_merged.c, line 14):
Let x = 1 + n.
Let x_1 = x / 2.
Let x_2 = n / 2.
Let x_3 = n % 2.
Let x_4 = -x_2.
Assume {
  Type: is_sint32(b) /\ is_sint32(b_1) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(n) /\ is_sint32(1 + i) /\ is_sint32(x) /\
      is_sint32(j - x_2) /\ is_sint32(j + x_1 - x_2).
  (* Invariant *)
  Have: (b != 0) /\ (b != 1).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: ((x_3 = 1) -> (b_1 != b)).
  (* Invariant *)
  Have: ((x_3 = 0) -> (b_1 = b)).
  (* Invariant *)
  Have: ((b_1 = b) /\ (x_3 = 0)) \/ ((b_1 != b) /\ (x_3 = 1)).
  (* Invariant *)
  Have: ((b_1 = 1) -> ((1 + j) = i)).
  (* Then *)
  Have: n <= 199.
  Have: x_1 = x_2.
  Have: b_1 != 0.
  (* Invariant *)
  Have: (-1) <= n.
  (* Invariant *)
  Have: (x % 2) = 1.
}
Prove: (j + x_1) = (1 + i + x_2).
Prover Z3 4.8.12 returns Timeout (Qed:6ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:6ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0003/032_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0003/032_merged.c, line 15):
Let x = 1 + n.
Let x_1 = x / 2.
Let x_2 = n / 2.
Let x_3 = n % 2.
Assume {
  Type: is_sint32(b) /\ is_sint32(b_1) /\ is_sint32(n) /\ is_sint32(x).
  (* Residual *)
  When: b_1 != 0.
  (* Invariant *)
  Have: (b != 0) /\ (b != 1).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: ((x_3 = 1) -> (b_1 != b)).
  (* Invariant *)
  Have: ((x_3 = 0) -> (b_1 = b)).
  (* Invariant *)
  Have: ((b_1 = b) /\ (x_3 = 0)) \/ ((b_1 != b) /\ (x_3 = 1)).
  (* Invariant *)
  Have: ((b_1 = 1) -> (x_1 = (2 + x_2))).
  (* Then *)
  Have: n <= 199.
  Have: x_1 = x_2.
  (* Invariant *)
  Have: (-1) <= n.
  (* Invariant *)
  Have: (x % 2) = 1.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:11ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:11ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0003/032_merged.c, line 15):
Assume { Type: is_sint32(b). }
Prove: (b != 0) /\ (b != 1).
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/032_0003/032_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/032_0003/032_merged.c:3: Warning: 
  No 'assigns' specification for function 'foo032'.
  Callers assumptions might be imprecise.

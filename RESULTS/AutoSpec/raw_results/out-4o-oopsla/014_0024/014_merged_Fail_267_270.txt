[kernel] Parsing out/014_0024/014_merged.c (with preprocessing)
[kernel:typing:no-proto] out/014_0024/014_merged.c:149: Warning: 
  Calling function unknown that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/014_0024/014_merged.c:6: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] Computing [100 goals...]
[wp] Computing [200 goals...]
[wp] 270 goals scheduled
[wp] [Timeout] typed_foo014_loop_invariant_8_established (Qed 0.56ms) (Z3)
[wp] [Timeout] typed_foo014_loop_invariant_8_preserved (Qed 18ms) (Z3)
[wp] [Timeout] typed_foo014_loop_invariant_39_preserved (Qed 24ms) (Z3)
[wp] Proved goals:  267 / 270
  Qed:             251
  Alt-Ergo 2.5.4:   12 (5ms-92ms-641ms)
  Z3 4.8.12:         4 (180ms-230ms)
  Timeout:           3
------------------------------------------------------------
  Function foo014
------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 18):
Let x = a_3 + j.
Let a_4 = IAbs.abs(a_3).
Let x_1 = a_3 + m.
Let x_2 = 1 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(1 + j).
  (* Invariant *)
  Have: 2 <= m.
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= m.
  (* Invariant *)
  Have: j < m.
  (* Invariant *)
  Have: j <= (1 + a_3 + m).
  (* Invariant *)
  Have: j <= x_2.
  (* Invariant *)
  Have: j <= x_1.
  (* Invariant *)
  Have: a_3 <= j.
  (* Invariant *)
  Have: a_3 < j.
  (* Invariant *)
  Have: x <= x_2.
  (* Invariant *)
  Have: x <= m.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a_4 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (0 <= (a_3 + i)))).
  (* Invariant *)
  Have: (a_4 <= m) /\ (0 <= x_1).
  (* Invariant *)
  Have: a_4 <= j.
  (* Invariant *)
  Have: a_4 < j.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: a_3 <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
}
Prove: (2 + j) <= m.
Prover Z3 4.8.12 returns Timeout (Qed:18ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:18ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 18):
Assume { Type: is_sint32(m). (* Invariant *) Have: 0 < m. }
Prove: 2 <= m.
Prover Z3 4.8.12 returns Timeout (Qed:0.56ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.56ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 19):
Let x = a + j.
Let a_1 = IAbs.abs(a).
Let x_1 = a + m.
Let x_2 = 1 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(a - 1) /\
      is_sint32(1 + j).
  (* Invariant *)
  Have: 2 <= m.
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= m.
  (* Invariant *)
  Have: j < m.
  (* Invariant *)
  Have: j <= (1 + a + m).
  (* Invariant *)
  Have: j <= x_2.
  (* Invariant *)
  Have: j <= x_1.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: a < j.
  (* Invariant *)
  Have: x <= x_2.
  (* Invariant *)
  Have: x <= m.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a_1 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (0 <= (a + i)))).
  (* Invariant *)
  Have: (a_1 <= m) /\ (0 <= x_1).
  (* Invariant *)
  Have: a_1 <= j.
  (* Invariant *)
  Have: a_1 < j.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: a <= m.
  (* Invariant *)
  Have: (2 + j) <= m.
}
Prove: j < x_1.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:18ms) (352ms) (4854)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.92ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 33):
Let x = a + m.
Let x_1 = 2 + j.
Let x_2 = a + j.
Let a_1 = IAbs.abs(a).
Let x_3 = 1 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(a - 1) /\
      is_sint32(1 + j).
  (* Invariant *)
  Have: 2 <= m.
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= m.
  (* Invariant *)
  Have: j < m.
  (* Invariant *)
  Have: j <= (1 + a + m).
  (* Invariant *)
  Have: j <= x_3.
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: a < j.
  (* Invariant *)
  Have: x_2 <= x_3.
  (* Invariant *)
  Have: x_2 <= m.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a_1 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (0 <= (a + i)))).
  (* Invariant *)
  Have: (a_1 <= m) /\ (0 <= x).
  (* Invariant *)
  Have: a_1 <= j.
  (* Invariant *)
  Have: a_1 < j.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 < x_2.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: a <= m.
  (* Invariant *)
  Have: x_1 <= m.
  (* Invariant *)
  Have: j < x.
}
Prove: x_1 <= x.
Prover Z3 4.8.12 returns Valid (Qed:19ms) (190ms) (274044)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 33):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 34):
Let x = 2 + j.
Let x_1 = a + m.
Let x_2 = a + j.
Let a_1 = IAbs.abs(a).
Let x_3 = 1 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(a - 1) /\
      is_sint32(1 + j).
  (* Invariant *)
  Have: 2 <= m.
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= m.
  (* Invariant *)
  Have: j < m.
  (* Invariant *)
  Have: j <= (1 + a + m).
  (* Invariant *)
  Have: j <= x_3.
  (* Invariant *)
  Have: j <= x_1.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: a < j.
  (* Invariant *)
  Have: x_2 <= x_3.
  (* Invariant *)
  Have: x_2 <= m.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a_1 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (0 <= (a + i)))).
  (* Invariant *)
  Have: (a_1 <= m) /\ (0 <= x_1).
  (* Invariant *)
  Have: a_1 <= j.
  (* Invariant *)
  Have: a_1 < j.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 < x_2.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: a <= m.
  (* Invariant *)
  Have: x <= m.
  (* Invariant *)
  Have: j < x_1.
  (* Invariant *)
  Have: x <= x_1.
}
Prove: a <= x.
Prover Z3 4.8.12 returns Valid (Qed:16ms) (20ms) (34481)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:16ms) (5ms) (29)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 35):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 36):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 37):
Let x = 2 + j.
Let x_1 = a + m.
Let x_2 = a + j.
Let a_1 = IAbs.abs(a).
Let x_3 = 1 + m.
Let x_4 = 1 + j.
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(a - 1) /\
      is_sint32(x_4).
  (* Invariant *)
  Have: 2 <= m.
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= m.
  (* Invariant *)
  Have: j < m.
  (* Invariant *)
  Have: j <= (1 + a + m).
  (* Invariant *)
  Have: j <= x_3.
  (* Invariant *)
  Have: j <= x_1.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: a < j.
  (* Invariant *)
  Have: x_2 <= x_3.
  (* Invariant *)
  Have: x_2 <= m.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a_1 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (0 <= (a + i)))).
  (* Invariant *)
  Have: (a_1 <= m) /\ (0 <= x_1).
  (* Invariant *)
  Have: a_1 <= j.
  (* Invariant *)
  Have: a_1 < j.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 < x_2.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: a <= m.
  (* Invariant *)
  Have: x <= m.
  (* Invariant *)
  Have: j < x_1.
  (* Invariant *)
  Have: x <= x_1.
  (* Invariant *)
  Have: a <= x.
}
Prove: a <= x_4.
Prover Z3 4.8.12 returns Valid (Qed:17ms) (20ms) (34587)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:17ms) (5ms) (31)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 37):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 39):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 40):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 42):
Let x = a + j.
Let a_1 = IAbs.abs(a).
Let x_1 = a + m.
Let x_2 = 1 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\
      is_sint32(1 + a) /\ is_sint32(1 + j).
  (* Residual *)
  When: tmp_0 != 0.
  (* Invariant *)
  Have: 2 <= m.
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= m.
  (* Invariant *)
  Have: j < m.
  (* Invariant *)
  Have: j <= (1 + a + m).
  (* Invariant *)
  Have: j <= x_2.
  (* Invariant *)
  Have: j <= x_1.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: a < j.
  (* Invariant *)
  Have: x <= x_2.
  (* Invariant *)
  Have: x <= m.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a_1 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (0 <= (a + i)))).
  (* Invariant *)
  Have: (a_1 <= m) /\ (0 <= x_1).
  (* Invariant *)
  Have: a_1 <= j.
  (* Invariant *)
  Have: a_1 < j.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: a <= m.
  (* Invariant *)
  Have: (2 + j) <= m.
}
Prove: x < m.
Prover Z3 4.8.12 returns Valid (Qed:16ms) (230ms) (269055)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 42):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 46):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 48):
Let x = a + j.
Let a_1 = IAbs.abs(a).
Let x_1 = a + m.
Let x_2 = 1 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\
      is_sint32(1 + a) /\ is_sint32(1 + j).
  (* Residual *)
  When: tmp_0 != 0.
  (* Invariant *)
  Have: 2 <= m.
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= m.
  (* Invariant *)
  Have: j < m.
  (* Invariant *)
  Have: j <= (1 + a + m).
  (* Invariant *)
  Have: j <= x_2.
  (* Invariant *)
  Have: j <= x_1.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: a < j.
  (* Invariant *)
  Have: x <= x_2.
  (* Invariant *)
  Have: x <= m.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a_1 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (0 <= (a + i)))).
  (* Invariant *)
  Have: (a_1 <= m) /\ (0 <= x_1).
  (* Invariant *)
  Have: a_1 <= j.
  (* Invariant *)
  Have: a_1 < j.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: a <= m.
  (* Invariant *)
  Have: (2 + j) <= m.
  (* Invariant *)
  Have: x < m.
}
Prove: (2 + a + j) <= m.
Prover Z3 4.8.12 returns Valid (Qed:17ms) (180ms) (186930)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 48):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 49):
Let x = a + j.
Let x_1 = 1 + j.
Let x_2 = a + m.
Let x_3 = a_3 + j.
Let a_4 = IAbs.abs(a_3).
Let x_4 = a_3 + m.
Let x_5 = 1 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(x_1).
  (* Goal *)
  When: (0 < i) /\ (i <= x_1).
  (* Invariant *)
  Have: 2 <= m.
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= m.
  (* Invariant *)
  Have: j < m.
  (* Invariant *)
  Have: j <= (1 + a_3 + m).
  (* Invariant *)
  Have: j <= x_5.
  (* Invariant *)
  Have: j <= x_4.
  (* Invariant *)
  Have: a_3 <= j.
  (* Invariant *)
  Have: a_3 < j.
  (* Invariant *)
  Have: x_3 <= x_5.
  (* Invariant *)
  Have: x_3 <= m.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= j) -> (a_4 < i_1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= j) -> (0 <= (a_3 + i_1)))).
  (* Invariant *)
  Have: (a_4 <= m) /\ (0 <= x_4).
  (* Invariant *)
  Have: a_4 <= j.
  (* Invariant *)
  Have: a_4 < j.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: 0 < x_3.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: a_3 <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (2 + j) <= m.
  (* Invariant *)
  Have: j <= x_2.
  (* Invariant *)
  Have: j < x_2.
  (* Invariant *)
  Have: a <= x_1.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: x <= m.
  (* Invariant *)
  Have: x < m.
}
Prove: IAbs.abs(a) < i.
Prover Z3 4.8.12 returns Timeout (Qed:24ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:24ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 50):
Let x = 1 + j.
Let x_1 = a + j.
Let x_2 = a + m.
Let x_3 = a_3 + j.
Let a_4 = IAbs.abs(a_3).
Let x_4 = a_3 + m.
Let x_5 = 1 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(x).
  (* Goal *)
  When: (0 < i) /\ (i <= x).
  (* Invariant *)
  Have: 2 <= m.
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= m.
  (* Invariant *)
  Have: j < m.
  (* Invariant *)
  Have: j <= (1 + a_3 + m).
  (* Invariant *)
  Have: j <= x_5.
  (* Invariant *)
  Have: j <= x_4.
  (* Invariant *)
  Have: a_3 <= j.
  (* Invariant *)
  Have: a_3 < j.
  (* Invariant *)
  Have: x_3 <= x_5.
  (* Invariant *)
  Have: x_3 <= m.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= j) -> (a_4 < i_1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= j) -> (0 <= (a_3 + i_1)))).
  (* Invariant *)
  Have: (a_4 <= m) /\ (0 <= x_4).
  (* Invariant *)
  Have: a_4 <= j.
  (* Invariant *)
  Have: a_4 < j.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: 0 < x_3.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: a_3 <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (2 + j) <= m.
  (* Invariant *)
  Have: j <= x_2.
  (* Invariant *)
  Have: j < x_2.
  (* Invariant *)
  Have: a <= x.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: x_1 <= m.
  (* Invariant *)
  Have: x_1 < m.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= x) -> (IAbs.abs(a) < i_1))).
}
Prove: (a <= m) /\ (0 <= x_2).
Prover Z3 4.8.12 returns Valid (Qed:21ms) (10ms) (38820)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:21ms) (7ms) (109)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 51):
Let x = 1 + j.
Let x_1 = a + m.
Let x_2 = a + j.
Let x_3 = a_3 + j.
Let a_4 = IAbs.abs(a_3).
Let x_4 = a_3 + m.
Let x_5 = 1 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(x).
  (* Goal *)
  When: (0 < i) /\ (i <= x).
  (* Invariant *)
  Have: 2 <= m.
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= m.
  (* Invariant *)
  Have: j < m.
  (* Invariant *)
  Have: j <= (1 + a_3 + m).
  (* Invariant *)
  Have: j <= x_5.
  (* Invariant *)
  Have: j <= x_4.
  (* Invariant *)
  Have: a_3 <= j.
  (* Invariant *)
  Have: a_3 < j.
  (* Invariant *)
  Have: x_3 <= x_5.
  (* Invariant *)
  Have: x_3 <= m.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= j) -> (a_4 < i_1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= j) -> (0 <= (a_3 + i_1)))).
  (* Invariant *)
  Have: (a_4 <= m) /\ (0 <= x_4).
  (* Invariant *)
  Have: a_4 <= j.
  (* Invariant *)
  Have: a_4 < j.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: 0 < x_3.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: a_3 <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (2 + j) <= m.
  (* Invariant *)
  Have: j <= x_1.
  (* Invariant *)
  Have: j < x_1.
  (* Invariant *)
  Have: a <= x.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: x_2 <= m.
  (* Invariant *)
  Have: x_2 < m.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= x) -> (IAbs.abs(a) < i_1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= x) ->
      ((a <= m) /\ (0 <= x_1)))).
}
Prove: (a <= m) /\ (0 <= (a + i)).
Prover Z3 4.8.12 returns Valid (Qed:42ms) (190ms) (236467)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (0.80ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 53):
Let x = a + m.
Let x_1 = 1 + j.
Let x_2 = a + j.
Let x_3 = a_3 + j.
Let a_4 = IAbs.abs(a_3).
Let x_4 = a_3 + m.
Let x_5 = 1 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(x_1).
  (* Goal *)
  When: (0 < i) /\ (i <= j).
  (* Invariant *)
  Have: 2 <= m.
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= m.
  (* Invariant *)
  Have: j < m.
  (* Invariant *)
  Have: j <= (1 + a_3 + m).
  (* Invariant *)
  Have: j <= x_5.
  (* Invariant *)
  Have: j <= x_4.
  (* Invariant *)
  Have: a_3 <= j.
  (* Invariant *)
  Have: a_3 < j.
  (* Invariant *)
  Have: x_3 <= x_5.
  (* Invariant *)
  Have: x_3 <= m.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= j) -> (a_4 < i_1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= j) -> (0 <= (a_3 + i_1)))).
  (* Invariant *)
  Have: (a_4 <= m) /\ (0 <= x_4).
  (* Invariant *)
  Have: a_4 <= j.
  (* Invariant *)
  Have: a_4 < j.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: 0 < x_3.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: a_3 <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (2 + j) <= m.
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: j < x.
  (* Invariant *)
  Have: a <= x_1.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: x_2 <= m.
  (* Invariant *)
  Have: x_2 < m.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= x_1) -> (IAbs.abs(a) < i_1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= x_1) ->
      ((a <= m) /\ (0 <= x)))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= x_1) ->
      ((a <= m) /\ (0 <= (a + i_1))))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= j) -> (0 <= x))).
}
Prove: a <= m.
Prover Z3 4.8.12 returns Valid (Qed:41ms) (20ms) (39721)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:41ms) (11ms) (40)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 53):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 54):
Let x = a + m.
Let x_1 = 1 + j.
Let a_4 = IAbs.abs(a).
Let x_2 = a + j.
Let x_3 = a_3 + j.
Let a_5 = IAbs.abs(a_3).
Let x_4 = a_3 + m.
Let x_5 = 1 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(x_1).
  (* Goal *)
  When: (0 <= i) /\ (i <= j).
  (* Invariant *)
  Have: 2 <= m.
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= m.
  (* Invariant *)
  Have: j < m.
  (* Invariant *)
  Have: j <= (1 + a_3 + m).
  (* Invariant *)
  Have: j <= x_5.
  (* Invariant *)
  Have: j <= x_4.
  (* Invariant *)
  Have: a_3 <= j.
  (* Invariant *)
  Have: a_3 < j.
  (* Invariant *)
  Have: x_3 <= x_5.
  (* Invariant *)
  Have: x_3 <= m.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= j) -> (a_5 < i_1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= j) -> (0 <= (a_3 + i_1)))).
  (* Invariant *)
  Have: (a_5 <= m) /\ (0 <= x_4).
  (* Invariant *)
  Have: a_5 <= j.
  (* Invariant *)
  Have: a_5 < j.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: 0 < x_3.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: a_3 <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (2 + j) <= m.
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: j < x.
  (* Invariant *)
  Have: a <= x_1.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: x_2 <= m.
  (* Invariant *)
  Have: x_2 < m.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= x_1) -> (a_4 < i_1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= x_1) ->
      ((a <= m) /\ (0 <= x)))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= x_1) ->
      ((a <= m) /\ (0 <= (a + i_1))))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= j) -> (0 <= x))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= j) -> (a <= m))).
}
Prove: a_4 <= m.
Prover Z3 4.8.12 returns Valid (Qed:44ms) (20ms) (42283)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:44ms) (16ms) (194)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 54):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 55):
Let a_4 = IAbs.abs(a).
Let x = a + m.
Let x_1 = 1 + j.
Let x_2 = a + j.
Let x_3 = a_3 + j.
Let a_5 = IAbs.abs(a_3).
Let x_4 = a_3 + m.
Let x_5 = 1 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(x_1).
  (* Invariant *)
  Have: 2 <= m.
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= m.
  (* Invariant *)
  Have: j < m.
  (* Invariant *)
  Have: j <= (1 + a_3 + m).
  (* Invariant *)
  Have: j <= x_5.
  (* Invariant *)
  Have: j <= x_4.
  (* Invariant *)
  Have: a_3 <= j.
  (* Invariant *)
  Have: a_3 < j.
  (* Invariant *)
  Have: x_3 <= x_5.
  (* Invariant *)
  Have: x_3 <= m.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a_5 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (0 <= (a_3 + i)))).
  (* Invariant *)
  Have: (a_5 <= m) /\ (0 <= x_4).
  (* Invariant *)
  Have: a_5 <= j.
  (* Invariant *)
  Have: a_5 < j.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: 0 < x_3.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: a_3 <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (2 + j) <= m.
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: j < x.
  (* Invariant *)
  Have: a <= x_1.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: x_2 <= m.
  (* Invariant *)
  Have: x_2 < m.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= x_1) -> (a_4 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= x_1) -> ((a <= m) /\ (0 <= x)))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= x_1) ->
      ((a <= m) /\ (0 <= (a + i))))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (0 <= x))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a <= m))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= j) -> (a_4 <= m))).
}
Prove: exists i : Z. ((0 <= i) -> ((i <= j) -> (a_4 <= m))).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:38ms) (641ms) (7476)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 55):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 56):
Let a_4 = IAbs.abs(a).
Let x = a + m.
Let x_1 = 1 + j.
Let x_2 = a + j.
Let x_3 = a_3 + j.
Let a_5 = IAbs.abs(a_3).
Let x_4 = a_3 + m.
Let x_5 = 1 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(x_1).
  (* Invariant *)
  Have: 2 <= m.
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= m.
  (* Invariant *)
  Have: j < m.
  (* Invariant *)
  Have: j <= (1 + a_3 + m).
  (* Invariant *)
  Have: j <= x_5.
  (* Invariant *)
  Have: j <= x_4.
  (* Invariant *)
  Have: a_3 <= j.
  (* Invariant *)
  Have: a_3 < j.
  (* Invariant *)
  Have: x_3 <= x_5.
  (* Invariant *)
  Have: x_3 <= m.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= j) -> (a_5 < i_1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= j) -> (0 <= (a_3 + i_1)))).
  (* Invariant *)
  Have: (a_5 <= m) /\ (0 <= x_4).
  (* Invariant *)
  Have: a_5 <= j.
  (* Invariant *)
  Have: a_5 < j.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: 0 < x_3.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: a_3 <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (2 + j) <= m.
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: j < x.
  (* Invariant *)
  Have: a <= x_1.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: x_2 <= m.
  (* Invariant *)
  Have: x_2 < m.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= x_1) -> (a_4 < i_1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= x_1) ->
      ((a <= m) /\ (0 <= x)))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= x_1) ->
      ((a <= m) /\ (0 <= (a + i_1))))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= j) -> (0 <= x))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= j) -> (a <= m))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= j) -> (a_4 <= m))).
  (* Invariant *)
  Have: ((0 <= i) -> ((i <= j) -> (a_4 <= m))).
}
Prove: (a_4 <= m) /\ (0 <= x).
Prover Z3 4.8.12 returns Valid (Qed:37ms) (10ms) (43094)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:37ms) (12ms) (212)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 56):
Prove: true.
Prover Qed returns Valid (0.96ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 57):
Let a_4 = IAbs.abs(a).
Let x = a + m.
Let x_1 = 1 + j.
Let x_2 = a + j.
Let x_3 = a_3 + j.
Let a_5 = IAbs.abs(a_3).
Let x_4 = a_3 + m.
Let x_5 = 1 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(x_1).
  (* Invariant *)
  Have: 2 <= m.
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= m.
  (* Invariant *)
  Have: j < m.
  (* Invariant *)
  Have: j <= (1 + a_3 + m).
  (* Invariant *)
  Have: j <= x_5.
  (* Invariant *)
  Have: j <= x_4.
  (* Invariant *)
  Have: a_3 <= j.
  (* Invariant *)
  Have: a_3 < j.
  (* Invariant *)
  Have: x_3 <= x_5.
  (* Invariant *)
  Have: x_3 <= m.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a_5 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (0 <= (a_3 + i)))).
  (* Invariant *)
  Have: (a_5 <= m) /\ (0 <= x_4).
  (* Invariant *)
  Have: a_5 <= j.
  (* Invariant *)
  Have: a_5 < j.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: 0 < x_3.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: a_3 <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (2 + j) <= m.
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: j < x.
  (* Invariant *)
  Have: a <= x_1.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: x_2 <= m.
  (* Invariant *)
  Have: x_2 < m.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= x_1) -> (a_4 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= x_1) -> (a <= m))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= x_1) ->
      ((a <= m) /\ (0 <= (a + i))))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a <= m))).
  (* Invariant *)
  Have: (a_4 <= m) /\ (0 <= x).
}
Prove: a_4 <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:42ms) (10ms) (41333)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:42ms) (16ms) (189)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 57):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 58):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 58):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 59):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 59):
Prove: true.
Prover Qed returns Valid (0.94ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 60):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 60):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 61):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 61):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 62):
Let a_4 = IAbs.abs(a).
Let x = 1 + j.
Let x_1 = a + m.
Let x_2 = a + j.
Let x_3 = a_3 + j.
Let a_5 = IAbs.abs(a_3).
Let x_4 = a_3 + m.
Let x_5 = 1 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(x).
  (* Invariant *)
  Have: 2 <= m.
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= m.
  (* Invariant *)
  Have: j < m.
  (* Invariant *)
  Have: j <= (1 + a_3 + m).
  (* Invariant *)
  Have: j <= x_5.
  (* Invariant *)
  Have: j <= x_4.
  (* Invariant *)
  Have: a_3 <= j.
  (* Invariant *)
  Have: a_3 < j.
  (* Invariant *)
  Have: x_3 <= x_5.
  (* Invariant *)
  Have: x_3 <= m.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a_5 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (0 <= (a_3 + i)))).
  (* Invariant *)
  Have: (a_5 <= m) /\ (0 <= x_4).
  (* Invariant *)
  Have: a_5 <= j.
  (* Invariant *)
  Have: a_5 < j.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: 0 < x_3.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: a_3 <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (2 + j) <= m.
  (* Invariant *)
  Have: j <= x_1.
  (* Invariant *)
  Have: j < x_1.
  (* Invariant *)
  Have: a <= x.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: x_2 <= m.
  (* Invariant *)
  Have: x_2 < m.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= x) -> (a_4 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= x) -> (a <= m))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= x) ->
      ((a <= m) /\ (0 <= (a + i))))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a <= m))).
  (* Invariant *)
  Have: (a_4 <= m) /\ (0 <= x_1).
  (* Invariant *)
  Have: a_4 <= x.
}
Prove: a_4 <= j.
Prover Z3 4.8.12 returns Valid (Qed:38ms) (10ms) (41441)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:38ms) (23ms) (207)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 62):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 63):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 63):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (1.00ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 65):
Prove: true.
Prover Qed returns Valid (8ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 65):
Prove: true.
Prover Qed returns Valid (0.89ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 67):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 67):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 68):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 68):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 69):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 69):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 70):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 70):
Prove: true.
Prover Qed returns Valid (1.00ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 71):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 71):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 72):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 72):
Prove: true.
Prover Qed returns Valid (0.92ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 73):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 73):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 74):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 74):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 75):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 75):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 76):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 76):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 77):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 77):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 78):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 78):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 79):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 79):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 80):
Let x = 1 + a.
Let a_1 = IAbs.abs(x).
Let x_1 = 1 + j.
Let x_2 = a + m.
Let x_3 = a + j.
Let a_2 = IAbs.abs(a).
Let x_4 = 1 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\
      is_sint32(x) /\ is_sint32(x_1).
  (* Residual *)
  When: tmp_0 != 0.
  (* Invariant *)
  Have: 2 <= m.
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= m.
  (* Invariant *)
  Have: j < m.
  (* Invariant *)
  Have: j <= (1 + a + m).
  (* Invariant *)
  Have: j <= x_4.
  (* Invariant *)
  Have: j <= x_2.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: a < j.
  (* Invariant *)
  Have: x_3 <= x_4.
  (* Invariant *)
  Have: x_3 <= m.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a_2 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (0 <= (a + i)))).
  (* Invariant *)
  Have: (a_2 <= m) /\ (0 <= x_2).
  (* Invariant *)
  Have: a_2 <= j.
  (* Invariant *)
  Have: a_2 < j.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: 0 < x_3.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: a <= m.
  (* Invariant *)
  Have: (2 + j) <= m.
  (* Invariant *)
  Have: x_3 < m.
  (* Invariant *)
  Have: (2 + a + j) <= m.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= x_1) -> (a_1 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= x_1) -> (a < m))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= x_1) ->
      ((a < m) /\ ((-1) <= (a + i))))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a < m))).
  (* Invariant *)
  Have: (a_1 <= m) /\ ((-1) <= x_2).
  (* Invariant *)
  Have: a_1 <= x_1.
  (* Invariant *)
  Have: a_1 <= j.
}
Prove: (-2) <= x_3.
Prover Z3 4.8.12 returns Valid (Qed:44ms) (10ms) (38217)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:44ms) (6ms) (33)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 80):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 81):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 81):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 82):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 82):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 83):
Prove: true.
Prover Qed returns Valid (8ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 83):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 84):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 84):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 85):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 85):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 86):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 86):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 87):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 87):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 88):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 88):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 89):
Prove: true.
Prover Qed returns Valid (29ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 89):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 90):
Prove: true.
Prover Qed returns Valid (8ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 90):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 91):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 91):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 92):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 92):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 93):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 93):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 94):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 94):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 95):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 95):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 96):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 96):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 97):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 97):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 98):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 98):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 99):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 99):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 100):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 100):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 101):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 101):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 102):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 102):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 103):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 103):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 104):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 104):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 105):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 105):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 106):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 106):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 107):
Let x = a + j.
Let a_4 = IAbs.abs(a).
Let x_1 = 1 + j.
Let x_2 = a + m.
Let x_3 = a_3 + j.
Let a_5 = IAbs.abs(a_3).
Let x_4 = a_3 + m.
Let x_5 = 1 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(x_1).
  (* Invariant *)
  Have: 2 <= m.
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: j <= m.
  (* Invariant *)
  Have: j < m.
  (* Invariant *)
  Have: j <= (1 + a_3 + m).
  (* Invariant *)
  Have: j <= x_5.
  (* Invariant *)
  Have: j <= x_4.
  (* Invariant *)
  Have: a_3 <= j.
  (* Invariant *)
  Have: a_3 < j.
  (* Invariant *)
  Have: x_3 <= x_5.
  (* Invariant *)
  Have: x_3 <= m.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a_5 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (0 <= (a_3 + i)))).
  (* Invariant *)
  Have: (a_5 <= m) /\ (0 <= x_4).
  (* Invariant *)
  Have: a_5 <= j.
  (* Invariant *)
  Have: a_5 < j.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: 0 < x_3.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: a_3 <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (2 + j) <= m.
  (* Invariant *)
  Have: j <= x_2.
  (* Invariant *)
  Have: j < x_2.
  (* Invariant *)
  Have: a <= x_1.
  (* Invariant *)
  Have: a <= j.
  (* Invariant *)
  Have: x <= m.
  (* Invariant *)
  Have: x < m.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= x_1) -> (a_4 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= x_1) -> (a <= m))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= x_1) ->
      ((a <= m) /\ (0 <= (a + i))))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a <= m))).
  (* Invariant *)
  Have: (a_4 <= m) /\ (0 <= x_2).
  (* Invariant *)
  Have: a_4 <= x_1.
  (* Invariant *)
  Have: a_4 <= j.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: 0 <= x.
}
Prove: a <= m.
Prover Z3 4.8.12 returns Valid (Qed:31ms) (10ms) (40095)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:31ms) (7ms) (44)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 107):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 108):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 108):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 109):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 109):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 110):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 110):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 111):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 111):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 112):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 112):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 113):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 113):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 114):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 114):
Prove: true.
Prover Qed returns Valid (0.88ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 115):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 115):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 116):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 116):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 117):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 117):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 118):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 118):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 119):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 119):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 120):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 120):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 121):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 121):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 122):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 122):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 123):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 123):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 124):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 124):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 125):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 125):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 126):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 126):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 127):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 127):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 128):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 128):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 129):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 129):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 130):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 130):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 131):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 131):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 132):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 132):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 133):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 133):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 134):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 134):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 135):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 135):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 136):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 136):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 137):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 137):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 138):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 138):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 139):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 139):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 140):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 140):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 141):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 141):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 142):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 142):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 143):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 143):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0024/014_merged.c, line 144):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0024/014_merged.c, line 144):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/014_0024/014_merged.c, line 145) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/014_0024/014_merged.c, line 145) (2/2):
Call Result at line 149
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/014_0024/014_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/014_0024/014_merged.c:6: Warning: 
  No 'assigns' specification for function 'foo014'.
  Callers assumptions might be imprecise.

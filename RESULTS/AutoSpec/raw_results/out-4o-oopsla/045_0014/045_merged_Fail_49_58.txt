[kernel] Parsing out/045_0014/045_merged.c (with preprocessing)
[kernel:typing:no-proto] out/045_0014/045_merged.c:31: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/045_0014/045_merged.c:70: Warning: 
  Calling function unknown3 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/045_0014/045_merged.c:48: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/045_0014/045_merged.c:7: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[kernel:annot:missing-spec] out/045_0014/045_merged.c:7: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[kernel:annot:missing-spec] out/045_0014/045_merged.c:7: Warning: 
  Neither code nor specification for function unknown3, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] out/045_0014/045_merged.c:48: Warning: 
  Missing assigns clause (assigns 'everything' instead)
[wp] 58 goals scheduled
[wp] [Timeout] typed_foo045_loop_invariant_12_preserved (Qed 48ms) (Z3)
[wp] [Timeout] typed_foo045_loop_invariant_12_established (Qed 6ms) (Z3)
[wp] [Timeout] typed_foo045_loop_invariant_13_established (Qed 6ms) (Z3)
[wp] [Timeout] typed_foo045_loop_invariant_14_established (Qed 7ms) (Z3)
[wp] [Timeout] typed_foo045_loop_invariant_15_established (Qed 7ms) (Z3)
[wp] [Timeout] typed_foo045_loop_invariant_16_established (Qed 7ms) (Z3)
[wp] [Timeout] typed_foo045_loop_invariant_17_established (Qed 9ms) (Z3)
[wp] [Timeout] typed_foo045_loop_invariant_20_established (Qed 8ms) (Z3)
[wp] [Timeout] typed_foo045_loop_invariant_21_established (Qed 8ms) (Z3)
[wp] Proved goals:   49 / 58
  Qed:              45
  Alt-Ergo 2.5.4:    4 (4ms-6ms)
  Timeout:           9
------------------------------------------------------------
  Function foo045
------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 18):
Let x_1 = -x.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_0) /\
      is_sint32(x) /\ is_sint32(1 + j) /\ is_sint32(1 + x) /\
      is_sint32(j - x) /\ is_sint32(j - 1 - (2 * x)) /\ is_sint32(j - 1 - x).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: (x < j) /\ ((2 * x) < j).
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: ((-2) <= x) \/ ((-1) <= x).
Prover Z3 4.8.12 returns Valid (Qed:12ms) (10ms) (31633)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:12ms) (4ms) (16)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.80ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 19):
Let x_1 = j_1 + x.
Let x_2 = j + (if (flag_0 = 0) then 0 else x).
Let x_3 = -(if (flag_0 = 0) then 0 else x).
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(j_2) /\
      is_sint32(j_1) /\ is_sint32(tmp_0) /\ is_sint32(x) /\
      is_sint32(1 + x) /\ is_sint32(j_1 - (if (flag_0 = 0) then 0 else x)) /\
      is_sint32(1 + j_1 + x - (if (flag_0 = 0) then 0 else x)).
  (* Invariant *)
  Have: (0 <= j_1) /\ ((flag_0 = 0) \/ (x <= j_1)).
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
  If flag_0 != 0
  Then { Have: (1 + j_1 + x) = j_2. Have: (1 + j_2) = j. }
  Else { Have: (1 + j_1 + x) = j. }
  (* Invariant *)
  Have: (x_1 < x_2) \/ (x_1 <= x_2).
}
Prove: (0 <= j) /\ (if (flag_0 = 0) then ((-1) <= x_1) else ((-1) <= j_1)).
Prover Z3 4.8.12 returns Valid (Qed:13ms) (10ms) (33207)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (6ms) (66)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.86ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (11ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 51):
Let x_3 = x + y.
Let x_4 = x_3 % 2.
Let x_5 = 1 + x + y.
Let x_6 = x_5 % 2.
Let x_7 = 1 + y.
Let x_8 = 2 * y_2.
Let x_9 = 1 + x_8.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_0_0) /\
      is_sint32(tmp_1_0) /\ is_sint32(x_1) /\ is_sint32(x) /\
      is_sint32(x_2) /\ is_sint32(y_1) /\ is_sint32(y) /\ is_sint32(y_2) /\
      is_sint32(x_3) /\ is_sint32(x_5) /\ is_sint32(x + y - y_2) /\
      is_sint32(j - (if (flag_0 = 0) then 0 else x_2)).
  (* Invariant *)
  Have: (0 <= j) /\ ((flag_0 = 0) \/ (x_2 <= j)).
  (* Invariant *)
  Have: 0 <= x_2.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: x_8 <= x_3.
  (* Invariant *)
  Have: (0 <= y_2) /\ (y_2 <= x_3).
  (* Invariant *)
  Have: x_3 <= x_9.
  (* Invariant *)
  Have: (x_4 = 0) \/ (x_6 = 1).
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: ((x_4 = 0) -> (x_3 <= x_8)).
  (* Invariant *)
  Have: ((x_6 = 1) -> ((x_3 = x_8) \/ (x_9 = x_3))).
  (* Invariant *)
  Have: ((x_6 = 0) -> (x_3 = x_8)).
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (0 <= x) /\ (0 <= y).
  (* Invariant *)
  Have: x <= x_7.
  (* Invariant *)
  Have: ((x_4 = 0) -> (x <= y)).
  (* Invariant *)
  Have: ((x_6 = 1) -> ((y = x) \/ (x_7 = x))).
  (* Invariant *)
  Have: ((x_6 = 0) -> (y = x)).
  (* Then *)
  Have: tmp_0_0 != 0.
  If x_6 = 1
  Then { Have: (1 + x) = x_1. }
  Else { Have: x = x_1. }
  If x_4 = 0
  Then { Have: x_7 = y_1. }
  Else { Have: y = y_1. }
}
Prove: x_3 = (x_1 + y_1).
Prover Z3 4.8.12 returns Timeout (Qed:48ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:48ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 51):
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_1_0) /\
      is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(y) /\ is_sint32(z) /\
      is_sint32(j - (if (flag_0 = 0) then 0 else x_1)).
  (* Invariant *)
  Have: (0 <= j) /\ ((flag_0 = 0) \/ (x_1 <= j)).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: tmp_1_0 != 0.
}
Prove: (x + y) = z.
Prover Z3 4.8.12 returns Timeout (Qed:6ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:6ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 52):
Let x_2 = x + y.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_1_0) /\
      is_sint32(w) /\ is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(y) /\
      is_sint32(x_2) /\ is_sint32(j - (if (flag_0 = 0) then 0 else x_1)).
  (* Invariant *)
  Have: (0 <= j) /\ ((flag_0 = 0) \/ (x_1 <= j)).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: tmp_1_0 != 0.
}
Prove: x_2 <= w.
Prover Z3 4.8.12 returns Timeout (Qed:6ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:6ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 53):
Prove: true.
Prover Qed returns Valid (22ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 53):
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_1_0) /\
      is_sint32(w) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(z) /\
      is_sint32(z - y) /\ is_sint32(j - (if (flag_0 = 0) then 0 else x)).
  (* Invariant *)
  Have: (0 <= j) /\ ((flag_0 = 0) \/ (x <= j)).
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: z <= w.
}
Prove: (2 * y) <= z.
Prover Z3 4.8.12 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 54):
Prove: true.
Prover Qed returns Valid (22ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 54):
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_1_0) /\
      is_sint32(w) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(z) /\
      is_sint32(z - y) /\ is_sint32(j - (if (flag_0 = 0) then 0 else x)).
  (* Invariant *)
  Have: (0 <= j) /\ ((flag_0 = 0) \/ (x <= j)).
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: z <= w.
  (* Invariant *)
  Have: (2 * y) <= z.
}
Prove: (0 <= y) /\ (y <= z).
Prover Z3 4.8.12 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 55):
Prove: true.
Prover Qed returns Valid (23ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 55):
Let x_1 = 2 * y.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_1_0) /\
      is_sint32(w) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(z) /\
      is_sint32(z - y) /\ is_sint32(j - (if (flag_0 = 0) then 0 else x)).
  (* Invariant *)
  Have: (0 <= j) /\ ((flag_0 = 0) \/ (x <= j)).
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: z <= w.
  (* Invariant *)
  Have: x_1 <= z.
  (* Invariant *)
  Have: (0 <= y) /\ (y <= z).
}
Prove: z <= (1 + x_1).
Prover Z3 4.8.12 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 56):
Prove: true.
Prover Qed returns Valid (11ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 56):
Let x_1 = 2 * y.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_1_0) /\
      is_sint32(w) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(z) /\
      is_sint32(z - y) /\ is_sint32(j - (if (flag_0 = 0) then 0 else x)).
  (* Invariant *)
  Have: (0 <= j) /\ ((flag_0 = 0) \/ (x <= j)).
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: z <= w.
  (* Invariant *)
  Have: x_1 <= z.
  (* Invariant *)
  Have: (0 <= y) /\ (y <= z).
  (* Invariant *)
  Have: z <= (1 + x_1).
}
Prove: (2 * z) <= (w + x_1).
Prover Z3 4.8.12 returns Timeout (Qed:9ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:9ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 57):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 57):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 58):
Prove: true.
Prover Qed returns Valid (8ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 58):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 59):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 59):
Let x_2 = x + y.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_1_0) /\
      is_sint32(w) /\ is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(y) /\
      is_sint32(x_2) /\ is_sint32(j - (if (flag_0 = 0) then 0 else x_1)).
  (* Invariant *)
  Have: (0 <= j) /\ ((flag_0 = 0) \/ (x_1 <= j)).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: x_2 <= w.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (0 <= x) /\ (0 <= y).
  (* Invariant *)
  Have: x <= (1 + y).
  (* Invariant *)
  Have: (2 * x) <= w.
}
Prove: (1 + x + y) = w.
Prover Z3 4.8.12 returns Timeout (Qed:8ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:8ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 60):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 60):
Let x_2 = x + y.
Let x_3 = 1 + x + y.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_1_0) /\
      is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(y) /\ is_sint32(x_2) /\
      is_sint32(x_3) /\ is_sint32(j - (if (flag_0 = 0) then 0 else x_1)).
  (* Invariant *)
  Have: (0 <= j) /\ ((flag_0 = 0) \/ (x_1 <= j)).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (0 <= x) /\ (0 <= y).
  (* Invariant *)
  Have: x <= (1 + y).
}
Prove: ((x_2 % 2) = 0) \/ ((x_3 % 2) = 1).
Prover Z3 4.8.12 returns Timeout (Qed:8ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:8ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 61):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 61):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 62):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 62):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 63):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 63):
Let x_1 = 2 * y.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_1_0) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(1 + z) /\
      is_sint32(z - y) /\ is_sint32(j - (if (flag_0 = 0) then 0 else x)).
  (* Goal *)
  When: (z % 2) = 0.
  (* Invariant *)
  Have: (0 <= j) /\ ((flag_0 = 0) \/ (x <= j)).
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: x_1 <= z.
  (* Invariant *)
  Have: (0 <= y) /\ (y <= z).
  (* Invariant *)
  Have: z <= (1 + x_1).
  (* Invariant *)
  Have: 0 <= z.
}
Prove: z <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (33806)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (4ms) (129)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 65):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 65):
Let x_1 = 2 * y.
Let x_2 = 1 + x_1.
Let x_3 = 1 + z.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_1_0) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(x_3) /\
      is_sint32(z - y) /\ is_sint32(j - (if (flag_0 = 0) then 0 else x)).
  (* Goal *)
  When: (x_3 % 2) = 1.
  (* Invariant *)
  Have: (0 <= j) /\ ((flag_0 = 0) \/ (x <= j)).
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: x_1 <= z.
  (* Invariant *)
  Have: (0 <= y) /\ (y <= z).
  (* Invariant *)
  Have: z <= x_2.
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: (((z % 2) = 0) -> (z <= x_1)).
}
Prove: (x_1 = z) \/ (x_2 = z).
Prover Z3 4.8.12 returns Valid (Qed:8ms) (20ms) (33557)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (5ms) (26)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0014/045_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0014/045_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Loop assigns (file out/045_0014/045_merged.c, line 26) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/045_0014/045_merged.c, line 26) (2/2):
Call Result at line 31
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Loop assigns (file out/045_0014/045_merged.c, line 67) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/045_0014/045_merged.c, line 67) (2/2):
Call Result at line 70
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/045_0014/045_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/045_0014/045_merged.c:3: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/045_0014/045_merged.c:4: Warning: 
  No 'assigns' specification for function 'unknown3'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/045_0014/045_merged.c:7: Warning: 
  No 'assigns' specification for function 'foo045'.
  Callers assumptions might be imprecise.

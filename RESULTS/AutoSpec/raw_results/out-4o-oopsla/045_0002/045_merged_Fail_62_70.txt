[kernel] Parsing out/045_0002/045_merged.c (with preprocessing)
[kernel:typing:no-proto] out/045_0002/045_merged.c:37: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/045_0002/045_merged.c:76: Warning: 
  Calling function unknown3 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/045_0002/045_merged.c:54: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/045_0002/045_merged.c:7: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[kernel:annot:missing-spec] out/045_0002/045_merged.c:7: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[kernel:annot:missing-spec] out/045_0002/045_merged.c:7: Warning: 
  Neither code nor specification for function unknown3, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] out/045_0002/045_merged.c:54: Warning: 
  Missing assigns clause (assigns 'everything' instead)
[wp] 70 goals scheduled
[wp] [Timeout] typed_foo045_loop_invariant_18_established (Qed 6ms) (Z3)
[wp] [Timeout] typed_foo045_loop_invariant_18_preserved (Qed 45ms) (Z3)
[wp] [Timeout] typed_foo045_loop_invariant_19_established (Qed 7ms) (Z3)
[wp] [Timeout] typed_foo045_loop_invariant_20_established (Qed 7ms) (Z3)
[wp] [Timeout] typed_foo045_loop_invariant_21_established (Qed 8ms) (Z3)
[wp] [Timeout] typed_foo045_loop_invariant_23_established (Qed 8ms) (Z3)
[wp] [Timeout] typed_foo045_loop_invariant_24_established (Qed 9ms) (Z3)
[wp] [Timeout] typed_foo045_loop_invariant_29_established (Qed 9ms) (Z3)
[wp] Proved goals:   62 / 70
  Qed:              54
  Alt-Ergo 2.5.4:    8 (3ms-12ms-46ms)
  Timeout:           8
------------------------------------------------------------
  Function foo045
------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 19):
Let x = -j_1.
Let x_1 = j - j_1.
Let x_2 = j - 1 - j_1.
Let x_3 = x_1 * x_2.
Let x_4 = x_3 / 2.
Let x_5 = j + x_4.
Let x_6 = 1 + (2 * j_1).
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j_2) /\ is_sint32(j_1) /\
      is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_4).
  (* Invariant *)
  Have: ((if (flag_0 = 0) then 0 else x_2) + x_4) = j_1.
  (* Invariant *)
  Have: x_4 <= j_1.
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x_5 <= x_6)).
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x_5 = x_6)).
  (* Invariant *)
  Have: j_1 < j.
  (* Invariant *)
  Have: 0 <= j_1.
  (* Invariant *)
  Have: (-1) <= x_3.
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x_4 = j_1)).
  (* Then *)
  Have: tmp_0 != 0.
  If flag_0 != 0
  Then { Have: (1 + j) = j_2. }
  Else { Have: j = j_2. }
}
Prove: ((if (flag_0 = 0) then 0 else x_1) + ((x_1 * (1 + j - j_1)) / 2))
         = j_2.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (46ms) (517)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.79ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.82ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.78ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.87ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 27):
Let x_1 = 1 + x.
Let x_2 = (x_1 * (2 + x)) / 2.
Let x_3 = (x * x_1) / 2.
Let x_4 = 1 + x + (if (flag_0 = 0) then 0 else x) + x_3.
Let x_5 = (if (flag_0 = 0) then 0 else x) + x_3.
Let x_6 = 1 + (if (flag_0 = 0) then 0 else x) + x_3.
Let x_7 = (if (flag_0 = 0) then 0 else x_1) + x_2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(tmp_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_5) /\ is_sint32(x_7) /\
      is_sint32(x_2 - 1 - x).
  (* Invariant *)
  Have: x_2 = (1 + x + x_3).
  (* Invariant *)
  Have: x_2 <= x_4.
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x_2 <= x_6)).
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x_2 = x_6)).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= x_5.
  (* Invariant *)
  Have: x < x_2.
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x_2 = x_4)).
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (-1) <= x.
}
Prove: 0 <= x_7.
Prover Z3 4.8.12 returns Valid (Qed:14ms) (20ms) (35113)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:14ms) (6ms) (62)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 28):
Let x_1 = 1 + x.
Let x_2 = x_1 * (2 + x).
Let x_3 = x_2 / 2.
Let x_4 = x + x_3.
Let x_5 = (x * x_1) / 2.
Let x_6 = x + x_5.
Let x_7 = 1 + x + x_5.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(tmp_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_3) /\ is_sint32(x_6) /\ is_sint32(x_4) /\
      is_sint32(x_3 - 1 - x) /\ is_sint32(1 + x + x_3).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: x_3 <= (1 + (2 * x) + x_5).
  (* Invariant *)
  Have: x_3 <= x_7.
  (* Invariant *)
  Have: x_3 = x_7.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= x_6.
  (* Invariant *)
  Have: x < x_3.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: (-1) <= x_4.
}
Prove: (-1) <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:14ms) (10ms) (33619)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:14ms) (5ms) (54)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (0.89ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 57):
Let x_3 = x + y.
Let x_4 = x_3 % 2.
Let x_5 = 1 + x + y.
Let x_6 = x_5 % 2.
Let x_7 = 1 + y.
Let x_8 = 2 * y_2.
Let x_9 = 1 + x_8.
Let x_10 = x_2 * (1 + x_2).
Let x_11 = x_10 / 2.
Let x_12 = (if (flag_0 = 0) then 0 else x_2) + x_11.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(tmp_0_0) /\ is_sint32(tmp_1_0) /\
      is_sint32(x_1) /\ is_sint32(x) /\ is_sint32(x_2) /\ is_sint32(y_1) /\
      is_sint32(y) /\ is_sint32(y_2) /\ is_sint32(x_3) /\ is_sint32(x_5) /\
      is_sint32(x + y - y_2) /\ is_sint32(x_11) /\ is_sint32(x_12).
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 <= x_12.
  (* Invariant *)
  Have: (-1) <= x_10.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: x_8 <= x_3.
  (* Invariant *)
  Have: (x_3 = x_8) \/ (x_9 = x_3).
  (* Invariant *)
  Have: x_3 <= x_9.
  (* Invariant *)
  Have: ((x_4 = 0) -> (x_3 <= x_8)).
  (* Invariant *)
  Have: ((x_4 = 0) -> (x_3 = x_8)).
  (* Invariant *)
  Have: ((x_6 = 1) -> (x_3 = x_8)).
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: 0 <= y_2.
  (* Invariant *)
  Have: y_2 <= x_3.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (y = x) \/ (x_7 = x).
  (* Invariant *)
  Have: x <= x_7.
  (* Invariant *)
  Have: ((x_4 = 0) -> (x <= y)).
  (* Invariant *)
  Have: ((x_4 = 0) -> (y = x)).
  (* Invariant *)
  Have: ((x_6 = 1) -> (y = x)).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0_0 != 0.
  If x_6 = 1
  Then { Have: (1 + x) = x_1. }
  Else { Have: x = x_1. }
  If x_4 = 0
  Then { Have: x_7 = y_1. }
  Else { Have: y = y_1. }
}
Prove: x_3 = (x_1 + y_1).
Prover Z3 4.8.12 returns Timeout (Qed:45ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:45ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 57):
Let x_2 = x_1 * (1 + x_1).
Let x_3 = x_2 / 2.
Let x_4 = (if (flag_0 = 0) then 0 else x_1) + x_3.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(tmp_1_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(x_3) /\
      is_sint32(x_4).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: (-1) <= x_2.
  (* Then *)
  Have: tmp_1_0 != 0.
}
Prove: (x + y) = z.
Prover Z3 4.8.12 returns Timeout (Qed:6ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:6ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 58):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 58):
Let x_2 = x_1 * (1 + x_1).
Let x_3 = x_2 / 2.
Let x_4 = (if (flag_0 = 0) then 0 else x_1) + x_3.
Let x_5 = x + y.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(tmp_1_0) /\ is_sint32(w) /\
      is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(y) /\ is_sint32(x_5) /\
      is_sint32(x_3) /\ is_sint32(x_4).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: (-1) <= x_2.
  (* Then *)
  Have: tmp_1_0 != 0.
}
Prove: x_5 <= w.
Prover Z3 4.8.12 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 59):
Prove: true.
Prover Qed returns Valid (22ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 59):
Let x_1 = x * (1 + x).
Let x_2 = x_1 / 2.
Let x_3 = (if (flag_0 = 0) then 0 else x) + x_2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(tmp_1_0) /\ is_sint32(w) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(z - y) /\
      is_sint32(x_2) /\ is_sint32(x_3).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: (-1) <= x_1.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: z <= w.
}
Prove: (2 * y) <= z.
Prover Z3 4.8.12 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 60):
Prove: true.
Prover Qed returns Valid (27ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 60):
Let x_1 = 2 * y.
Let x_2 = x * (1 + x).
Let x_3 = x_2 / 2.
Let x_4 = (if (flag_0 = 0) then 0 else x) + x_3.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(tmp_1_0) /\ is_sint32(w) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(z - y) /\
      is_sint32(x_3) /\ is_sint32(x_4).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: (-1) <= x_2.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: z <= w.
  (* Invariant *)
  Have: x_1 <= z.
}
Prove: (x_1 = z) \/ ((1 + x_1) = z).
Prover Z3 4.8.12 returns Timeout (Qed:8ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:8ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 61):
Prove: true.
Prover Qed returns Valid (32ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 61):
Let x_1 = 2 * y.
Let x_2 = 1 + x_1.
Let x_3 = x * (1 + x).
Let x_4 = x_3 / 2.
Let x_5 = (if (flag_0 = 0) then 0 else x) + x_4.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(tmp_1_0) /\ is_sint32(w) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(z - y) /\
      is_sint32(x_4) /\ is_sint32(x_5).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= x_5.
  (* Invariant *)
  Have: (-1) <= x_3.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: z <= w.
  (* Invariant *)
  Have: x_1 <= z.
  (* Invariant *)
  Have: (x_1 = z) \/ (x_2 = z).
}
Prove: z <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (32778)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (3ms) (83)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 62):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 62):
Let x_1 = 2 * y.
Let x_2 = 1 + x_1.
Let x_3 = x * (1 + x).
Let x_4 = x_3 / 2.
Let x_5 = (if (flag_0 = 0) then 0 else x) + x_4.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(tmp_1_0) /\ is_sint32(w) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(z - y) /\
      is_sint32(x_4) /\ is_sint32(x_5).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= x_5.
  (* Invariant *)
  Have: (-1) <= x_3.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: z <= w.
  (* Invariant *)
  Have: x_1 <= z.
  (* Invariant *)
  Have: (x_1 = z) \/ (x_2 = z).
  (* Invariant *)
  Have: z <= x_2.
}
Prove: z < w.
Prover Z3 4.8.12 returns Timeout (Qed:8ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:8ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 63):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 63):
Let x_2 = x + y.
Let x_3 = 1 + y.
Let x_4 = x_1 * (1 + x_1).
Let x_5 = x_4 / 2.
Let x_6 = (if (flag_0 = 0) then 0 else x_1) + x_5.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(tmp_1_0) /\ is_sint32(w) /\
      is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(y) /\ is_sint32(x_2) /\
      is_sint32(x_5) /\ is_sint32(x_6).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: 0 <= x_6.
  (* Invariant *)
  Have: (-1) <= x_4.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: x_2 <= w.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (y = x) \/ (x_3 = x).
  (* Invariant *)
  Have: x <= x_3.
  (* Invariant *)
  Have: x_2 < w.
}
Prove: (1 + x + y) = w.
Prover Z3 4.8.12 returns Timeout (Qed:9ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:9ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (8ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 64):
Let x_1 = 2 * y.
Let x_2 = 1 + x_1.
Let x_3 = x * (1 + x).
Let x_4 = x_3 / 2.
Let x_5 = (if (flag_0 = 0) then 0 else x) + x_4.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(tmp_1_0) /\ is_sint32(x) /\
      is_sint32(y) /\ is_sint32(z) /\ is_sint32(1 + z) /\ is_sint32(z - y) /\
      is_sint32(x_4) /\ is_sint32(x_5).
  (* Goal *)
  When: (z % 2) = 0.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= x_5.
  (* Invariant *)
  Have: (-1) <= x_3.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: x_1 <= z.
  (* Invariant *)
  Have: (x_1 = z) \/ (x_2 = z).
  (* Invariant *)
  Have: z <= x_2.
}
Prove: z <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (20ms) (34925)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (9ms) (286)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 65):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 65):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 67):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 67):
Let x_1 = z % 2.
Let x_2 = 2 * y.
Let x_3 = 1 + x_2.
Let x_4 = x * (1 + x).
Let x_5 = x_4 / 2.
Let x_6 = (if (flag_0 = 0) then 0 else x) + x_5.
Let x_7 = 1 + z.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(tmp_1_0) /\ is_sint32(x) /\
      is_sint32(y) /\ is_sint32(z) /\ is_sint32(x_7) /\ is_sint32(z - y) /\
      is_sint32(x_5) /\ is_sint32(x_6).
  (* Goal *)
  When: (x_7 % 2) = 1.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= x_6.
  (* Invariant *)
  Have: (-1) <= x_4.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: x_2 <= z.
  (* Invariant *)
  Have: (x_2 = z) \/ (x_3 = z).
  (* Invariant *)
  Have: z <= x_3.
  (* Invariant *)
  Have: ((x_1 = 0) -> (z <= x_2)).
  (* Invariant *)
  Have: ((x_1 = 0) -> (x_2 = z)).
}
Prove: x_2 = z.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (20ms) (35652)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (16ms) (411)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 68):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 68):
Let x_1 = 1 + z.
Let x_2 = 2 * y.
Let x_3 = z % 2.
Let x_4 = 1 + x_2.
Let x_5 = x * (1 + x).
Let x_6 = x_5 / 2.
Let x_7 = (if (flag_0 = 0) then 0 else x) + x_6.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(tmp_1_0) /\ is_sint32(x) /\
      is_sint32(y) /\ is_sint32(z) /\ is_sint32(x_1) /\ is_sint32(z - y) /\
      is_sint32(x_6) /\ is_sint32(x_7).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= x_7.
  (* Invariant *)
  Have: (-1) <= x_5.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: x_2 <= z.
  (* Invariant *)
  Have: (x_2 = z) \/ (x_4 = z).
  (* Invariant *)
  Have: z <= x_4.
  (* Invariant *)
  Have: ((x_3 = 0) -> (z <= x_2)).
  (* Invariant *)
  Have: ((x_3 = 0) -> (x_2 = z)).
  (* Invariant *)
  Have: (((x_1 % 2) = 1) -> (x_2 = z)).
}
Prove: 0 <= z.
Prover Z3 4.8.12 returns Timeout (Qed:9ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:9ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 69):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 69):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 70):
Prove: true.
Prover Qed returns Valid (23ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 70):
Let x_2 = 1 + z.
Let x_3 = 2 * x.
Let x_4 = z % 2.
Let x_5 = x_1 * (1 + x_1).
Let x_6 = x_5 / 2.
Let x_7 = (if (flag_0 = 0) then 0 else x_1) + x_6.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(tmp_1_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(z) /\ is_sint32(x_2) /\ is_sint32(z - x) /\
      is_sint32(x_6) /\ is_sint32(x_7).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: 0 <= x_7.
  (* Invariant *)
  Have: (-1) <= x_5.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: z <= x_3.
  (* Invariant *)
  Have: (x_3 = z) \/ (x_2 = x_3).
  (* Invariant *)
  Have: x_3 <= x_2.
  (* Invariant *)
  Have: ((x_4 = 0) -> (x_3 <= z)).
  (* Invariant *)
  Have: ((x_4 = 0) -> (x_3 = z)).
  (* Invariant *)
  Have: (((x_2 % 2) = 1) -> (x_3 = z)).
  (* Invariant *)
  Have: 0 <= z.
}
Prove: x <= z.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (33021)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (5ms) (49)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 71):
Prove: true.
Prover Qed returns Valid (24ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 71):
Let x_1 = 1 + z.
Let x_2 = 2 * y.
Let x_3 = z % 2.
Let x_4 = 1 + x_2.
Let x_5 = x * (1 + x).
Let x_6 = x_5 / 2.
Let x_7 = (if (flag_0 = 0) then 0 else x) + x_6.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(tmp_1_0) /\ is_sint32(x) /\
      is_sint32(y) /\ is_sint32(z) /\ is_sint32(x_1) /\ is_sint32(z - y) /\
      is_sint32(x_6) /\ is_sint32(x_7).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= x_7.
  (* Invariant *)
  Have: (-1) <= x_5.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: x_2 <= z.
  (* Invariant *)
  Have: (x_2 = z) \/ (x_4 = z).
  (* Invariant *)
  Have: z <= x_4.
  (* Invariant *)
  Have: ((x_3 = 0) -> (z <= x_2)).
  (* Invariant *)
  Have: ((x_3 = 0) -> (x_2 = z)).
  (* Invariant *)
  Have: (((x_1 % 2) = 1) -> (x_2 = z)).
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: 0 <= y.
}
Prove: y <= z.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (33140)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (5ms) (52)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0002/045_merged.c, line 72):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0002/045_merged.c, line 72):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Loop assigns (file out/045_0002/045_merged.c, line 32) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/045_0002/045_merged.c, line 32) (2/2):
Call Result at line 37
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Loop assigns (file out/045_0002/045_merged.c, line 73) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/045_0002/045_merged.c, line 73) (2/2):
Call Result at line 76
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/045_0002/045_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/045_0002/045_merged.c:3: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/045_0002/045_merged.c:4: Warning: 
  No 'assigns' specification for function 'unknown3'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/045_0002/045_merged.c:7: Warning: 
  No 'assigns' specification for function 'foo045'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/044_0002/044_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 39 goals scheduled
[wp] [Timeout] typed_foo044_loop_invariant_2_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_foo044_loop_invariant_11_preserved (Qed 3ms) (Z3)
[wp] Proved goals:   37 / 39
  Qed:              35
  Alt-Ergo 2.5.4:    2 (4ms-8ms)
  Timeout:           2
------------------------------------------------------------
  Function foo044
------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0002/044_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0002/044_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0002/044_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0002/044_merged.c, line 19):
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(k) /\ is_sint32(n).
  If flag_0 = 1
  Then { Have: n = 1. }
  Else { Have: n = 2. }
  (* Invariant *)
  Have: (n = 1) \/ (n = 2).
}
Prove: (-1) <= k.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0002/044_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (8ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0002/044_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0002/044_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0002/044_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0002/044_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0002/044_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0002/044_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0002/044_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.86ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0002/044_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0002/044_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0002/044_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0002/044_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0002/044_merged.c, line 26):
Let x = 2 * i_1.
Let x_1 = 1 + i_1.
Let x_2 = 2 + x.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i_1) /\ is_sint32(k) /\
      is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_2).
  (* Residual *)
  When: flag_0 != 1.
  (* Goal *)
  When: (0 <= i) /\ (i <= x_1).
  (* Invariant *)
  Have: (-1) <= k.
  (* Invariant *)
  Have: i_1 <= (1 + k).
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= i_1) -> ((0 <= i_2) -> (i_2 <= x))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: i_1 <= k.
}
Prove: i <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:10ms) (20ms) (31699)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (4ms) (22)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0002/044_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0002/044_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (11ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0002/044_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0002/044_merged.c, line 28):
Assume {
  Type: is_sint32(j) /\ is_sint32(k) /\ is_sint32(1 + j).
  (* Goal *)
  When: (0 <= i) /\ (i <= j).
  (* Invariant *)
  Have: (-1) <= k.
  (* Invariant *)
  Have: j <= (1 + k).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < j) -> ((1 + i_1) = j))).
  (* Invariant *)
  Have: 0 <= j.
  (* Then *)
  Have: j <= k.
}
Prove: j = i.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0002/044_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0002/044_merged.c, line 29):
Let x = 1 + i.
Let x_1 = n * x.
Let x_2 = 2 * i.
Let x_3 = 2 + x_2.
Let x_4 = x_1 - n.
Let x_5 = n + x_2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(k) /\ is_sint32(n) /\
      is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_4).
  If flag_0 = 1
  Then { Have: n = 1. }
  Else { Have: n = 2. }
  (* Invariant *)
  Have: (n = 1) \/ (n = 2).
  (* Invariant *)
  Have: (-1) <= k.
  (* Invariant *)
  Have: ((flag_0 = 1) -> (n = 1)).
  (* Invariant *)
  Have: ((flag_0 != 1) -> (n = 2)).
  (* Invariant *)
  Have: (0 % n) = 0.
  (* Invariant *)
  Have: i <= (1 + k).
  (* Invariant *)
  Have: x_1 = (n + (i * n)).
  (* Invariant *)
  Have: ((flag_0 = 2) -> (x_1 = x_5)).
  (* Invariant *)
  Have: ((flag_0 != 1) -> (x_1 = x_5)).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= i) -> ((0 <= i_1) -> ((n + i_1) <= x_1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= i) -> ((0 <= i_1) -> ((x_4 % n) = 0))).
  (* Invariant *)
  Have: forall i_1 : Z. ((flag_0 = 1) -> ((0 <= i_1) -> ((i_1 < i) ->
      (x_1 = (1 + n + i_1))))).
  (* Invariant *)
  Have: n <= x_1.
  (* Invariant *)
  Have: ((flag_0 = 1) -> (x_1 = (i + n))).
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i <= k.
  (* Invariant *)
  Have: ((flag_0 = 2) -> (x_1 = x_3)).
  (* Invariant *)
  Have: ((flag_0 != 1) -> (x_1 = x_3)).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= x) -> (i_1 <= x_1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= x) -> ((x_1 % n) = 0))).
  (* Invariant *)
  Have: forall i_1 : Z. ((flag_0 = 1) -> ((i_1 <= i) -> ((0 <= i_1) ->
      (x_1 = (1 + i_1))))).
}
Prove: 0 <= x_1.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:17ms) (8ms) (111)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0002/044_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0002/044_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0002/044_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0002/044_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0002/044_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0002/044_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0002/044_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (0.97ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0002/044_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0002/044_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0002/044_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0002/044_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (0.85ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0002/044_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (8ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0002/044_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/044_0002/044_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/044_0002/044_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Loop assigns (file out/044_0002/044_merged.c, line 37):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/044_0002/044_merged.c:3: Warning: 
  No 'assigns' specification for function 'foo044'.
  Callers assumptions might be imprecise.

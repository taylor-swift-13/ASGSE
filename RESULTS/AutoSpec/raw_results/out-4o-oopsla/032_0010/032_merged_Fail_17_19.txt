[kernel] Parsing out/032_0010/032_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 19 goals scheduled
[wp] [Timeout] typed_foo032_loop_invariant_2_preserved (Qed 22ms) (Z3)
[wp] [Timeout] typed_foo032_loop_invariant_9_established (Qed 1ms) (Z3)
[wp] Proved goals:   17 / 19
  Qed:              12
  Alt-Ergo 2.5.4:    5 (5ms-14ms-20ms)
  Timeout:           2
------------------------------------------------------------
  Function foo032
------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0010/032_merged.c, line 8):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0010/032_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0010/032_merged.c, line 9):
Let x = n % 2.
Let x_1 = n / 2.
Let x_2 = 1 + n.
Assume {
  Type: is_sint32(b) /\ is_sint32(b_1) /\ is_sint32(i) /\ is_sint32(i_1) /\
      is_sint32(j) /\ is_sint32(j_1) /\ is_sint32(j_2) /\ is_sint32(n) /\
      is_sint32(x_2) /\ is_sint32(j_2 + (2 * x_1) - n).
  (* Invariant *)
  Have: b != 0.
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: ((x = 1) -> (b_1 != b)).
  (* Invariant *)
  Have: ((x = 0) -> (b_1 = b)).
  (* Invariant *)
  Have: (((x = 0) -> (x_1 = n))) /\ (((x = 1) -> (x_1 = x_2))).
  (* Invariant *)
  Have: ((b_1 = 0) /\ (x = 1)) \/ ((b_1 != 0) /\ (x = 0)).
  (* Then *)
  Have: n <= 199.
  If b_1 != 0
  Then {
    Let x_3 = 2 * x_1.
    Have: (j_2 = j) /\ ((j + x_3) = (i_1 + n)).
    Have: (1 + j + x_3) = (i + n).
  }
  Else { Have: (j_2 = j_1) /\ ((j_2 + x_3) = (i + n)). Have: (1 + j_2) = j. }
}
Prove: (j + (2 * (x_2 / 2))) = (1 + i + n).
Prover Z3 4.8.12 returns Timeout (Qed:22ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:22ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0010/032_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0010/032_merged.c, line 10):
Let x = n % 2.
Let x_1 = n / 2.
Let x_2 = 1 + n.
Let x_3 = -n.
Assume {
  Type: is_sint32(b) /\ is_sint32(b_1) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(j_1) /\ is_sint32(j_2) /\ is_sint32(n) /\ is_sint32(x_2) /\
      is_sint32(j_2 + (2 * x_1) - n) /\
      is_sint32(j + (2 * (x_2 / 2)) - 1 - n).
  (* Invariant *)
  Have: b != 0.
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: ((x = 1) -> (b_1 != b)).
  (* Invariant *)
  Have: ((x = 0) -> (b_1 = b)).
  (* Invariant *)
  Have: (((x = 0) -> (x_1 = n))) /\ (((x = 1) -> (x_1 = x_2))).
  (* Invariant *)
  Have: ((b_1 = 0) /\ (x = 1)) \/ ((b_1 != 0) /\ (x = 0)).
  (* Then *)
  Have: n <= 199.
  If b_1 != 0
  Then {
    Let x_4 = x_2 / 2.
    Let x_5 = j + (2 * x_4).
    Have: (x_4 = (1 + x_1)) /\ (x_5 = (2 + i + n)) /\
        (x_5 = (2 + j_2 + (2 * x_1))).
  }
  Else { Have: (j_2 = j_1) /\ ((1 + j_1) = j) /\ (x_4 = x_1). }
}
Prove: (-1) <= n.
Prover Z3 4.8.12 returns Valid (Qed:23ms) (10ms) (34334)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:23ms) (5ms) (30)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0010/032_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0010/032_merged.c, line 11):
Let x = 1 + n.
Let x_1 = n / 2.
Assume {
  Type: is_sint32(b) /\ is_sint32(n) /\ is_sint32(x).
  (* Goal *)
  When: (x % 2) = 1.
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: b != 0.
  (* Invariant *)
  Have: x_1 = x.
  (* Invariant *)
  Have: (n % 2) = 1.
  (* Then *)
  Have: n <= 199.
  Have: (x / 2) = x_1.
  (* Invariant *)
  Have: (-1) <= n.
}
Prove: b != 1.
Prover Z3 4.8.12 returns Valid (Qed:20ms) (20ms) (31746)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:20ms) (13ms) (185)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0010/032_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0010/032_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0010/032_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0010/032_merged.c, line 13):
Let x = n % 2.
Let x_1 = n / 2.
Let x_2 = 1 + n.
Let x_3 = -n.
Assume {
  Type: is_sint32(b_1) /\ is_sint32(b) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(j_1) /\ is_sint32(j_2) /\ is_sint32(n) /\ is_sint32(x_2) /\
      is_sint32(j_2 + (2 * x_1) - n) /\
      is_sint32(j + (2 * (x_2 / 2)) - 1 - n).
  (* Goal *)
  When: (x_2 % 2) = 0.
  (* Invariant *)
  Have: b_1 != 0.
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: ((x = 1) -> (b != b_1)).
  (* Invariant *)
  Have: ((x = 0) -> (b = b_1)).
  (* Invariant *)
  Have: (((x = 0) -> (x_1 = n))) /\ (((x = 1) -> (x_1 = x_2))).
  (* Invariant *)
  Have: ((b = 0) /\ (x = 1)) \/ ((b != 0) /\ (x = 0)).
  (* Then *)
  Have: n <= 199.
  If b != 0
  Then {
    Let x_4 = x_2 / 2.
    Let x_5 = j + (2 * x_4).
    Have: (x_4 = (1 + x_1)) /\ (x_5 = (2 + i + n)) /\
        (x_5 = (2 + j_2 + (2 * x_1))).
  }
  Else { Have: (j_2 = j_1) /\ ((1 + j_1) = j) /\ (x_4 = x_1). }
  (* Invariant *)
  Have: (-1) <= n.
}
Prove: (if (b = 0) then 1 else 0) = b_1.
Prover Z3 4.8.12 returns Valid (Qed:21ms) (10ms) (37293)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:21ms) (12ms) (315)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0010/032_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0010/032_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0010/032_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.87ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0010/032_merged.c, line 15):
Let x = 1 + n.
Let x_1 = x % 2.
Let x_2 = n % 2.
Let x_3 = n / 2.
Let x_4 = -n.
Let x_5 = x / 2.
Assume {
  Type: is_sint32(b) /\ is_sint32(b_1) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(j_1) /\ is_sint32(j_2) /\ is_sint32(n) /\ is_sint32(x) /\
      is_sint32(j_2 + (2 * x_3) - n) /\ is_sint32(j + (2 * x_5) - 1 - n).
  (* Invariant *)
  Have: b != 0.
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: ((x_2 = 1) -> (b_1 != b)).
  (* Invariant *)
  Have: ((x_2 = 0) -> (b_1 = b)).
  (* Invariant *)
  Have: (((x_2 = 0) -> (x_3 = n))) /\ (((x_2 = 1) -> (x_3 = x))).
  (* Invariant *)
  Have: ((b_1 = 0) /\ (x_2 = 1)) \/ ((b_1 != 0) /\ (x_2 = 0)).
  (* Then *)
  Have: n <= 199.
  If b_1 != 0
  Then {
    Let x_6 = j + (2 * x_5).
    Have: (x_5 = (1 + x_3)) /\ (x_6 = (2 + i + n)) /\
        (x_6 = (2 + j_2 + (2 * x_3))).
  }
  Else { Have: (j_2 = j_1) /\ ((1 + j_1) = j) /\ (x_5 = x_3). }
  (* Invariant *)
  Have: (-1) <= n.
  (* Invariant *)
  Have: ((x_1 = 1) -> ((if (b_1 = 0) then 1 else 0) != b)).
  (* Invariant *)
  Have: ((x_1 = 0) -> ((if (b_1 = 0) then 1 else 0) = b)).
}
Prove: (((x_1 = 0) -> (x_5 = x))) /\ (((x_1 = 1) -> (x_5 = (2 + n)))).
Prover Z3 4.8.12 returns Valid (Qed:25ms) (20ms) (37936)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:25ms) (20ms) (313)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0010/032_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0010/032_merged.c, line 16):
Let x = 1 + n.
Let x_1 = x % 2.
Let x_2 = x / 2.
Let x_3 = n % 2.
Let x_4 = n / 2.
Let x_5 = -n.
Assume {
  Type: is_sint32(b_1) /\ is_sint32(b) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(j_1) /\ is_sint32(j_2) /\ is_sint32(n) /\ is_sint32(x) /\
      is_sint32(j_2 + (2 * x_4) - n) /\ is_sint32(j + (2 * x_2) - 1 - n).
  (* Invariant *)
  Have: b_1 != 0.
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: ((x_3 = 1) -> (b != b_1)).
  (* Invariant *)
  Have: ((x_3 = 0) -> (b = b_1)).
  (* Invariant *)
  Have: (((x_3 = 0) -> (x_4 = n))) /\ (((x_3 = 1) -> (x_4 = x))).
  (* Invariant *)
  Have: ((b = 0) /\ (x_3 = 1)) \/ ((b != 0) /\ (x_3 = 0)).
  (* Then *)
  Have: n <= 199.
  If b != 0
  Then {
    Let x_6 = j + (2 * x_2).
    Have: (x_2 = (1 + x_4)) /\ (x_6 = (2 + i + n)) /\
        (x_6 = (2 + j_2 + (2 * x_4))).
  }
  Else { Have: (j_2 = j_1) /\ ((1 + j_1) = j) /\ (x_2 = x_4). }
  (* Invariant *)
  Have: (-1) <= n.
  (* Invariant *)
  Have: ((x_1 = 1) -> ((if (b = 0) then 1 else 0) != b_1)).
  (* Invariant *)
  Have: ((x_1 = 0) -> ((if (b = 0) then 1 else 0) = b_1)).
  (* Invariant *)
  Have: (((x_1 = 0) -> (x_2 = x))) /\ (((x_1 = 1) -> (x_2 = (2 + n)))).
}
Prove: ((b = 0) /\ (x_1 = 0)) \/ ((b != 0) /\ (x_1 = 1)).
Prover Z3 4.8.12 returns Valid (Qed:24ms) (20ms) (38097)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:24ms) (20ms) (318)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0010/032_merged.c, line 16):
Assume { Type: is_sint32(b). }
Prove: b != 0.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/032_0010/032_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/032_0010/032_merged.c:3: Warning: 
  No 'assigns' specification for function 'foo032'.
  Callers assumptions might be imprecise.

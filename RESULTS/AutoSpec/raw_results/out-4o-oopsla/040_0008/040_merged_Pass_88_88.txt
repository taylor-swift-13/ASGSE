[kernel] Parsing out/040_0008/040_merged.c (with preprocessing)
[kernel:typing:no-proto] out/040_0008/040_merged.c:53: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/040_0008/040_merged.c:76: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/040_0008/040_merged.c:7: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[kernel:annot:missing-spec] out/040_0008/040_merged.c:7: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 88 goals scheduled
[wp] Proved goals:   88 / 88
  Qed:              79
  Alt-Ergo 2.5.4:    7 (5ms-14ms-19ms)
  Z3 4.8.12:         2
------------------------------------------------------------
  Function foo040
------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 18):
Let x = 2 + i.
Let x_1 = j % 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(j_1) /\ is_sint32(j_2) /\ is_sint32(j_3) /\
      is_sint32(tmp_0) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: (i = 0) \/ (2 <= j_3).
  (* Invariant *)
  Have: i < j_3.
  (* Invariant *)
  Have: (j_3 % 2) = 1.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_3 : Z. let x_2 = (i + (2 * i_3)) % 2 in ((0 <= i_3) ->
      ((x_2 = 0) \/ (x_2 = 1))).
  (* Invariant *)
  Have: (0 < j_3) /\ (0 <= i).
  (* Invariant *)
  Have: 0 <= i_2.
  (* Then *)
  Have: tmp_0 != 0.
  If (x % 2) = 0
  Then { Have: j_3 = j_1. Have: (2 + j_1) = j. }
  Else { Have: j_3 = j_2. Have: (1 + j_2) = j. }
  (* Invariant *)
  Have: (i = (-2)) \/ (2 <= j).
}
Prove: (x_1 = 0) \/ (x_1 = 1).
Prover Z3 4.8.12 returns Valid (Qed:12ms) (10ms) (36595)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:12ms) (17ms) (325)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 19):
Let x = 1 + j.
Let x_1 = x % 2.
Let x_2 = 2 + i.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_2).
  (* Residual *)
  When: (x_2 % 2) != 0.
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: (i = 0) \/ (2 <= j).
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_3 : Z. let x_3 = (i + (2 * i_3)) % 2 in ((0 <= i_3) ->
      ((x_3 = 0) \/ (x_3 = 1))).
  (* Invariant *)
  Have: (0 < j) /\ (0 <= i).
  (* Invariant *)
  Have: 0 <= i_2.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_1 = 1).
}
Prove: x_2 <= j.
Prover Z3 4.8.12 returns Valid (Qed:11ms) (10ms) (36202)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (15ms) (215)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 20):
Let x = 2 + i.
Let x_1 = 1 + j.
Let x_2 = x_1 % 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x).
  (* Goal *)
  When: (x % 2) = 1.
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: (i = 0) \/ (2 <= j).
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_3 : Z. let x_3 = (i + (2 * i_3)) % 2 in ((0 <= i_3) ->
      ((x_3 = 0) \/ (x_3 = 1))).
  (* Invariant *)
  Have: (0 < j) /\ (0 <= i).
  (* Invariant *)
  Have: 0 <= i_2.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x_2 = 0) \/ (x_2 = 1).
  (* Invariant *)
  Have: x <= j.
}
Prove: x_2 = 0.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (36566)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (16ms) (210)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 21):
Let x = 2 + j.
Let x_1 = x % 2.
Let x_2 = 2 + i.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x_2) /\ is_sint32(x).
  (* Goal *)
  When: (x_2 % 2) = 0.
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: (i = 0) \/ (2 <= j).
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_3 : Z. let x_3 = (i + (2 * i_3)) % 2 in ((0 <= i_3) ->
      ((x_3 = 0) \/ (x_3 = 1))).
  (* Invariant *)
  Have: (0 < j) /\ (0 <= i).
  (* Invariant *)
  Have: 0 <= i_2.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_1 = 1).
}
Prove: x_1 = 1.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (69784)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (13ms) (207)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 23):
Let x = 2 + i.
Let x_1 = x % 2.
Let x_2 = 1 + j.
Let x_3 = x_2 % 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x_2) /\ is_sint32(x).
  (* Residual *)
  When: x_1 != 0.
  (* Goal *)
  When: 0 < flag_0.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: (i = 0) \/ (2 <= j).
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_3 : Z. let x_4 = (i + (2 * i_3)) % 2 in ((0 <= i_3) ->
      ((x_4 = 0) \/ (x_4 = 1))).
  (* Invariant *)
  Have: (0 < j) /\ (0 <= i).
  (* Invariant *)
  Have: 0 <= i_2.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x_3 = 0) \/ (x_3 = 1).
  (* Invariant *)
  Have: x <= j.
  (* Invariant *)
  Have: ((x_1 = 1) -> (x_3 = 0)).
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (41106)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (12ms) (246)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 26):
Let x = 2 + i.
Let x_1 = 2 + j.
Let x_2 = (2 + i + (2 * i_1)) % 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Goal *)
  When: 0 <= i_1.
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: 0 <= i_2.
  (* Invariant *)
  Have: (i = 0) \/ (2 <= j).
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_4 : Z. let x_3 = (i + (2 * i_4)) % 2 in ((0 <= i_4) ->
      ((x_3 = 0) \/ (x_3 = 1))).
  (* Invariant *)
  Have: (0 < j) /\ (0 <= i).
  (* Invariant *)
  Have: 0 <= i_3.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x_1 % 2) = 1.
  (* Invariant *)
  Have: (x % 2) = 0.
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((-2) <= i)).
}
Prove: (x_2 = 0) \/ (x_2 = 1).
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (38492)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (19ms) (285)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (8ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 30):
Let x = 2 + i.
Let x_1 = 2 + j.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: (i = 0) \/ (2 <= j).
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_3 : Z. let x_2 = (i + (2 * i_3)) % 2 in ((0 <= i_3) ->
      ((x_2 = 0) \/ (x_2 = 1))).
  (* Invariant *)
  Have: (0 < j) /\ (0 <= i).
  (* Invariant *)
  Have: 0 <= i_2.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x_1 % 2) = 1.
  (* Invariant *)
  Have: (x % 2) = 0.
  (* Invariant *)
  Have: forall i_3 : Z. let x_2 = (2 + i + (2 * i_3)) % 2 in ((0 <= i_3) ->
      ((x_2 = 0) \/ (x_2 = 1))).
  (* Invariant *)
  Have: (-2) <= i.
}
Prove: exists i_3 : Z. 0 <= i_3.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (26915)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 30):
Assume { Type: is_sint32(flag_0). (* Pre-condition *) Have: 0 < flag_0. }
Prove: exists i : Z. 0 <= i.
Prover Z3 4.8.12 returns Valid (Qed:0.86ms) (10ms) (23753)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 32):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (0.73ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 33):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 37):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 40):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 45):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 46):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 65):
Let x = 1 + a.
Let x_1 = -i.
Let x_2 = j - i.
Let x_3 = a * x_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(j + x_3 - i).
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: (i = 0) \/ (2 <= j).
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_3 : Z. let x_4 = (i + (2 * i_3)) % 2 in ((0 <= i_3) ->
      ((x_4 = 0) \/ (x_4 = 1))).
  (* Invariant *)
  Have: (0 < j) /\ (0 <= i).
  (* Invariant *)
  Have: 0 <= i_2.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: tmp_0_0 != 0.
}
Prove: (j + x_3) = (i + (x * x_2)).
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (10057)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (5ms) (37)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 65):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 67):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 67):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 68):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 68):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 69):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 69):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 70):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 70):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 71):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 71):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0008/040_merged.c, line 72):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0008/040_merged.c, line 72):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/040_0008/040_merged.c, line 50) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/040_0008/040_merged.c, line 50) (2/2):
Call Result at line 53
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Loop assigns (file out/040_0008/040_merged.c, line 73) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/040_0008/040_merged.c, line 73) (2/2):
Call Result at line 76
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/040_0008/040_merged.c:1: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/040_0008/040_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/040_0008/040_merged.c:7: Warning: 
  No 'assigns' specification for function 'foo040'.
  Callers assumptions might be imprecise.

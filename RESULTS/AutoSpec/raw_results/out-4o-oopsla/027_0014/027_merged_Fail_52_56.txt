[kernel] Parsing out/027_0014/027_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 56 goals scheduled
[wp] [Timeout] typed_foo027_loop_invariant_3_established (Qed 0.83ms) (Z3)
[wp] [Timeout] typed_foo027_loop_invariant_8_preserved (Qed 10ms) (Z3)
[wp] [Timeout] typed_foo027_loop_invariant_12_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_foo027_loop_invariant_20_established (Qed 4ms) (Z3)
[wp] Proved goals:   52 / 56
  Qed:              45
  Alt-Ergo 2.5.4:    7
  Timeout:           4
------------------------------------------------------------
  Function foo027
------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 13):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (i < i_1) /\ (l <= i).
  (* Pre-condition *)
  Have: 0 < l.
}
Prove: i < n.
Prover Z3 4.8.12 returns Timeout (Qed:0.83ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.83ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 14):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(i_3) /\ is_sint32(k) /\
      is_sint32(l) /\ is_sint32(n) /\ is_sint32(1 + k).
  (* Goal *)
  When: (i < i_1) /\ (l <= i).
  (* Pre-condition *)
  Have: 0 < l.
  (* Invariant *)
  Have: forall i_4 : Z. ((i_4 < i_3) -> ((l <= i_4) -> (i_4 < n))).
  (* Invariant *)
  Have: 0 <= i_3.
  (* Invariant *)
  Have: forall i_4 : Z. ((i_4 < i_2) -> ((l <= i_4) -> (i_4 < n))).
  (* Invariant *)
  Have: forall i_4 : Z. ((0 < i_4) -> ((i_4 < k) ->
      ((l <= i_4) /\ (i_4 < n)))).
  (* Invariant *)
  Have: 0 <= i_2.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l < n.
  (* Invariant *)
  Have: l <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Else *)
  Have: n <= i_1.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (34070)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (44)

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 14):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (i < i_1) /\ (l <= i).
  (* Pre-condition *)
  Have: 0 < l.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 < i_1) -> ((l <= i_2) -> (i_2 < n))).
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:1ms) (10ms) (30606)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (4ms) (20)

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 18):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(i_3) /\ is_sint32(k) /\
      is_sint32(l) /\ is_sint32(n) /\ is_sint32(1 + k).
  (* Goal *)
  When: (0 < i) /\ (i <= k).
  (* Pre-condition *)
  Have: 0 < l.
  (* Invariant *)
  Have: forall i_4 : Z. ((i_4 < i_3) -> ((l <= i_4) -> (i_4 < n))).
  (* Invariant *)
  Have: 0 <= i_3.
  (* Invariant *)
  Have: forall i_4 : Z. ((i_4 < i_2) -> ((l <= i_4) -> (i_4 < n))).
  (* Invariant *)
  Have: forall i_4 : Z. ((0 < i_4) -> ((i_4 < k) ->
      ((l <= i_4) /\ (i_4 < n)))).
  (* Invariant *)
  Have: 0 <= i_2.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l < n.
  (* Invariant *)
  Have: l <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Else *)
  Have: n <= i_1.
}
Prove: (i < i_1) /\ (l <= i).
Prover Z3 4.8.12 returns Timeout (Qed:10ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:10ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 19):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(i_3) /\ is_sint32(k) /\
      is_sint32(l) /\ is_sint32(n) /\ is_sint32(1 + k).
  (* Goal *)
  When: (0 < i) /\ (i <= k).
  (* Pre-condition *)
  Have: 0 < l.
  (* Invariant *)
  Have: forall i_4 : Z. ((i_4 < i_3) -> ((l <= i_4) -> (i_4 < n))).
  (* Invariant *)
  Have: 0 <= i_3.
  (* Invariant *)
  Have: forall i_4 : Z. ((i_4 < i_2) -> ((l <= i_4) -> (i_4 < n))).
  (* Invariant *)
  Have: forall i_4 : Z. ((0 < i_4) -> ((i_4 < k) ->
      ((l <= i_4) /\ (i_4 < n)))).
  (* Invariant *)
  Have: 0 <= i_2.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l < n.
  (* Invariant *)
  Have: l <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Else *)
  Have: n <= i_1.
  (* Invariant *)
  Have: forall i_4 : Z. ((0 < i_4) -> ((i_4 <= k) ->
      ((i_4 < i_1) /\ (l <= i_4)))).
}
Prove: (i < i_1) /\ (l <= i).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (252ms) (4119)

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 20):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(i_3) /\ is_sint32(k) /\
      is_sint32(l) /\ is_sint32(n) /\ is_sint32(1 + k).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Invariant *)
  Have: forall i_4 : Z. ((i_4 < i_3) -> ((l <= i_4) -> (i_4 < n))).
  (* Invariant *)
  Have: 0 <= i_3.
  (* Invariant *)
  Have: forall i_4 : Z. ((i_4 < i_2) -> ((l <= i_4) -> (i_4 < n))).
  (* Invariant *)
  Have: forall i_4 : Z. ((0 < i_4) -> ((i_4 < k) ->
      ((l <= i_4) /\ (i_4 < n)))).
  (* Invariant *)
  Have: 0 <= i_2.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l < n.
  (* Invariant *)
  Have: l <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Else *)
  Have: n <= i_1.
  (* Invariant *)
  Have: forall i_4 : Z. ((0 < i_4) -> ((i_4 <= k) ->
      ((i_4 < i_1) /\ (l <= i_4)))).
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (34914)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (6ms) (44)

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 20):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 < i_1) -> ((l <= i_2) -> (i_2 < n))).
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:2ms) (10ms) (30606)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (4ms) (20)

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 22):
Assume {
  Type: is_sint32(i) /\ is_sint32(l) /\ is_sint32(n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 < i) -> ((l <= i_1) -> (i_1 < n))).
}
Prove: 0 <= i.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 35):
Let x = 1 + i.
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(k) /\
      is_sint32(l) /\ is_sint32(n) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < l.
  (* Invariant *)
  Have: forall i_3 : Z. ((i_3 < i_2) -> ((l <= i_3) -> (i_3 < n))).
  (* Invariant *)
  Have: 0 <= i_2.
  (* Invariant *)
  Have: forall i_3 : Z. ((i_3 < i_1) -> ((l <= i_3) -> (i_3 < n))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 < i_3) -> ((i_3 < k) ->
      ((l <= i_3) /\ (i_3 < n)))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l < n.
  (* Invariant *)
  Have: l <= i.
  (* Invariant *)
  Have: (l = i) \/
      (forall i_3 : Z. ((i_3 < i) -> ((l <= i_3) -> (i_3 < n)))).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
}
Prove: l <= x.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (20ms) (34491)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (5ms) (16)

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 36):
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\
      is_sint32(n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 < i_1) -> ((l <= i_2) -> (i_2 < n))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 < i) -> ((l <= i_2) -> (i_2 < n))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < k) ->
      ((l <= i_2) /\ (i_2 < n)))).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
}
Prove: l < n.
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 38):
Let x = 1 + i.
Assume {
  Type: is_sint32(i) /\ is_sint32(i_2) /\ is_sint32(i_3) /\ is_sint32(k) /\
      is_sint32(l) /\ is_sint32(n) /\ is_sint32(x).
  (* Goal *)
  When: (l <= i_1) /\ (i_1 <= i).
  (* Pre-condition *)
  Have: 0 < l.
  (* Invariant *)
  Have: forall i_4 : Z. ((i_4 < i_3) -> ((l <= i_4) -> (i_4 < n))).
  (* Invariant *)
  Have: 0 <= i_3.
  (* Invariant *)
  Have: forall i_4 : Z. ((i_4 < i_2) -> ((l <= i_4) -> (i_4 < n))).
  (* Invariant *)
  Have: forall i_4 : Z. ((0 < i_4) -> ((i_4 < k) ->
      ((l <= i_4) /\ (i_4 < n)))).
  (* Invariant *)
  Have: 0 <= i_2.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l < n.
  (* Invariant *)
  Have: l <= i.
  (* Invariant *)
  Have: (l = i) \/
      (forall i_4 : Z. ((i_4 < i) -> ((l <= i_4) -> (i_4 < n)))).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
  (* Invariant *)
  Have: l <= x.
}
Prove: (x = l) \/ (i_1 < n).
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (35123)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (7ms) (26)

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/027_0014/027_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/027_0014/027_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/027_0014/027_merged.c, line 29):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/027_0014/027_merged.c, line 44):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/027_0014/027_merged.c:5: Warning: 
  No 'assigns' specification for function 'foo027'.
  Callers assumptions might be imprecise.

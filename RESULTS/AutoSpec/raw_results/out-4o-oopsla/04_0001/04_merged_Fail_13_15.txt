[kernel] Parsing out/04_0001/04_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 15 goals scheduled
[wp] [Timeout] typed_foo04_loop_invariant_4_established (Qed 0.60ms) (Z3)
[wp] [Timeout] typed_foo04_loop_invariant_5_established (Qed 0.80ms) (Z3)
[wp] Proved goals:   13 / 15
  Qed:               7
  Alt-Ergo 2.5.4:    5
  Z3 4.8.12:         1 (10ms)
  Timeout:           2
------------------------------------------------------------
  Function foo04
------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 8):
Let x_1 = (y * (y - 1)) / 2.
Let x_2 = y_1 * (y_1 - 1).
Let x_3 = 1 + y.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_3) /\
      is_sint32(x + y).
  (* Invariant *)
  Have: (-1) <= x_2.
  (* Invariant *)
  Have: (-49) <= (y_1 * y_1).
  (* Invariant *)
  Have: (-99) <= x_2.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (-49) <= y_1.
  (* Invariant *)
  Have: (50 + x) <= x_1.
  (* Invariant *)
  Have: x < (y * y).
  (* Invariant *)
  Have: x < x_1.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: (-50) <= x.
  (* Invariant *)
  Have: (-49) <= y.
  (* Then *)
  Have: x < 0.
}
Prove: (50 + x + y) <= ((y * x_3) / 2).
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (39512)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 8):
Assume { Type: is_sint32(y). }
Prove: (-1) <= (y * (y - 1)).
Prover Z3 4.8.12 returns Valid (10ms) (29638)
Prover Alt-Ergo 2.5.4 returns Valid (5ms) (22)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 9):
Let x_1 = 1 + y.
Let x_2 = (y * (y - 1)) / 2.
Let x_3 = y_1 * (y_1 - 1).
Let x_4 = x + y.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_1) /\
      is_sint32(x_4).
  (* Invariant *)
  Have: (-1) <= x_3.
  (* Invariant *)
  Have: (-49) <= (y_1 * y_1).
  (* Invariant *)
  Have: (-99) <= x_3.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (-49) <= y_1.
  (* Invariant *)
  Have: (50 + x) <= x_2.
  (* Invariant *)
  Have: x < (y * y).
  (* Invariant *)
  Have: x < x_2.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: (-50) <= x.
  (* Invariant *)
  Have: (-49) <= y.
  (* Then *)
  Have: x < 0.
  (* Invariant *)
  Have: (50 + x + y) <= ((y * x_1) / 2).
}
Prove: x_4 < (x_1 * x_1).
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (32464)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (31)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 9):
Assume { Type: is_sint32(y). (* Invariant *) Have: (-1) <= (y * (y - 1)). }
Prove: (-49) <= (y * y).
Prover Alt-Ergo 2.5.4 returns Valid (12)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 10):
Let x_1 = x + y.
Let x_2 = 1 + y.
Let x_3 = (y * x_2) / 2.
Let x_4 = (y * (y - 1)) / 2.
Let x_5 = y_1 * (y_1 - 1).
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_2) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: (-1) <= x_5.
  (* Invariant *)
  Have: (-49) <= (y_1 * y_1).
  (* Invariant *)
  Have: (-99) <= x_5.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (-49) <= y_1.
  (* Invariant *)
  Have: (50 + x) <= x_4.
  (* Invariant *)
  Have: x < (y * y).
  (* Invariant *)
  Have: x < x_4.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: (-50) <= x.
  (* Invariant *)
  Have: (-49) <= y.
  (* Then *)
  Have: x < 0.
  (* Invariant *)
  Have: (50 + x + y) <= x_3.
  (* Invariant *)
  Have: x_1 < (x_2 * x_2).
}
Prove: x_1 < x_3.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (20ms) (32531)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (4ms) (27)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 11):
Let x = y * (y - 1).
Assume {
  Type: is_sint32(y).
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: (-49) <= (y * y).
  (* Invariant *)
  Have: (-99) <= x.
}
Prove: 0 <= y.
Prover Z3 4.8.12 returns Timeout (Qed:0.60ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.60ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 12):
Let x = y * (y - 1).
Assume {
  Type: is_sint32(y).
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: (-49) <= (y * y).
  (* Invariant *)
  Have: (-99) <= x.
  (* Invariant *)
  Have: 0 <= y.
}
Prove: 0 < y.
Prover Z3 4.8.12 returns Timeout (Qed:0.80ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.80ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 13):
Let x_1 = x + y.
Let x_2 = 1 + y.
Let x_3 = (y * x_2) / 2.
Let x_4 = (y * (y - 1)) / 2.
Let x_5 = y_1 * (y_1 - 1).
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_2) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: (-1) <= x_5.
  (* Invariant *)
  Have: (-49) <= (y_1 * y_1).
  (* Invariant *)
  Have: (-99) <= x_5.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (-49) <= y_1.
  (* Invariant *)
  Have: (50 + x) <= x_4.
  (* Invariant *)
  Have: x < (y * y).
  (* Invariant *)
  Have: x < x_4.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: (-50) <= x.
  (* Invariant *)
  Have: (-49) <= y.
  (* Then *)
  Have: x < 0.
  (* Invariant *)
  Have: (50 + x + y) <= x_3.
  (* Invariant *)
  Have: x_1 < (x_2 * x_2).
  (* Invariant *)
  Have: x_1 < x_3.
}
Prove: (-50) <= x_1.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (8ms) (35)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Loop assigns (file out/04_0001/04_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/04_0001/04_merged.c:2: Warning: 
  No 'assigns' specification for function 'foo04'.
  Callers assumptions might be imprecise.

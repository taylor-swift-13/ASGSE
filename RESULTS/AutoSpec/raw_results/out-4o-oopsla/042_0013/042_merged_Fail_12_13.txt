[kernel] Parsing out/042_0013/042_merged.c (with preprocessing)
[kernel:typing:no-proto] out/042_0013/042_merged.c:24: Warning: 
  Calling function unknown that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/042_0013/042_merged.c:3: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 13 goals scheduled
[wp] [Timeout] typed_foo042_assert (Qed 8ms) (Z3)
[wp] Proved goals:   12 / 13
  Qed:               9
  Alt-Ergo 2.5.4:    3 (6ms-10ms-17ms)
  Timeout:           1
------------------------------------------------------------
  Function foo042
------------------------------------------------------------

Goal Preservation of Invariant (file out/042_0013/042_merged.c, line 15):
Let x_3 = a_1 % 2.
Let x_4 = a_2 % 2.
Let x_5 = a % 2.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\
      is_sint32(flag_0) /\ is_sint32(tmp_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(y) /\ is_sint32(y_1) /\
      is_sint32(y_2).
  If flag_0 != 0
  Then { Have: a_2 = 0. }
  Else { Have: a_2 = 1. }
  (* Invariant *)
  Have: (x_4 = 0) \/ (x_4 = 1).
  (* Invariant *)
  Have: (((flag_0 != 0) -> (a_2 = 2))) \/ (((flag_0 = 0) -> (a_2 = 3))).
  (* Invariant *)
  Have: (((flag_0 = 0) -> (x_4 = 0))) \/ (((flag_0 != 0) -> (x_4 = 1))).
  (* Invariant *)
  Have: (x_3 = 0) \/ (x_3 = 1).
  (* Invariant *)
  Have: 0 < y_2.
  (* Invariant *)
  Have: 0 < x_2.
  (* Invariant *)
  Have: (((flag_0 != 0) -> ((x_2 + y_2) = a_1))) \/
      (((flag_0 = 0) -> ((1 + x_2 + y_2) = a_1))).
  (* Invariant *)
  Have: (((flag_0 = 0) -> (x_3 = 0))) \/ (((flag_0 != 0) -> (x_3 = 1))).
  (* Then *)
  Have: tmp_0 != 0.
  If flag_0 != 0
  Then { Have: (x_2 = x_1) /\ (y_2 = y). Have: (x_1 + y) = a. }
  Else { Have: (x_2 = x) /\ (y_2 = y_1). Have: (1 + x + y_1) = a. }
}
Prove: (x_5 = 0) \/ (x_5 = 1).
Prover Z3 4.8.12 returns Valid (Qed:10ms) (20ms) (34978)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (17ms) (287)

------------------------------------------------------------

Goal Establishment of Invariant (file out/042_0013/042_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/042_0013/042_merged.c, line 16):
Let x_3 = a % 2.
Let x_4 = a_1 % 2.
Let x_5 = a_2 % 2.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\
      is_sint32(flag_0) /\ is_sint32(tmp_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(y) /\ is_sint32(y_1) /\
      is_sint32(y_2) /\ is_sint32(y_3) /\ is_sint32(y_4).
  If flag_0 != 0
  Then { Have: a_2 = 0. }
  Else { Have: a_2 = 1. }
  (* Invariant *)
  Have: (x_5 = 0) \/ (x_5 = 1).
  (* Invariant *)
  Have: (((flag_0 != 0) -> (a_2 = 2))) \/ (((flag_0 = 0) -> (a_2 = 3))).
  (* Invariant *)
  Have: (((flag_0 = 0) -> (x_5 = 0))) \/ (((flag_0 != 0) -> (x_5 = 1))).
  (* Invariant *)
  Have: (x_4 = 0) \/ (x_4 = 1).
  (* Invariant *)
  Have: 0 < y_4.
  (* Invariant *)
  Have: 0 < x_2.
  (* Invariant *)
  Have: (((flag_0 != 0) -> ((x_2 + y_4) = a_1))) \/
      (((flag_0 = 0) -> ((1 + x_2 + y_4) = a_1))).
  (* Invariant *)
  Have: (((flag_0 = 0) -> (x_4 = 0))) \/ (((flag_0 != 0) -> (x_4 = 1))).
  (* Then *)
  Have: tmp_0 != 0.
  If flag_0 != 0
  Then { Have: (x_2 = x_1) /\ (y_4 = y_2). Have: (x_1 + y_2) = a. }
  Else {
    Have: (x_2 = x) /\ (y_4 = y_3).
    Have: (1 + x + y_3) = a.
    Have: (1 + y_3) = y_2.
  }
  If x_3 = 1
  Then { Have: y_2 = y_1. Have: (1 + y_1) = y. }
  Else { Have: y_2 = y. }
  (* Invariant *)
  Have: (x_3 = 0) \/ (x_3 = 1).
}
Prove: 0 < y.
Prover Z3 4.8.12 returns Valid (Qed:33ms) (10ms) (36149)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:33ms) (6ms) (80)

------------------------------------------------------------

Goal Establishment of Invariant (file out/042_0013/042_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.79ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/042_0013/042_merged.c, line 17):
Let x_5 = a % 2.
Let x_6 = a_1 % 2.
Let x_7 = a_2 % 2.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\
      is_sint32(flag_0) /\ is_sint32(tmp_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_3) /\ is_sint32(x_4) /\
      is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(y_2) /\ is_sint32(y_3) /\
      is_sint32(y_4).
  If flag_0 != 0
  Then { Have: a_2 = 0. }
  Else { Have: a_2 = 1. }
  (* Invariant *)
  Have: (x_7 = 0) \/ (x_7 = 1).
  (* Invariant *)
  Have: (((flag_0 != 0) -> (a_2 = 2))) \/ (((flag_0 = 0) -> (a_2 = 3))).
  (* Invariant *)
  Have: (((flag_0 = 0) -> (x_7 = 0))) \/ (((flag_0 != 0) -> (x_7 = 1))).
  (* Invariant *)
  Have: (x_6 = 0) \/ (x_6 = 1).
  (* Invariant *)
  Have: 0 < y_4.
  (* Invariant *)
  Have: 0 < x_4.
  (* Invariant *)
  Have: (((flag_0 != 0) -> ((x_4 + y_4) = a_1))) \/
      (((flag_0 = 0) -> ((1 + x_4 + y_4) = a_1))).
  (* Invariant *)
  Have: (((flag_0 = 0) -> (x_6 = 0))) \/ (((flag_0 != 0) -> (x_6 = 1))).
  (* Then *)
  Have: tmp_0 != 0.
  If flag_0 != 0
  Then {
    Have: (x_4 = x_3) /\ (y_4 = y_2).
    Have: (x_3 + y_2) = a.
    Have: (1 + x_3) = x_2.
  }
  Else {
    Have: (x_4 = x_2) /\ (y_4 = y_3).
    Have: (1 + x_2 + y_3) = a.
    Have: (1 + y_3) = y_2.
  }
  If x_5 = 1
  Then { Have: (x_2 = x) /\ (y_2 = y_1). Have: (1 + y_1) = y. }
  Else { Have: (x_2 = x_1) /\ (y_2 = y). Have: (1 + x_1) = x. }
  (* Invariant *)
  Have: (x_5 = 0) \/ (x_5 = 1).
  (* Invariant *)
  Have: 0 < y.
}
Prove: 0 < x.
Prover Z3 4.8.12 returns Valid (Qed:38ms) (10ms) (37341)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:38ms) (7ms) (94)

------------------------------------------------------------

Goal Establishment of Invariant (file out/042_0013/042_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/042_0013/042_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/042_0013/042_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/042_0013/042_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/042_0013/042_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assertion (file out/042_0013/042_merged.c, line 41):
Let x_1 = a_2 % 2.
Let x_2 = a_3 % 2.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(flag_0) /\ is_sint32(x) /\ is_sint32(y).
  If flag_0 != 0
  Then { Have: a_3 = 0. }
  Else { Have: a_3 = 1. }
  (* Invariant *)
  Have: (x_2 = 0) \/ (x_2 = 1).
  (* Invariant *)
  Have: (((flag_0 != 0) -> (a_3 = 2))) \/ (((flag_0 = 0) -> (a_3 = 3))).
  (* Invariant *)
  Have: (((flag_0 = 0) -> (x_2 = 0))) \/ (((flag_0 != 0) -> (x_2 = 1))).
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_1 = 1).
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: (((flag_0 != 0) -> ((x + y) = a_2))) \/
      (((flag_0 = 0) -> ((1 + x + y) = a_2))).
  (* Invariant *)
  Have: (((flag_0 = 0) -> (x_1 = 0))) \/ (((flag_0 != 0) -> (x_1 = 1))).
  If flag_0 != 0
  Then { Have: a_2 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_2 = a. }
}
Prove: (a % 2) = 1.
Prover Z3 4.8.12 returns Timeout (Qed:8ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:8ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/042_0013/042_merged.c, line 20) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/042_0013/042_merged.c, line 20) (2/2):
Call Result at line 24
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/042_0013/042_merged.c:1: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/042_0013/042_merged.c:3: Warning: 
  No 'assigns' specification for function 'foo042'.
  Callers assumptions might be imprecise.

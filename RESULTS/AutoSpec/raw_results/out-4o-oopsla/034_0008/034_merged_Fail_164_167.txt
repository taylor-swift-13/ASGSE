[kernel] Parsing out/034_0008/034_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] Computing [100 goals...]
[wp] 167 goals scheduled
[wp] [Timeout] typed_foo034_loop_invariant_6_preserved (Qed 15ms) (Z3)
[wp] [Timeout] typed_foo034_loop_invariant_6_established (Qed 0.55ms) (Z3)
[wp] [Timeout] typed_foo034_loop_invariant_30_preserved (Qed 21ms) (Z3)
[wp] Proved goals:  164 / 167
  Qed:             155
  Alt-Ergo 2.5.4:    7 (5ms-27ms)
  Z3 4.8.12:         2 (10ms-20ms)
  Timeout:           3
------------------------------------------------------------
  Function foo034
------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 11):
Let x = 1 + i.
Let x_1 = i / 2.
Let x_2 = 2 * x_1.
Let x_3 = i % 2.
Let x_4 = 1 + x_2.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(y) /\ is_sint32(x_1) /\
      is_sint32(x).
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_1 < (n / 2).
  (* Invariant *)
  Have: (x_2 <= i) /\ (i <= x_4).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: i < n.
  (* Invariant *)
  Have: ((i = 10) -> (x_2 = i)).
  (* Invariant *)
  Have: ((i = 10) -> (x_3 = 0)).
  (* Invariant *)
  Have: ((x_3 = 1) -> (x_4 = i)).
  (* Invariant *)
  Have: ((x_3 = 0) -> (x_2 = i)).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((i_1 <= i) -> ((0 <= i_1) ->
      ((i_1 / 2) = x_1)))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (((i_1 / 2) = x_1) \/ (((i_1 - 1) / 2) = x_1)))).
  (* Invariant *)
  Have: x_1 <= i.
  (* Invariant *)
  Have: (x_2 = i) \/ (x_4 = i).
  (* Invariant *)
  Have: i <= (x_3 + x_2).
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: 0 <= i.
  If (x % 2) = 0
  Then { Have: (1 + x_1) = y. }
  Else { Have: x_1 = y. }
}
Prove: y <= (x / 2).
Prover Z3 4.8.12 returns Valid (Qed:19ms) (10ms) (38815)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:19ms) (24ms) (387)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 16):
Let x = i / 2.
Let x_1 = 1 + i.
Let x_2 = 2 * x.
Let x_3 = i % 2.
Let x_4 = 1 + x_2.
Let x_5 = n / 2.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(1 + x).
  (* Residual *)
  When: (x_1 % 2) = 0.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: x < x_5.
  (* Invariant *)
  Have: (x_2 <= i) /\ (i <= x_4).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: i < n.
  (* Invariant *)
  Have: ((i = 10) -> (x_2 = i)).
  (* Invariant *)
  Have: ((i = 10) -> (x_3 = 0)).
  (* Invariant *)
  Have: ((x_3 = 1) -> (x_4 = i)).
  (* Invariant *)
  Have: ((x_3 = 0) -> (x_2 = i)).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((i_1 <= i) -> ((0 <= i_1) ->
      ((i_1 / 2) = x)))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (((i_1 / 2) = x) \/ (((i_1 - 1) / 2) = x)))).
  (* Invariant *)
  Have: x <= i.
  (* Invariant *)
  Have: (x_2 = i) \/ (x_4 = i).
  (* Invariant *)
  Have: i <= (x_3 + x_2).
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: x < (x_1 / 2).
}
Prove: (2 + x) <= x_5.
Prover Z3 4.8.12 returns Timeout (Qed:15ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:15ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 16):
Assume { Type: is_sint32(n). }
Prove: 2 <= n.
Prover Z3 4.8.12 returns Timeout (Qed:0.55ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.55ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 17):
Let x = n / 2.
Let x_1 = 1 + i.
Let x_2 = i / 2.
Let x_3 = 2 * x_2.
Let x_4 = i % 2.
Let x_5 = 1 + x_3.
Let x_6 = 2 * y.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(y) /\ is_sint32(x_2) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_2 < x.
  (* Invariant *)
  Have: (x_3 <= i) /\ (i <= x_5).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: i < n.
  (* Invariant *)
  Have: ((i = 10) -> (x_3 = i)).
  (* Invariant *)
  Have: ((i = 10) -> (x_4 = 0)).
  (* Invariant *)
  Have: ((x_4 = 1) -> (x_5 = i)).
  (* Invariant *)
  Have: ((x_4 = 0) -> (x_3 = i)).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((i_1 <= i) -> ((0 <= i_1) ->
      ((i_1 / 2) = x_2)))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (((i_1 / 2) = x_2) \/ (((i_1 - 1) / 2) = x_2)))).
  (* Invariant *)
  Have: x_2 <= i.
  (* Invariant *)
  Have: (x_3 = i) \/ (x_5 = i).
  (* Invariant *)
  Have: i <= (x_4 + x_3).
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: 0 <= i.
  If (x_1 % 2) = 0
  Then { Have: (1 + x_2) = y. }
  Else { Have: x_2 = y. }
  (* Invariant *)
  Have: y <= (x_1 / 2).
  (* Invariant *)
  Have: y < x.
}
Prove: (i <= x_6) /\ (x_6 <= x_1).
Prover Z3 4.8.12 returns Valid (Qed:17ms) (20ms) (39688)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 28):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 29):
Let x = 2 * y.
Let x_1 = 1 + i.
Let x_2 = n / 2.
Let x_3 = i / 2.
Let x_4 = 2 * x_3.
Let x_5 = i % 2.
Let x_6 = 1 + x_4.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(y) /\ is_sint32(x_3) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_3 < x_2.
  (* Invariant *)
  Have: (x_4 <= i) /\ (i <= x_6).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: i < n.
  (* Invariant *)
  Have: ((i = 10) -> (x_4 = i)).
  (* Invariant *)
  Have: ((i = 10) -> (x_5 = 0)).
  (* Invariant *)
  Have: ((x_5 = 1) -> (x_6 = i)).
  (* Invariant *)
  Have: ((x_5 = 0) -> (x_4 = i)).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((i_1 <= i) -> ((0 <= i_1) ->
      ((i_1 / 2) = x_3)))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (((i_1 / 2) = x_3) \/ (((i_1 - 1) / 2) = x_3)))).
  (* Invariant *)
  Have: x_3 <= i.
  (* Invariant *)
  Have: (x_4 = i) \/ (x_6 = i).
  (* Invariant *)
  Have: i <= (x_5 + x_4).
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: 0 <= i.
  If (x_1 % 2) = 0
  Then { Have: (1 + x_3) = y. }
  Else { Have: x_3 = y. }
  (* Invariant *)
  Have: y <= (x_1 / 2).
  (* Invariant *)
  Have: y < x_2.
  (* Invariant *)
  Have: (i <= x) /\ (x <= x_1).
}
Prove: (2 + i) <= n.
Prover Z3 4.8.12 returns Valid (Qed:16ms) (20ms) (38383)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:16ms) (24ms) (408)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 30):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 31):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 33):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 34):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 35):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 37):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 38):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 39):
Let x = i / 2.
Let x_1 = 2 * x.
Let x_2 = 1 + x_1.
Let x_3 = n / 2.
Let x_4 = 1 + i.
Let x_5 = i % 2.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(x_4) /\
      is_sint32(1 + x).
  (* Goal *)
  When: (x_4 % 2) = 0.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: x < x_3.
  (* Invariant *)
  Have: (x_1 <= i) /\ (i <= x_2).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: i < n.
  (* Invariant *)
  Have: ((i = 10) -> (x_1 = i)).
  (* Invariant *)
  Have: ((i = 10) -> (x_5 = 0)).
  (* Invariant *)
  Have: ((x_5 = 1) -> (x_2 = i)).
  (* Invariant *)
  Have: ((x_5 = 0) -> (x_1 = i)).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((i_1 <= i) -> ((0 <= i_1) ->
      ((i_1 / 2) = x)))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (((i_1 / 2) = x) \/ (((i_1 - 1) / 2) = x)))).
  (* Invariant *)
  Have: x <= i.
  (* Invariant *)
  Have: (x_1 = i) \/ (x_2 = i).
  (* Invariant *)
  Have: i <= (x_5 + x_1).
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: x < (x_4 / 2).
  (* Invariant *)
  Have: (2 + x) <= x_3.
  (* Invariant *)
  Have: (x_1 < i) /\ (i <= (2 + x_1)).
  (* Invariant *)
  Have: (2 + i) <= n.
  (* Invariant *)
  Have: ((i = 9) -> (x_2 = i)).
}
Prove: x_2 = i.
Prover Z3 4.8.12 returns Valid (Qed:13ms) (10ms) (35019)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (5ms) (34)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 39):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 40):
Let x = 1 + i_1.
Let x_1 = x % 2.
Let x_2 = 2 * y.
Let x_3 = n / 2.
Let x_4 = i_1 / 2.
Let x_5 = 2 * x_4.
Let x_6 = i_1 % 2.
Let x_7 = 1 + x_5.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(n) /\ is_sint32(y) /\ is_sint32(x_4) /\
      is_sint32(x).
  (* Goal *)
  When: ((i % 2) = 0) /\ (0 <= i) /\ (i <= x).
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_4 < x_3.
  (* Invariant *)
  Have: (x_5 <= i_1) /\ (i_1 <= x_7).
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: i_1 < n.
  (* Invariant *)
  Have: ((i_1 = 10) -> (x_5 = i_1)).
  (* Invariant *)
  Have: ((i_1 = 10) -> (x_6 = 0)).
  (* Invariant *)
  Have: ((x_6 = 1) -> (x_7 = i_1)).
  (* Invariant *)
  Have: ((x_6 = 0) -> (x_5 = i_1)).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((i_2 <= i_1) -> ((0 <= i_2) ->
      ((i_2 / 2) = x_4)))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      (((i_2 / 2) = x_4) \/ (((i_2 - 1) / 2) = x_4)))).
  (* Invariant *)
  Have: x_4 <= i_1.
  (* Invariant *)
  Have: (x_5 = i_1) \/ (x_7 = i_1).
  (* Invariant *)
  Have: i_1 <= (x_6 + x_5).
  (* Invariant *)
  Have: (-1) <= i_1.
  (* Invariant *)
  Have: 0 <= i_1.
  If x_1 = 0
  Then { Have: (1 + x_4) = y. }
  Else { Have: x_4 = y. }
  (* Invariant *)
  Have: y <= (x / 2).
  (* Invariant *)
  Have: y < x_3.
  (* Invariant *)
  Have: (i_1 <= x_2) /\ (x_2 <= x).
  (* Invariant *)
  Have: (2 + i_1) <= n.
  (* Invariant *)
  Have: ((i_1 = 9) -> (x = x_2)).
  (* Invariant *)
  Have: ((i_1 = 9) -> (x_1 = 0)).
  (* Invariant *)
  Have: ((x_1 = 1) -> (x_2 = i_1)).
  (* Invariant *)
  Have: ((x_1 = 0) -> (x = x_2)).
}
Prove: (i / 2) = y.
Prover Z3 4.8.12 returns Timeout (Qed:21ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:21ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (22ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 42):
Let x = 1 + i_1.
Let x_1 = 2 * y.
Let x_2 = x % 2.
Let x_3 = n / 2.
Let x_4 = i_1 / 2.
Let x_5 = 2 * x_4.
Let x_6 = i_1 % 2.
Let x_7 = 1 + x_5.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(n) /\ is_sint32(y) /\ is_sint32(x_4) /\
      is_sint32(x).
  (* Goal *)
  When: (0 <= i) /\ (i <= i_1).
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_4 < x_3.
  (* Invariant *)
  Have: (x_5 <= i_1) /\ (i_1 <= x_7).
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: i_1 < n.
  (* Invariant *)
  Have: ((i_1 = 10) -> (x_5 = i_1)).
  (* Invariant *)
  Have: ((i_1 = 10) -> (x_6 = 0)).
  (* Invariant *)
  Have: ((x_6 = 1) -> (x_7 = i_1)).
  (* Invariant *)
  Have: ((x_6 = 0) -> (x_5 = i_1)).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((i_2 <= i_1) -> ((0 <= i_2) ->
      ((i_2 / 2) = x_4)))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      (((i_2 / 2) = x_4) \/ (((i_2 - 1) / 2) = x_4)))).
  (* Invariant *)
  Have: x_4 <= i_1.
  (* Invariant *)
  Have: (x_5 = i_1) \/ (x_7 = i_1).
  (* Invariant *)
  Have: i_1 <= (x_6 + x_5).
  (* Invariant *)
  Have: (-1) <= i_1.
  (* Invariant *)
  Have: 0 <= i_1.
  If x_2 = 0
  Then { Have: (1 + x_4) = y. }
  Else { Have: x_4 = y. }
  (* Invariant *)
  Have: y <= (x / 2).
  (* Invariant *)
  Have: y < x_3.
  (* Invariant *)
  Have: (i_1 <= x_1) /\ (x_1 <= x).
  (* Invariant *)
  Have: (2 + i_1) <= n.
  (* Invariant *)
  Have: ((i_1 = 9) -> (x = x_1)).
  (* Invariant *)
  Have: ((i_1 = 9) -> (x_2 = 0)).
  (* Invariant *)
  Have: ((x_2 = 1) -> (x_1 = i_1)).
  (* Invariant *)
  Have: ((x_2 = 0) -> (x = x_1)).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((0 <= i_2) -> ((i_2 <= x) ->
      ((i_2 / 2) = y)))).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((0 <= i_2) -> ((i_2 <= x) ->
      ((x_1 = i_1) \/ (x = x_1))))).
}
Prove: ((i / 2) = y) \/ (((i - 1) / 2) = y).
Prover Z3 4.8.12 returns Valid (Qed:26ms) (10ms) (46108)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (0.96ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (0.85ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (0.82ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (0.98ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (0.86ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 52):
Let x = i / 2.
Let x_1 = 1 + i.
Let x_2 = 2 * x.
Let x_3 = x_1 / 2.
Let x_4 = i % 2.
Let x_5 = 1 + x_2.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Residual *)
  When: (x_1 % 2) != 0.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: x < (n / 2).
  (* Invariant *)
  Have: (x_2 <= i) /\ (i <= x_5).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: i < n.
  (* Invariant *)
  Have: ((i = 10) -> (x_2 = i)).
  (* Invariant *)
  Have: ((i = 10) -> (x_4 = 0)).
  (* Invariant *)
  Have: ((x_4 = 1) -> (x_5 = i)).
  (* Invariant *)
  Have: ((x_4 = 0) -> (x_2 = i)).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((i_1 <= i) -> ((0 <= i_1) ->
      ((i_1 / 2) = x)))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (((i_1 / 2) = x) \/ (((i_1 - 1) / 2) = x)))).
  (* Invariant *)
  Have: x <= i.
  (* Invariant *)
  Have: (x_2 = i) \/ (x_5 = i).
  (* Invariant *)
  Have: i <= (x_4 + x_2).
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: x <= x_3.
  (* Invariant *)
  Have: (i <= x_2) /\ (x_2 <= x_1).
  (* Invariant *)
  Have: (2 + i) <= n.
  (* Invariant *)
  Have: i != 9.
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((0 <= i_1) -> ((i_1 <= x_1) ->
      ((i_1 / 2) = x)))).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= i) -> ((0 <= i_1) ->
      (((i_1 / 2) = x) \/ (((i_1 - 1) / 2) = x)))).
}
Prove: x_3 = x.
Prover Z3 4.8.12 returns Valid (Qed:23ms) (10ms) (40394)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:23ms) (23ms) (480)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (0.97ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 53):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 53):
Prove: true.
Prover Qed returns Valid (0.82ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 54):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 54):
Prove: true.
Prover Qed returns Valid (0.82ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 55):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 55):
Prove: true.
Prover Qed returns Valid (0.79ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 56):
Let x = 1 + i.
Let x_1 = x / 2.
Let x_2 = 2 * x_1.
Let x_3 = x % 2.
Let x_4 = n / 2.
Let x_5 = i / 2.
Let x_6 = 2 * x_5.
Let x_7 = i % 2.
Let x_8 = 1 + x_6.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(y) /\ is_sint32(x_5) /\
      is_sint32(x) /\ is_sint32(x_1).
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_5 < x_4.
  (* Invariant *)
  Have: (x_6 <= i) /\ (i <= x_8).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: i < n.
  (* Invariant *)
  Have: ((i = 10) -> (x_6 = i)).
  (* Invariant *)
  Have: ((i = 10) -> (x_7 = 0)).
  (* Invariant *)
  Have: ((x_7 = 1) -> (x_8 = i)).
  (* Invariant *)
  Have: ((x_7 = 0) -> (x_6 = i)).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((i_1 <= i) -> ((0 <= i_1) ->
      ((i_1 / 2) = x_5)))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (((i_1 / 2) = x_5) \/ (((i_1 - 1) / 2) = x_5)))).
  (* Invariant *)
  Have: x_5 <= i.
  (* Invariant *)
  Have: (x_6 = i) \/ (x_8 = i).
  (* Invariant *)
  Have: i <= (x_7 + x_6).
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: 0 <= i.
  If x_3 = 0
  Then { Have: (x_1 = (1 + y)) /\ (x_1 = (1 + x_5)). }
  Else { Have: x_1 = x_5. }
  (* Invariant *)
  Have: x_1 < x_4.
  (* Invariant *)
  Have: (i <= x_2) /\ (x_2 <= x).
  (* Invariant *)
  Have: (2 + i) <= n.
  (* Invariant *)
  Have: ((i = 9) -> (x = x_2)).
  (* Invariant *)
  Have: ((i = 9) -> (x_3 = 0)).
  (* Invariant *)
  Have: ((x_3 = 1) -> (x_2 = i)).
  (* Invariant *)
  Have: ((x_3 = 0) -> (x = x_2)).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((0 <= i_1) -> ((i_1 <= x) ->
      (x_1 = (i_1 / 2))))).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((0 <= i_1) -> ((i_1 <= x) ->
      ((x_2 = i) \/ (x = x_2))))).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= i) -> ((0 <= i_1) ->
      ((x_1 = (i_1 / 2)) \/ (x_1 = ((i_1 - 1) / 2))))).
}
Prove: x_1 <= x.
Prover Z3 4.8.12 returns Valid (Qed:21ms) (10ms) (39618)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:21ms) (5ms) (47)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 56):
Prove: true.
Prover Qed returns Valid (0.89ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 57):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 57):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 58):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 58):
Prove: true.
Prover Qed returns Valid (0.97ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 59):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 59):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 60):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 60):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 61):
Let x_1 = 1 + x.
Let x_2 = x_1 / 2.
Let x_3 = 2 * x_2.
Let x_4 = x_1 % 2.
Let x_5 = n / 2.
Let x_6 = x / 2.
Let x_7 = 2 * x_6.
Let x_8 = x % 2.
Let x_9 = 1 + x_7.
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(x_6) /\ is_sint32(x_1) /\
      is_sint32(x_2).
  (* Residual *)
  When: x_4 != 0.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_6 < x_5.
  (* Invariant *)
  Have: (x_7 <= x) /\ (x <= x_9).
  (* Invariant *)
  Have: x <= n.
  (* Invariant *)
  Have: x < n.
  (* Invariant *)
  Have: ((x = 10) -> (x_7 = x)).
  (* Invariant *)
  Have: ((x = 10) -> (x_8 = 0)).
  (* Invariant *)
  Have: ((x_8 = 1) -> (x_9 = x)).
  (* Invariant *)
  Have: ((x_8 = 0) -> (x_7 = x)).
  (* Invariant *)
  Have: forall i : Z. (((i % 2) = 0) -> ((0 <= i) -> ((i <= x) ->
      ((i / 2) = x_6)))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < x) ->
      (((i / 2) = x_6) \/ (((i - 1) / 2) = x_6)))).
  (* Invariant *)
  Have: x_6 <= x.
  (* Invariant *)
  Have: (x_7 = x) \/ (x_9 = x).
  (* Invariant *)
  Have: x <= (x_8 + x_7).
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: 0 <= x.
  Have: x_2 = x_6.
  (* Invariant *)
  Have: x_2 < x_5.
  (* Invariant *)
  Have: (x <= x_3) /\ (x_3 <= x_1).
  (* Invariant *)
  Have: (2 + x) <= n.
  (* Invariant *)
  Have: x != 9.
  (* Invariant *)
  Have: ((x_4 = 1) -> (x_3 = x)).
  (* Invariant *)
  Have: forall i : Z. (((i % 2) = 0) -> ((0 <= i) -> ((i <= x_1) ->
      (x_2 = (i / 2))))).
  (* Invariant *)
  Have: forall i : Z. (((i % 2) = 0) -> ((0 <= i) -> ((i <= x_1) ->
      ((x_3 = x) \/ (x_1 = x_3))))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= x) ->
      ((x_2 = (i / 2)) \/ (x_2 = ((i - 1) / 2))))).
  (* Invariant *)
  Have: x_2 <= x_1.
}
Prove: (x_3 = x) \/ (x_1 = x_3).
Prover Z3 4.8.12 returns Valid (Qed:19ms) (10ms) (41003)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:19ms) (5ms) (45)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 61):
Prove: true.
Prover Qed returns Valid (0.84ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 62):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 62):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 63):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 63):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (0.88ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 65):
Let x = 1 + i.
Let x_1 = x / 2.
Let x_2 = 2 * x_1.
Let x_3 = x % 2.
Let x_4 = n / 2.
Let x_5 = i / 2.
Let x_6 = 2 * x_5.
Let x_7 = i % 2.
Let x_8 = 1 + x_6.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(x_5) /\ is_sint32(x) /\
      is_sint32(x_1).
  (* Residual *)
  When: x_3 != 0.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_5 < x_4.
  (* Invariant *)
  Have: (x_6 <= i) /\ (i <= x_8).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: i < n.
  (* Invariant *)
  Have: ((i = 10) -> (x_6 = i)).
  (* Invariant *)
  Have: ((i = 10) -> (x_7 = 0)).
  (* Invariant *)
  Have: ((x_7 = 1) -> (x_8 = i)).
  (* Invariant *)
  Have: ((x_7 = 0) -> (x_6 = i)).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((i_1 <= i) -> ((0 <= i_1) ->
      ((i_1 / 2) = x_5)))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (((i_1 / 2) = x_5) \/ (((i_1 - 1) / 2) = x_5)))).
  (* Invariant *)
  Have: x_5 <= i.
  (* Invariant *)
  Have: (x_6 = i) \/ (x_8 = i).
  (* Invariant *)
  Have: i <= (x_7 + x_6).
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: 0 <= i.
  Have: x_1 = x_5.
  (* Invariant *)
  Have: x_1 < x_4.
  (* Invariant *)
  Have: (i <= x_2) /\ (x_2 <= x).
  (* Invariant *)
  Have: (2 + i) <= n.
  (* Invariant *)
  Have: i != 9.
  (* Invariant *)
  Have: ((x_3 = 1) -> (x_2 = i)).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((0 <= i_1) -> ((i_1 <= x) ->
      (x_1 = (i_1 / 2))))).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= i) -> ((0 <= i_1) ->
      ((x_1 = (i_1 / 2)) \/ (x_1 = ((i_1 - 1) / 2))))).
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: (x_2 = i) \/ (x = x_2).
}
Prove: i < (x_3 + x_2).
Prover Z3 4.8.12 returns Valid (Qed:20ms) (10ms) (40443)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:20ms) (27ms) (494)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 65):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 67):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 67):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 68):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 68):
Prove: true.
Prover Qed returns Valid (0.98ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 69):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 69):
Prove: true.
Prover Qed returns Valid (0.98ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 70):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 70):
Prove: true.
Prover Qed returns Valid (0.88ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 71):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 71):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 72):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 72):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 73):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 73):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 74):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 74):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 75):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 75):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 76):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 76):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 77):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 77):
Prove: true.
Prover Qed returns Valid (0.98ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 78):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 78):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 79):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 79):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 80):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 80):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 81):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 81):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 82):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 82):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 83):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 83):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 84):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 84):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 85):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 85):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 86):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 86):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 87):
Prove: true.
Prover Qed returns Valid (10ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 87):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 88):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 88):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 89):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 89):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 90):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 90):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 91):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 91):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 92):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 92):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0008/034_merged.c, line 93):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0008/034_merged.c, line 93):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/034_0008/034_merged.c, line 94):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/034_0008/034_merged.c:3: Warning: 
  No 'assigns' specification for function 'foo034'.
  Callers assumptions might be imprecise.

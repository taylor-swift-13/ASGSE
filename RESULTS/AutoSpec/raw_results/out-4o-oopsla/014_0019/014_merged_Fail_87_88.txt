[kernel] Parsing out/014_0019/014_merged.c (with preprocessing)
[kernel:typing:no-proto] out/014_0019/014_merged.c:58: Warning: 
  Calling function unknown that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/014_0019/014_merged.c:6: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 88 goals scheduled
[wp] [Timeout] typed_foo014_loop_invariant_11_preserved (Qed 13ms) (Z3)
[wp] Proved goals:   87 / 88
  Qed:              80
  Alt-Ergo 2.5.4:    6 (4ms-5ms-7ms)
  Z3 4.8.12:         1 (260ms)
  Timeout:           1
------------------------------------------------------------
  Function foo014
------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 14):
Let a_4 = IAbs.abs(a_3).
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(1 + j).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < j) -> (a_4 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < j) ->
      ((a_3 < i) /\ (0 < (a_3 + i))))).
  (* Invariant *)
  Have: a_4 < j.
  (* Invariant *)
  Have: j <= (1 + m).
  (* Invariant *)
  Have: (a_3 < j) /\ (0 < (a_3 + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
}
Prove: (a <= m) \/ (IAbs.abs(a) <= j).
Prover Z3 4.8.12 returns Valid (Qed:11ms) (10ms) (36337)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (5ms) (52)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 17):
Let x = a - 1.
Let x_1 = 1 + m.
Let a_1 = IAbs.abs(a).
Let x_2 = 1 + j.
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(x) /\
      is_sint32(x_2).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < j) -> (a_1 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < j) -> ((a < i) /\ (0 < (a + i))))).
  (* Invariant *)
  Have: a_1 < j.
  (* Invariant *)
  Have: j <= x_1.
  (* Invariant *)
  Have: (a < j) /\ (0 < (a + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: (a <= m) /\ (0 <= (a + m)).
  (* Then *)
  Have: j <= m.
  (* Invariant *)
  Have: (IAbs.abs(x) <= j) \/ (a <= x_1).
}
Prove: (a <= x_2) \/ (a <= x_1).
Prover Z3 4.8.12 returns Valid (Qed:10ms) (10ms) (33525)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (4ms) (21)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 18):
Let x = 1 + j.
Let x_1 = 1 + m.
Let x_2 = a - 1.
Let a_1 = IAbs.abs(x_2).
Let a_2 = IAbs.abs(a).
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(x_2) /\
      is_sint32(x).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < j) -> (a_2 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < j) -> ((a < i) /\ (0 < (a + i))))).
  (* Invariant *)
  Have: a_2 < j.
  (* Invariant *)
  Have: j <= x_1.
  (* Invariant *)
  Have: (a < j) /\ (0 < (a + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: (a <= m) /\ (0 <= (a + m)).
  (* Then *)
  Have: j <= m.
  (* Invariant *)
  Have: (a_1 <= j) \/ (a <= x_1).
  (* Invariant *)
  Have: (a <= x) \/ (a <= x_1).
}
Prove: (a_1 <= j) \/ (a <= x).
Prover Z3 4.8.12 returns Valid (Qed:10ms) (10ms) (33541)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (4ms) (21)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.50ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 21):
Let a_4 = IAbs.abs(a).
Let a_5 = IAbs.abs(a_3).
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(1 + j).
  (* Goal *)
  When: (0 < i) /\ (i <= j).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 < j) -> (a_5 < i_1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 < j) ->
      ((a_3 < i_1) /\ (0 < (a_3 + i_1))))).
  (* Invariant *)
  Have: a_5 < j.
  (* Invariant *)
  Have: j <= (1 + m).
  (* Invariant *)
  Have: (a_3 < j) /\ (0 < (a_3 + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (a <= m) \/ (a_4 <= j).
  (* Invariant *)
  Have: (a <= j) \/ (a <= m).
  (* Invariant *)
  Have: (a <= j) \/ (a_4 <= j).
}
Prove: a_4 < i.
Prover Z3 4.8.12 returns Timeout (Qed:13ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:13ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 22):
Let a_4 = IAbs.abs(a).
Let a_5 = IAbs.abs(a_3).
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(1 + j).
  (* Goal *)
  When: (0 < i) /\ (i <= j).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 < j) -> (a_5 < i_1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 < j) ->
      ((a_3 < i_1) /\ (0 < (a_3 + i_1))))).
  (* Invariant *)
  Have: a_5 < j.
  (* Invariant *)
  Have: j <= (1 + m).
  (* Invariant *)
  Have: (a_3 < j) /\ (0 < (a_3 + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (a <= m) \/ (a_4 <= j).
  (* Invariant *)
  Have: (a <= j) \/ (a <= m).
  (* Invariant *)
  Have: (a <= j) \/ (a_4 <= j).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 <= j) -> (a_4 < i_1))).
}
Prove: (a < i) /\ (0 < (a + i)).
Prover Z3 4.8.12 returns Valid (Qed:13ms) (260ms) (296303)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 23):
Let a_4 = IAbs.abs(a).
Let a_5 = IAbs.abs(a_3).
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(1 + j).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < j) -> (a_5 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < j) ->
      ((a_3 < i) /\ (0 < (a_3 + i))))).
  (* Invariant *)
  Have: a_5 < j.
  (* Invariant *)
  Have: j <= (1 + m).
  (* Invariant *)
  Have: (a_3 < j) /\ (0 < (a_3 + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (a <= m) \/ (a_4 <= j).
  (* Invariant *)
  Have: (a <= j) \/ (a <= m).
  (* Invariant *)
  Have: (a <= j) \/ (a_4 <= j).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a_4 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> ((a < i) /\ (0 < (a + i))))).
}
Prove: a_4 <= j.
Prover Z3 4.8.12 returns Valid (Qed:16ms) (20ms) (38046)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:16ms) (7ms) (131)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 29):
Let x = a - 1.
Let a_1 = IAbs.abs(x).
Let x_1 = 1 + j.
Let x_2 = 1 + m.
Let a_2 = IAbs.abs(a).
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(x) /\
      is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < j) -> (a_2 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < j) -> ((a < i) /\ (0 < (a + i))))).
  (* Invariant *)
  Have: a_2 < j.
  (* Invariant *)
  Have: j <= x_2.
  (* Invariant *)
  Have: (a < j) /\ (0 < (a + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: (a <= m) /\ (0 <= (a + m)).
  (* Then *)
  Have: j <= m.
  (* Invariant *)
  Have: (a <= x_1) \/ (a <= x_2).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a_1 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) ->
      ((a <= i) /\ (2 <= (a + i))))).
  (* Invariant *)
  Have: a_1 <= j.
}
Prove: a <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:12ms) (10ms) (35070)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:12ms) (5ms) (21)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 32):
Let a_4 = IAbs.abs(a).
Let a_5 = IAbs.abs(a_3).
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(1 + j).
  (* Pre-condition *)
  Have: 0 < m.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < j) -> (a_5 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < j) ->
      ((a_3 < i) /\ (0 < (a_3 + i))))).
  (* Invariant *)
  Have: a_5 < j.
  (* Invariant *)
  Have: j <= (1 + m).
  (* Invariant *)
  Have: (a_3 < j) /\ (0 < (a_3 + j)).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: (a_3 <= m) /\ (0 <= (a_3 + m)).
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> (a_4 < i))).
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= j) -> ((a < i) /\ (0 < (a + i))))).
  (* Invariant *)
  Have: a_4 <= j.
  (* Invariant *)
  Have: (a <= j) /\ (0 <= (a + j)).
}
Prove: (a <= m) /\ (0 <= (a + m)).
Prover Z3 4.8.12 returns Valid (Qed:14ms) (20ms) (38496)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:14ms) (6ms) (63)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 39):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (0.94ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (0.88ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0019/014_merged.c, line 53):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0019/014_merged.c, line 53):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/014_0019/014_merged.c, line 54) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/014_0019/014_merged.c, line 54) (2/2):
Call Result at line 58
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/014_0019/014_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/014_0019/014_merged.c:6: Warning: 
  No 'assigns' specification for function 'foo014'.
  Callers assumptions might be imprecise.

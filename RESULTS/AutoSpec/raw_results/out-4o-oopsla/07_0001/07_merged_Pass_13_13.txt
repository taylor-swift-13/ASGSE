[kernel] Parsing out/07_0001/07_merged.c (with preprocessing)
[kernel:typing:no-proto] out/07_0001/07_merged.c:23: Warning: 
  Calling function unknown that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/07_0001/07_merged.c:7: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 13 goals scheduled
[wp] Proved goals:   13 / 13
  Qed:              11
  Alt-Ergo 2.5.4:    2 (3ms-7ms)
------------------------------------------------------------
  Function foo07
------------------------------------------------------------

Goal Preservation of Invariant (file out/07_0001/07_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/07_0001/07_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/07_0001/07_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (10ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/07_0001/07_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/07_0001/07_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/07_0001/07_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/07_0001/07_merged.c, line 16):
Let x = 3 * i.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(b) /\
      is_sint32(b_1) /\ is_sint32(b_2) /\ is_sint32(i) /\ is_sint32(n) /\
      is_sint32(tmp_0) /\ is_sint32(1 + i) /\ is_sint32(x - b_2) /\
      is_sint32(3 + x - a).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= b_2.
  (* Invariant *)
  Have: b_2 <= x.
  (* Then *)
  Have: i < n.
  If tmp_0 != 0
  Then { Have: (b_2 = b) /\ ((a_1 + b) = x). Have: (1 + x) = (a + b). }
  Else { Have: (b_2 = b_1) /\ ((a_2 + b_1) = x). Have: (2 + x) = (a + b_1). }
  (* Invariant *)
  Have: (-1) <= i.
}
Prove: a <= (3 + x).
Prover Z3 4.8.12 returns Valid (Qed:12ms) (10ms) (34285)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:12ms) (7ms) (50)

------------------------------------------------------------

Goal Establishment of Invariant (file out/07_0001/07_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/07_0001/07_merged.c, line 17):
Let x = 3 * i.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b) /\ is_sint32(b_1) /\
      is_sint32(b_2) /\ is_sint32(b_3) /\ is_sint32(i) /\ is_sint32(n) /\
      is_sint32(tmp_0) /\ is_sint32(1 + i) /\ is_sint32(x - b_3) /\
      is_sint32(3 + x - b).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= b_3.
  (* Invariant *)
  Have: b_3 <= x.
  (* Then *)
  Have: i < n.
  If tmp_0 != 0
  Then { Have: (b_3 = b_1) /\ ((a + b_1) = x). Have: (2 + b_1) = b. }
  Else { Have: (b_3 = b_2) /\ ((a_1 + b_2) = x). Have: (1 + b_2) = b. }
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: 0 <= b.
}
Prove: b <= (3 + x).
Prover Z3 4.8.12 returns Valid (Qed:13ms) (10ms) (34386)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (3ms) (52)

------------------------------------------------------------

Goal Establishment of Invariant (file out/07_0001/07_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Assertion (file out/07_0001/07_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/07_0001/07_merged.c, line 18) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/07_0001/07_merged.c, line 18) (2/2):
Call Result at line 23
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/07_0001/07_merged.c:1: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/07_0001/07_merged.c:7: Warning: 
  No 'assigns' specification for function 'foo07'.
  Callers assumptions might be imprecise.

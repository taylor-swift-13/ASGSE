[kernel] Parsing out/034_0017/034_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 33 goals scheduled
[wp] [Timeout] typed_foo034_loop_invariant_10_established (Qed 0.58ms) (Z3)
[wp] Proved goals:   32 / 33
  Qed:              27
  Alt-Ergo 2.5.4:    5 (5ms-10ms-21ms)
  Timeout:           1
------------------------------------------------------------
  Function foo034
------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0017/034_merged.c, line 11):
Let x = 1 + i.
Let x_1 = i / 2.
Let x_2 = 2 * x_1.
Let x_3 = i % 2.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(y) /\ is_sint32(x_1) /\
      is_sint32(x).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= (x_1 + x_3).
  (* Invariant *)
  Have: (x_3 + x_2) = i.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: x_2 <= i.
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
  If (x % 2) = 0
  Then { Have: (1 + x_1) = y. }
  Else { Have: x_1 = y. }
}
Prove: (x / 2) = y.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (37079)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (21ms) (288)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0017/034_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0017/034_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0017/034_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0017/034_merged.c, line 13):
Let x = 1 + i.
Let x_1 = i / 2.
Let x_2 = 2 * x_1.
Let x_3 = i % 2.
Let x_4 = x / 2.
Let x_5 = 1 + x_3 + x_2.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(y) /\ is_sint32(x_1) /\
      is_sint32(x) /\ is_sint32(x_4) /\ is_sint32(x_5).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= (x_1 + x_3).
  (* Invariant *)
  Have: (x_3 + x_2) = i.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: x_2 <= i.
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
  If (x % 2) = 0
  Then { Have: (x_4 = (1 + y)) /\ (x_4 = (1 + x_1)). }
  Else { Have: x_4 = x_1. }
}
Prove: x_4 <= x_5.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (20ms) (33613)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (6ms) (52)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0017/034_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0017/034_merged.c, line 14):
Let x = 1 + i.
Let x_1 = x / 2.
Let x_2 = i / 2.
Let x_3 = 2 * x_2.
Let x_4 = i % 2.
Let x_5 = 1 + x_4 + x_3.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(y) /\ is_sint32(x_2) /\
      is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_5).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= (x_2 + x_4).
  (* Invariant *)
  Have: (x_4 + x_3) = i.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: x_3 <= i.
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
  If (x % 2) = 0
  Then { Have: (x_1 = (1 + y)) /\ (x_1 = (1 + x_2)). }
  Else { Have: x_1 = x_2. }
  (* Invariant *)
  Have: x_1 <= x_5.
}
Prove: x_1 <= (x_5 / 2).
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (36129)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (5ms) (33)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0017/034_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0017/034_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0017/034_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0017/034_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0017/034_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0017/034_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0017/034_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0017/034_merged.c, line 18):
Let x = 1 + i.
Let x_1 = x / 2.
Let x_2 = x % 2.
Let x_3 = i / 2.
Let x_4 = 2 * x_3.
Let x_5 = i % 2.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(y) /\ is_sint32(x_3) /\
      is_sint32(x) /\ is_sint32(x_1).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: x_3 <= i.
  (* Invariant *)
  Have: (x_5 + x_4) = i.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: ((x_5 = 1) -> ((1 + x_4) = i)).
  (* Invariant *)
  Have: ((x_5 = 0) -> (x_4 = i)).
  (* Invariant *)
  Have: x_4 <= i.
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
  If x_2 = 0
  Then { Have: (x_1 = (1 + y)) /\ (x_1 = (1 + x_3)). }
  Else { Have: x_1 = x_3. }
  (* Invariant *)
  Have: x_1 <= x.
}
Prove: (x_2 + (2 * x_1)) = x.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (34650)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (13ms) (257)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0017/034_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0017/034_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0017/034_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0017/034_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0017/034_merged.c, line 20):
Assume { Type: is_sint32(n). }
Prove: 0 <= n.
Prover Z3 4.8.12 returns Timeout (Qed:0.58ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.58ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0017/034_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0017/034_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0017/034_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0017/034_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0017/034_merged.c, line 23):
Let x = 1 + i.
Let x_1 = x / 2.
Let x_2 = x % 2.
Let x_3 = i / 2.
Let x_4 = 2 * x_3.
Let x_5 = i % 2.
Let x_6 = 2 * x_1.
Let x_7 = x_2 + x_6 - 1.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(x_3) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_7).
  (* Residual *)
  When: x_2 != 0.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: x_3 <= i.
  (* Invariant *)
  Have: x_3 <= (x_7 / 2).
  (* Invariant *)
  Have: (x_2 + x_6) = x.
  (* Invariant *)
  Have: (x_5 + x_4) = i.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: ((x_5 = 1) -> ((1 + x_4) = i)).
  (* Invariant *)
  Have: ((x_5 = 0) -> (x_4 = i)).
  (* Invariant *)
  Have: x_4 <= i.
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
  Have: x_1 = x_3.
  (* Invariant *)
  Have: 0 <= (x_1 + x_2).
}
Prove: x_6 <= x.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (35195)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (5ms) (32)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0017/034_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0017/034_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0017/034_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0017/034_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0017/034_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0017/034_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0017/034_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Loop assigns (file out/034_0017/034_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/034_0017/034_merged.c:3: Warning: 
  No 'assigns' specification for function 'foo034'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/014_0009/014_merged.c (with preprocessing)
[kernel:typing:no-proto] out/014_0009/014_merged.c:60: Warning: 
  Calling function unknown that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/014_0009/014_merged.c:6: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 92 goals scheduled
[wp] [Timeout] typed_foo014_loop_invariant_15_preserved (Qed 9ms) (Z3)
[wp] Proved goals:   91 / 92
  Qed:              83
  Alt-Ergo 2.5.4:    8 (3ms-6ms-14ms)
  Timeout:           1
------------------------------------------------------------
  Function foo014
------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 11):
Let a_1 = IAbs.abs(a).
Let x = a + m.
Let x_1 = a - 1.
Let x_2 = 1 + j.
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(x_1) /\
      is_sint32(x_2).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: (a <= m) /\ (0 <= x).
  (* Invariant *)
  Have: a_1 <= m.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: (a < j) /\ (0 < (a + j)).
  (* Invariant *)
  Have: (0 < j) /\ (j <= (1 + m)).
  (* Invariant *)
  Have: ((a = 0) -> (forall i : Z. ((0 < i) -> ((i < j) -> (a = 0))))).
  (* Invariant *)
  Have: a_1 < j.
  (* Then *)
  Have: j <= m.
}
Prove: (j <= IAbs.abs(x_1)) \/ (a <= x_2).
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (32822)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (5ms) (22)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 12):
Let a_4 = IAbs.abs(a).
Let a_5 = IAbs.abs(a_3).
Let x = a_3 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(1 + j).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: (a_3 <= m) /\ (0 <= x).
  (* Invariant *)
  Have: a_5 <= m.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: (a_3 < j) /\ (0 < (a_3 + j)).
  (* Invariant *)
  Have: (0 < j) /\ (j <= (1 + m)).
  (* Invariant *)
  Have: ((a_3 = 0) -> (forall i : Z. ((0 < i) -> ((i < j) -> (a_3 = 0))))).
  (* Invariant *)
  Have: a_5 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (a <= j) \/ (j <= a_4).
}
Prove: (a_4 <= m) \/ (j <= a_4).
Prover Z3 4.8.12 returns Valid (Qed:11ms) (10ms) (34485)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (4ms) (31)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 13):
Let a_4 = IAbs.abs(a).
Let a_5 = IAbs.abs(a_3).
Let x = a_3 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(1 + j).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: (a_3 <= m) /\ (0 <= x).
  (* Invariant *)
  Have: a_5 <= m.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: (a_3 < j) /\ (0 < (a_3 + j)).
  (* Invariant *)
  Have: (0 < j) /\ (j <= (1 + m)).
  (* Invariant *)
  Have: ((a_3 = 0) -> (forall i : Z. ((0 < i) -> ((i < j) -> (a_3 = 0))))).
  (* Invariant *)
  Have: a_5 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (a <= j) \/ (j <= a_4).
  (* Invariant *)
  Have: (a_4 <= m) \/ (j <= a_4).
}
Prove: (a_4 <= j) \/ (j <= a_4).
Prover Z3 4.8.12 returns Valid (Qed:11ms) (10ms) (34562)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (5ms) (25)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 14):
Let x = a - 1.
Let a_1 = IAbs.abs(x).
Let x_1 = 1 + j.
Let a_2 = IAbs.abs(a).
Let x_2 = a + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(x) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: (a <= m) /\ (0 <= x_2).
  (* Invariant *)
  Have: a_2 <= m.
  (* Invariant *)
  Have: 0 < x_2.
  (* Invariant *)
  Have: (a < j) /\ (0 < (a + j)).
  (* Invariant *)
  Have: (0 < j) /\ (j <= (1 + m)).
  (* Invariant *)
  Have: ((a = 0) -> (forall i : Z. ((0 < i) -> ((i < j) -> (a = 0))))).
  (* Invariant *)
  Have: a_2 < j.
  (* Then *)
  Have: j <= m.
  (* Invariant *)
  Have: (j <= a_1) \/ (a <= x_1).
  (* Invariant *)
  Have: (a_1 <= m) \/ (j <= a_1).
  (* Invariant *)
  Have: (a_1 <= j) \/ (j <= a_1).
}
Prove: (a_1 <= j) \/ (a <= x_1).
Prover Z3 4.8.12 returns Valid (Qed:10ms) (10ms) (32970)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (4ms) (23)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 15):
Let a_4 = IAbs.abs(a).
Let a_5 = IAbs.abs(a_3).
Let x = a_3 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(1 + j).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: (a_3 <= m) /\ (0 <= x).
  (* Invariant *)
  Have: a_5 <= m.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: (a_3 < j) /\ (0 < (a_3 + j)).
  (* Invariant *)
  Have: (0 < j) /\ (j <= (1 + m)).
  (* Invariant *)
  Have: ((a_3 = 0) -> (forall i : Z. ((0 < i) -> ((i < j) -> (a_3 = 0))))).
  (* Invariant *)
  Have: a_5 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (a <= j) \/ (j <= a_4).
  (* Invariant *)
  Have: (a_4 <= m) \/ (j <= a_4).
  (* Invariant *)
  Have: (a_4 <= j) \/ (j <= a_4).
  (* Invariant *)
  Have: (a <= j) \/ (a_4 <= j).
}
Prove: (a <= m) /\ (0 <= (a + m)).
Prover Z3 4.8.12 returns Valid (Qed:19ms) (10ms) (36238)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:19ms) (3ms) (63)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 17):
Let a_4 = IAbs.abs(a).
Let a_5 = IAbs.abs(a_3).
Let x = a_3 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(1 + j).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: (a_3 <= m) /\ (0 <= x).
  (* Invariant *)
  Have: a_5 <= m.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: (a_3 < j) /\ (0 < (a_3 + j)).
  (* Invariant *)
  Have: (0 < j) /\ (j <= (1 + m)).
  (* Invariant *)
  Have: ((a_3 = 0) -> (forall i : Z. ((0 < i) -> ((i < j) -> (a_3 = 0))))).
  (* Invariant *)
  Have: a_5 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (a <= j) \/ (j <= a_4).
  (* Invariant *)
  Have: (a_4 <= m) \/ (j <= a_4).
  (* Invariant *)
  Have: (a_4 <= j) \/ (j <= a_4).
  (* Invariant *)
  Have: (a <= j) \/ (a_4 <= j).
  (* Invariant *)
  Have: (a <= m) /\ (0 <= (a + m)).
}
Prove: a_4 <= m.
Prover Z3 4.8.12 returns Valid (Qed:11ms) (10ms) (36785)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (8ms) (145)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.50ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 25):
Let x = a - 1.
Let a_1 = IAbs.abs(x).
Let x_1 = 1 + m.
Let x_2 = 1 + j.
Let a_2 = IAbs.abs(a).
Let x_3 = a + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(x) /\
      is_sint32(x_2).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: (a <= m) /\ (0 <= x_3).
  (* Invariant *)
  Have: a_2 <= m.
  (* Invariant *)
  Have: 0 < x_3.
  (* Invariant *)
  Have: (a < j) /\ (0 < (a + j)).
  (* Invariant *)
  Have: (0 < j) /\ (j <= x_1).
  (* Invariant *)
  Have: ((a = 0) -> (forall i : Z. ((0 < i) -> ((i < j) -> (a = 0))))).
  (* Invariant *)
  Have: a_2 < j.
  (* Then *)
  Have: j <= m.
  (* Invariant *)
  Have: (j <= a_1) \/ (a <= x_2).
  (* Invariant *)
  Have: (a_1 <= j) \/ (j <= a_1).
  (* Invariant *)
  Have: (a_1 <= j) \/ (a <= x_2).
  (* Invariant *)
  Have: a <= x_1.
  (* Invariant *)
  Have: a_1 <= m.
}
Prove: 2 <= x_3.
Prover Z3 4.8.12 returns Timeout (Qed:9ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:9ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 26):
Let x = a + m.
Let x_1 = a - 1.
Let a_1 = IAbs.abs(x_1).
Let x_2 = 1 + m.
Let x_3 = 1 + j.
Let a_2 = IAbs.abs(a).
Assume {
  Type: is_sint32(a) /\ is_sint32(j) /\ is_sint32(m) /\ is_sint32(x_1) /\
      is_sint32(x_3).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: (a <= m) /\ (0 <= x).
  (* Invariant *)
  Have: a_2 <= m.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: (a < j) /\ (0 < (a + j)).
  (* Invariant *)
  Have: (0 < j) /\ (j <= x_2).
  (* Invariant *)
  Have: ((a = 0) -> (forall i : Z. ((0 < i) -> ((i < j) -> (a = 0))))).
  (* Invariant *)
  Have: a_2 < j.
  (* Then *)
  Have: j <= m.
  (* Invariant *)
  Have: (j <= a_1) \/ (a <= x_3).
  (* Invariant *)
  Have: (a_1 <= j) \/ (j <= a_1).
  (* Invariant *)
  Have: (a_1 <= j) \/ (a <= x_3).
  (* Invariant *)
  Have: a <= x_2.
  (* Invariant *)
  Have: a_1 <= m.
  (* Invariant *)
  Have: 2 <= x.
}
Prove: a <= x_3.
Prover Z3 4.8.12 returns Valid (Qed:11ms) (20ms) (33310)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (3ms) (25)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.89ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.97ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 34):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (0.94ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (0.96ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (0.82ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 43):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 46):
Let x = a + m.
Let a_4 = IAbs.abs(a).
Let a_5 = IAbs.abs(a_3).
Let x_1 = a_3 + m.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(j) /\ is_sint32(m) /\ is_sint32(tmp_0) /\ is_sint32(1 + j).
  (* Invariant *)
  Have: 0 < m.
  (* Invariant *)
  Have: (a_3 <= m) /\ (0 <= x_1).
  (* Invariant *)
  Have: a_5 <= m.
  (* Invariant *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: (a_3 < j) /\ (0 < (a_3 + j)).
  (* Invariant *)
  Have: (0 < j) /\ (j <= (1 + m)).
  (* Invariant *)
  Have: ((a_3 = 0) -> (forall i : Z. ((0 < i) -> ((i < j) -> (a_3 = 0))))).
  (* Invariant *)
  Have: a_5 < j.
  (* Then *)
  Have: j <= m.
  If tmp_0 != 0
  Then { Have: a_3 = a_1. Have: (1 + a_1) = a. }
  Else { Have: a_3 = a_2. Have: (1 + a) = a_2. }
  (* Invariant *)
  Have: (a_4 <= j) \/ (j <= a_4).
  (* Invariant *)
  Have: (a <= m) /\ (0 <= x).
  (* Invariant *)
  Have: a_4 <= m.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: (a <= j) /\ (0 <= (a + j)).
  (* Invariant *)
  Have: ((a = 0) -> (forall i : Z. ((0 < i) -> ((i <= j) -> (a = 0))))).
}
Prove: a_4 <= j.
Prover Z3 4.8.12 returns Valid (Qed:16ms) (20ms) (36683)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:16ms) (14ms) (193)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (0.84ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (0.85ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (0.80ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (0.78ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (0.80ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 53):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 53):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 54):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 54):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/014_0009/014_merged.c, line 55):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/014_0009/014_merged.c, line 55):
Prove: true.
Prover Qed returns Valid (0.84ms)

------------------------------------------------------------

Goal Loop assigns (file out/014_0009/014_merged.c, line 56) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/014_0009/014_merged.c, line 56) (2/2):
Call Result at line 60
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/014_0009/014_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/014_0009/014_merged.c:6: Warning: 
  No 'assigns' specification for function 'foo014'.
  Callers assumptions might be imprecise.

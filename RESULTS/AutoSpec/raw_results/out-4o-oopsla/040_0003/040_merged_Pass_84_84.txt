[kernel] Parsing out/040_0003/040_merged.c (with preprocessing)
[kernel:typing:no-proto] out/040_0003/040_merged.c:52: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/040_0003/040_merged.c:74: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/040_0003/040_merged.c:7: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[kernel:annot:missing-spec] out/040_0003/040_merged.c:7: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 84 goals scheduled
[wp] Proved goals:   84 / 84
  Qed:              75
  Alt-Ergo 2.5.4:    9 (4ms-22ms)
------------------------------------------------------------
  Function foo040
------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 17):
Let x = 1 + j.
Let x_1 = 2 + i.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Residual *)
  When: (x_1 % 2) != 0.
  (* Goal *)
  When: (x % 2) = 1.
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_1 : Z. let x_2 = i_1 % 2 in ((x_2 = 0) -> ((0 <= i_1) ->
      (x_2 != 1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (i < (j + i_1))).
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i / 2) <= j.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (20ms) (36855)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (14ms) (246)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 18):
Let x = 2 + j.
Let x_1 = 2 + i.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x).
  (* Residual *)
  When: (x_1 % 2) = 0.
  (* Goal *)
  When: (x % 2) = 0.
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_1 : Z. let x_2 = i_1 % 2 in ((x_2 = 0) -> ((0 <= i_1) ->
      (x_2 != 1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (i < (j + i_1))).
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i / 2) <= j.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (30ms) (79347)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (15ms) (252)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 19):
Let x = 1 + j.
Let x_1 = 2 + i.
Let x_2 = x_1 % 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Residual *)
  When: x_2 != 0.
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_1 : Z. let x_3 = i_1 % 2 in ((x_3 = 0) -> ((0 <= i_1) ->
      (x_3 != 1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (i < (j + i_1))).
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i / 2) <= j.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x % 2) != 1.
}
Prove: x_2 = 1.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (36955)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (18ms) (282)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 20):
Let x = 2 + i.
Let x_1 = 1 + j.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x).
  (* Goal *)
  When: 0 < flag_0.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_1 : Z. let x_2 = i_1 % 2 in ((x_2 = 0) -> ((0 <= i_1) ->
      (x_2 != 1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (i < (j + i_1))).
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i / 2) <= j.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x_1 % 2) != 1.
  (* Invariant *)
  Have: (x % 2) = 1.
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (37793)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (16ms) (251)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.86ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 25):
Let x = 2 + j.
Let x_1 = x % 2.
Let x_2 = 2 + i.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x_2) /\ is_sint32(x).
  (* Goal *)
  When: 0 <= i_1.
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_2 : Z. let x_3 = i_2 % 2 in ((x_3 = 0) -> ((0 <= i_2) ->
      (x_3 != 1))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> (i < (j + i_2))).
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i / 2) <= j.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: x_1 != 0.
  (* Invariant *)
  Have: (x_2 % 2) = 0.
  (* Invariant *)
  Have: forall i_2 : Z. let x_3 = i_2 % 2 in ((x_3 = 0) -> ((0 <= i_2) ->
      (x_1 != x_3))).
}
Prove: i < (i_1 + j).
Prover Z3 4.8.12 returns Valid (Qed:8ms) (33650)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (4ms) (30)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.97ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 26):
Let x = 2 + j.
Let x_1 = x % 2.
Let x_2 = 2 + i.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x_2) /\ is_sint32(x).
  (* Goal *)
  When: ((i_1 % 2) = 0) /\ (0 <= i_1) /\ (i_1 <= (1 + i)).
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_2 : Z. let x_3 = i_2 % 2 in ((x_3 = 0) -> ((0 <= i_2) ->
      (x_3 != 1))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> (i < (j + i_2))).
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i / 2) <= j.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: x_1 != 0.
  (* Invariant *)
  Have: (x_2 % 2) = 0.
  (* Invariant *)
  Have: forall i_2 : Z. let x_3 = i_2 % 2 in ((x_3 = 0) -> ((0 <= i_2) ->
      (x_1 != x_3))).
}
Prove: x_1 = 1.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (39651)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (22ms) (354)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (8ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 29):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 31):
Let x = 2 + j.
Let x_1 = x % 2.
Let x_2 = 2 + i.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x_2) /\ is_sint32(x).
  (* Goal *)
  When: (x_2 % 2) = 0.
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_1 : Z. let x_3 = i_1 % 2 in ((x_3 = 0) -> ((0 <= i_1) ->
      (x_3 != 1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (i < (j + i_1))).
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i / 2) <= j.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: x_1 != 0.
  (* Invariant *)
  Have: forall i_1 : Z. let x_3 = i_1 % 2 in ((x_3 = 0) -> ((0 <= i_1) ->
      (x_1 != x_3))).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((0 <= i_1) ->
      ((i_1 <= (1 + i)) -> (x_1 = 1)))).
  (* Invariant *)
  Have: (-2) <= j.
}
Prove: x_1 = 1.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (36929)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (13ms) (266)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 32):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 33):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 36):
Let x = 2 + j.
Let x_1 = 2 + i.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (i < (j + i_1))).
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i / 2) <= j.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x_1 % 2) = 0.
  (* Invariant *)
  Have: forall i_1 : Z. let x_2 = i_1 % 2 in ((x_2 = 0) -> ((0 <= i_1) ->
      (x_2 != 1))).
  (* Invariant *)
  Have: (-2) <= j.
  (* Invariant *)
  Have: (x % 2) = 1.
}
Prove: (x_1 / 2) <= x.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (35712)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (17ms) (306)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (0.98ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 37):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (0.80ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 40):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (0.78ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (0.73ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 45):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 46):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 47):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 63):
Let x = 1 + a.
Let x_1 = -i.
Let x_2 = j - i.
Let x_3 = a * x_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(j + x_3 - i).
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: forall i_1 : Z. let x_4 = i_1 % 2 in ((x_4 = 0) -> ((0 <= i_1) ->
      (x_4 != 1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (i < (j + i_1))).
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: (i / 2) <= j.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: tmp_0_0 != 0.
}
Prove: (j + x_3) = (i + (x * x_2)).
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (10137)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (4ms) (38)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 63):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 65):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 65):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 67):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 67):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 68):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 68):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 69):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 69):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/040_0003/040_merged.c, line 70):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/040_0003/040_merged.c, line 70):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/040_0003/040_merged.c, line 49) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/040_0003/040_merged.c, line 49) (2/2):
Call Result at line 52
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Loop assigns (file out/040_0003/040_merged.c, line 71) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/040_0003/040_merged.c, line 71) (2/2):
Call Result at line 74
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/040_0003/040_merged.c:1: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/040_0003/040_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/040_0003/040_merged.c:7: Warning: 
  No 'assigns' specification for function 'foo040'.
  Callers assumptions might be imprecise.

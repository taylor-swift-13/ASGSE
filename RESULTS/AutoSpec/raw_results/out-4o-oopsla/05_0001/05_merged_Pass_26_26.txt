[kernel] Parsing out/05_0001/05_merged.c (with preprocessing)
[kernel:typing:no-proto] out/05_0001/05_merged.c:30: Warning: 
  Calling function unknown that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/05_0001/05_merged.c:4: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 26 goals scheduled
[wp] Proved goals:   26 / 26
  Qed:              21
  Alt-Ergo 2.5.4:    3 (5ms-6ms)
  Z3 4.8.12:         2 (20ms)
------------------------------------------------------------
  Function foo05
------------------------------------------------------------

Goal Preservation of Invariant (file out/05_0001/05_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/05_0001/05_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/05_0001/05_merged.c, line 14):
Let x = -j_1.
Let x_1 = j - j_1.
Let x_2 = j - 1 - j_1.
Let x_3 = x_1 * x_2.
Let x_4 = x_3 / 2.
Let x_5 = 2 * j_1.
Let x_6 = j + x_4.
Let x_7 = (x_1 * (1 + j - j_1)) / 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j_2) /\ is_sint32(j_1) /\
      is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_4).
  (* Invariant *)
  Have: (x_4 = j_1) \/ (x_6 = (1 + x_5)).
  (* Invariant *)
  Have: ((if (flag_0 = 0) then 0 else x_2) + x_4) = j_1.
  (* Invariant *)
  Have: x_5 < x_6.
  (* Invariant *)
  Have: x_4 <= j_1.
  (* Invariant *)
  Have: j_1 < j.
  (* Invariant *)
  Have: 0 <= j_1.
  (* Invariant *)
  Have: (-1) <= x_3.
  (* Then *)
  Have: tmp_0 != 0.
  If flag_0 != 0
  Then { Have: (1 + j) = j_2. }
  Else { Have: j = j_2. }
}
Prove: (x_7 = j_2) \/ ((j + x_7) = (j_2 + j_1)).
Prover Z3 4.8.12 returns Valid (Qed:11ms) (20ms) (38949)

------------------------------------------------------------

Goal Establishment of Invariant (file out/05_0001/05_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/05_0001/05_merged.c, line 15):
Let x = -j_1.
Let x_1 = j - j_1.
Let x_2 = (x_1 * (1 + j - j_1)) / 2.
Let x_3 = j - 1 - j_1.
Let x_4 = x_1 * x_3.
Let x_5 = x_4 / 2.
Let x_6 = 2 * j_1.
Let x_7 = j + x_5.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j_2) /\ is_sint32(j_1) /\
      is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x_3) /\ is_sint32(x_5).
  (* Invariant *)
  Have: (x_5 = j_1) \/ (x_7 = (1 + x_6)).
  (* Invariant *)
  Have: ((if (flag_0 = 0) then 0 else x_3) + x_5) = j_1.
  (* Invariant *)
  Have: x_6 < x_7.
  (* Invariant *)
  Have: x_5 <= j_1.
  (* Invariant *)
  Have: j_1 < j.
  (* Invariant *)
  Have: 0 <= j_1.
  (* Invariant *)
  Have: (-1) <= x_4.
  (* Then *)
  Have: tmp_0 != 0.
  If flag_0 != 0
  Then { Have: (1 + j) = j_2. }
  Else { Have: j = j_2. }
  (* Invariant *)
  Have: (x_2 = j_2) \/ ((j + x_2) = (j_2 + j_1)).
}
Prove: ((if (flag_0 = 0) then 0 else x_1) + x_2) = j_2.
Prover Z3 4.8.12 returns Valid (Qed:13ms) (20ms) (55278)

------------------------------------------------------------

Goal Establishment of Invariant (file out/05_0001/05_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/05_0001/05_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/05_0001/05_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/05_0001/05_merged.c, line 17):
Let x_1 = 1 + x.
Let x_2 = (x_1 * (2 + x)) / 2.
Let x_3 = x * x_1.
Let x_4 = x_3 / 2.
Let x_5 = 1 + x + x_4.
Let x_6 = (if (flag_0 = 0) then 0 else x) + x_4.
Let x_7 = (if (flag_0 = 0) then 0 else x_1) + x_2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(tmp_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_4) /\ is_sint32(x_6) /\ is_sint32(x_7) /\
      is_sint32(x_5).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= x_6.
  (* Invariant *)
  Have: (-1) <= x_3.
  (* Then *)
  Have: tmp_0 != 0.
  Core: x_2 = x_5.
}
Prove: x_7 <= (2 + (2 * x) + x_4).
Prover Z3 4.8.12 returns Valid (Qed:10ms) (10ms) (34516)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (6ms) (90)

------------------------------------------------------------

Goal Establishment of Invariant (file out/05_0001/05_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/05_0001/05_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/05_0001/05_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/05_0001/05_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/05_0001/05_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/05_0001/05_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/05_0001/05_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/05_0001/05_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/05_0001/05_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/05_0001/05_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/05_0001/05_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/05_0001/05_merged.c, line 23):
Let x_1 = 1 + x.
Let x_2 = (x_1 * (2 + x)) / 2.
Let x_3 = (x * x_1) / 2.
Let x_4 = (if (flag_0 = 0) then 0 else x) + x_3.
Let x_5 = (if (flag_0 = 0) then 0 else x_1) + x_2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(tmp_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_4) /\ is_sint32(x_5) /\
      is_sint32(x_2 - 1 - x).
  (* Invariant *)
  Have: x_4 < x_2.
  (* Invariant *)
  Have: x_2 = (1 + x + x_3).
  (* Invariant *)
  Have: x_2 <= (1 + x + (if (flag_0 = 0) then 0 else x) + x_3).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: x < x_2.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (-1) <= x.
}
Prove: 0 <= x_5.
Prover Z3 4.8.12 returns Valid (Qed:13ms) (10ms) (34601)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (5ms) (52)

------------------------------------------------------------

Goal Establishment of Invariant (file out/05_0001/05_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/05_0001/05_merged.c, line 24):
Let x_1 = 1 + x.
Let x_2 = x_1 * (2 + x).
Let x_3 = x_2 / 2.
Let x_4 = x + x_3.
Let x_5 = (x * x_1) / 2.
Let x_6 = x + x_5.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(tmp_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_3) /\ is_sint32(x_6) /\ is_sint32(x_4) /\
      is_sint32(x_3 - 1 - x) /\ is_sint32(1 + x + x_3).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: x_6 < x_3.
  (* Invariant *)
  Have: x_3 = (1 + x + x_5).
  (* Invariant *)
  Have: x_3 <= (1 + (2 * x) + x_5).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= x_6.
  (* Invariant *)
  Have: x < x_3.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: (-1) <= x_4.
}
Prove: (-1) <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:14ms) (10ms) (33622)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:14ms) (5ms) (51)

------------------------------------------------------------

Goal Establishment of Invariant (file out/05_0001/05_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Loop assigns (file out/05_0001/05_merged.c, line 25) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/05_0001/05_merged.c, line 25) (2/2):
Call Result at line 30
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/05_0001/05_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/05_0001/05_merged.c:4: Warning: 
  No 'assigns' specification for function 'foo05'.
  Callers assumptions might be imprecise.

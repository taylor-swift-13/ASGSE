[kernel] Parsing out/04_0006/04_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 22 goals scheduled
[wp] [Timeout] typed_foo04_assert (Qed 2ms) (Z3)
[wp] Proved goals:   21 / 22
  Qed:              11
  Alt-Ergo 2.5.4:    8
  Z3 4.8.12:         2 (30ms-690ms)
  Timeout:           1
------------------------------------------------------------
  Function foo04
------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 8):
Let x_1 = y * y.
Let x_2 = y - 1.
Let x_3 = 1 + y.
Let x_4 = (y * x_3) / 2.
Let x_5 = y_1 * y_1.
Let x_6 = y_1 - 1.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_3) /\
      is_sint32(x + y).
  (* Invariant *)
  Have: (-99) <= (y_1 * (1 + y_1)).
  (* Invariant *)
  Have: (-49) <= (x_6 * x_6).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y_1) ->
      (((i * (i - 1)) / 2) <= (49 + x_5)))).
  (* Invariant *)
  Have: (-1) <= (y_1 * x_6).
  (* Invariant *)
  Have: (-49) <= x_5.
  (* Invariant *)
  Have: (50 + x) <= ((y * x_2) / 2).
  (* Invariant *)
  Have: x < x_4.
  (* Invariant *)
  Have: x < (x_2 * x_2).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      ((x + ((i * (i - 1)) / 2)) < x_1))).
  (* Invariant *)
  Have: x < x_1.
  (* Then *)
  Have: x < 0.
}
Prove: (50 + x + y) <= x_4.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (20ms) (52673)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (27ms) (634)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 8):
Assume { Type: is_sint32(y). }
Prove: (-1) <= (y * (y - 1)).
Prover Z3 4.8.12 returns Valid (10ms) (29638)
Prover Alt-Ergo 2.5.4 returns Valid (5ms) (22)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 10):
Let x_1 = 1 + y.
Let x_2 = (y * x_1) / 2.
Let x_3 = y * y.
Let x_4 = y - 1.
Let x_5 = y_1 * y_1.
Let x_6 = y_1 - 1.
Let x_7 = x + y.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_1) /\
      is_sint32(x_7).
  (* Invariant *)
  Have: (-99) <= (y_1 * (1 + y_1)).
  (* Invariant *)
  Have: (-49) <= (x_6 * x_6).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y_1) ->
      (((i * (i - 1)) / 2) <= (49 + x_5)))).
  (* Invariant *)
  Have: (-1) <= (y_1 * x_6).
  (* Invariant *)
  Have: (-49) <= x_5.
  (* Invariant *)
  Have: (50 + x) <= ((y * x_4) / 2).
  (* Invariant *)
  Have: x < x_2.
  (* Invariant *)
  Have: x < (x_4 * x_4).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      ((x + ((i * (i - 1)) / 2)) < x_3))).
  (* Invariant *)
  Have: x < x_3.
  (* Then *)
  Have: x < 0.
  (* Invariant *)
  Have: (50 + x + y) <= x_2.
}
Prove: x_7 < ((x_1 * (2 + y)) / 2).
Prover Z3 4.8.12 returns Valid (Qed:3ms) (20ms) (37894)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (21ms) (596)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 10):
Assume { Type: is_sint32(y). (* Invariant *) Have: (-1) <= (y * (y - 1)). }
Prove: (-99) <= (y * (1 + y)).
Prover Z3 4.8.12 returns Valid (Qed:0.60ms) (20ms) (30073)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:0.60ms) (4ms) (25)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 11):
Let x_1 = x + y.
Let x_2 = 1 + y.
Let x_3 = (y * x_2) / 2.
Let x_4 = y * y.
Let x_5 = y - 1.
Let x_6 = y_1 * y_1.
Let x_7 = y_1 - 1.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_2) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: (-99) <= (y_1 * (1 + y_1)).
  (* Invariant *)
  Have: (-49) <= (x_7 * x_7).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y_1) ->
      (((i * (i - 1)) / 2) <= (49 + x_6)))).
  (* Invariant *)
  Have: (-1) <= (y_1 * x_7).
  (* Invariant *)
  Have: (-49) <= x_6.
  (* Invariant *)
  Have: (50 + x) <= ((y * x_5) / 2).
  (* Invariant *)
  Have: x < x_3.
  (* Invariant *)
  Have: x < (x_5 * x_5).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      ((x + ((i * (i - 1)) / 2)) < x_4))).
  (* Invariant *)
  Have: x < x_4.
  (* Then *)
  Have: x < 0.
  (* Invariant *)
  Have: (50 + x + y) <= x_3.
  (* Invariant *)
  Have: x_1 < ((x_2 * (2 + y)) / 2).
}
Prove: x_1 < x_4.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (34176)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (6ms) (58)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 11):
Let x = y - 1.
Assume {
  Type: is_sint32(y).
  (* Invariant *)
  Have: (-1) <= (y * x).
  (* Invariant *)
  Have: (-99) <= (y * (1 + y)).
}
Prove: (-49) <= (x * x).
Prover Z3 4.8.12 returns Valid (10ms) (29940)
Prover Alt-Ergo 2.5.4 returns Valid (3ms) (9)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 12):
Let x_1 = x + y.
Let x_2 = y * y.
Let x_3 = 1 + y.
Let x_4 = (y * x_3) / 2.
Let x_5 = y - 1.
Let x_6 = y_1 * y_1.
Let x_7 = y_1 - 1.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_3) /\
      is_sint32(x_1).
  (* Goal *)
  When: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: (-99) <= (y_1 * (1 + y_1)).
  (* Invariant *)
  Have: (-49) <= (x_7 * x_7).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y_1) ->
      (((i_1 * (i_1 - 1)) / 2) <= (49 + x_6)))).
  (* Invariant *)
  Have: (-1) <= (y_1 * x_7).
  (* Invariant *)
  Have: (-49) <= x_6.
  (* Invariant *)
  Have: (50 + x) <= ((y * x_5) / 2).
  (* Invariant *)
  Have: x < x_4.
  (* Invariant *)
  Have: x < (x_5 * x_5).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y) ->
      ((x + ((i_1 * (i_1 - 1)) / 2)) < x_2))).
  (* Invariant *)
  Have: x < x_2.
  (* Then *)
  Have: x < 0.
  (* Invariant *)
  Have: (50 + x + y) <= x_4.
  (* Invariant *)
  Have: x_1 < ((x_3 * (2 + y)) / 2).
  (* Invariant *)
  Have: x_1 < x_2.
}
Prove: (x + y + ((i * (i - 1)) / 2)) < (x_3 * x_3).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (30ms) (67169)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 12):
Let x = y - 1.
Assume {
  Type: is_sint32(y).
  (* Goal *)
  When: (0 <= i) /\ (i < y).
  (* Invariant *)
  Have: (-1) <= (y * x).
  (* Invariant *)
  Have: (-99) <= (y * (1 + y)).
  (* Invariant *)
  Have: (-49) <= (x * x).
}
Prove: ((i * (i - 1)) / 2) <= (49 + (y * y)).
Prover Z3 4.8.12 returns Valid (Qed:0.59ms) (690ms) (1578811)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 14):
Let x_1 = 1 + y.
Let x_2 = x_1 * x_1.
Let x_3 = x + y.
Let x_4 = y * y.
Let x_5 = (y * x_1) / 2.
Let x_6 = y - 1.
Let x_7 = y_1 * y_1.
Let x_8 = y_1 - 1.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_1) /\
      is_sint32(x_3).
  (* Invariant *)
  Have: (-99) <= (y_1 * (1 + y_1)).
  (* Invariant *)
  Have: (-49) <= (x_8 * x_8).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y_1) ->
      (((i * (i - 1)) / 2) <= (49 + x_7)))).
  (* Invariant *)
  Have: (-1) <= (y_1 * x_8).
  (* Invariant *)
  Have: (-49) <= x_7.
  (* Invariant *)
  Have: (50 + x) <= ((y * x_6) / 2).
  (* Invariant *)
  Have: x < x_5.
  (* Invariant *)
  Have: x < (x_6 * x_6).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      ((x + ((i * (i - 1)) / 2)) < x_4))).
  (* Invariant *)
  Have: x < x_4.
  (* Then *)
  Have: x < 0.
  (* Invariant *)
  Have: (50 + x + y) <= x_5.
  (* Invariant *)
  Have: x_3 < ((x_1 * (2 + y)) / 2).
  (* Invariant *)
  Have: x_3 < x_4.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= y) ->
      ((x + y + ((i * (i - 1)) / 2)) < x_2))).
}
Prove: x_3 < x_2.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (30ms) (60602)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (25ms) (614)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 14):
Let x = y - 1.
Let x_1 = y * y.
Assume {
  Type: is_sint32(y).
  (* Invariant *)
  Have: (-99) <= (y * (1 + y)).
  (* Invariant *)
  Have: (-49) <= (x * x).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      (((i * (i - 1)) / 2) <= (49 + x_1)))).
  (* Invariant *)
  Have: (-1) <= (y * x).
}
Prove: (-49) <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:0.96ms) (10ms) (30864)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:0.96ms) (18)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assertion (file out/04_0006/04_merged.c, line 25):
Let x_1 = y * y.
Let x_2 = y - 1.
Let x_3 = y_1 * y_1.
Let x_4 = y_1 - 1.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1).
  (* Invariant *)
  Have: (-99) <= (y_1 * (1 + y_1)).
  (* Invariant *)
  Have: (-49) <= (x_4 * x_4).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y_1) ->
      (((i * (i - 1)) / 2) <= (49 + x_3)))).
  (* Invariant *)
  Have: (-1) <= (y_1 * x_4).
  (* Invariant *)
  Have: (-49) <= x_3.
  (* Invariant *)
  Have: (50 + x) <= ((y * x_2) / 2).
  (* Invariant *)
  Have: x < ((y * (1 + y)) / 2).
  (* Invariant *)
  Have: x < (x_2 * x_2).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      ((x + ((i * (i - 1)) / 2)) < x_1))).
  (* Invariant *)
  Have: x < x_1.
  (* Else *)
  Have: 0 <= x.
}
Prove: 0 < y.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/04_0006/04_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/04_0006/04_merged.c:2: Warning: 
  No 'assigns' specification for function 'foo04'.
  Callers assumptions might be imprecise.

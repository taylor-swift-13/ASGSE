[kernel] Parsing out/04_0006/04_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 35 goals scheduled
[wp] [Timeout] typed_foo04_loop_invariant_2_established (Z3)
[wp] [Timeout] typed_foo04_loop_invariant_3_preserved (Qed 5ms) (Z3)
[wp] [Timeout] typed_foo04_loop_invariant_11_established (Qed 1ms) (Z3)
[wp] Proved goals:   32 / 35
  Qed:              19
  Alt-Ergo 2.5.4:    9
  Z3 4.8.12:         4 (10ms-38ms-100ms)
  Timeout:           3
------------------------------------------------------------
  Function foo04
------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 9):
Let x = y - 1.
Let x_1 = y * x.
Let x_2 = x_1 / 2.
Let x_3 = y + x_2.
Let x_4 = 49 + (y * y).
Let x_5 = 1 + y.
Let x_6 = (y * x_5) / 2.
Let x_7 = y_1 * y_1.
Let x_8 = y_1 - 1.
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_5) /\
      is_sint32(x_2 - 50) /\ is_sint32(y + x_2 - 50).
  (* Invariant *)
  Have: ((y_1 * x_8) / 2) = 0.
  (* Invariant *)
  Have: (-99) <= (y_1 * (1 + y_1)).
  (* Invariant *)
  Have: (-49) <= (x_8 * x_8).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y_1) -> ((-101) <= (i * (1 + i))))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y_1) ->
      (((i * (i - 1)) / 2) <= (49 + x_7)))).
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (-49) <= x_7.
  (* Invariant *)
  Have: ((y = 0) -> (x_2 = 0)).
  (* Invariant *)
  Have: x_1 <= 101.
  (* Invariant *)
  Have: x_2 <= (49 + x_6).
  (* Invariant *)
  Have: x_2 <= (49 + (x * x)).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      (x_2 <= (50 + ((i * (1 + i)) / 2))))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      ((x_2 + ((i * (i - 1)) / 2)) <= x_4))).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: (-1) <= x_1.
  (* Invariant *)
  Have: x_2 <= x_4.
  (* Then *)
  Have: x_1 <= 99.
  (* Invariant *)
  Have: ((y = (-1)) -> (x_3 = 0)).
}
Prove: x_6 = x_3.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (51422)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 9):
Assume { Type: is_sint32(y). }
Prove: ((y * (y - 1)) / 2) = 0.
Prover Z3 4.8.12 returns Timeout (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 10):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = x_1 / 2.
Let x_3 = 49 + y + (y * y).
Let x_4 = y - 1.
Let x_5 = y + ((y * x_4) / 2).
Let x_6 = y_1 * y_1.
Let x_7 = y_1 - 1.
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x) /\
      is_sint32(x_2 - 50) /\ is_sint32(x_2 - 50 - y).
  (* Invariant *)
  Have: ((y_1 * x_7) / 2) = 0.
  (* Invariant *)
  Have: (-99) <= (y_1 * (1 + y_1)).
  (* Invariant *)
  Have: (-49) <= (x_7 * x_7).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y_1) -> ((-101) <= (i * (1 + i))))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y_1) ->
      (((i * (i - 1)) / 2) <= (49 + x_6)))).
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (-49) <= x_6.
  (* Invariant *)
  Have: ((y = 0) -> (x_2 = y)).
  (* Invariant *)
  Have: x_2 = x_5.
  (* Invariant *)
  Have: x_2 <= (50 + y).
  (* Invariant *)
  Have: x_2 <= x_5.
  (* Invariant *)
  Have: (-49) <= y.
  (* Invariant *)
  Have: x_2 <= (49 + y + (x_4 * x_4)).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      (x_2 <= (50 + y + ((i * (1 + i)) / 2))))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      ((x_2 + ((i * (i - 1)) / 2)) <= x_3))).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: x_2 <= x_3.
  (* Then *)
  Have: x_2 <= (49 + y).
  (* Invariant *)
  Have: ((y = (-1)) -> (x_2 = 0)).
}
Prove: x_1 <= 101.
Prover Z3 4.8.12 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 13):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = x_1 / 2.
Let x_3 = 49 + y + (y * y).
Let x_4 = y - 1.
Let x_5 = y + ((y * x_4) / 2).
Let x_6 = y_1 * y_1.
Let x_7 = y_1 - 1.
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x) /\
      is_sint32(x_2 - 50) /\ is_sint32(x_2 - 50 - y).
  (* Invariant *)
  Have: ((y_1 * x_7) / 2) = 0.
  (* Invariant *)
  Have: (-99) <= (y_1 * (1 + y_1)).
  (* Invariant *)
  Have: (-49) <= (x_7 * x_7).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y_1) -> ((-101) <= (i * (1 + i))))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y_1) ->
      (((i * (i - 1)) / 2) <= (49 + x_6)))).
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (-49) <= x_6.
  (* Invariant *)
  Have: ((y = 0) -> (x_2 = y)).
  (* Invariant *)
  Have: x_2 = x_5.
  (* Invariant *)
  Have: x_2 <= (50 + y).
  (* Invariant *)
  Have: x_2 <= x_5.
  (* Invariant *)
  Have: (-49) <= y.
  (* Invariant *)
  Have: x_2 <= (49 + y + (x_4 * x_4)).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      (x_2 <= (50 + y + ((i * (1 + i)) / 2))))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      ((x_2 + ((i * (i - 1)) / 2)) <= x_3))).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: x_2 <= x_3.
  (* Then *)
  Have: x_2 <= (49 + y).
  (* Invariant *)
  Have: ((y = (-1)) -> (x_2 = 0)).
  (* Invariant *)
  Have: x_1 <= 101.
}
Prove: x_2 <= (49 + ((x * (2 + y)) / 2)).
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (42162)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (35ms) (708)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 13):
Assume { Type: is_sint32(y). (* Invariant *) Have: ((y * (y - 1)) / 2) = 0. }
Prove: (-99) <= (y * (1 + y)).
Prover Z3 4.8.12 returns Valid (20ms) (33326)
Prover Alt-Ergo 2.5.4 returns Valid (8ms) (84)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 14):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = x_1 / 2.
Let x_3 = y * y.
Let x_4 = 49 + y + x_3.
Let x_5 = y - 1.
Let x_6 = y + ((y * x_5) / 2).
Let x_7 = y_1 * y_1.
Let x_8 = y_1 - 1.
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x) /\
      is_sint32(x_2 - 50) /\ is_sint32(x_2 - 50 - y).
  (* Invariant *)
  Have: ((y_1 * x_8) / 2) = 0.
  (* Invariant *)
  Have: (-99) <= (y_1 * (1 + y_1)).
  (* Invariant *)
  Have: (-49) <= (x_8 * x_8).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y_1) -> ((-101) <= (i * (1 + i))))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y_1) ->
      (((i * (i - 1)) / 2) <= (49 + x_7)))).
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (-49) <= x_7.
  (* Invariant *)
  Have: ((y = 0) -> (x_2 = y)).
  (* Invariant *)
  Have: x_2 = x_6.
  (* Invariant *)
  Have: x_2 <= (50 + y).
  (* Invariant *)
  Have: x_2 <= x_6.
  (* Invariant *)
  Have: (-49) <= y.
  (* Invariant *)
  Have: x_2 <= (49 + y + (x_5 * x_5)).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      (x_2 <= (50 + y + ((i * (1 + i)) / 2))))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      ((x_2 + ((i * (i - 1)) / 2)) <= x_4))).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: x_2 <= x_4.
  (* Then *)
  Have: x_2 <= (49 + y).
  (* Invariant *)
  Have: ((y = (-1)) -> (x_2 = 0)).
  (* Invariant *)
  Have: x_1 <= 101.
  (* Invariant *)
  Have: x_2 <= (49 + ((x * (2 + y)) / 2)).
}
Prove: x_2 <= (49 + x_3).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (37174)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (5ms) (71)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 14):
Let x = y - 1.
Assume {
  Type: is_sint32(y).
  (* Invariant *)
  Have: ((y * x) / 2) = 0.
  (* Invariant *)
  Have: (-99) <= (y * (1 + y)).
}
Prove: (-49) <= (x * x).
Prover Z3 4.8.12 returns Valid (10ms) (31129)
Prover Alt-Ergo 2.5.4 returns Valid (5ms) (10)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 15):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = x_1 / 2.
Let x_3 = y * y.
Let x_4 = 49 + y + x_3.
Let x_5 = y - 1.
Let x_6 = y + ((y * x_5) / 2).
Let x_7 = y_1 * y_1.
Let x_8 = y_1 - 1.
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x) /\
      is_sint32(x_2 - 50) /\ is_sint32(x_2 - 50 - y).
  (* Goal *)
  When: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: ((y_1 * x_8) / 2) = 0.
  (* Invariant *)
  Have: (-99) <= (y_1 * (1 + y_1)).
  (* Invariant *)
  Have: (-49) <= (x_8 * x_8).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y_1) ->
      ((-101) <= (i_1 * (1 + i_1))))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y_1) ->
      (((i_1 * (i_1 - 1)) / 2) <= (49 + x_7)))).
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (-49) <= x_7.
  (* Invariant *)
  Have: ((y = 0) -> (x_2 = y)).
  (* Invariant *)
  Have: x_2 = x_6.
  (* Invariant *)
  Have: x_2 <= (50 + y).
  (* Invariant *)
  Have: x_2 <= x_6.
  (* Invariant *)
  Have: (-49) <= y.
  (* Invariant *)
  Have: x_2 <= (49 + y + (x_5 * x_5)).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y) ->
      (x_2 <= (50 + y + ((i_1 * (1 + i_1)) / 2))))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y) ->
      ((x_2 + ((i_1 * (i_1 - 1)) / 2)) <= x_4))).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: x_2 <= x_4.
  (* Then *)
  Have: x_2 <= (49 + y).
  (* Invariant *)
  Have: ((y = (-1)) -> (x_2 = 0)).
  (* Invariant *)
  Have: x_1 <= 101.
  (* Invariant *)
  Have: x_2 <= (49 + ((x * (2 + y)) / 2)).
  (* Invariant *)
  Have: x_2 <= (49 + x_3).
}
Prove: x_2 <= (50 + ((i * (1 + i)) / 2)).
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (44316)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 15):
Let x = y - 1.
Assume {
  Type: is_sint32(y).
  (* Goal *)
  When: (0 <= i) /\ (i < y).
  (* Invariant *)
  Have: ((y * x) / 2) = 0.
  (* Invariant *)
  Have: (-99) <= (y * (1 + y)).
  (* Invariant *)
  Have: (-49) <= (x * x).
}
Prove: (-101) <= (i * (1 + i)).
Prover Z3 4.8.12 returns Valid (Qed:0.52ms) (20ms) (31042)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:0.52ms) (15)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 16):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = x_1 / 2.
Let x_3 = y * y.
Let x_4 = 49 + y + x_3.
Let x_5 = y - 1.
Let x_6 = y + ((y * x_5) / 2).
Let x_7 = y_1 * y_1.
Let x_8 = y_1 - 1.
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x) /\
      is_sint32(x_2 - 50) /\ is_sint32(x_2 - 50 - y).
  (* Goal *)
  When: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: ((y_1 * x_8) / 2) = 0.
  (* Invariant *)
  Have: (-99) <= (y_1 * (1 + y_1)).
  (* Invariant *)
  Have: (-49) <= (x_8 * x_8).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y_1) ->
      ((-101) <= (i_1 * (1 + i_1))))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y_1) ->
      (((i_1 * (i_1 - 1)) / 2) <= (49 + x_7)))).
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (-49) <= x_7.
  (* Invariant *)
  Have: ((y = 0) -> (x_2 = y)).
  (* Invariant *)
  Have: x_2 = x_6.
  (* Invariant *)
  Have: x_2 <= (50 + y).
  (* Invariant *)
  Have: x_2 <= x_6.
  (* Invariant *)
  Have: (-49) <= y.
  (* Invariant *)
  Have: x_2 <= (49 + y + (x_5 * x_5)).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y) ->
      (x_2 <= (50 + y + ((i_1 * (1 + i_1)) / 2))))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y) ->
      ((x_2 + ((i_1 * (i_1 - 1)) / 2)) <= x_4))).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: x_2 <= x_4.
  (* Then *)
  Have: x_2 <= (49 + y).
  (* Invariant *)
  Have: ((y = (-1)) -> (x_2 = 0)).
  (* Invariant *)
  Have: x_1 <= 101.
  (* Invariant *)
  Have: x_2 <= (49 + ((x * (2 + y)) / 2)).
  (* Invariant *)
  Have: x_2 <= (49 + x_3).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= y) ->
      (x_2 <= (50 + ((i_1 * (1 + i_1)) / 2))))).
}
Prove: (((i * (i - 1)) / 2) + x_2) <= (49 + (x * x)).
Prover Z3 4.8.12 returns Valid (Qed:7ms) (100ms) (187684)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 16):
Let x = y - 1.
Assume {
  Type: is_sint32(y).
  (* Goal *)
  When: (0 <= i) /\ (i < y).
  (* Invariant *)
  Have: ((y * x) / 2) = 0.
  (* Invariant *)
  Have: (-99) <= (y * (1 + y)).
  (* Invariant *)
  Have: (-49) <= (x * x).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y) ->
      ((-101) <= (i_1 * (1 + i_1))))).
}
Prove: ((i * (i - 1)) / 2) <= (49 + (y * y)).
Prover Z3 4.8.12 returns Valid (Qed:1ms) (20ms) (51004)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 17):
Let x = y - 1.
Assume {
  Type: is_sint32(y).
  (* Invariant *)
  Have: ((y * x) / 2) = 0.
  (* Invariant *)
  Have: (-99) <= (y * (1 + y)).
  (* Invariant *)
  Have: (-49) <= (x * x).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) -> ((-101) <= (i * (1 + i))))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      (((i * (i - 1)) / 2) <= (49 + (y * y))))).
}
Prove: 0 <= y.
Prover Z3 4.8.12 returns Valid (Qed:1.00ms) (10ms) (32853)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1.00ms) (5ms) (100)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 18):
Let x = y - 1.
Assume {
  Type: is_sint32(y).
  (* Invariant *)
  Have: ((y * x) / 2) = 0.
  (* Invariant *)
  Have: (-99) <= (y * (1 + y)).
  (* Invariant *)
  Have: (-49) <= (x * x).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) -> ((-101) <= (i * (1 + i))))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      (((i * (i - 1)) / 2) <= (49 + (y * y))))).
  (* Invariant *)
  Have: 0 <= y.
}
Prove: 0 < y.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 19):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = x_1 / 2.
Let x_3 = y * y.
Let x_4 = 49 + y + x_3.
Let x_5 = y - 1.
Let x_6 = y + ((y * x_5) / 2).
Let x_7 = y_1 * y_1.
Let x_8 = y_1 - 1.
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x) /\
      is_sint32(x_2 - 50) /\ is_sint32(x_2 - 50 - y).
  (* Invariant *)
  Have: ((y_1 * x_8) / 2) = 0.
  (* Invariant *)
  Have: (-99) <= (y_1 * (1 + y_1)).
  (* Invariant *)
  Have: (-49) <= (x_8 * x_8).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y_1) -> ((-101) <= (i * (1 + i))))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y_1) ->
      (((i * (i - 1)) / 2) <= (49 + x_7)))).
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (-49) <= x_7.
  (* Invariant *)
  Have: ((y = 0) -> (x_2 = y)).
  (* Invariant *)
  Have: x_2 = x_6.
  (* Invariant *)
  Have: x_2 <= (50 + y).
  (* Invariant *)
  Have: x_2 <= x_6.
  (* Invariant *)
  Have: (-49) <= y.
  (* Invariant *)
  Have: x_2 <= (49 + y + (x_5 * x_5)).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      (x_2 <= (50 + y + ((i * (1 + i)) / 2))))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      ((x_2 + ((i * (i - 1)) / 2)) <= x_4))).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: x_2 <= x_4.
  (* Then *)
  Have: x_2 <= (49 + y).
  (* Invariant *)
  Have: ((y = (-1)) -> (x_2 = 0)).
  (* Invariant *)
  Have: x_1 <= 101.
  (* Invariant *)
  Have: x_2 <= (49 + ((x * (2 + y)) / 2)).
  (* Invariant *)
  Have: x_2 <= (49 + x_3).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= y) ->
      (x_2 <= (50 + ((i * (1 + i)) / 2))))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= y) ->
      ((x_2 + ((i * (i - 1)) / 2)) <= (49 + (x * x))))).
}
Prove: (-1) <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (41300)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (6ms) (80)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 21):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = x_1 / 2.
Let x_3 = 49 + (x * x).
Let x_4 = y * y.
Let x_5 = 49 + y + x_4.
Let x_6 = y - 1.
Let x_7 = y + ((y * x_6) / 2).
Let x_8 = y_1 * y_1.
Let x_9 = y_1 - 1.
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x) /\
      is_sint32(x_2 - 50) /\ is_sint32(x_2 - 50 - y).
  (* Invariant *)
  Have: ((y_1 * x_9) / 2) = 0.
  (* Invariant *)
  Have: (-99) <= (y_1 * (1 + y_1)).
  (* Invariant *)
  Have: (-49) <= (x_9 * x_9).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y_1) -> ((-101) <= (i * (1 + i))))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y_1) ->
      (((i * (i - 1)) / 2) <= (49 + x_8)))).
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (-49) <= x_8.
  (* Invariant *)
  Have: ((y = 0) -> (x_2 = y)).
  (* Invariant *)
  Have: x_2 = x_7.
  (* Invariant *)
  Have: x_2 <= (50 + y).
  (* Invariant *)
  Have: x_2 <= x_7.
  (* Invariant *)
  Have: (-49) <= y.
  (* Invariant *)
  Have: x_2 <= (49 + y + (x_6 * x_6)).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      (x_2 <= (50 + y + ((i * (1 + i)) / 2))))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      ((x_2 + ((i * (i - 1)) / 2)) <= x_5))).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: x_2 <= x_5.
  (* Then *)
  Have: x_2 <= (49 + y).
  (* Invariant *)
  Have: ((y = (-1)) -> (x_2 = 0)).
  (* Invariant *)
  Have: x_1 <= 101.
  (* Invariant *)
  Have: x_2 <= (49 + ((x * (2 + y)) / 2)).
  (* Invariant *)
  Have: x_2 <= (49 + x_4).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= y) ->
      (x_2 <= (50 + ((i * (1 + i)) / 2))))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= y) ->
      ((x_2 + ((i * (i - 1)) / 2)) <= x_3))).
  (* Invariant *)
  Have: (-1) <= x_1.
}
Prove: x_2 <= x_3.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (20ms) (39560)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (5ms) (94)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 21):
Let x = y * y.
Let x_1 = y - 1.
Assume {
  Type: is_sint32(y).
  (* Invariant *)
  Have: ((y * x_1) / 2) = 0.
  (* Invariant *)
  Have: (-99) <= (y * (1 + y)).
  (* Invariant *)
  Have: (-49) <= (x_1 * x_1).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) -> ((-101) <= (i * (1 + i))))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      (((i * (i - 1)) / 2) <= (49 + x)))).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 < y.
}
Prove: (-49) <= x.
Prover Z3 4.8.12 returns Valid (Qed:1ms) (20ms) (31417)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (4ms) (21)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0006/04_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0006/04_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/04_0006/04_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/04_0006/04_merged.c:2: Warning: 
  No 'assigns' specification for function 'foo04'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/036_0002/036_loop_assigns.c (with preprocessing)
[kernel:typing:no-proto] out/036_0002/036_loop_assigns.c:56: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/036_0002/036_loop_assigns.c:15: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/036_0002/036_loop_assigns.c:73: Warning: 
  Calling function unknown3 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/036_0002/036_loop_assigns.c:5: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[kernel:annot:missing-spec] out/036_0002/036_loop_assigns.c:5: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[kernel:annot:missing-spec] out/036_0002/036_loop_assigns.c:5: Warning: 
  Neither code nor specification for function unknown3, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] out/036_0002/036_loop_assigns.c:73: Warning: 
  Missing assigns clause (assigns 'everything' instead)
[wp] out/036_0002/036_loop_assigns.c:15: Warning: 
  Missing assigns clause (assigns 'everything' instead)
[wp] 33 goals scheduled
[wp] [Timeout] typed_foo036_loop_invariant_2_preserved (Qed 12ms) (Z3)
[wp] [Timeout] typed_foo036_loop_invariant_2_established (Qed 5ms) (Z3)
[wp] [Timeout] typed_foo036_loop_invariant_3_established (Qed 6ms) (Z3)
[wp] [Timeout] typed_foo036_loop_invariant_5_established (Qed 6ms) (Z3)
[wp] [Timeout] typed_foo036_loop_invariant_13_established (Qed 4ms) (Z3)
[wp] [Timeout] typed_foo036_loop_assigns_2_part3 (Qed 23ms) (Z3)
[wp] [Timeout] typed_foo036_loop_assigns_2_part4 (Qed 23ms) (Z3)
[wp] Proved goals:   26 / 33
  Qed:              23
  Alt-Ergo 2.5.4:    3 (4ms-20ms-31ms)
  Timeout:           7
------------------------------------------------------------
  Function foo036
------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0002/036_loop_assigns.c, line 20):
Let x_1 = x + y.
Let x_2 = x % 2.
Let x_3 = z - y_1.
Let x_4 = x_3 % 2.
Let x_5 = 1 + x + y.
Assume {
  Type: is_sint32(j) /\ is_sint32(j_1) /\ is_sint32(tmp_0_0) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(z) /\
      is_sint32(x_1) /\ is_sint32(x_5) /\ is_sint32(x_3) /\
      is_sint32(x + y - z).
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: (x_4 = 0) \/ (x_4 = 1).
  (* Invariant *)
  Have: z <= j_1.
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: z <= x_1.
  (* Invariant *)
  Have: (x_2 = 0) \/ (x_2 = 1).
  (* Invariant *)
  Have: x_1 <= j_1.
  (* Invariant *)
  Have: x_1 <= j.
  (* Invariant *)
  Have: ((2 * x) + (2 * y)) <= (j + z).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: x_1 < j.
}
Prove: z <= x_5.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (33293)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (4ms) (24)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0002/036_loop_assigns.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0002/036_loop_assigns.c, line 21):
Let x_1 = 1 + x + y.
Let x_2 = x + y.
Let x_3 = x % 2.
Let x_4 = z - y_1.
Let x_5 = x_4 % 2.
Let x_6 = -z.
Assume {
  Type: is_sint32(j) /\ is_sint32(j_1) /\ is_sint32(tmp_0_0) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(z) /\
      is_sint32(x_2) /\ is_sint32(x_1) /\ is_sint32(x_4) /\
      is_sint32(x + y - z) /\ is_sint32(1 + x + y - z).
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: (x_5 = 0) \/ (x_5 = 1).
  (* Invariant *)
  Have: z <= j_1.
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: z <= x_2.
  (* Invariant *)
  Have: (x_3 = 0) \/ (x_3 = 1).
  (* Invariant *)
  Have: x_2 <= j_1.
  (* Invariant *)
  Have: x_2 <= j.
  (* Invariant *)
  Have: ((2 * x) + (2 * y)) <= (j + z).
  (* Invariant *)
  Have: 0 <= x_2.
  (* Then *)
  Have: x_2 < j.
  (* Invariant *)
  Have: z <= x_1.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:12ms) (3s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:12ms) (3s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0002/036_loop_assigns.c, line 21):
Assume {
  Type: is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(z).
  (* Then *)
  Have: tmp_0_0 != 0.
}
Prove: (x + y) = z.
Prover Z3 4.8.12 returns Timeout (Qed:5ms) (3s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:5ms) (3s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0002/036_loop_assigns.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0002/036_loop_assigns.c, line 22):
Let x = i - y.
Let x_1 = x % 2.
Assume {
  Type: is_sint32(i) /\ is_sint32(tmp_0_0) /\ is_sint32(y) /\ is_sint32(x).
  (* Then *)
  Have: tmp_0_0 != 0.
}
Prove: (x_1 = 0) \/ (x_1 = 1).
Prover Z3 4.8.12 returns Timeout (Qed:6ms) (3s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:6ms) (3s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0002/036_loop_assigns.c, line 23):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0002/036_loop_assigns.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0002/036_loop_assigns.c, line 24):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0002/036_loop_assigns.c, line 24):
Let x_1 = x % 2.
Let x_2 = x + y.
Assume {
  Type: is_sint32(tmp_0_0) /\ is_sint32(w) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_2).
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_1 = 1).
}
Prove: x_2 <= w.
Prover Z3 4.8.12 returns Timeout (Qed:6ms) (3s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:6ms) (3s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0002/036_loop_assigns.c, line 25):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0002/036_loop_assigns.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0002/036_loop_assigns.c, line 26):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0002/036_loop_assigns.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0002/036_loop_assigns.c, line 27):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0002/036_loop_assigns.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0002/036_loop_assigns.c, line 28):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0002/036_loop_assigns.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0002/036_loop_assigns.c, line 29):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0002/036_loop_assigns.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0002/036_loop_assigns.c, line 30):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0002/036_loop_assigns.c, line 30):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0002/036_loop_assigns.c, line 31):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0002/036_loop_assigns.c, line 31):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/036_0002/036_loop_assigns.c, line 32):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/036_0002/036_loop_assigns.c, line 32):
Let x = i - y.
Let x_1 = x % 2.
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(tmp_0_0) /\ is_sint32(y) /\
      is_sint32(x).
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_1 = 1).
  (* Invariant *)
  Have: i <= j.
}
Prove: 0 <= i.
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (3s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (3s)

------------------------------------------------------------

Goal Loop assigns (file out/036_0002/036_loop_assigns.c, line 33):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/036_0002/036_loop_assigns.c, line 54) (1/6):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/036_0002/036_loop_assigns.c, line 54) (2/6):
Call Result at line 56
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Loop assigns (file out/036_0002/036_loop_assigns.c, line 54) (3/6):
Effect at line 58
Let x_4 = x_3 + y.
Let x_5 = x_3 % 2.
Let x_6 = x_2 - y_1.
Let x_7 = x_6 % 2.
Assume {
  Type: is_sint32(j) /\ is_sint32(j_1) /\ is_sint32(tmp_0) /\
      is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_2) /\ is_sint32(x_3) /\ is_sint32(y) /\ is_sint32(y_1) /\
      is_sint32(x_4) /\ is_sint32(x_6) /\ is_sint32(x_3 + y - x_2).
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: (x_7 = 0) \/ (x_7 = 1).
  (* Invariant *)
  Have: x_2 <= j_1.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: x_2 <= x_4.
  (* Invariant *)
  Have: (x_5 = 0) \/ (x_5 = 1).
  (* Invariant *)
  Have: x_4 <= j_1.
  (* Invariant *)
  Have: x_4 <= j.
  (* Invariant *)
  Have: ((2 * x_3) + (2 * y)) <= (j + x_2).
  (* Invariant *)
  Have: 0 <= x_4.
  (* Else *)
  Have: j <= x_4.
  If (x_2 % 2) = 1
  Then { Have: x_2 = x_1. Have: (1 + x_1) = x. }
  Else { Have: x_2 = x. }
  (* Then *)
  Have: tmp_0 != 0.
  (* Then *)
  Have: (x % 2) = 0.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:23ms) (3s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:23ms) (3s)

------------------------------------------------------------

Goal Loop assigns (file out/036_0002/036_loop_assigns.c, line 54) (4/6):
Effect at line 59
Let x_4 = x_3 + y.
Let x_5 = x_3 % 2.
Let x_6 = x_2 - y_1.
Let x_7 = x_6 % 2.
Assume {
  Type: is_sint32(j) /\ is_sint32(j_1) /\ is_sint32(tmp_0) /\
      is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_2) /\ is_sint32(x_3) /\ is_sint32(y) /\ is_sint32(y_1) /\
      is_sint32(x_4) /\ is_sint32(x_6) /\ is_sint32(x_3 + y - x_2).
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: (x_7 = 0) \/ (x_7 = 1).
  (* Invariant *)
  Have: x_2 <= j_1.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: x_2 <= x_4.
  (* Invariant *)
  Have: (x_5 = 0) \/ (x_5 = 1).
  (* Invariant *)
  Have: x_4 <= j_1.
  (* Invariant *)
  Have: x_4 <= j.
  (* Invariant *)
  Have: ((2 * x_3) + (2 * y)) <= (j + x_2).
  (* Invariant *)
  Have: 0 <= x_4.
  (* Else *)
  Have: j <= x_4.
  If (x_2 % 2) = 1
  Then { Have: x_2 = x_1. Have: (1 + x_1) = x. }
  Else { Have: x_2 = x. }
  (* Then *)
  Have: tmp_0 != 0.
  (* Then *)
  Have: (x % 2) = 0.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:23ms) (3s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:23ms) (3s)

------------------------------------------------------------

Goal Loop assigns (file out/036_0002/036_loop_assigns.c, line 54) (5/6):
Effect at line 61
Let x_4 = x_3 + y.
Let x_5 = x_3 % 2.
Let x_6 = x_2 - y_1.
Let x_7 = x_6 % 2.
Assume {
  Type: is_sint32(j) /\ is_sint32(j_1) /\ is_sint32(tmp_0) /\
      is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_2) /\ is_sint32(x_3) /\ is_sint32(y) /\ is_sint32(y_1) /\
      is_sint32(x_4) /\ is_sint32(x_6) /\ is_sint32(x_3 + y - x_2).
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: (x_7 = 0) \/ (x_7 = 1).
  (* Invariant *)
  Have: x_2 <= j_1.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: x_2 <= x_4.
  (* Invariant *)
  Have: (x_5 = 0) \/ (x_5 = 1).
  (* Invariant *)
  Have: x_4 <= j_1.
  (* Invariant *)
  Have: x_4 <= j.
  (* Invariant *)
  Have: ((2 * x_3) + (2 * y)) <= (j + x_2).
  (* Invariant *)
  Have: 0 <= x_4.
  (* Else *)
  Have: j <= x_4.
  If (x_2 % 2) = 1
  Then { Have: x_2 = x_1. Have: (1 + x_1) = x. }
  Else { Have: x_2 = x. }
  (* Then *)
  Have: tmp_0 != 0.
  (* Else *)
  Have: (x % 2) != 0.
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:28ms) (10ms) (37734)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:28ms) (31ms) (457)

------------------------------------------------------------

Goal Loop assigns (file out/036_0002/036_loop_assigns.c, line 54) (6/6):
Effect at line 62
Let x_4 = x_3 + y.
Let x_5 = x_3 % 2.
Let x_6 = x_2 - y_1.
Let x_7 = x_6 % 2.
Assume {
  Type: is_sint32(j) /\ is_sint32(j_1) /\ is_sint32(tmp_0) /\
      is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_2) /\ is_sint32(x_3) /\ is_sint32(y) /\ is_sint32(y_1) /\
      is_sint32(x_4) /\ is_sint32(x_6) /\ is_sint32(x_3 + y - x_2).
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: (x_7 = 0) \/ (x_7 = 1).
  (* Invariant *)
  Have: x_2 <= j_1.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: x_2 <= x_4.
  (* Invariant *)
  Have: (x_5 = 0) \/ (x_5 = 1).
  (* Invariant *)
  Have: x_4 <= j_1.
  (* Invariant *)
  Have: x_4 <= j.
  (* Invariant *)
  Have: ((2 * x_3) + (2 * y)) <= (j + x_2).
  (* Invariant *)
  Have: 0 <= x_4.
  (* Else *)
  Have: j <= x_4.
  If (x_2 % 2) = 1
  Then { Have: x_2 = x_1. Have: (1 + x_1) = x. }
  Else { Have: x_2 = x. }
  (* Then *)
  Have: tmp_0 != 0.
  (* Else *)
  Have: (x % 2) != 0.
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:27ms) (10ms) (37734)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:27ms) (26ms) (457)

------------------------------------------------------------
[wp:pedantic-assigns] out/036_0002/036_loop_assigns.c:1: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/036_0002/036_loop_assigns.c:2: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/036_0002/036_loop_assigns.c:3: Warning: 
  No 'assigns' specification for function 'unknown3'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/036_0002/036_loop_assigns.c:5: Warning: 
  No 'assigns' specification for function 'foo036'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/032_0009/032_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 45 goals scheduled
[wp] [Timeout] typed_foo032_loop_invariant_5_preserved (Qed 17ms) (Z3)
[wp] [Timeout] typed_foo032_loop_invariant_6_preserved (Qed 15ms) (Z3)
[wp] [Timeout] typed_foo032_loop_invariant_7_preserved (Qed 17ms) (Z3)
[wp] [Timeout] typed_foo032_loop_invariant_10_preserved (Qed 16ms) (Z3)
[wp] Proved goals:   41 / 45
  Qed:              36
  Alt-Ergo 2.5.4:    4 (4ms-14ms-45ms)
  Z3 4.8.12:         1 (20ms)
  Timeout:           4
------------------------------------------------------------
  Function foo032
------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0009/032_merged.c, line 8):
Prove: true.
Prover Qed returns Valid (9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0009/032_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0009/032_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0009/032_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0009/032_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0009/032_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0009/032_merged.c, line 11):
Let x = n % 2.
Let x_1 = i + n.
Assume {
  Type: is_sint32(b) /\ is_sint32(b_1) /\ is_sint32(i_1) /\ is_sint32(i) /\
      is_sint32(j) /\ is_sint32(n) /\ is_sint32(1 + i_1) /\ is_sint32(1 + n).
  (* Residual *)
  When: b_1 != 0.
  (* Invariant *)
  Have: x_1 <= (100 + j).
  (* Invariant *)
  Have: x_1 <= (99 + j).
  (* Invariant *)
  Have: (x = 1) \/ (j <= i_1).
  (* Invariant *)
  Have: (if (b_1 = b) then 0 else 1) = x.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < n) ->
      (if ((i_2 % 2) = 0) then (b_1 != b) else (b_1 = b)))).
  (* Invariant *)
  Have: (0 <= n) /\ (n <= 100).
  (* Invariant *)
  Have: ((x = 1) -> (j = i)).
  (* Invariant *)
  Have: ((x = 0) -> (b_1 = b)).
  (* Invariant *)
  Have: ((b_1 = b) -> (x = 0)).
  (* Invariant *)
  Have: ((b_1 != b) -> (x = 1)).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: j <= x_1.
  (* Invariant *)
  Have: if (x = 0) then (b != 0) else (b = 0).
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: ((x = 1) -> (b_1 != b)).
  (* Then *)
  Have: n <= 199.
}
Prove: x_1 <= (98 + j).
Prover Z3 4.8.12 returns Valid (Qed:11ms) (20ms) (58213)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (45ms) (1119)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0009/032_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0009/032_merged.c, line 12):
Let x = i_3 + n.
Let x_1 = n % 2.
Let x_2 = 1 + n.
Assume {
  Type: is_sint32(b) /\ is_sint32(b_1) /\ is_sint32(i) /\ is_sint32(i_1) /\
      is_sint32(i_2) /\ is_sint32(i_3) /\ is_sint32(j) /\ is_sint32(j_1) /\
      is_sint32(j_2) /\ is_sint32(n) /\ is_sint32(x_2).
  (* Invariant *)
  Have: x <= (100 + j_2).
  (* Invariant *)
  Have: x <= (99 + j_2).
  (* Invariant *)
  Have: (x_1 = 1) \/ (j_2 <= i_2).
  (* Invariant *)
  Have: (if (b_1 = b) then 0 else 1) = x_1.
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < n) ->
      (if ((i_4 % 2) = 0) then (b_1 != b) else (b_1 = b)))).
  (* Invariant *)
  Have: (0 <= n) /\ (n <= 100).
  (* Invariant *)
  Have: ((x_1 = 1) -> (j_2 = i_3)).
  (* Invariant *)
  Have: ((x_1 = 0) -> (b_1 = b)).
  (* Invariant *)
  Have: ((b_1 = b) -> (x_1 = 0)).
  (* Invariant *)
  Have: ((b_1 != b) -> (x_1 = 1)).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: j_2 <= x.
  (* Invariant *)
  Have: (if (x_1 = 0) then (b != 0) else (b = 0)) <-> (b_1 != 0).
  (* Invariant *)
  Have: i_3 <= j_2.
  (* Invariant *)
  Have: ((x_1 = 1) -> (b_1 != b)).
  (* Then *)
  Have: n <= 199.
  If b_1 != 0
  Then { Have: (i_2 = i_1) /\ (j_2 = j). Have: (1 + i_1) = i. }
  Else { Have: (i_2 = i) /\ (j_2 = j_1). Have: (1 + j_1) = j. }
  (* Invariant *)
  Have: x <= (99 + j).
  (* Invariant *)
  Have: x <= (98 + j).
}
Prove: ((x_2 % 2) = 1) \/ (j <= i).
Prover Z3 4.8.12 returns Timeout (Qed:17ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:17ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0009/032_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0009/032_merged.c, line 13):
Let x = 1 + n.
Let x_1 = x % 2.
Let x_2 = i_3 + n.
Let x_3 = n % 2.
Assume {
  Type: is_sint32(b_1) /\ is_sint32(b) /\ is_sint32(i) /\ is_sint32(i_1) /\
      is_sint32(i_2) /\ is_sint32(i_3) /\ is_sint32(j) /\ is_sint32(j_1) /\
      is_sint32(j_2) /\ is_sint32(n) /\ is_sint32(x).
  (* Invariant *)
  Have: x_2 <= (100 + j_2).
  (* Invariant *)
  Have: x_2 <= (99 + j_2).
  (* Invariant *)
  Have: (x_3 = 1) \/ (j_2 <= i_2).
  (* Invariant *)
  Have: (if (b = b_1) then 0 else 1) = x_3.
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < n) ->
      (if ((i_4 % 2) = 0) then (b != b_1) else (b = b_1)))).
  (* Invariant *)
  Have: (0 <= n) /\ (n <= 100).
  (* Invariant *)
  Have: ((x_3 = 1) -> (j_2 = i_3)).
  (* Invariant *)
  Have: ((x_3 = 0) -> (b = b_1)).
  (* Invariant *)
  Have: ((b = b_1) -> (x_3 = 0)).
  (* Invariant *)
  Have: ((b != b_1) -> (x_3 = 1)).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: j_2 <= x_2.
  (* Invariant *)
  Have: (if (x_3 = 0) then (b_1 != 0) else (b_1 = 0)) <-> (b != 0).
  (* Invariant *)
  Have: i_3 <= j_2.
  (* Invariant *)
  Have: ((x_3 = 1) -> (b != b_1)).
  (* Then *)
  Have: n <= 199.
  If b != 0
  Then { Have: (i_2 = i_1) /\ (j_2 = j). Have: (1 + i_1) = i. }
  Else { Have: (i_2 = i) /\ (j_2 = j_1). Have: (1 + j_1) = j. }
  (* Invariant *)
  Have: x_2 <= (99 + j).
  (* Invariant *)
  Have: x_2 <= (98 + j).
  (* Invariant *)
  Have: (x_1 = 1) \/ (j <= i).
}
Prove: (if ((if (b = 0) then 1 else 0) = b_1) then 0 else 1) = x_1.
Prover Z3 4.8.12 returns Timeout (Qed:15ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:15ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0009/032_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0009/032_merged.c, line 14):
Let x = 1 + n.
Let x_1 = x % 2.
Let x_2 = i_4 + n.
Let x_3 = n % 2.
Assume {
  Type: is_sint32(b_1) /\ is_sint32(b) /\ is_sint32(i_1) /\ is_sint32(i_2) /\
      is_sint32(i_3) /\ is_sint32(i_4) /\ is_sint32(j) /\ is_sint32(j_1) /\
      is_sint32(j_2) /\ is_sint32(n) /\ is_sint32(x).
  (* Goal *)
  When: (0 <= i) /\ (i <= n).
  (* Invariant *)
  Have: x_2 <= (100 + j_2).
  (* Invariant *)
  Have: x_2 <= (99 + j_2).
  (* Invariant *)
  Have: (x_3 = 1) \/ (j_2 <= i_3).
  (* Invariant *)
  Have: (if (b = b_1) then 0 else 1) = x_3.
  (* Invariant *)
  Have: forall i_5 : Z. ((0 <= i_5) -> ((i_5 < n) ->
      (if ((i_5 % 2) = 0) then (b != b_1) else (b = b_1)))).
  (* Invariant *)
  Have: (0 <= n) /\ (n <= 100).
  (* Invariant *)
  Have: ((x_3 = 1) -> (j_2 = i_4)).
  (* Invariant *)
  Have: ((x_3 = 0) -> (b = b_1)).
  (* Invariant *)
  Have: ((b = b_1) -> (x_3 = 0)).
  (* Invariant *)
  Have: ((b != b_1) -> (x_3 = 1)).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: j_2 <= x_2.
  (* Invariant *)
  Have: (if (x_3 = 0) then (b_1 != 0) else (b_1 = 0)) <-> (b != 0).
  (* Invariant *)
  Have: i_4 <= j_2.
  (* Invariant *)
  Have: ((x_3 = 1) -> (b != b_1)).
  (* Then *)
  Have: n <= 199.
  If b != 0
  Then { Have: (i_3 = i_2) /\ (j_2 = j). Have: (1 + i_2) = i_1. }
  Else { Have: (i_3 = i_1) /\ (j_2 = j_1). Have: (1 + j_1) = j. }
  (* Invariant *)
  Have: x_2 <= (99 + j).
  (* Invariant *)
  Have: x_2 <= (98 + j).
  (* Invariant *)
  Have: (x_1 = 1) \/ (j <= i_1).
  (* Invariant *)
  Have: (if ((if (b = 0) then 1 else 0) = b_1) then 0 else 1) = x_1.
}
Prove: if ((i % 2) = 0) then ((if (b = 0) then 1 else 0) != b_1)
       else ((if (b = 0) then 1 else 0) = b_1).
Prover Z3 4.8.12 returns Timeout (Qed:17ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:17ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0009/032_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0009/032_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0009/032_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (1.00ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0009/032_merged.c, line 16):
Let x = 1 + n.
Let x_1 = x % 2.
Let x_2 = i_3 + n.
Let x_3 = n % 2.
Assume {
  Type: is_sint32(b) /\ is_sint32(b_1) /\ is_sint32(i) /\ is_sint32(i_1) /\
      is_sint32(i_2) /\ is_sint32(i_3) /\ is_sint32(j) /\ is_sint32(j_1) /\
      is_sint32(j_2) /\ is_sint32(n) /\ is_sint32(x).
  (* Invariant *)
  Have: x_2 <= (100 + j_2).
  (* Invariant *)
  Have: x_2 <= (99 + j_2).
  (* Invariant *)
  Have: (x_3 = 1) \/ (j_2 <= i_2).
  (* Invariant *)
  Have: (if (b_1 = b) then 0 else 1) = x_3.
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < n) ->
      (if ((i_4 % 2) = 0) then (b_1 != b) else (b_1 = b)))).
  (* Invariant *)
  Have: (0 <= n) /\ (n <= 100).
  (* Invariant *)
  Have: ((x_3 = 1) -> (j_2 = i_3)).
  (* Invariant *)
  Have: ((x_3 = 0) -> (b_1 = b)).
  (* Invariant *)
  Have: ((b_1 = b) -> (x_3 = 0)).
  (* Invariant *)
  Have: ((b_1 != b) -> (x_3 = 1)).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: j_2 <= x_2.
  (* Invariant *)
  Have: (if (x_3 = 0) then (b != 0) else (b = 0)) <-> (b_1 != 0).
  (* Invariant *)
  Have: i_3 <= j_2.
  (* Invariant *)
  Have: ((x_3 = 1) -> (b_1 != b)).
  (* Then *)
  Have: n <= 199.
  If b_1 != 0
  Then { Have: (i_2 = i_1) /\ (j_2 = j). Have: (1 + i_1) = i. }
  Else { Have: (i_2 = i) /\ (j_2 = j_1). Have: (1 + j_1) = j. }
  (* Invariant *)
  Have: x_2 <= (99 + j).
  (* Invariant *)
  Have: x_2 <= (98 + j).
  (* Invariant *)
  Have: (x_1 = 1) \/ (j <= i).
  (* Invariant *)
  Have: (if ((if (b_1 = 0) then 1 else 0) = b) then 0 else 1) = x_1.
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 <= n) ->
      (if ((i_4 % 2) = 0) then ((if (b_1 = 0) then 1 else 0) != b)
       else ((if (b_1 = 0) then 1 else 0) = b)))).
  (* Invariant *)
  Have: (i <= j) \/ ((-1) <= n).
}
Prove: ((-1) <= n) /\ (n <= 99).
Prover Z3 4.8.12 returns Valid (Qed:16ms) (20ms) (53201)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0009/032_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0009/032_merged.c, line 17):
Let x = i + n.
Let x_1 = n % 2.
Let x_2 = 1 + n.
Assume {
  Type: is_sint32(b) /\ is_sint32(b_1) /\ is_sint32(i_1) /\ is_sint32(i) /\
      is_sint32(j) /\ is_sint32(j_1) /\ is_sint32(j_2) /\ is_sint32(n) /\
      is_sint32(x_2).
  (* Goal *)
  When: (x_2 % 2) = 1.
  (* Invariant *)
  Have: x <= (100 + j_2).
  (* Invariant *)
  Have: x <= (99 + j_2).
  (* Invariant *)
  Have: (x_1 = 1) \/ (j_2 <= i_1).
  (* Invariant *)
  Have: (if (b_1 = b) then 0 else 1) = x_1.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < n) ->
      (if ((i_2 % 2) = 0) then (b_1 != b) else (b_1 = b)))).
  (* Invariant *)
  Have: (0 <= n) /\ (n <= 100).
  (* Invariant *)
  Have: ((x_1 = 1) -> (j_2 = i)).
  (* Invariant *)
  Have: ((x_1 = 0) -> (b_1 = b)).
  (* Invariant *)
  Have: ((b_1 = b) -> (x_1 = 0)).
  (* Invariant *)
  Have: ((b_1 != b) -> (x_1 = 1)).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: j_2 <= x.
  (* Invariant *)
  Have: (if (x_1 = 0) then (b != 0) else (b = 0)) <-> (b_1 != 0).
  (* Invariant *)
  Have: i <= j_2.
  (* Invariant *)
  Have: ((x_1 = 1) -> (b_1 != b)).
  (* Then *)
  Have: n <= 199.
  If b_1 != 0
  Then { Have: j_2 = j. }
  Else { Have: j_2 = j_1. Have: (1 + j_1) = j. }
  (* Invariant *)
  Have: x <= (99 + j).
  (* Invariant *)
  Have: x <= (98 + j).
  (* Invariant *)
  Have: (if (b_1 = 0) then 1 else 0) != b.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= n) -> ((i_2 % 2) = 0))).
  (* Invariant *)
  Have: ((-1) <= n) /\ (n <= 99).
}
Prove: j = i.
Prover Z3 4.8.12 returns Timeout (Qed:16ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:16ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0009/032_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0009/032_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0009/032_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0009/032_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0009/032_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0009/032_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0009/032_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0009/032_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0009/032_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.85ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0009/032_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0009/032_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0009/032_merged.c, line 23):
Let x = 1 + n.
Let x_1 = x % 2.
Let x_2 = 1 + i_1.
Let x_3 = i + n.
Let x_4 = n % 2.
Assume {
  Type: is_sint32(b) /\ is_sint32(b_1) /\ is_sint32(i_1) /\ is_sint32(i) /\
      is_sint32(j) /\ is_sint32(n) /\ is_sint32(x_2) /\ is_sint32(x).
  (* Residual *)
  When: b_1 != 0.
  (* Invariant *)
  Have: x_3 <= (100 + j).
  (* Invariant *)
  Have: x_3 <= (99 + j).
  (* Invariant *)
  Have: (x_4 = 1) \/ (j <= i_1).
  (* Invariant *)
  Have: (if (b_1 = b) then 0 else 1) = x_4.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < n) ->
      (if ((i_2 % 2) = 0) then (b_1 != b) else (b_1 = b)))).
  (* Invariant *)
  Have: (0 <= n) /\ (n <= 100).
  (* Invariant *)
  Have: ((x_4 = 1) -> (j = i)).
  (* Invariant *)
  Have: ((x_4 = 0) -> (b_1 = b)).
  (* Invariant *)
  Have: ((b_1 = b) -> (x_4 = 0)).
  (* Invariant *)
  Have: ((b_1 != b) -> (x_4 = 1)).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: j <= x_3.
  (* Invariant *)
  Have: if (x_4 = 0) then (b != 0) else (b = 0).
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: ((x_4 = 1) -> (b_1 != b)).
  (* Then *)
  Have: n <= 199.
  (* Invariant *)
  Have: x_3 <= (98 + j).
  (* Invariant *)
  Have: (x_1 = 1) \/ (j <= x_2).
  (* Invariant *)
  Have: (if (b = 0) then 0 else 1) = x_1.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= n) ->
      (if ((i_2 % 2) = 0) then (b != 0) else (b = 0)))).
  (* Invariant *)
  Have: ((-1) <= n) /\ (n <= 99).
  (* Invariant *)
  Have: ((x_1 = 1) -> (j = i)).
  (* Invariant *)
  Have: ((x_1 = 0) -> (b = 0)).
  (* Invariant *)
  Have: ((b = 0) -> (x_1 = 0)).
  (* Invariant *)
  Have: ((b != 0) -> (x_1 = 1)).
}
Prove: j <= (1 + i + n).
Prover Z3 4.8.12 returns Valid (Qed:16ms) (10ms) (36170)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:16ms) (4ms) (34)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0009/032_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0009/032_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0009/032_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0009/032_merged.c, line 25):
Let x = 1 + n.
Let x_1 = x % 2.
Let x_2 = i_3 + n.
Let x_3 = n % 2.
Assume {
  Type: is_sint32(b) /\ is_sint32(b_1) /\ is_sint32(i) /\ is_sint32(i_1) /\
      is_sint32(i_2) /\ is_sint32(i_3) /\ is_sint32(j) /\ is_sint32(j_1) /\
      is_sint32(j_2) /\ is_sint32(n) /\ is_sint32(x).
  (* Invariant *)
  Have: x_2 <= (100 + j_2).
  (* Invariant *)
  Have: x_2 <= (99 + j_2).
  (* Invariant *)
  Have: (x_3 = 1) \/ (j_2 <= i_2).
  (* Invariant *)
  Have: (if (b_1 = b) then 0 else 1) = x_3.
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < n) ->
      (if ((i_4 % 2) = 0) then (b_1 != b) else (b_1 = b)))).
  (* Invariant *)
  Have: (0 <= n) /\ (n <= 100).
  (* Invariant *)
  Have: ((x_3 = 1) -> (j_2 = i_3)).
  (* Invariant *)
  Have: ((x_3 = 0) -> (b_1 = b)).
  (* Invariant *)
  Have: ((b_1 = b) -> (x_3 = 0)).
  (* Invariant *)
  Have: ((b_1 != b) -> (x_3 = 1)).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: j_2 <= x_2.
  (* Invariant *)
  Have: (if (x_3 = 0) then (b != 0) else (b = 0)) <-> (b_1 != 0).
  (* Invariant *)
  Have: i_3 <= j_2.
  (* Invariant *)
  Have: ((x_3 = 1) -> (b_1 != b)).
  (* Then *)
  Have: n <= 199.
  If b_1 != 0
  Then { Have: (i_2 = i_1) /\ (j_2 = j). Have: (1 + i_1) = i. }
  Else { Have: (i_2 = i) /\ (j_2 = j_1). Have: (1 + j_1) = j. }
  (* Invariant *)
  Have: x_2 <= (99 + j).
  (* Invariant *)
  Have: x_2 <= (98 + j).
  (* Invariant *)
  Have: (x_1 = 1) \/ (j <= i).
  (* Invariant *)
  Have: (if ((if (b_1 = 0) then 1 else 0) = b) then 0 else 1) = x_1.
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 <= n) ->
      (if ((i_4 % 2) = 0) then ((if (b_1 = 0) then 1 else 0) != b)
       else ((if (b_1 = 0) then 1 else 0) = b)))).
  (* Invariant *)
  Have: ((-1) <= n) /\ (n <= 99).
  (* Invariant *)
  Have: ((x_1 = 1) -> (j = i_3)).
  (* Invariant *)
  Have: ((x_1 = 0) -> ((if (b_1 = 0) then 1 else 0) = b)).
  (* Invariant *)
  Have: (((if (b_1 = 0) then 1 else 0) = b) -> (x_1 = 0)).
  (* Invariant *)
  Have: (((if (b_1 = 0) then 1 else 0) != b) -> (x_1 = 1)).
  (* Invariant *)
  Have: j <= (1 + i_3 + n).
}
Prove: (if (x_1 = 0) then (b != 0) else (b = 0)) <-> (b_1 = 0).
Prover Z3 4.8.12 returns Valid (Qed:17ms) (10ms) (41683)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:17ms) (4ms) (142)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0009/032_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0009/032_merged.c, line 26):
Let x = 1 + n.
Let x_1 = x % 2.
Let x_2 = 1 + j.
Let x_3 = n % 2.
Let x_4 = i + n.
Assume {
  Type: is_sint32(b) /\ is_sint32(i_1) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(n) /\ is_sint32(x_2) /\ is_sint32(x).
  (* Invariant *)
  Have: x_4 <= (100 + j).
  (* Invariant *)
  Have: x_4 <= (99 + j).
  (* Invariant *)
  Have: (x_3 = 1) \/ (j <= i_1).
  (* Invariant *)
  Have: (if (b = 0) then 0 else 1) = x_3.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < n) ->
      (if ((i_2 % 2) = 0) then (b != 0) else (b = 0)))).
  (* Invariant *)
  Have: (0 <= n) /\ (n <= 100).
  (* Invariant *)
  Have: ((x_3 = 1) -> (j = i)).
  (* Invariant *)
  Have: ((x_3 = 0) -> (b = 0)).
  (* Invariant *)
  Have: ((b = 0) -> (x_3 = 0)).
  (* Invariant *)
  Have: ((b != 0) -> (x_3 = 1)).
  (* Invariant *)
  Have: n <= 200.
  (* Invariant *)
  Have: j <= x_4.
  (* Invariant *)
  Have: !(if (x_3 = 0) then (b != 0) else (b = 0)).
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: ((x_3 = 1) -> (b != 0)).
  (* Then *)
  Have: n <= 199.
  (* Invariant *)
  Have: (x_1 = 1) \/ (j < i_1).
  (* Invariant *)
  Have: (if (b = 1) then 0 else 1) = x_1.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= n) ->
      (if ((i_2 % 2) = 0) then (b != 1) else (b = 1)))).
  (* Invariant *)
  Have: ((-1) <= n) /\ (n <= 99).
  (* Invariant *)
  Have: ((x_1 = 1) -> (x_2 = i)).
  (* Invariant *)
  Have: ((x_1 = 0) -> (b = 1)).
  (* Invariant *)
  Have: ((b = 1) -> (x_1 = 0)).
  (* Invariant *)
  Have: ((b != 1) -> (x_1 = 1)).
  (* Invariant *)
  Have: if (x_1 = 0) then (b != 0) else (b = 0).
}
Prove: i <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:17ms) (20ms) (35780)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:17ms) (6ms) (33)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0009/032_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0009/032_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0009/032_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0009/032_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0009/032_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/032_0009/032_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/032_0009/032_merged.c, line 29):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/032_0009/032_merged.c, line 30):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/032_0009/032_merged.c:3: Warning: 
  No 'assigns' specification for function 'foo032'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/017_0016/017_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 30 goals scheduled
[wp] [Timeout] typed_foo017_loop_invariant_preserved (Qed 11ms) (Z3)
[wp] Proved goals:   29 / 30
  Qed:              25
  Alt-Ergo 2.5.4:    4
  Timeout:           1
------------------------------------------------------------
  Function foo017
------------------------------------------------------------

Goal Preservation of Invariant (file out/017_0016/017_merged.c, line 9):
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(j_1) /\ is_sint32(k) /\
      is_sint32(k_1) /\ is_sint32(n) /\ is_sint32(1 + i).
  (* Invariant *)
  Have: i <= k_1.
  (* Invariant *)
  Have: forall i_2,i_1 : Z. ((0 < i_2) -> ((i_2 <= i) -> ((0 <= i_1) ->
      ((i_1 < i_2) -> (i_2 <= (k_1 + i_1)))))).
  (* Invariant *)
  Have: forall i_2,i_1 : Z. ((0 < i_2) -> ((i_2 < i) -> ((0 <= i_1) ->
      ((i_1 < i_2) -> (i_2 <= (k_1 + i_1)))))).
  (* Invariant *)
  Have: 0 < k_1.
  (* Invariant *)
  Have: 0 < i.
  (* Invariant *)
  Have: 0 <= j_1.
  (* Then *)
  Have: i < n.
  (* Invariant *)
  Have: j <= i.
  (* Invariant *)
  Have: i <= k.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 <= j.
  (* Else *)
  Have: i <= j.
}
Prove: i < k.
Prover Z3 4.8.12 returns Timeout (Qed:11ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:11ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/017_0016/017_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/017_0016/017_merged.c, line 10):
Let x = 1 + i_2.
Assume {
  Type: is_sint32(i_2) /\ is_sint32(j) /\ is_sint32(j_1) /\ is_sint32(k) /\
      is_sint32(k_1) /\ is_sint32(n) /\ is_sint32(x).
  (* Goal *)
  When: (0 < i) /\ (0 <= i_1) /\ (i_1 < i) /\ (i <= x).
  (* Invariant *)
  Have: i_2 <= k_1.
  (* Invariant *)
  Have: forall i_4,i_3 : Z. ((0 < i_4) -> ((i_4 <= i_2) -> ((0 <= i_3) ->
      ((i_3 < i_4) -> (i_4 <= (k_1 + i_3)))))).
  (* Invariant *)
  Have: forall i_4,i_3 : Z. ((0 < i_4) -> ((i_4 < i_2) -> ((0 <= i_3) ->
      ((i_3 < i_4) -> (i_4 <= (k_1 + i_3)))))).
  (* Invariant *)
  Have: 0 < k_1.
  (* Invariant *)
  Have: 0 < i_2.
  (* Invariant *)
  Have: 0 <= j_1.
  (* Then *)
  Have: i_2 < n.
  (* Invariant *)
  Have: j <= i_2.
  (* Invariant *)
  Have: i_2 <= k.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 <= j.
  (* Else *)
  Have: i_2 <= j.
  (* Invariant *)
  Have: i_2 < k.
}
Prove: i <= (i_1 + k).
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (33878)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (5ms) (26)

------------------------------------------------------------

Goal Establishment of Invariant (file out/017_0016/017_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/017_0016/017_merged.c, line 11):
Let x = 1 + i_2.
Assume {
  Type: is_sint32(i_2) /\ is_sint32(j) /\ is_sint32(j_1) /\ is_sint32(k) /\
      is_sint32(k_1) /\ is_sint32(n) /\ is_sint32(x).
  (* Goal *)
  When: (0 < i) /\ (0 <= i_1) /\ (i_1 < i) /\ (i <= i_2).
  (* Invariant *)
  Have: i_2 <= k_1.
  (* Invariant *)
  Have: forall i_4,i_3 : Z. ((0 < i_4) -> ((i_4 <= i_2) -> ((0 <= i_3) ->
      ((i_3 < i_4) -> (i_4 <= (k_1 + i_3)))))).
  (* Invariant *)
  Have: forall i_4,i_3 : Z. ((0 < i_4) -> ((i_4 < i_2) -> ((0 <= i_3) ->
      ((i_3 < i_4) -> (i_4 <= (k_1 + i_3)))))).
  (* Invariant *)
  Have: 0 < k_1.
  (* Invariant *)
  Have: 0 < i_2.
  (* Invariant *)
  Have: 0 <= j_1.
  (* Then *)
  Have: i_2 < n.
  (* Invariant *)
  Have: j <= i_2.
  (* Invariant *)
  Have: i_2 <= k.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 <= j.
  (* Else *)
  Have: i_2 <= j.
  (* Invariant *)
  Have: i_2 < k.
  (* Invariant *)
  Have: forall i_4,i_3 : Z. ((0 < i_4) -> ((0 <= i_3) -> ((i_3 < i_4) ->
      ((i_4 <= x) -> (i_4 <= (k + i_3)))))).
}
Prove: i <= (i_1 + k).
Prover Z3 4.8.12 returns Valid (Qed:7ms) (20ms) (34734)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (26)

------------------------------------------------------------

Goal Establishment of Invariant (file out/017_0016/017_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/017_0016/017_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/017_0016/017_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/017_0016/017_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/017_0016/017_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/017_0016/017_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/017_0016/017_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/017_0016/017_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/017_0016/017_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.86ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/017_0016/017_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/017_0016/017_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/017_0016/017_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/017_0016/017_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/017_0016/017_merged.c, line 25):
Let x = j + k_1.
Assume {
  Type: is_sint32(j) /\ is_sint32(j_1) /\ is_sint32(k_1) /\ is_sint32(k) /\
      is_sint32(k_2) /\ is_sint32(n) /\ is_sint32(1 + j) /\
      is_sint32(j + k_1 - k).
  (* Invariant *)
  Have: x <= (k + k_2).
  (* Invariant *)
  Have: forall i_1,i : Z. ((0 < i_1) -> ((0 <= i) -> ((i < i_1) ->
      (((k + i_1) <= x) -> (i_1 <= (k_2 + i)))))).
  (* Invariant *)
  Have: forall i_1,i : Z. ((0 < i_1) -> ((0 <= i) -> ((i < i_1) ->
      (((k + i_1) < x) -> (i_1 <= (k_2 + i)))))).
  (* Invariant *)
  Have: 0 < k_2.
  (* Invariant *)
  Have: k < x.
  (* Invariant *)
  Have: 0 <= j_1.
  (* Then *)
  Have: x < (k + n).
  (* Invariant *)
  Have: k <= k_1.
  (* Invariant *)
  Have: x <= (2 * k).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 <= j.
  (* Then *)
  Have: k < k_1.
}
Prove: j <= k.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (33773)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (7ms) (23)

------------------------------------------------------------

Goal Establishment of Invariant (file out/017_0016/017_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/017_0016/017_merged.c, line 26):
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(j_1) /\ is_sint32(k) /\
      is_sint32(k_1) /\ is_sint32(n) /\ is_sint32(1 + j) /\
      is_sint32(i + k - j).
  (* Invariant *)
  Have: i <= k_1.
  (* Invariant *)
  Have: forall i_2,i_1 : Z. ((0 < i_2) -> ((i_2 <= i) -> ((0 <= i_1) ->
      ((i_1 < i_2) -> (i_2 <= (k_1 + i_1)))))).
  (* Invariant *)
  Have: forall i_2,i_1 : Z. ((0 < i_2) -> ((i_2 < i) -> ((0 <= i_1) ->
      ((i_1 < i_2) -> (i_2 <= (k_1 + i_1)))))).
  (* Invariant *)
  Have: 0 < k_1.
  (* Invariant *)
  Have: 0 < i.
  (* Invariant *)
  Have: 0 <= j_1.
  (* Then *)
  Have: i < n.
  (* Invariant *)
  Have: j <= i.
  (* Invariant *)
  Have: i <= k.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 <= j.
  (* Then *)
  Have: j < i.
  (* Invariant *)
  Have: j <= k.
}
Prove: j < (i + k).
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (33630)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (7ms) (45)

------------------------------------------------------------

Goal Establishment of Invariant (file out/017_0016/017_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/017_0016/017_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/017_0016/017_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/017_0016/017_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/017_0016/017_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/017_0016/017_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/017_0016/017_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/017_0016/017_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/017_0016/017_merged.c, line 30):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/017_0016/017_merged.c:3: Warning: 
  No 'assigns' specification for function 'foo017'.
  Callers assumptions might be imprecise.

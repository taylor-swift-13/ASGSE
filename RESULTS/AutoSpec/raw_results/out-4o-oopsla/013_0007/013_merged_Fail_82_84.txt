[kernel] Parsing out/013_0007/013_merged.c (with preprocessing)
[kernel:typing:no-proto] out/013_0007/013_merged.c:54: Warning: 
  Calling function unknown that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/013_0007/013_merged.c:4: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 84 goals scheduled
[wp] [Timeout] typed_foo013_loop_invariant_preserved (Qed 10ms) (Z3)
[wp] [Timeout] typed_foo013_loop_invariant_7_preserved (Qed 12ms) (Z3)
[wp] Proved goals:   82 / 84
  Qed:              77
  Alt-Ergo 2.5.4:    3 (2ms-4ms-5ms)
  Z3 4.8.12:         2 (20ms)
  Timeout:           2
------------------------------------------------------------
  Function foo013
------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 10):
Let x = j_2 % 4.
Let x_1 = j_2 - 2.
Let x_2 = x_1 / 2.
Let x_3 = 2 * x_2.
Let x_4 = 2 + x_3.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(j_1) /\
      is_sint32(j_2) /\ is_sint32(k) /\ is_sint32(tmp_0) /\ is_sint32(x_2).
  (* Invariant *)
  Have: (x_4 = j_2) \/ ((flag_0 != 0) /\ (x = 2)).
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x = 2)).
  (* Invariant *)
  Have: (x_1 % 4) = 0.
  (* Invariant *)
  Have: (flag_0 != 0) \/ ((flag_0 = 0) /\ (x_4 = j_2)).
  (* Invariant *)
  Have: (x_4 = j_2) \/ ((3 + x_3) <= j_2).
  (* Invariant *)
  Have: (flag_0 != 0) \/ (x_4 = j_2).
  (* Invariant *)
  Have: (j_2 % 2) = 0.
  (* Invariant *)
  Have: 2 <= j_2.
  (* Invariant *)
  Have: x_4 <= j_2.
  (* Invariant *)
  Have: 0 < j_2.
  (* Invariant *)
  Have: ((flag_0 != 0) -> ((x_2 = 0) -> (x = 2))).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x_4 = j_2)).
  (* Invariant *)
  Have: (flag_0 = 0) \/ (x = 2).
  (* Then *)
  Have: tmp_0 != 0.
  If flag_0 != 0
  Then { Have: x_2 = k. Have: (4 + j_2) = j. }
  Else {
    Have: j_2 = j_1.
    Have: (2 + j_1) = j.
    Have: (1 + ((j_1 - 2) / 2)) = k.
  }
}
Prove: ((j - 2) / 2) = k.
Prover Z3 4.8.12 returns Timeout (Qed:10ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:10ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 11):
Let x = j_3 % 4.
Let x_1 = j_3 - 2.
Let x_2 = x_1 / 2.
Let x_3 = 2 * x_2.
Let x_4 = 2 + x_3.
Let x_5 = (j - 2) / 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(j_1) /\
      is_sint32(j_2) /\ is_sint32(j_3) /\ is_sint32(k) /\ is_sint32(tmp_0) /\
      is_sint32(x_5) /\ is_sint32(x_2).
  (* Invariant *)
  Have: (x_4 = j_3) \/ ((flag_0 != 0) /\ (x = 2)).
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x = 2)).
  (* Invariant *)
  Have: (x_1 % 4) = 0.
  (* Invariant *)
  Have: (flag_0 != 0) \/ ((flag_0 = 0) /\ (x_4 = j_3)).
  (* Invariant *)
  Have: (x_4 = j_3) \/ ((3 + x_3) <= j_3).
  (* Invariant *)
  Have: (flag_0 != 0) \/ (x_4 = j_3).
  (* Invariant *)
  Have: (j_3 % 2) = 0.
  (* Invariant *)
  Have: 2 <= j_3.
  (* Invariant *)
  Have: x_4 <= j_3.
  (* Invariant *)
  Have: 0 < j_3.
  (* Invariant *)
  Have: ((flag_0 != 0) -> ((x_2 = 0) -> (x = 2))).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x_4 = j_3)).
  (* Invariant *)
  Have: (flag_0 = 0) \/ (x = 2).
  (* Then *)
  Have: tmp_0 != 0.
  If flag_0 != 0
  Then {
    Have: (j_3 = j_1) /\ (((2 + j_1) / 2) = ((j_1 - 2) / 2)).
    Have: (4 + j_1) = j.
  }
  Else {
    Let x_6 = j_2 / 2.
    Have: (j_3 = j_2) /\ (x_6 = (1 + k)) /\ (x_6 = (1 + ((j_2 - 2) / 2))).
    Have: (2 + j_2) = j.
  }
}
Prove: ((2 + (2 * x_5)) = j) \/ ((flag_0 != 0) /\ ((j % 4) = 2)).
Prover Z3 4.8.12 returns Valid (Qed:12ms) (20ms) (47652)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 14):
Let x = 4 + j.
Let x_1 = x % 4.
Let x_2 = 2 + j.
Let x_3 = x_2 / 2.
Let x_4 = j - 2.
Let x_5 = x_4 / 2.
Let x_6 = 2 * x_5.
Let x_7 = 2 + x_6.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_0) /\
      is_sint32(x) /\ is_sint32(x_5) /\ is_sint32(x_3).
  (* Goal *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: 2 <= j.
  (* Invariant *)
  Have: (j % 4) = 2.
  (* Invariant *)
  Have: (x_4 % 4) = 0.
  (* Invariant *)
  Have: x_7 <= j.
  (* Invariant *)
  Have: (x_7 = j) \/ ((3 + x_6) <= j).
  (* Invariant *)
  Have: (j % 2) = 0.
  (* Invariant *)
  Have: 0 < j.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_3 = x_5.
  (* Invariant *)
  Have: (x_1 = 2) \/ (x_2 = (2 * x_3)).
  (* Invariant *)
  Have: (-2) <= j.
}
Prove: x_1 = 2.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (34792)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (5ms) (30)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (8ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 16):
Let x = j - 2.
Let x_1 = x / 2.
Let x_2 = 2 + (2 * x_1).
Let x_3 = j % 4.
Let x_4 = j_3 % 4.
Let x_5 = j_3 - 2.
Let x_6 = x_5 / 2.
Let x_7 = 2 * x_6.
Let x_8 = 2 + x_7.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(j_1) /\
      is_sint32(j_2) /\ is_sint32(j_3) /\ is_sint32(k) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_6).
  (* Invariant *)
  Have: (x_8 = j_3) \/ ((flag_0 != 0) /\ (x_4 = 2)).
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x_4 = 2)).
  (* Invariant *)
  Have: (x_5 % 4) = 0.
  (* Invariant *)
  Have: (flag_0 != 0) \/ ((flag_0 = 0) /\ (x_8 = j_3)).
  (* Invariant *)
  Have: (x_8 = j_3) \/ ((3 + x_7) <= j_3).
  (* Invariant *)
  Have: (flag_0 != 0) \/ (x_8 = j_3).
  (* Invariant *)
  Have: (j_3 % 2) = 0.
  (* Invariant *)
  Have: 2 <= j_3.
  (* Invariant *)
  Have: x_8 <= j_3.
  (* Invariant *)
  Have: 0 < j_3.
  (* Invariant *)
  Have: ((flag_0 != 0) -> ((x_6 = 0) -> (x_4 = 2))).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x_8 = j_3)).
  (* Invariant *)
  Have: (flag_0 = 0) \/ (x_4 = 2).
  (* Then *)
  Have: tmp_0 != 0.
  If flag_0 != 0
  Then {
    Have: (j_3 = j_1) /\ (((2 + j_1) / 2) = ((j_1 - 2) / 2)).
    Have: (4 + j_1) = j.
  }
  Else {
    Let x_9 = j_2 / 2.
    Have: (j_3 = j_2) /\ (x_9 = (1 + k)) /\ (x_9 = (1 + ((j_2 - 2) / 2))).
    Have: (2 + j_2) = j.
  }
  (* Invariant *)
  Have: (x_2 = j) \/ ((flag_0 != 0) /\ (x_3 = 2)).
  (* Invariant *)
  Have: (flag_0 != 0) \/ (x_2 <= j).
  (* Invariant *)
  Have: ((flag_0 != 0) -> (2 <= j)).
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x_3 = 2)).
  (* Invariant *)
  Have: (2 <= j) \/ (x_2 <= j).
}
Prove: (x % 4) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:12ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:12ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 17):
Let x = 2 + j.
Let x_1 = 4 + j.
Let x_2 = x / 2.
Let x_3 = j - 2.
Let x_4 = x_3 / 2.
Let x_5 = 2 * x_4.
Let x_6 = 2 + x_5.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_4) /\ is_sint32(x_2).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: (j % 4) = 2.
  (* Invariant *)
  Have: (x_3 % 4) = 0.
  (* Invariant *)
  Have: (x_6 = j) \/ ((3 + x_5) <= j).
  (* Invariant *)
  Have: (j % 2) = 0.
  (* Invariant *)
  Have: 2 <= j.
  (* Invariant *)
  Have: x_6 <= j.
  (* Invariant *)
  Have: 0 < j.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_2 = x_4.
  (* Invariant *)
  Have: (-2) <= j.
  (* Invariant *)
  Have: (x_1 % 4) = 2.
  (* Invariant *)
  Have: (x % 4) = 0.
}
Prove: (2 * x_2) <= x.
Prover Z3 4.8.12 returns Valid (Qed:11ms) (10ms) (35634)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (2ms) (30)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 19):
Let x = 2 + j.
Let x_1 = x / 2.
Let x_2 = 2 * x_1.
Let x_3 = 4 + j.
Let x_4 = j - 2.
Let x_5 = x_4 / 2.
Let x_6 = 2 * x_5.
Let x_7 = 2 + x_6.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_0) /\
      is_sint32(x_3) /\ is_sint32(x_5) /\ is_sint32(x_1).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: (j % 4) = 2.
  (* Invariant *)
  Have: (x_4 % 4) = 0.
  (* Invariant *)
  Have: (x_7 = j) \/ ((3 + x_6) <= j).
  (* Invariant *)
  Have: (j % 2) = 0.
  (* Invariant *)
  Have: 2 <= j.
  (* Invariant *)
  Have: x_7 <= j.
  (* Invariant *)
  Have: 0 < j.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_1 = x_5.
  (* Invariant *)
  Have: (-2) <= j.
  (* Invariant *)
  Have: (x_3 % 4) = 2.
  (* Invariant *)
  Have: (x % 4) = 0.
  (* Invariant *)
  Have: x_2 <= x.
}
Prove: (x = x_2) \/ (x_2 <= (1 + j)).
Prover Z3 4.8.12 returns Valid (Qed:11ms) (20ms) (35684)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (5ms) (33)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 21):
Let x = j - 2.
Let x_1 = x / 2.
Let x_2 = 2 * x_1.
Let x_3 = 2 + x_2.
Let x_4 = j % 4.
Let x_5 = j_3 % 4.
Let x_6 = j_3 - 2.
Let x_7 = x_6 / 2.
Let x_8 = 2 * x_7.
Let x_9 = 2 + x_8.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(j_1) /\
      is_sint32(j_2) /\ is_sint32(j_3) /\ is_sint32(k) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_7).
  (* Invariant *)
  Have: (x_9 = j_3) \/ ((flag_0 != 0) /\ (x_5 = 2)).
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x_5 = 2)).
  (* Invariant *)
  Have: (x_6 % 4) = 0.
  (* Invariant *)
  Have: (flag_0 != 0) \/ ((flag_0 = 0) /\ (x_9 = j_3)).
  (* Invariant *)
  Have: (x_9 = j_3) \/ ((3 + x_8) <= j_3).
  (* Invariant *)
  Have: (flag_0 != 0) \/ (x_9 = j_3).
  (* Invariant *)
  Have: (j_3 % 2) = 0.
  (* Invariant *)
  Have: 2 <= j_3.
  (* Invariant *)
  Have: x_9 <= j_3.
  (* Invariant *)
  Have: 0 < j_3.
  (* Invariant *)
  Have: ((flag_0 != 0) -> ((x_7 = 0) -> (x_5 = 2))).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x_9 = j_3)).
  (* Invariant *)
  Have: (flag_0 = 0) \/ (x_5 = 2).
  (* Then *)
  Have: tmp_0 != 0.
  If flag_0 != 0
  Then {
    Have: (j_3 = j_1) /\ (((2 + j_1) / 2) = ((j_1 - 2) / 2)).
    Have: (4 + j_1) = j.
  }
  Else {
    Let x_10 = j_2 / 2.
    Have: (j_3 = j_2) /\ (x_10 = (1 + k)) /\ (x_10 = (1 + ((j_2 - 2) / 2))).
    Have: (2 + j_2) = j.
  }
  (* Invariant *)
  Have: (x_3 = j) \/ ((flag_0 != 0) /\ (x_4 = 2)).
  (* Invariant *)
  Have: (flag_0 != 0) \/ (x_3 <= j).
  (* Invariant *)
  Have: ((flag_0 != 0) -> (2 <= j)).
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x_4 = 2)).
  (* Invariant *)
  Have: (2 <= j) \/ (x_3 <= j).
  (* Invariant *)
  Have: (x % 4) = 0.
  (* Invariant *)
  Have: ((flag_0 = 0) /\ (x_3 = j)) \/ ((flag_0 != 0) /\ (x_3 <= j)).
  (* Invariant *)
  Have: (x_3 = j) \/ ((3 + x_2) <= j).
  (* Invariant *)
  Have: (flag_0 != 0) \/ (x_3 = j).
}
Prove: (j % 2) = 0.
Prover Z3 4.8.12 returns Valid (Qed:14ms) (20ms) (51762)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (10ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (8ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 32):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 33):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 34):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (0.80ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 37):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 38):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 39):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 41):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 42):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 43):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 45):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 49):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/013_0007/013_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/013_0007/013_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Loop assigns (file out/013_0007/013_merged.c, line 51) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/013_0007/013_merged.c, line 51) (2/2):
Call Result at line 54
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/013_0007/013_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/013_0007/013_merged.c:4: Warning: 
  No 'assigns' specification for function 'foo013'.
  Callers assumptions might be imprecise.

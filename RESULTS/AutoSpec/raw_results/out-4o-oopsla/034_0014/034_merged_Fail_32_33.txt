[kernel] Parsing out/034_0014/034_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 33 goals scheduled
[wp] [Timeout] typed_foo034_loop_invariant_7_preserved (Qed 10ms) (Z3)
[wp] Proved goals:   32 / 33
  Qed:              29
  Alt-Ergo 2.5.4:    3 (20ms-24ms)
  Timeout:           1
------------------------------------------------------------
  Function foo034
------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0014/034_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0014/034_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0014/034_merged.c, line 12):
Let x = i / 2.
Let x_1 = i % 2.
Let x_2 = 1 + x + (if (x_1 = 0) then 0 else 1).
Let x_3 = 1 + i.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(y) /\ is_sint32(x) /\
      is_sint32(x_3) /\ is_sint32(x_2).
  (* Invariant *)
  Have: if (x_1 = 0) then ((-3) <= i) else ((-1) <= i).
  (* Invariant *)
  Have: (x + (if (x_1 = 0) then 0 else 1)) = i.
  (* Invariant *)
  Have: (x_1 = 1) \/ (if (x_1 = 0) then (x = 0) else (x = 1)).
  (* Invariant *)
  Have: ((x_1 = 1) -> (if (x_1 = 0) then (x = (-1)) else (x = 0))).
  (* Invariant *)
  Have: if (x_1 = 0) then (i <= 1) else (i <= 3).
  (* Invariant *)
  Have: ((x_1 = 0) -> (if (x_1 = 0) then (x = 0) else (x = 1))).
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
  If (x_3 % 2) = 0
  Then { Have: (1 + x) = y. }
  Else { Have: x = y. }
  (* Invariant *)
  Have: y <= x_2.
}
Prove: y <= (x_3 / 2).
Prover Z3 4.8.12 returns Valid (Qed:9ms) (20ms) (35213)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (20ms) (411)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0014/034_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0014/034_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0014/034_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0014/034_merged.c, line 14):
Let x = 1 + i.
Let x_1 = i / 2.
Let x_2 = i % 2.
Let x_3 = 1 + x_1 + (if (x_2 = 0) then 0 else 1).
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(y) /\ is_sint32(x_1) /\
      is_sint32(x) /\ is_sint32(x_3).
  (* Invariant *)
  Have: if (x_2 = 0) then ((-3) <= i) else ((-1) <= i).
  (* Invariant *)
  Have: (x_1 + (if (x_2 = 0) then 0 else 1)) = i.
  (* Invariant *)
  Have: (x_2 = 1) \/ (if (x_2 = 0) then (x_1 = 0) else (x_1 = 1)).
  (* Invariant *)
  Have: ((x_2 = 1) -> (if (x_2 = 0) then (x_1 = (-1)) else (x_1 = 0))).
  (* Invariant *)
  Have: if (x_2 = 0) then (i <= 1) else (i <= 3).
  (* Invariant *)
  Have: ((x_2 = 0) -> (if (x_2 = 0) then (x_1 = 0) else (x_1 = 1))).
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
  If (x % 2) = 0
  Then { Have: (1 + x_1) = y. }
  Else { Have: x_1 = y. }
  (* Invariant *)
  Have: y <= x_3.
  (* Invariant *)
  Have: y <= (x / 2).
}
Prove: i <= (2 * y).
Prover Z3 4.8.12 returns Valid (Qed:10ms) (10ms) (35350)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (24ms) (385)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0014/034_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0014/034_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0014/034_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0014/034_merged.c, line 16):
Let x = 1 + i.
Let x_1 = x / 2.
Let x_2 = i % 2.
Let x_3 = i / 2.
Let x_4 = 2 * x_3.
Let x_5 = 1 + x_4.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(y) /\ is_sint32(x_3) /\
      is_sint32(x).
  (* Invariant *)
  Have: x_3 <= i.
  (* Invariant *)
  Have: i <= x_5.
  (* Invariant *)
  Have: (x_3 + (if (x_2 = 0) then 0 else 1)) = i.
  (* Invariant *)
  Have: (x_2 = 1) \/ (x_4 = i).
  (* Invariant *)
  Have: ((x_2 = 1) -> (x_5 = i)).
  (* Invariant *)
  Have: x_4 <= i.
  (* Invariant *)
  Have: ((x_2 = 0) -> (x_4 = i)).
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
  If (x % 2) = 0
  Then { Have: (1 + x_3) = y. }
  Else { Have: x_3 = y. }
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: y <= x_1.
  (* Invariant *)
  Have: i <= (2 * y).
}
Prove: x_1 = y.
Prover Z3 4.8.12 returns Valid (Qed:10ms) (10ms) (35011)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (22ms) (316)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0014/034_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0014/034_merged.c, line 17):
Let x = 1 + i.
Let x_1 = x / 2.
Let x_2 = i / 2.
Let x_3 = i % 2.
Let x_4 = x % 2.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(x_2) /\ is_sint32(x) /\
      is_sint32(1 + x_2 + (if (x_3 = 0) then 0 else 1)) /\
      is_sint32(x_2 + x_1 + (if (x_3 = 0) then 0 else 1) - i).
  (* Invariant *)
  Have: if (x_3 = 0) then ((-3) <= i) else ((-1) <= i).
  (* Invariant *)
  Have: (x_2 + (if (x_3 = 0) then 0 else 1)) = i.
  (* Invariant *)
  Have: (x_3 = 1) \/ (if (x_3 = 0) then (x_2 = 0) else (x_2 = 1)).
  (* Invariant *)
  Have: ((x_3 = 1) -> (if (x_3 = 0) then (x_2 = (-1)) else (x_2 = 0))).
  (* Invariant *)
  Have: if (x_3 = 0) then (i <= 1) else (i <= 3).
  (* Invariant *)
  Have: ((x_3 = 0) -> (if (x_3 = 0) then (x_2 = 0) else (x_2 = 1))).
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
  If x_4 = 0
  Then { Have: (x_1 + (if (x_3 = 0) then 0 else 1)) = x. }
  Else { Have: (x_1 + (if (x_3 = 0) then 0 else 1)) = i. }
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: (2 * i) <= (x_2 + (if (x_3 = 0) then 0 else 1) + (2 * x_1)).
}
Prove: (x_1 + (if (x_4 = 0) then 0 else 1)) = x.
Prover Z3 4.8.12 returns Timeout (Qed:10ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:10ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0014/034_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0014/034_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0014/034_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0014/034_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0014/034_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0014/034_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0014/034_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0014/034_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0014/034_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0014/034_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0014/034_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0014/034_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0014/034_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0014/034_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0014/034_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0014/034_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0014/034_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.88ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0014/034_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0014/034_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.50ms)

------------------------------------------------------------

Goal Loop assigns (file out/034_0014/034_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/034_0014/034_merged.c:3: Warning: 
  No 'assigns' specification for function 'foo034'.
  Callers assumptions might be imprecise.

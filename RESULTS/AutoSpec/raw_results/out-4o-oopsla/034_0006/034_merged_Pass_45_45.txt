[kernel] Parsing out/034_0006/034_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 45 goals scheduled
[wp] Proved goals:   45 / 45
  Qed:              38
  Alt-Ergo 2.5.4:    7
------------------------------------------------------------
  Function foo034
------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0006/034_merged.c, line 11):
Let x = i / 2.
Let x_1 = 2 * x.
Let x_2 = 1 + i.
Let x_3 = 1 + x.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_3).
  (* Residual *)
  When: (x_2 % 2) = 0.
  (* Invariant *)
  Have: (x_1 = i) \/ ((1 + x_1) = i).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (((i % 2) = 0) -> (x_1 = i)).
  (* Invariant *)
  Have: x <= i.
  (* Invariant *)
  Have: x_1 <= i.
  (* Invariant *)
  Have: (-1) <= i.
  (* Then *)
  Have: i < n.
}
Prove: (x_2 / 2) = x_3.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (33934)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (12ms) (230)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0006/034_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0006/034_merged.c, line 12):
Let x = i / 2.
Let x_1 = 1 + i.
Let x_2 = 2 * x.
Let x_3 = 2 * y.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(y) /\ is_sint32(x) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: (x_2 = i) \/ ((1 + x_2) = i).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (((i % 2) = 0) -> (x_2 = i)).
  (* Invariant *)
  Have: x <= i.
  (* Invariant *)
  Have: x_2 <= i.
  (* Invariant *)
  Have: (-1) <= i.
  (* Then *)
  Have: i < n.
  If (x_1 % 2) = 0
  Then { Have: (1 + x) = y. }
  Else { Have: x = y. }
  (* Invariant *)
  Have: (x = y) \/ ((x_1 / 2) = y).
}
Prove: (x_3 = i) \/ (x_1 = x_3).
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (38481)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (19ms) (360)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0006/034_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0006/034_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0006/034_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0006/034_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0006/034_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0006/034_merged.c, line 15):
Let x_1 = 2 * y.
Let x_2 = 1 + x.
Let x_3 = x / 2.
Let x_4 = 2 * x_3.
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_3) /\
      is_sint32(x_2).
  (* Goal *)
  When: ((i % 2) = 0) /\ (0 <= i) /\ (i < n).
  (* Invariant *)
  Have: (x_4 = x) \/ ((1 + x_4) = x).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: (((x % 2) = 0) -> (x_4 = x)).
  (* Invariant *)
  Have: x_3 <= x.
  (* Invariant *)
  Have: x_4 <= x.
  (* Invariant *)
  Have: (-1) <= x.
  (* Then *)
  Have: x < n.
  If (x_2 % 2) = 0
  Then { Have: (1 + x_3) = y. }
  Else { Have: x_3 = y. }
  (* Invariant *)
  Have: (x_3 = y) \/ ((x_2 / 2) = y).
  (* Invariant *)
  Have: (x_1 = x) \/ (x_2 = x_1).
}
Prove: x_1 <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:10ms) (10ms) (33671)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (6ms) (50)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0006/034_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0006/034_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0006/034_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0006/034_merged.c, line 17):
Let x_1 = x / 2.
Let x_2 = 2 * x_1.
Let x_3 = 1 + x_2.
Let x_4 = 1 + x.
Let x_5 = 1 + x_1.
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_4) /\
      is_sint32(x_5).
  (* Goal *)
  When: (x_4 % 2) = 0.
  (* Invariant *)
  Have: (x_2 = x) \/ (x_3 = x).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: (((x % 2) = 0) -> (x_2 = x)).
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: x_2 <= x.
  (* Invariant *)
  Have: (-1) <= x.
  (* Then *)
  Have: x < n.
  (* Invariant *)
  Have: (x_4 / 2) = x_5.
  (* Invariant *)
  Have: (x_3 = x) \/ ((2 + x_2) = x).
  (* Invariant *)
  Have: forall i : Z. (((i % 2) = 0) -> ((0 <= i) -> ((i < n) ->
      (x_2 < x)))).
}
Prove: x_3 = x.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (32240)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (4ms) (23)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0006/034_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0006/034_merged.c, line 18):
Let x_1 = x / 2.
Let x_2 = 2 * x_1.
Let x_3 = 1 + x.
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_3).
  (* Residual *)
  When: (x_3 % 2) != 0.
  (* Invariant *)
  Have: (x_2 = x) \/ ((1 + x_2) = x).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: (((x % 2) = 0) -> (x_2 = x)).
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: x_2 <= x.
  (* Invariant *)
  Have: (-1) <= x.
  (* Then *)
  Have: x < n.
  (* Invariant *)
  Have: (x_2 = x) \/ (x_3 = x_2).
  (* Invariant *)
  Have: forall i : Z. (((i % 2) = 0) -> ((0 <= i) -> ((i < n) ->
      (x_2 <= x_3)))).
}
Prove: (x_3 / 2) = x_1.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (20ms) (37412)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (18ms) (307)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0006/034_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0006/034_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0006/034_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0006/034_merged.c, line 20):
Let x_1 = 1 + x.
Let x_2 = x_1 % 2.
Let x_3 = x_1 / 2.
Let x_4 = 2 * x_3.
Let x_5 = x / 2.
Let x_6 = 2 * x_5.
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_5) /\
      is_sint32(x_1) /\ is_sint32(x_3).
  (* Invariant *)
  Have: (x_6 = x) \/ ((1 + x_6) = x).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: (((x % 2) = 0) -> (x_6 = x)).
  (* Invariant *)
  Have: x_5 <= x.
  (* Invariant *)
  Have: x_6 <= x.
  (* Invariant *)
  Have: (-1) <= x.
  (* Then *)
  Have: x < n.
  If x_2 = 0
  Then { Have: (x_3 = (1 + y)) /\ (x_3 = (1 + x_5)). }
  Else { Have: x_3 = x_5. }
  (* Invariant *)
  Have: (x_4 = x) \/ (x_1 = x_4).
  (* Invariant *)
  Have: forall i : Z. (((i % 2) = 0) -> ((0 <= i) -> ((i < n) ->
      (x_4 <= x_1)))).
  (* Invariant *)
  Have: ((x_2 = 0) -> (x_1 = x_4)).
}
Prove: x_3 <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (34123)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (5ms) (47)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0006/034_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0006/034_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0006/034_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0006/034_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0006/034_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0006/034_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0006/034_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0006/034_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0006/034_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0006/034_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0006/034_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0006/034_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0006/034_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0006/034_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0006/034_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0006/034_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0006/034_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0006/034_merged.c, line 29):
Let x = 1 + i.
Let x_1 = x / 2.
Let x_2 = 2 * x_1.
Let x_3 = i / 2.
Let x_4 = 2 * x_3.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(x_3) /\ is_sint32(x) /\
      is_sint32(x_1).
  (* Residual *)
  When: (x % 2) != 0.
  (* Invariant *)
  Have: (x_4 = i) \/ ((1 + x_4) = i).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (((i % 2) = 0) -> (x_4 = i)).
  (* Invariant *)
  Have: x_3 <= i.
  (* Invariant *)
  Have: x_4 <= i.
  (* Invariant *)
  Have: (-1) <= i.
  (* Then *)
  Have: i < n.
  Have: x_1 = x_3.
  (* Invariant *)
  Have: (x_2 = i) \/ (x = x_2).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((0 <= i_1) -> ((i_1 < n) ->
      (x_2 <= x)))).
  (* Invariant *)
  Have: x_1 <= x.
}
Prove: x_2 <= x.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (34057)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (24)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0006/034_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0006/034_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0006/034_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0006/034_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0006/034_merged.c, line 31):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/034_0006/034_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/034_0006/034_merged.c, line 32):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/034_0006/034_merged.c, line 33):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/034_0006/034_merged.c:3: Warning: 
  No 'assigns' specification for function 'foo034'.
  Callers assumptions might be imprecise.

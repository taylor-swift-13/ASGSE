[kernel] Parsing out/045_0006/045_merged.c (with preprocessing)
[kernel:typing:no-proto] out/045_0006/045_merged.c:33: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/045_0006/045_merged.c:66: Warning: 
  Calling function unknown3 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/045_0006/045_merged.c:50: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/045_0006/045_merged.c:7: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[kernel:annot:missing-spec] out/045_0006/045_merged.c:7: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[kernel:annot:missing-spec] out/045_0006/045_merged.c:7: Warning: 
  Neither code nor specification for function unknown3, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] out/045_0006/045_merged.c:50: Warning: 
  Missing assigns clause (assigns 'everything' instead)
[wp] 50 goals scheduled
[wp] [Timeout] typed_foo045_loop_invariant_14_established (Qed 6ms) (Z3)
[wp] [Timeout] typed_foo045_loop_invariant_15_established (Qed 6ms) (Z3)
[wp] [Timeout] typed_foo045_loop_invariant_16_established (Qed 10ms) (Z3)
[wp] [Timeout] typed_foo045_loop_invariant_17_established (Qed 7ms) (Z3)
[wp] [Timeout] typed_foo045_loop_invariant_18_established (Qed 8ms) (Z3)
[wp] [Timeout] typed_foo045_loop_invariant_19_established (Qed 9ms) (Z3)
[wp] Proved goals:   44 / 50
  Qed:              38
  Alt-Ergo 2.5.4:    6 (4ms-8ms-15ms)
  Timeout:           6
------------------------------------------------------------
  Function foo045
------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0006/045_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0006/045_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0006/045_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0006/045_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0006/045_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0006/045_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0006/045_merged.c, line 18):
Let x_1 = -x.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_0) /\
      is_sint32(x) /\ is_sint32(1 + j) /\ is_sint32(1 + x) /\
      is_sint32(j - x) /\ is_sint32(j - 1 - (2 * x)) /\ is_sint32(j - 1 - x).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: (2 * x) < j.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: x < j.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: (x = (-1)) \/ ((-1) <= x).
Prover Z3 4.8.12 returns Valid (Qed:11ms) (10ms) (31636)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (4ms) (16)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0006/045_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0006/045_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (10ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0006/045_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.82ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0006/045_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0006/045_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0006/045_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0006/045_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0006/045_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0006/045_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0006/045_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0006/045_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0006/045_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0006/045_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0006/045_merged.c, line 25):
Let x_1 = 1 + x.
Let x_2 = j + (if (flag_0 = 0) then 0 else x_1).
Let x_3 = -(if (flag_0 = 0) then 0 else x).
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_0) /\
      is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(j - (if (flag_0 = 0) then 0 else x)) /\
      is_sint32(1 + j + x - (if (flag_0 = 0) then 0 else x)) /\
      is_sint32(1 + j + x + (if (flag_0 = 0) then 0 else x_1)
        - (if (flag_0 = 0) then 0 else x)).
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x <= j)).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: (flag_0 = 0) \/ (x <= j).
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: ((flag_0 != 0) -> (if (flag_0 = 0) then (0 <= x_2) else (x <= x_2))).
  (* Invariant *)
  Have: (-1) <= x.
}
Prove: if (flag_0 = 0)
       then ((-1) <= (j + x + (if (flag_0 = 0) then 0 else x_1)))
       else ((-1) <= x_2).
Prover Z3 4.8.12 returns Valid (Qed:12ms) (10ms) (32324)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:12ms) (5ms) (44)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0006/045_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0006/045_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0006/045_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0006/045_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0006/045_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0006/045_merged.c, line 53):
Let x_3 = x + y.
Let x_4 = x_3 % 2.
Let x_5 = 1 + x + y.
Let x_6 = x_5 % 2.
Let x_7 = 2 * y_2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_0_0) /\
      is_sint32(tmp_1_0) /\ is_sint32(x_1) /\ is_sint32(x) /\
      is_sint32(x_2) /\ is_sint32(y_1) /\ is_sint32(y) /\ is_sint32(y_2) /\
      is_sint32(x_3) /\ is_sint32(x_5) /\ is_sint32(x + y - y_2) /\
      is_sint32(j - (if (flag_0 = 0) then 0 else x_2)).
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x_2 <= j)).
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: (flag_0 = 0) \/ (x_2 <= j).
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: x_7 <= x_3.
  (* Invariant *)
  Have: (x_3 = x_7) \/ ((1 + x_7) = x_3).
  (* Invariant *)
  Have: x_6 = x_4.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: 0 <= y_2.
  (* Invariant *)
  Have: y_2 <= x_3.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (y = x) \/ ((1 + y) = x).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0_0 != 0.
  If x_6 = 1
  Then { Have: (1 + x) = x_1. }
  Else { Have: x = x_1. }
  If x_4 = 0
  Then { Have: (1 + y) = y_1. }
  Else { Have: y = y_1. }
}
Prove: x_3 = (x_1 + y_1).
Prover Z3 4.8.12 returns Valid (Qed:50ms) (10ms) (36384)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:50ms) (15ms) (198)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0006/045_merged.c, line 53):
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_1_0) /\
      is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(y) /\ is_sint32(z) /\
      is_sint32(j - (if (flag_0 = 0) then 0 else x_1)).
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x_1 <= j)).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: (flag_0 = 0) \/ (x_1 <= j).
  (* Then *)
  Have: tmp_1_0 != 0.
}
Prove: (x + y) = z.
Prover Z3 4.8.12 returns Timeout (Qed:6ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:6ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0006/045_merged.c, line 54):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0006/045_merged.c, line 54):
Let x_2 = x + y.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_1_0) /\
      is_sint32(w) /\ is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(y) /\
      is_sint32(x_2) /\ is_sint32(j - (if (flag_0 = 0) then 0 else x_1)).
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x_1 <= j)).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: (flag_0 = 0) \/ (x_1 <= j).
  (* Then *)
  Have: tmp_1_0 != 0.
}
Prove: x_2 <= w.
Prover Z3 4.8.12 returns Timeout (Qed:6ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:6ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0006/045_merged.c, line 55):
Prove: true.
Prover Qed returns Valid (20ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0006/045_merged.c, line 55):
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_1_0) /\
      is_sint32(w) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(z) /\
      is_sint32(z - y) /\ is_sint32(j - (if (flag_0 = 0) then 0 else x)).
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x <= j)).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: (flag_0 = 0) \/ (x <= j).
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: z <= w.
}
Prove: (2 * y) <= z.
Prover Z3 4.8.12 returns Timeout (Qed:10ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:10ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0006/045_merged.c, line 56):
Prove: true.
Prover Qed returns Valid (20ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0006/045_merged.c, line 56):
Let x_1 = 2 * y.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_1_0) /\
      is_sint32(w) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(z) /\
      is_sint32(z - y) /\ is_sint32(j - (if (flag_0 = 0) then 0 else x)).
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x <= j)).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: (flag_0 = 0) \/ (x <= j).
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: z <= w.
  (* Invariant *)
  Have: x_1 <= z.
}
Prove: (x_1 = z) \/ ((1 + x_1) = z).
Prover Z3 4.8.12 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0006/045_merged.c, line 57):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0006/045_merged.c, line 57):
Let x_2 = x + y.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_1_0) /\
      is_sint32(w) /\ is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(y) /\
      is_sint32(x_2) /\ is_sint32(j - (if (flag_0 = 0) then 0 else x_1)).
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x_1 <= j)).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: (flag_0 = 0) \/ (x_1 <= j).
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: x_2 <= w.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (y = x) \/ ((1 + y) = x).
}
Prove: (1 + x + y) = w.
Prover Z3 4.8.12 returns Timeout (Qed:8ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:8ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0006/045_merged.c, line 58):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0006/045_merged.c, line 58):
Let x_2 = x + y.
Let x_3 = 1 + x + y.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_1_0) /\
      is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(y) /\ is_sint32(x_2) /\
      is_sint32(x_3) /\ is_sint32(j - (if (flag_0 = 0) then 0 else x_1)).
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x_1 <= j)).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: (flag_0 = 0) \/ (x_1 <= j).
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: (y = x) \/ ((1 + y) = x).
}
Prove: (x_3 % 2) = (x_2 % 2).
Prover Z3 4.8.12 returns Timeout (Qed:9ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:9ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0006/045_merged.c, line 59):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0006/045_merged.c, line 59):
Let x_1 = 1 + z.
Let x_2 = 2 * y.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_1_0) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(x_1) /\
      is_sint32(z - y) /\ is_sint32(j - (if (flag_0 = 0) then 0 else x)).
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x <= j)).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: (flag_0 = 0) \/ (x <= j).
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: x_2 <= z.
  (* Invariant *)
  Have: (x_2 = z) \/ ((1 + x_2) = z).
  (* Invariant *)
  Have: (x_1 % 2) = (z % 2).
}
Prove: 0 <= z.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (35119)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (12ms) (129)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0006/045_merged.c, line 60):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0006/045_merged.c, line 60):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0006/045_merged.c, line 61):
Prove: true.
Prover Qed returns Valid (23ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0006/045_merged.c, line 61):
Let x_2 = 1 + z.
Let x_3 = 2 * x.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_1_0) /\
      is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(z) /\ is_sint32(x_2) /\
      is_sint32(z - x) /\ is_sint32(j - (if (flag_0 = 0) then 0 else x_1)).
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x_1 <= j)).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: (flag_0 = 0) \/ (x_1 <= j).
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: z <= x_3.
  (* Invariant *)
  Have: (x_3 = z) \/ (x_2 = x_3).
  (* Invariant *)
  Have: (x_2 % 2) = (z % 2).
  (* Invariant *)
  Have: 0 <= z.
}
Prove: x <= z.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (33645)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (5ms) (47)

------------------------------------------------------------

Goal Preservation of Invariant (file out/045_0006/045_merged.c, line 62):
Prove: true.
Prover Qed returns Valid (25ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/045_0006/045_merged.c, line 62):
Let x_1 = 1 + z.
Let x_2 = 2 * y.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_1_0) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(x_1) /\
      is_sint32(z - y) /\ is_sint32(j - (if (flag_0 = 0) then 0 else x)).
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x <= j)).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: (flag_0 = 0) \/ (x <= j).
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: x_2 <= z.
  (* Invariant *)
  Have: (x_2 = z) \/ ((1 + x_2) = z).
  (* Invariant *)
  Have: (x_1 % 2) = (z % 2).
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: 0 <= y.
}
Prove: y <= z.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (32619)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (5ms) (26)

------------------------------------------------------------

Goal Loop assigns (file out/045_0006/045_merged.c, line 28) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/045_0006/045_merged.c, line 28) (2/2):
Call Result at line 33
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Loop assigns (file out/045_0006/045_merged.c, line 63) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/045_0006/045_merged.c, line 63) (2/2):
Call Result at line 66
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/045_0006/045_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/045_0006/045_merged.c:3: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/045_0006/045_merged.c:4: Warning: 
  No 'assigns' specification for function 'unknown3'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/045_0006/045_merged.c:7: Warning: 
  No 'assigns' specification for function 'foo045'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c (with preprocessing)
[kernel:typing:no-proto] out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c:43: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c:11: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 37 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_9_established (Qed 3ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_14_established (Qed 4ms) (Z3)
[wp] Proved goals:   35 / 37
  Qed:              25
  Alt-Ergo 2.6.2:   10 (4ms-35ms-279ms)
  Timeout:           2
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 17):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(l_2) /\ is_sint32(l_3) /\ is_sint32(n) /\ is_sint32(tmp_0) /\
      is_sint32(1 + k).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l_3.
  (* Pre-condition *)
  Have: l_3 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: k <= 2147483646.
  (* Invariant *)
  Have: forall i_3 : Z. ((l_2 <= i_3) -> ((i_3 < n) -> (0 < i_3))).
  (* Invariant *)
  Have: forall i_3 : Z. ((i_3 < i_2) -> ((l_2 <= i_3) -> (0 < i_3))).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 < l_2.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l_2 <= 2147483646.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 < i_3) -> ((i_3 < k) -> (l_2 <= n))).
  (* Else *)
  Have: n <= i_1.
  If tmp_0 != 0
  Then { Have: l_2 = l_1. Have: (1 + l_1) = l. }
  Else { Have: l_2 = l. }
  (* Invariant *)
  Have: k <= 2147483645.
}
Prove: 0 < i.
Prover Z3 4.8.6 returns Valid (Qed:13ms) (10ms) (37922)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:13ms) (4ms) (51)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 17):
Assume {
  Type: is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
}
Prove: 0 < i.
Prover Z3 4.8.6 returns Valid (Qed:0.64ms) (10ms) (32515)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:0.64ms) (9ms) (21)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 18):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(l_2) /\ is_sint32(l_3) /\ is_sint32(n) /\ is_sint32(tmp_0) /\
      is_sint32(1 + k).
  (* Goal *)
  When: (i < i_1) /\ (l <= i).
  (* Pre-condition *)
  Have: 0 < l_3.
  (* Pre-condition *)
  Have: l_3 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: k <= 2147483646.
  (* Invariant *)
  Have: forall i_3 : Z. ((l_2 <= i_3) -> ((i_3 < n) -> (0 < i_3))).
  (* Invariant *)
  Have: forall i_3 : Z. ((i_3 < i_2) -> ((l_2 <= i_3) -> (0 < i_3))).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 < l_2.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l_2 <= 2147483646.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 < i_3) -> ((i_3 < k) -> (l_2 <= n))).
  (* Else *)
  Have: n <= i_1.
  If tmp_0 != 0
  Then { Have: l_2 = l_1. Have: (1 + l_1) = l. }
  Else { Have: l_2 = l. }
  (* Invariant *)
  Have: k <= 2147483645.
  (* Invariant *)
  Have: forall i_3 : Z. ((l <= i_3) -> ((i_3 < n) -> (0 < i_3))).
}
Prove: 0 < i.
Prover Z3 4.8.6 returns Valid (Qed:13ms) (10ms) (38662)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:13ms) (5ms) (51)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 18):
Assume {
  Type: is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (i < i_1) /\ (l <= i).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
}
Prove: 0 < i.
Prover Z3 4.8.6 returns Valid (Qed:1ms) (10ms) (32545)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:1ms) (9ms) (22)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 19):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(l_2) /\ is_sint32(l_3) /\ is_sint32(n) /\ is_sint32(tmp_0) /\
      is_sint32(1 + k).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l_3.
  (* Pre-condition *)
  Have: l_3 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: k <= 2147483646.
  (* Invariant *)
  Have: forall i_3 : Z. ((l_2 <= i_3) -> ((i_3 < n) -> (0 < i_3))).
  (* Invariant *)
  Have: forall i_3 : Z. ((i_3 < i_2) -> ((l_2 <= i_3) -> (0 < i_3))).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 < l_2.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l_2 <= 2147483646.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 < i_3) -> ((i_3 < k) -> (l_2 <= n))).
  (* Else *)
  Have: n <= i_1.
  If tmp_0 != 0
  Then { Have: l_2 = l_1. Have: (1 + l_1) = l. }
  Else { Have: l_2 = l. }
  (* Invariant *)
  Have: k <= 2147483645.
  (* Invariant *)
  Have: forall i_3 : Z. ((l <= i_3) -> ((i_3 < n) -> (0 < i_3))).
  (* Invariant *)
  Have: forall i_3 : Z. ((i_3 < i_1) -> ((l <= i_3) -> (0 < i_3))).
}
Prove: 0 < i.
Prover Z3 4.8.6 returns Valid (Qed:17ms) (10ms) (39256)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:17ms) (9ms) (51)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 19):
Assume {
  Type: is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
}
Prove: 0 < i.
Prover Z3 4.8.6 returns Valid (Qed:1ms) (10ms) (32515)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:1ms) (9ms) (21)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (15ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.98ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 29):
Assume {
  Type: is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\ is_sint32(n).
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: k <= 2147483646.
  (* Invariant *)
  Have: forall i_1 : Z. ((l <= i_1) -> ((i_1 < n) -> (0 < i_1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 < i) -> ((l <= i_1) -> (0 < i_1))).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 < l.
  (* Then *)
  Have: k < n.
}
Prove: l <= 2147483646.
Prover Z3 4.8.6 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 33):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(n).
  (* Goal *)
  When: (l <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: k <= 2147483646.
  (* Invariant *)
  Have: forall i_3 : Z. ((l <= i_3) -> ((i_3 < n) -> (0 < i_3))).
  (* Invariant *)
  Have: forall i_3 : Z. ((i_3 < i_2) -> ((l <= i_3) -> (0 < i_3))).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 < l.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l <= 2147483646.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 < i_3) -> ((i_3 < k) -> (l <= n))).
  (* Then *)
  Have: i_1 < n.
}
Prove: 0 < i.
Prover Z3 4.8.6 returns Valid (Qed:8ms) (10ms) (35887)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:8ms) (9ms) (38)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 34):
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(n).
  (* Goal *)
  When: (0 < i_1) /\ (i_1 < k).
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: k <= 2147483646.
  (* Invariant *)
  Have: forall i_3 : Z. ((l <= i_3) -> ((i_3 < n) -> (0 < i_3))).
  (* Invariant *)
  Have: forall i_3 : Z. ((i_3 < i_2) -> ((l <= i_3) -> (0 < i_3))).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 < l.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l <= 2147483646.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 < i_3) -> ((i_3 < k) -> (l <= n))).
  (* Then *)
  Have: i < n.
}
Prove: l <= n.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:9ms) (279ms) (4408)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 34):
Assume {
  Type: is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\ is_sint32(n).
  (* Goal *)
  When: (0 < i) /\ (i < k).
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: k <= 2147483646.
  (* Invariant *)
  Have: forall i_2 : Z. ((l <= i_2) -> ((i_2 < n) -> (0 < i_2))).
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 < i_1) -> ((l <= i_2) -> (0 < i_2))).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 < l.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l <= 2147483646.
}
Prove: l <= n.
Prover Z3 4.8.6 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 35):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(n).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: k <= 2147483646.
  (* Invariant *)
  Have: forall i_3 : Z. ((l <= i_3) -> ((i_3 < n) -> (0 < i_3))).
  (* Invariant *)
  Have: forall i_3 : Z. ((i_3 < i_2) -> ((l <= i_3) -> (0 < i_3))).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 < l.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l <= 2147483646.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 < i_3) -> ((i_3 < k) -> (l <= n))).
  (* Then *)
  Have: i_1 < n.
}
Prove: 0 < i.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:6ms) (9ms) (38)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 35):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (i_1 <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: k <= 2147483646.
  (* Invariant *)
  Have: forall i_3 : Z. ((i_1 <= i_3) -> ((i_3 < n) -> (0 < i_3))).
  (* Invariant *)
  Have: forall i_3 : Z. ((i_1 <= i_3) -> ((i_3 < i_2) -> (0 < i_3))).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 < i_1.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: i_1 <= 2147483646.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 < i_3) -> ((i_3 < k) -> (i_1 <= n))).
}
Prove: 0 < i.
Prover Z3 4.8.6 returns Valid (Qed:4ms) (10ms) (35499)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:4ms) (5ms) (34)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 22) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 22) (2/2):
Call Result at line 43
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Loop assigns (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 38):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c:4: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c:11: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

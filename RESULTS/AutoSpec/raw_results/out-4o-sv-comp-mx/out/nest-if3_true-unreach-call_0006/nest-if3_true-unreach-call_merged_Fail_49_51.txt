[kernel] Parsing out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c (with preprocessing)
[kernel:typing:no-proto] out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c:50: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c:11: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 51 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_2_established (Z3)
[wp] [Timeout] typed_foo_loop_invariant_2_preserved (Qed 10ms) (Alt-Ergo)
[wp] Proved goals:   49 / 51
  Qed:              40
  Alt-Ergo 2.6.2:    9 (4ms-12ms)
  Timeout:           2
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 16):
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(n) /\ is_sint32(tmp_0) /\ is_sint32(1 + l).
  (* Residual *)
  When: tmp_0 != 0.
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: l_1 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: (0 < l) /\ (l <= n) /\ (l <= 2147483646).
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: k <= 2147483646.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Else *)
  Have: n <= i.
}
Prove: (l < n) /\ (l <= 2147483645).
Prover Z3 4.8.6 returns Unknown (Qed:10ms)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:10ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 16):
Assume {
  Type: is_sint32(l) /\ is_sint32(n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
}
Prove: l <= n.
Prover Z3 4.8.6 returns Timeout (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.79ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 22):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(l_2) /\ is_sint32(l_3) /\ is_sint32(n) /\ is_sint32(tmp_0) /\
      is_sint32(1 + k).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l_3.
  (* Pre-condition *)
  Have: l_3 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: l_3 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: (0 < l_2) /\ (l_2 <= n) /\ (l_2 <= 2147483646).
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: k <= 2147483646.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Else *)
  Have: n <= i_1.
  If tmp_0 != 0
  Then { Have: l_2 = l_1. Have: (1 + l_1) = l. }
  Else { Have: l_2 = l. }
  (* Invariant *)
  Have: (0 < l) /\ (l <= n) /\ (l <= 2147483646).
  (* Invariant *)
  Have: k <= 2147483645.
}
Prove: 0 < i.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:12ms) (11ms) (60)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 22):
Assume {
  Type: is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: l <= n.
  (* Invariant *)
  Have: 0 < n.
}
Prove: 0 < i.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:1ms) (9ms) (25)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 23):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(l_2) /\ is_sint32(l_3) /\ is_sint32(n) /\ is_sint32(tmp_0) /\
      is_sint32(1 + k).
  (* Goal *)
  When: (i < i_1) /\ (l <= i).
  (* Pre-condition *)
  Have: 0 < l_3.
  (* Pre-condition *)
  Have: l_3 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: l_3 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: (0 < l_2) /\ (l_2 <= n) /\ (l_2 <= 2147483646).
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: k <= 2147483646.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Else *)
  Have: n <= i_1.
  If tmp_0 != 0
  Then { Have: l_2 = l_1. Have: (1 + l_1) = l. }
  Else { Have: l_2 = l. }
  (* Invariant *)
  Have: (0 < l) /\ (l <= n) /\ (l <= 2147483646).
  (* Invariant *)
  Have: k <= 2147483645.
}
Prove: 0 < i.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:13ms) (12ms) (60)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 23):
Assume {
  Type: is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (i < i_1) /\ (l <= i).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: l <= n.
  (* Invariant *)
  Have: 0 < n.
}
Prove: 0 < i.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (4ms) (25)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 25):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(l_2) /\ is_sint32(l_3) /\ is_sint32(n) /\ is_sint32(tmp_0) /\
      is_sint32(1 + k).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l_3.
  (* Pre-condition *)
  Have: l_3 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: l_3 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: (0 < l_2) /\ (l_2 <= n) /\ (l_2 <= 2147483646).
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: k <= 2147483646.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Else *)
  Have: n <= i_1.
  If tmp_0 != 0
  Then { Have: l_2 = l_1. Have: (1 + l_1) = l. }
  Else { Have: l_2 = l. }
  (* Invariant *)
  Have: (0 < l) /\ (l <= n) /\ (l <= 2147483646).
  (* Invariant *)
  Have: k <= 2147483645.
}
Prove: 0 < i.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:15ms) (9ms) (60)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 25):
Assume {
  Type: is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: l <= n.
  (* Invariant *)
  Have: 0 < n.
}
Prove: 0 < i.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (9ms) (25)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.89ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (1.00ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 40):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(n).
  (* Goal *)
  When: (l <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: l_1 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: (0 < l) /\ (l <= n) /\ (l <= 2147483646).
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: k <= 2147483646.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Then *)
  Have: i_1 < n.
}
Prove: 0 < i.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:6ms) (5ms) (45)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 42):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(n).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: l_1 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: (0 < l) /\ (l <= n) /\ (l <= 2147483646).
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: k <= 2147483646.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Then *)
  Have: i_1 < n.
}
Prove: 0 < i.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:6ms) (12ms) (45)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 42):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (i_1 <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: l <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: (0 < i_1) /\ (i_1 <= n) /\ (i_1 <= 2147483646).
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: k <= 2147483646.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
}
Prove: 0 < i.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:5ms) (4ms) (41)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 28) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 28) (2/2):
Call Result at line 50
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Loop assigns (file out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c, line 45):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c:4: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/nest-if3_true-unreach-call_0006/nest-if3_true-unreach-call_merged.c:11: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

Pass
{'CurTaskID': 3, 'Round': 1, 'Iteration': 1, 'Status': 1, 'llms_query_times': datetime.timedelta(seconds=6, microseconds=527451), 'total_solve_time': datetime.timedelta(seconds=11, microseconds=114067), 'simplified_time': datetime.timedelta(0), 'tokens_usage': 4601, 'spec_num_original': 0, 'spec_num_simplified': 0, 'TaskList': [3, 3, 1], '1': ['loop invariant k == i * (v == 0 ? c1 : (v == 1 ? c2 : c3));', 'loop invariant k == (i * (v == 0 ? c1 : (v == 1 ? c2 : c3)));', 'loop invariant i <= n;', 'loop invariant 0 <= i;', 'loop assigns k;', 'loop assigns i;'], '2': ['loop invariant k == n * (v == 0 ? c1 : (v == 1 ? c2 : c3)) - j;', 'loop invariant j <= n;', 'loop invariant 0 <= k;', 'loop invariant 0 <= j;', 'loop assigns k;', 'loop assigns j;'], '3': [], 'MSLines': ['#include "assert.h"\n', '\n', '/*@\n', 'requires 0 <= n && n < 2;\n', 'requires 0 <= v;\n', '*/\n', '/* 3. FUNC CONTRACT */\nint foo(int n, int v) {\n', '  int c1 = 4000;\n', '  int c2 = 2000;\n', '  int c3 = 10000;\n', '  //int n, v;\n', '  int i, k, j;\n', '\n', '\n', '  k = 0;\n', '  i = 0;\n', '  /* 1. LOOP INVARIANT */\n  while( i < n ) {\n', '    i++;\n', '    if( v == 0 )\n', '      k += c1;\n', '    else if( v == 1 )\n', '      k += c2;\n', '    else\n', '      k += c3;\n', '  }\n', '\n', '  j = 0;\n', '  /* 2. LOOP INVARIANT */\n  while( j < n ) {\n', '    //@ assert k > 0;\n', '    j++;\n', '    k--;\n', '  }\n', '\n', '  return 0;\n', '}']}
    へ　　　　　／|
　　/＼7　　　 ∠＿/
　 /　│　　 ／　／
　│　Z ＿,＜　／　　 /`ヽ
　│　　　　　ヽ　　 /　　〉
　 Y　　　　　`　 /　　/
　ｲ●　､　●　　⊂⊃〈　　/
　()　 へ　　　　|　＼〈
　　>ｰ ､_　 ィ　 │ ／／
　 / へ　　 /　ﾉ＜| ＼＼
　 ヽ_ﾉ　　(_／　 │／／
　　7　　　　　　　|／
　　＞―r￣￣`ｰ―＿

[kernel] Parsing out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c (with preprocessing)
[kernel:typing:no-proto] out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c:34: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c:6: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 24 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_5_preserved (Qed 10ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_6_preserved (Qed 9ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_7_preserved (Qed 10ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_7_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_11_preserved (Qed 15ms) (Z3)
[wp] Proved goals:   19 / 24
  Qed:              18
  Alt-Ergo 2.6.2:    1 (27ms)
  Timeout:           5
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c, line 18):
Let x = i % 2.
Let x_1 = j % 2.
Let x_2 = to_uint32(2 + i) % 2.
Assume {
  Type: is_uint32(a) /\ is_uint32(b) /\ is_uint32(i) /\ is_uint32(j) /\
      is_sint32(tmp_0).
  (* Invariant *)
  Have: (x = 0) \/ (x = 1).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= b.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: ((x = 1) -> (x_1 = 1)).
  (* Invariant *)
  Have: ((x = 0) -> ((1 + (2 * a)) = j)).
  (* Invariant *)
  Have: ((x = 0) -> (x_1 = 0)).
  (* Invariant *)
  Have: ((x != 0) -> (x_1 != 0)).
  (* Invariant *)
  Have: b <= a.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: (x_2 = 0) \/ (x_2 = 1).
Prover Z3 4.8.6 returns Valid (Qed:7ms) (10ms) (35027)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:7ms) (27ms) (518)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c, line 22):
Let x = i % 2.
Let x_1 = j % 2.
Assume {
  Type: is_uint32(a) /\ is_uint32(b) /\ is_uint32(i) /\ is_uint32(j) /\
      is_sint32(tmp_0).
  (* Goal *)
  When: (to_uint32(2 + i) % 2) = 1.
  (* Invariant *)
  Have: (x = 0) \/ (x = 1).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= b.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: ((x = 1) -> (x_1 = 1)).
  (* Invariant *)
  Have: ((x = 0) -> ((1 + (2 * a)) = j)).
  (* Invariant *)
  Have: ((x = 0) -> (x_1 = 0)).
  (* Invariant *)
  Have: ((x != 0) -> (x_1 != 0)).
  (* Invariant *)
  Have: b <= a.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: (to_uint32(1 + j) % 2) = 1.
Prover Z3 4.8.6 returns Timeout (Qed:10ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:10ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c, line 23):
Let x = i % 2.
Let x_1 = j % 2.
Assume {
  Type: is_uint32(a) /\ is_uint32(b) /\ is_uint32(i) /\ is_uint32(j) /\
      is_sint32(tmp_0).
  (* Goal *)
  When: (to_uint32(2 + i) % 2) = 0.
  (* Invariant *)
  Have: (x = 0) \/ (x = 1).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= b.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: ((x = 1) -> (x_1 = 1)).
  (* Invariant *)
  Have: ((x = 0) -> ((1 + (2 * a)) = j)).
  (* Invariant *)
  Have: ((x = 0) -> (x_1 = 0)).
  (* Invariant *)
  Have: ((x != 0) -> (x_1 != 0)).
  (* Invariant *)
  Have: b <= a.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: (1 + (2 * to_uint32(1 + a))) = to_uint32(2 + j).
Prover Z3 4.8.6 returns Timeout (Qed:9ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:9ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c, line 24):
Let x = 1 + (2 * to_uint32(1 + a)).
Let x_1 = i % 2.
Let x_2 = j % 2.
Assume {
  Type: is_uint32(a) /\ is_uint32(b) /\ is_uint32(i) /\ is_uint32(j) /\
      is_sint32(tmp_0) /\ is_uint32(x).
  (* Goal *)
  When: (to_uint32(2 + i) % 2) = 0.
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_1 = 1).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= b.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: ((x_1 = 1) -> (x_2 = 1)).
  (* Invariant *)
  Have: ((x_1 = 0) -> ((1 + (2 * a)) = j)).
  (* Invariant *)
  Have: ((x_1 = 0) -> (x_2 = 0)).
  (* Invariant *)
  Have: ((x_1 != 0) -> (x_2 != 0)).
  (* Invariant *)
  Have: b <= a.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x = to_uint32(2 + j).
}
Prove: (x % 2) = 0.
Prover Z3 4.8.6 returns Timeout (Qed:10ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:10ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c, line 24):
Assume { Type: is_sint32(flag_0). (* Residual *) When: flag_0 != 0. }
Prove: false.
Prover Z3 4.8.6 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c, line 28):
Let x = to_uint32(2 + i) % 2.
Let x_1 = j_1 % 2.
Let x_2 = to_uint32(1 + a).
Let x_3 = i % 2.
Let x_4 = j % 2.
Assume {
  Type: is_uint32(a) /\ is_uint32(b) /\ is_uint32(i) /\ is_uint32(j_1) /\
      is_uint32(j) /\ is_sint32(tmp_0).
  (* Invariant *)
  Have: (x_3 = 0) \/ (x_3 = 1).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= b.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: ((x_3 = 1) -> (x_4 = 1)).
  (* Invariant *)
  Have: ((x_3 = 0) -> ((1 + (2 * a)) = j)).
  (* Invariant *)
  Have: ((x_3 = 0) -> (x_4 = 0)).
  (* Invariant *)
  Have: ((x_3 != 0) -> (x_4 != 0)).
  (* Invariant *)
  Have: b <= a.
  (* Then *)
  Have: tmp_0 != 0.
  If to_uint32(x) = 0
  Then { Have: to_uint32(2 + j) = j_1. }
  Else { Have: to_uint32(1 + j) = j_1. }
  (* Invariant *)
  Have: (x = 0) \/ (x = 1).
  (* Invariant *)
  Have: ((x = 1) -> (x_1 = 1)).
  (* Invariant *)
  Have: ((x = 0) -> ((1 + (2 * x_2)) = j_1)).
  (* Invariant *)
  Have: ((x = 0) -> (x_1 = 0)).
  (* Invariant *)
  Have: ((x != 0) -> (x_1 != 0)).
}
Prove: to_uint32(b + to_uint32(j - i)) <= x_2.
Prover Z3 4.8.6 returns Timeout (Qed:15ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:15ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c, line 29) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c, line 29) (2/2):
Call Result at line 34
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c:4: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/ddlm2013_true-unreach-call_0006/ddlm2013_true-unreach-call_merged.c:6: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

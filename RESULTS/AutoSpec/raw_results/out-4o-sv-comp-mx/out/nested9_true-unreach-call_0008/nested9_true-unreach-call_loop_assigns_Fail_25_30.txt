[kernel] Parsing out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c:15: Warning: 
  Missing assigns clause (assigns 'everything' instead)
[wp] 30 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_established (Qed 4ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_8_established (Qed 7ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_9_established (Qed 7ms) (Z3)
[wp] [Timeout] typed_foo_loop_assigns_part2 (Qed 10ms) (Z3)
[wp] [Timeout] typed_foo_loop_assigns_part3 (Qed 10ms) (Z3)
[wp] Proved goals:   25 / 30
  Qed:              20
  Alt-Ergo 2.6.2:    1 (25ms)
  Z3 4.8.6:          4 (20ms-28ms-30ms)
  Timeout:           5
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 21):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 21):
Assume {
  Type: is_sint32(j) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(m) /\
      is_sint32(n) /\ is_sint32(n_1).
  (* Pre-condition *)
  Have: ((-2147483647) <= n_1) /\ (n_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= m) /\ (m <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= l) /\ (l <= 2147483646).
  (* Then *)
  Have: (3 * n_1) <= (l + m).
  (* Then *)
  Have: k < n.
  (* Then *)
  Have: j < (3 * k).
}
Prove: k <= j.
Prover Z3 4.8.6 returns Timeout (Qed:4ms) (3s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:4ms) (3s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 22):
Let x = i + (2 * n).
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(k) /\ is_sint32(l) /\
      is_sint32(l_1) /\ is_sint32(m) /\ is_sint32(m_1) /\ is_sint32(n) /\
      is_sint32(n_1) /\ is_sint32(1 + k).
  (* Pre-condition *)
  Have: ((-2147483647) <= n_1) /\ (n_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= m_1) /\ (m_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= l_1) /\ (l_1 <= 2147483646).
  (* Then *)
  Have: (3 * n_1) <= (l_1 + m_1).
  (* Then *)
  Have: i < n.
  (* Then *)
  Have: j < (3 * i).
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (3 * n) <= (l + m).
  (* Invariant *)
  Have: (2 * i) <= j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: k <= j.
  (* Invariant *)
  Have: k <= x.
  (* Invariant *)
  Have: i <= k.
  (* Invariant *)
  Have: 0 <= k.
  (* Then *)
  Have: k < j.
}
Prove: k < x.
Prover Z3 4.8.6 returns Valid (Qed:13ms) (30ms) (36873)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 22):
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(l) /\ is_sint32(m) /\
      is_sint32(n) /\ is_sint32(n_1).
  (* Pre-condition *)
  Have: ((-2147483647) <= n_1) /\ (n_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= m) /\ (m <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= l) /\ (l <= 2147483646).
  (* Then *)
  Have: (3 * n_1) <= (l + m).
  (* Then *)
  Have: i < n.
  (* Then *)
  Have: j < (3 * i).
  (* Invariant *)
  Have: i <= j.
}
Prove: 0 <= n.
Prover Z3 4.8.6 returns Valid (Qed:6ms) (20ms) (34201)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:6ms) (25ms) (40)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 23):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 23):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 24):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 24):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 25):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 25):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 26):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 26):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 27):
Let x = i + (2 * n).
Let x_1 = 1 + k.
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(k) /\ is_sint32(l) /\
      is_sint32(l_1) /\ is_sint32(m) /\ is_sint32(m_1) /\ is_sint32(n) /\
      is_sint32(n_1) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: ((-2147483647) <= n_1) /\ (n_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= m_1) /\ (m_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= l_1) /\ (l_1 <= 2147483646).
  (* Then *)
  Have: (3 * n_1) <= (l_1 + m_1).
  (* Then *)
  Have: i < n.
  (* Then *)
  Have: j < (3 * i).
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (3 * n) <= (l + m).
  (* Invariant *)
  Have: (2 * i) <= j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: k <= j.
  (* Invariant *)
  Have: k <= x.
  (* Invariant *)
  Have: i <= k.
  (* Invariant *)
  Have: 0 <= k.
  (* Then *)
  Have: k < j.
  (* Invariant *)
  Have: k < x.
}
Prove: i <= x_1.
Prover Z3 4.8.6 returns Valid (Qed:10ms) (30ms) (36755)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 27):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 28):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 28):
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(m) /\ is_sint32(m_1) /\ is_sint32(n) /\ is_sint32(n_1).
  (* Pre-condition *)
  Have: ((-2147483647) <= n_1) /\ (n_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= m_1) /\ (m_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= l_1) /\ (l_1 <= 2147483646).
  (* Then *)
  Have: (3 * n_1) <= (l_1 + m_1).
  (* Then *)
  Have: i < n.
  (* Then *)
  Have: j < (3 * i).
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: 0 <= n.
}
Prove: (3 * n) <= (l + m).
Prover Z3 4.8.6 returns Timeout (Qed:7ms) (3s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:7ms) (3s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 29):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 29):
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(m) /\ is_sint32(m_1) /\ is_sint32(n) /\ is_sint32(n_1).
  (* Pre-condition *)
  Have: ((-2147483647) <= n_1) /\ (n_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= m_1) /\ (m_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= l_1) /\ (l_1 <= 2147483646).
  (* Then *)
  Have: (3 * n_1) <= (l_1 + m_1).
  (* Then *)
  Have: i < n.
  (* Then *)
  Have: j < (3 * i).
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (3 * n) <= (l + m).
}
Prove: (2 * i) <= j.
Prover Z3 4.8.6 returns Timeout (Qed:7ms) (3s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:7ms) (3s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 30):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 30):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 31):
Prove: true.
Prover Qed returns Valid (14ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 31):
Assume {
  Type: is_sint32(j) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(m) /\ is_sint32(m_1) /\ is_sint32(n) /\ is_sint32(n_1).
  (* Pre-condition *)
  Have: ((-2147483647) <= n_1) /\ (n_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= m_1) /\ (m_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= l_1) /\ (l_1 <= 2147483646).
  (* Then *)
  Have: (3 * n_1) <= (l_1 + m_1).
  (* Then *)
  Have: k < n.
  (* Then *)
  Have: j < (3 * k).
  (* Invariant *)
  Have: k <= j.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (3 * n) <= (l + m).
  (* Invariant *)
  Have: (2 * k) <= j.
}
Prove: 0 <= k.
Prover Z3 4.8.6 returns Valid (Qed:11ms) (30ms) (35227)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 32):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 32):
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(m) /\ is_sint32(m_1) /\ is_sint32(n) /\ is_sint32(n_1).
  (* Pre-condition *)
  Have: ((-2147483647) <= n_1) /\ (n_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= m_1) /\ (m_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= l_1) /\ (l_1 <= 2147483646).
  (* Then *)
  Have: (3 * n_1) <= (l_1 + m_1).
  (* Then *)
  Have: i < n.
  (* Then *)
  Have: j < (3 * i).
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (3 * n) <= (l + m).
  (* Invariant *)
  Have: (2 * i) <= j.
  (* Invariant *)
  Have: 0 <= i.
}
Prove: 0 <= j.
Prover Z3 4.8.6 returns Valid (Qed:8ms) (20ms) (35328)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 33):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 33):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Loop assigns (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 17) (1/3):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 17) (2/3):
Effect at line 36
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(k) /\ is_sint32(l) /\
      is_sint32(l_1) /\ is_sint32(m) /\ is_sint32(m_1) /\ is_sint32(n) /\
      is_sint32(n_1).
  (* Pre-condition *)
  Have: ((-2147483647) <= n_1) /\ (n_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= m_1) /\ (m_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= l_1) /\ (l_1 <= 2147483646).
  (* Then *)
  Have: (3 * n_1) <= (l_1 + m_1).
  (* Then *)
  Have: i < n.
  (* Then *)
  Have: j < (3 * i).
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (3 * n) <= (l + m).
  (* Invariant *)
  Have: (2 * i) <= j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: k <= j.
  (* Invariant *)
  Have: k <= (i + (2 * n)).
  (* Invariant *)
  Have: i <= k.
  (* Invariant *)
  Have: 0 <= k.
  (* Else *)
  Have: j <= k.
}
Prove: false.
Prover Z3 4.8.6 returns Timeout (Qed:10ms) (3s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:10ms) (3s)

------------------------------------------------------------

Goal Loop assigns (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 17) (3/3):
Effect at line 36
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(k) /\ is_sint32(l) /\
      is_sint32(l_1) /\ is_sint32(m) /\ is_sint32(m_1) /\ is_sint32(n) /\
      is_sint32(n_1).
  (* Pre-condition *)
  Have: ((-2147483647) <= n_1) /\ (n_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= m_1) /\ (m_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= l_1) /\ (l_1 <= 2147483646).
  (* Then *)
  Have: (3 * n_1) <= (l_1 + m_1).
  (* Then *)
  Have: i < n.
  (* Then *)
  Have: j < (3 * i).
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (3 * n) <= (l + m).
  (* Invariant *)
  Have: (2 * i) <= j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: k <= j.
  (* Invariant *)
  Have: k <= (i + (2 * n)).
  (* Invariant *)
  Have: i <= k.
  (* Invariant *)
  Have: 0 <= k.
  (* Else *)
  Have: j <= k.
}
Prove: false.
Prover Z3 4.8.6 returns Timeout (Qed:10ms) (3s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:10ms) (3s)

------------------------------------------------------------

Goal Loop assigns (file out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c, line 34):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/nested9_true-unreach-call_0008/nested9_true-unreach-call_loop_assigns.c:11: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

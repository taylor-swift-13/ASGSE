[kernel] Parsing out/array_true-unreach-call2_0001/array_true-unreach-call2_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 9 goals scheduled
[wp] [Timeout] typed_main_loop_assigns_part2 (Qed 2ms) (Z3)
[wp] [Timeout] typed_main_loop_assigns_part3 (Qed 2ms) (Z3)
[wp] Proved goals:    7 / 9
  Qed:               6
  Alt-Ergo 2.6.2:    1 (12ms)
  Timeout:           2
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Preservation of Invariant (file out/array_true-unreach-call2_0001/array_true-unreach-call2_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.97ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/array_true-unreach-call2_0001/array_true-unreach-call2_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/array_true-unreach-call2_0001/array_true-unreach-call2_merged.c, line 13):
Assume {
  Type: is_sint32(i) /\ is_sint32(1 + i).
  (* Goal *)
  When: (0 <= i_1) /\ (i_1 <= i).
  (* Invariant *)
  Have: i <= 2048.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i) -> (B[i_2] = A[i_2]))).
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i <= 2047.
}
Prove: B[i <- A[i]][i_1] = A[i_1].
Prover Z3 4.8.6 returns Valid (Qed:2ms) (10ms) (34340)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (12ms) (63)

------------------------------------------------------------

Goal Establishment of Invariant (file out/array_true-unreach-call2_0001/array_true-unreach-call2_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/array_true-unreach-call2_0001/array_true-unreach-call2_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/array_true-unreach-call2_0001/array_true-unreach-call2_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Loop assigns (file out/array_true-unreach-call2_0001/array_true-unreach-call2_merged.c, line 15) (1/3):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/array_true-unreach-call2_0001/array_true-unreach-call2_merged.c, line 15) (2/3):
Effect at line 18
Assume {
  Type: is_sint32(i) /\ is_sint32(1 + i).
  (* Invariant *)
  Have: i <= 2048.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) -> (B[i_1] = A[i_1]))).
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i <= 2047.
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= i) -> ((0 <= i_1) ->
      (B[i <- A[i]][i_1] = A[i_1]))).
  (* Invariant *)
  Have: (-1) <= i.
}
Prove: false.
Prover Z3 4.8.6 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/array_true-unreach-call2_0001/array_true-unreach-call2_merged.c, line 15) (3/3):
Effect at line 19
Assume {
  Type: is_sint32(i) /\ is_sint32(1 + i).
  (* Goal *)
  When: (0 <= i) /\ (i <= 2047).
  (* Invariant *)
  Have: i <= 2048.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) -> (B[i_1] = A[i_1]))).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= i) -> ((0 <= i_1) ->
      (B[i <- A[i]][i_1] = A[i_1]))).
  (* Invariant *)
  Have: (-1) <= i.
}
Prove: false.
Prover Z3 4.8.6 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------
[wp:pedantic-assigns] out/array_true-unreach-call2_0001/array_true-unreach-call2_merged.c:5: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

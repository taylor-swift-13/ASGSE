[kernel] Parsing out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c (with preprocessing)
[kernel:typing:no-proto] out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c:24: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c:9: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c:18: Warning: 
  Missing assigns clause (assigns 'everything' instead)
[wp] 23 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_4_established (Qed 3ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_6_established (Qed 3ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_8_established (Qed 3ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_9_established (Qed 4ms) (Z3)
[wp] [Timeout] typed_foo_loop_assigns_part3 (Qed 5ms) (Z3)
[wp] [Timeout] typed_foo_loop_assigns_part4 (Qed 5ms) (Z3)
[wp] Proved goals:   17 / 23
  Qed:              14
  Alt-Ergo 2.6.2:    3 (6ms-8ms)
  Timeout:           6
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c, line 27):
Let x = 2 * i.
Let x_1 = 1 + k.
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(j) /\ is_sint32(k) /\
      is_sint32(k_1) /\ is_sint32(n) /\ is_sint32(tmp_0) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: k_1 <= 2147483646.
  (* Then *)
  Have: i_1 < n.
  (* Then *)
  Have: j < n.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: i < n.
  (* Invariant *)
  Have: x <= j.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: j <= k.
  (* Invariant *)
  Have: forall i_2 : Z. ((j <= i_2) -> ((i_2 < k) -> (x <= i_2))).
  (* Invariant *)
  Have: x <= k.
  (* Then *)
  Have: k < n.
}
Prove: j <= x_1.
Prover Z3 4.8.6 returns Valid (Qed:4ms) (10ms) (35656)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:4ms) (6ms) (20)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c, line 27):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c, line 29):
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(j) /\ is_sint32(k) /\
      is_sint32(n) /\ is_sint32(tmp_0).
  (* Pre-condition *)
  Have: k <= 2147483646.
  (* Then *)
  Have: i_1 < n.
  (* Then *)
  Have: j < n.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: i < n.
Prover Z3 4.8.6 returns Timeout (Qed:3ms) (3s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:3ms) (3s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c, line 30):
Let x = 1 + k.
Let x_1 = 2 * i.
Assume {
  Type: is_sint32(i) /\ is_sint32(i_2) /\ is_sint32(j) /\ is_sint32(k) /\
      is_sint32(k_1) /\ is_sint32(n) /\ is_sint32(tmp_0) /\ is_sint32(x).
  (* Goal *)
  When: (j <= i_1) /\ (i_1 <= k).
  (* Pre-condition *)
  Have: k_1 <= 2147483646.
  (* Then *)
  Have: i_2 < n.
  (* Then *)
  Have: j < n.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: i < n.
  (* Invariant *)
  Have: x_1 <= j.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: j <= k.
  (* Invariant *)
  Have: forall i_3 : Z. ((j <= i_3) -> ((i_3 < k) -> (x_1 <= i_3))).
  (* Invariant *)
  Have: x_1 <= k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: j <= x.
}
Prove: x_1 <= i_1.
Prover Z3 4.8.6 returns Valid (Qed:4ms) (10ms) (36426)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:4ms) (8ms) (26)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c, line 30):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c, line 31):
Let x = 2 * i.
Let x_1 = 1 + k.
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(j) /\ is_sint32(k) /\
      is_sint32(k_1) /\ is_sint32(n) /\ is_sint32(tmp_0) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: k_1 <= 2147483646.
  (* Then *)
  Have: i_1 < n.
  (* Then *)
  Have: j < n.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: i < n.
  (* Invariant *)
  Have: x <= j.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: j <= k.
  (* Invariant *)
  Have: forall i_2 : Z. ((j <= i_2) -> ((i_2 < k) -> (x <= i_2))).
  (* Invariant *)
  Have: x <= k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: j <= x_1.
  (* Invariant *)
  Have: forall i_2 : Z. ((j <= i_2) -> ((i_2 <= k) -> (x <= i_2))).
}
Prove: x <= x_1.
Prover Z3 4.8.6 returns Valid (Qed:5ms) (20ms) (36527)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:5ms) (8ms) (23)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c, line 31):
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(k_1) /\
      is_sint32(n) /\ is_sint32(tmp_0).
  (* Pre-condition *)
  Have: k_1 <= 2147483646.
  (* Then *)
  Have: i_1 < n.
  (* Then *)
  Have: k < n.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: i < n.
}
Prove: (2 * i) <= k.
Prover Z3 4.8.6 returns Timeout (Qed:3ms) (3s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:3ms) (3s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c, line 32):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c, line 32):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c, line 33):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c, line 33):
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(j) /\ is_sint32(k) /\
      is_sint32(n) /\ is_sint32(tmp_0).
  (* Pre-condition *)
  Have: k <= 2147483646.
  (* Then *)
  Have: i_1 < n.
  (* Then *)
  Have: j < n.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: i < n.
  (* Invariant *)
  Have: (2 * i) <= j.
}
Prove: 0 <= j.
Prover Z3 4.8.6 returns Timeout (Qed:3ms) (3s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:3ms) (3s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c, line 34):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c, line 34):
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(j) /\ is_sint32(k) /\
      is_sint32(n) /\ is_sint32(tmp_0).
  (* Pre-condition *)
  Have: k <= 2147483646.
  (* Then *)
  Have: i_1 < n.
  (* Then *)
  Have: j < n.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: i < n.
  (* Invariant *)
  Have: (2 * i) <= j.
  (* Invariant *)
  Have: 0 <= j.
}
Prove: 0 <= i.
Prover Z3 4.8.6 returns Timeout (Qed:4ms) (3s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:4ms) (3s)

------------------------------------------------------------

Goal Loop assigns (file out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c, line 20) (1/4):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c, line 20) (2/4):
Call Result at line 24
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c, line 20) (3/4):
Effect at line 37
Let x = 2 * i.
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(j) /\ is_sint32(k) /\
      is_sint32(k_1) /\ is_sint32(n) /\ is_sint32(tmp_0).
  (* Pre-condition *)
  Have: k_1 <= 2147483646.
  (* Then *)
  Have: i_1 < n.
  (* Then *)
  Have: j < n.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: i < n.
  (* Invariant *)
  Have: x <= j.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: j <= k.
  (* Invariant *)
  Have: forall i_2 : Z. ((j <= i_2) -> ((i_2 < k) -> (x <= i_2))).
  (* Invariant *)
  Have: x <= k.
  (* Else *)
  Have: n <= k.
}
Prove: false.
Prover Z3 4.8.6 returns Timeout (Qed:5ms) (3s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:5ms) (3s)

------------------------------------------------------------

Goal Loop assigns (file out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c, line 20) (4/4):
Effect at line 37
Let x = 2 * i.
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(j) /\ is_sint32(k) /\
      is_sint32(k_1) /\ is_sint32(n) /\ is_sint32(tmp_0).
  (* Pre-condition *)
  Have: k_1 <= 2147483646.
  (* Then *)
  Have: i_1 < n.
  (* Then *)
  Have: j < n.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: i < n.
  (* Invariant *)
  Have: x <= j.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: j <= k.
  (* Invariant *)
  Have: forall i_2 : Z. ((j <= i_2) -> ((i_2 < k) -> (x <= i_2))).
  (* Invariant *)
  Have: x <= k.
  (* Else *)
  Have: n <= k.
}
Prove: false.
Prover Z3 4.8.6 returns Timeout (Qed:5ms) (3s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:5ms) (3s)

------------------------------------------------------------

Goal Loop assigns (file out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c, line 35):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c:4: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/nested6_true-unreach-call_0006/nested6_true-unreach-call_loop_assigns.c:9: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

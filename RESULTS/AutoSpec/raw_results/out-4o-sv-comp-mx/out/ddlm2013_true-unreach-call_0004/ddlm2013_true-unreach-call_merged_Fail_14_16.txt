[kernel] Parsing out/ddlm2013_true-unreach-call_0004/ddlm2013_true-unreach-call_merged.c (with preprocessing)
[kernel:typing:no-proto] out/ddlm2013_true-unreach-call_0004/ddlm2013_true-unreach-call_merged.c:30: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/ddlm2013_true-unreach-call_0004/ddlm2013_true-unreach-call_merged.c:6: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 16 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_2_preserved (Qed 7ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_7_preserved (Qed 11ms) (Z3)
[wp] Proved goals:   14 / 16
  Qed:              13
  Alt-Ergo 2.6.2:    1 (31ms)
  Timeout:           2
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0004/ddlm2013_true-unreach-call_merged.c, line 18):
Let x = i % 2.
Let x_1 = i_1 % 2.
Let x_2 = to_uint32(2 + i) % 2.
Assume {
  Type: is_uint32(a) /\ is_uint32(b) /\ is_uint32(i) /\ is_uint32(i_1) /\
      is_uint32(j) /\ is_sint32(flag_0) /\ is_sint32(tmp_0).
  If flag_0 != 0
  Then { Have: i_1 = 0. }
  Else { Have: i_1 = 1. }
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_1 = 1).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: ((x_1 = 0) -> (i_1 <= 1)).
  (* Invariant *)
  Have: (x = 0) \/ (x = 1).
  (* Invariant *)
  Have: ((flag_0 != 0) -> (b = a)).
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= b.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: ((x = 0) -> (i <= j)).
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: (x_2 = 0) \/ (x_2 = 1).
Prover Z3 4.8.6 returns Valid (Qed:9ms) (10ms) (35774)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:9ms) (31ms) (749)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0004/ddlm2013_true-unreach-call_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0004/ddlm2013_true-unreach-call_merged.c, line 19):
Let x = to_uint32(2 + i) % 2.
Let x_1 = i % 2.
Assume {
  Type: is_uint32(a) /\ is_uint32(i) /\ is_uint32(j) /\ is_sint32(flag_0) /\
      is_sint32(tmp_0).
  (* Goal *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_1 = 1).
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: ((x_1 = 0) -> (i <= j)).
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x = 0) \/ (x = 1).
}
Prove: to_uint32(a + to_uint32(j - i)) = to_uint32(1 + a).
Prover Z3 4.8.6 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0004/ddlm2013_true-unreach-call_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0004/ddlm2013_true-unreach-call_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0004/ddlm2013_true-unreach-call_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0004/ddlm2013_true-unreach-call_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0004/ddlm2013_true-unreach-call_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0004/ddlm2013_true-unreach-call_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0004/ddlm2013_true-unreach-call_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0004/ddlm2013_true-unreach-call_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0004/ddlm2013_true-unreach-call_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0004/ddlm2013_true-unreach-call_merged.c, line 24):
Let x = i % 2.
Let x_1 = i_1 % 2.
Let x_2 = to_uint32(2 + i).
Assume {
  Type: is_uint32(a) /\ is_uint32(b) /\ is_uint32(i) /\ is_uint32(i_1) /\
      is_uint32(j) /\ is_sint32(flag_0) /\ is_sint32(tmp_0).
  (* Goal *)
  When: (x_2 % 2) = 0.
  If flag_0 != 0
  Then { Have: i_1 = 0. }
  Else { Have: i_1 = 1. }
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_1 = 1).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: ((x_1 = 0) -> (i_1 <= 1)).
  (* Invariant *)
  Have: (x = 0) \/ (x = 1).
  (* Invariant *)
  Have: ((flag_0 != 0) -> (b = a)).
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= b.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: ((x = 0) -> (i <= j)).
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: ((flag_0 != 0) ->
      (to_uint32(b + to_uint32(j - i)) = to_uint32(1 + a))).
}
Prove: x_2 <= to_uint32(2 + j).
Prover Z3 4.8.6 returns Timeout (Qed:11ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:11ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0004/ddlm2013_true-unreach-call_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/ddlm2013_true-unreach-call_0004/ddlm2013_true-unreach-call_merged.c, line 25) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/ddlm2013_true-unreach-call_0004/ddlm2013_true-unreach-call_merged.c, line 25) (2/2):
Call Result at line 30
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/ddlm2013_true-unreach-call_0004/ddlm2013_true-unreach-call_merged.c:4: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/ddlm2013_true-unreach-call_0004/ddlm2013_true-unreach-call_merged.c:6: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

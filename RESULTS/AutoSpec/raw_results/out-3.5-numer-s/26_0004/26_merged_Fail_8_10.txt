[kernel] Parsing out/26_0004/26_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 10 goals scheduled
[wp] [Timeout] typed_hoo26_loop_invariant_2_preserved (Qed 4ms) (Z3)
[wp] [Timeout] typed_hoo26_assert (Qed 3ms) (Z3)
[wp] Proved goals:    8 / 10
  Qed:               5
  Alt-Ergo 2.5.4:    3 (0.70ms-5ms-8ms)
  Timeout:           2
------------------------------------------------------------
  Function hoo26
------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0004/26_merged.c, line 12):
Let x_1 = 1 + r.
Let x_2 = (2 * x) + (r * x_1).
Let x_3 = x_2 / 2.
Assume {
  Type: is_sint32(r) /\ is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_2) /\
      is_sint32(x_3).
  (* Pre-condition *)
  Have: (x_2 % 2) = 0.
  (* Pre-condition *)
  Have: 0 < x_2.
  (* Invariant *)
  Have: x_2 = (2 * x_3).
  (* Invariant *)
  Have: 2 <= x_2.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: 0 < x.
  (* Then *)
  Have: r < x.
}
Prove: (x_1 * (2 + r)) <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (31280)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (0.70ms) (30)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0004/26_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0004/26_merged.c, line 13):
Let x_1 = 1 + r.
Let x_2 = x_1 * (2 + r).
Let x_3 = r * x_1.
Let x_4 = (2 * x) + x_3.
Let x_5 = x_4 / 2.
Assume {
  Type: is_sint32(r) /\ is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x - r) /\
      is_sint32(x_4) /\ is_sint32(x_5).
  (* Pre-condition *)
  Have: (x_4 % 2) = 0.
  (* Pre-condition *)
  Have: 0 < x_4.
  (* Invariant *)
  Have: x_4 = (2 * x_5).
  (* Invariant *)
  Have: 2 <= x_4.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: 0 < x.
  (* Then *)
  Have: r < x.
  (* Invariant *)
  Have: x_2 <= x_4.
}
Prove: x_2 = ((2 * r) + x_3).
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0004/26_merged.c, line 13):
Let x = a / 2.
Assume {
  Type: is_sint32(a) /\ is_sint32(x).
  (* Pre-condition *)
  Have: (a % 2) = 0.
  (* Pre-condition *)
  Have: 0 < a.
}
Prove: (2 * x) = a.
Prover Z3 4.8.12 returns Valid (Qed:1ms) (20ms) (30658)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (8ms) (93)

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0004/26_merged.c, line 14):
Let x_2 = -x.
Let x_3 = x_1 - x.
Let x_4 = 1 + x_1 - x.
Let x_5 = x_3 * x_4.
Let x_6 = (2 * x) + (x_4 * (2 + x_1 - x)).
Let x_7 = x_6 / 2.
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_3) /\ is_sint32(x_4) /\
      is_sint32(x_6) /\ is_sint32(x_7).
  (* Pre-condition *)
  Have: (x_6 % 2) = 0.
  (* Pre-condition *)
  Have: 0 < x_6.
  (* Invariant *)
  Have: x_6 = (2 * x_7).
  (* Invariant *)
  Have: 2 <= x_6.
  (* Invariant *)
  Have: x_5 <= x_6.
  (* Invariant *)
  Have: ((2 * x_1) + x_5) = x_6.
  (* Invariant *)
  Have: x <= x_1.
  (* Invariant *)
  Have: 0 < x_1.
  (* Then *)
  Have: 0 < x.
}
Prove: x <= (1 + x_1).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (9869)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (26)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0004/26_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0004/26_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0004/26_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Assertion (file out/26_0004/26_merged.c, line 24):
Let x_1 = 1 + r.
Let x_2 = (2 * x) + (r * x_1).
Let x_3 = x_2 / 2.
Assume {
  Type: is_sint32(r) /\ is_sint32(x) /\ is_sint32(x_2) /\ is_sint32(x_3).
  (* Pre-condition *)
  Have: (x_2 % 2) = 0.
  (* Pre-condition *)
  Have: 0 < x_2.
  (* Invariant *)
  Have: x_2 = (2 * x_3).
  (* Invariant *)
  Have: 2 <= x_2.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: 0 < x.
  (* Else *)
  Have: x <= r.
}
Prove: x_2 <= (x_1 * x_1).
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/26_0004/26_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/26_0004/26_merged.c:5: Warning: 
  No 'assigns' specification for function 'hoo26'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/1_0001/1_merged.c (with preprocessing)
[kernel:typing:no-proto] out/1_0001/1_merged.c:24: Warning: 
  Calling function unknown that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/1_0001/1_merged.c:7: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 11 goals scheduled
[wp] [Timeout] typed_hoo1_loop_invariant_2_preserved (Qed 3ms) (Z3)
[wp] [Timeout] typed_hoo1_loop_invariant_4_preserved (Qed 3ms) (Z3)
[wp] [Timeout] typed_hoo1_assert (Qed 2ms) (Z3)
[wp] Proved goals:    8 / 11
  Qed:             8
  Timeout:         3
------------------------------------------------------------
  Function hoo1
------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0001/1_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0001/1_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0001/1_merged.c, line 17):
Let x = j + k.
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(k) /\ is_sint32(k_1) /\
      is_sint32(tmp_0) /\ is_sint32(k - 1) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 <= k_1.
  (* Pre-condition *)
  Have: k_1 <= 1.
  (* Invariant *)
  Have: (-1) <= k_1.
  (* Invariant *)
  Have: k <= 1.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 < i.
  (* Invariant *)
  Have: (-1) <= k.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: k <= 2.
}
Prove: 0 < x.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0001/1_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0001/1_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0001/1_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0001/1_merged.c, line 19):
Let x = j + k.
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(k) /\ is_sint32(k_1) /\
      is_sint32(tmp_0) /\ is_sint32(k - 1) /\ is_sint32(1 + i) /\
      is_sint32(x).
  (* Pre-condition *)
  Have: 0 <= k_1.
  (* Pre-condition *)
  Have: k_1 <= 1.
  (* Invariant *)
  Have: (-1) <= k_1.
  (* Invariant *)
  Have: k <= 1.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 < i.
  (* Invariant *)
  Have: (-1) <= k.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: k <= 2.
  (* Invariant *)
  Have: 0 < x.
}
Prove: 0 <= k.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0001/1_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.96ms)

------------------------------------------------------------

Goal Assertion (file out/1_0001/1_merged.c, line 31):
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(k) /\ is_sint32(k_1).
  (* Pre-condition *)
  Have: 0 <= k_1.
  (* Pre-condition *)
  Have: k_1 <= 1.
  (* Invariant *)
  Have: (-1) <= k_1.
  (* Invariant *)
  Have: k <= 1.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 < i.
  (* Invariant *)
  Have: (-1) <= k.
}
Prove: (i + k) <= 2.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/1_0001/1_merged.c, line 20) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/1_0001/1_merged.c, line 20) (2/2):
Call Result at line 24
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/1_0001/1_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/1_0001/1_merged.c:7: Warning: 
  No 'assigns' specification for function 'hoo1'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/21_0001/21_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 12 goals scheduled
[wp] Proved goals:   12 / 12
  Qed:               8
  Alt-Ergo 2.5.4:    4 (5ms-6ms-9ms)
------------------------------------------------------------
  Function hoo21
------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 17):
Let x_1 = v + x.
Let x_2 = 2 * Y.
Let x_3 = 2 * (Y * x).
Let x_4 = x_2 - v.
Let x_5 = y * x_4.
Let x_6 = 1 + x.
Assume {
  Type: is_sint32(Y) /\ is_sint32(v) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_6) /\ is_sint32(x_4) /\ is_sint32(v + x_3 - (2 * x_5)).
  (* Residual *)
  When: (v + x_3) < (2 * x_5).
  (* Pre-condition *)
  Have: v < x_2.
  (* Pre-condition *)
  Have: 0 < Y.
  (* Pre-condition *)
  Have: v <= Y.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: x_1 <= (1 + x_2).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: x_1 <= x_2.
}
Prove: y <= x_6.
Prover Z3 4.8.12 returns Valid (Qed:11ms) (10ms) (32105)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (5ms) (48)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 19):
Let x_1 = 1 + x.
Let x_2 = 2 * Y.
Let x_3 = 2 * (Y * x).
Let x_4 = X * y_1.
Let x_5 = -X.
Assume {
  Type: is_sint32(X) /\ is_sint32(Y) /\ is_sint32(v) /\ is_sint32(v_1) /\
      is_sint32(v_2) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\
      is_sint32(x_1) /\ is_sint32(x_2 - X) /\
      is_sint32(x_2 + x_3 - X - (2 * x_4)).
  (* Pre-condition *)
  Have: 0 < X.
  (* Pre-condition *)
  Have: 0 < Y.
  (* Pre-condition *)
  Have: Y <= X.
  (* Invariant *)
  Have: y_1 <= x.
  (* Invariant *)
  Have: x <= (1 + X).
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: x <= X.
  If (x_2 + x_3) < (X + (2 * x_4))
  Then {
    Let x_6 = 2 * (X * y).
    Have: (y_1 = y) /\ ((X + v_1 + x_6) = (x_2 + x_3)).
    Have: (X + v + x_6) = ((4 * Y) + x_3).
  }
  Else {
    Let x_7 = 2 * x_4.
    Have: (X + v_2 + x_7) = (x_2 + x_3).
    Have: (v + (3 * X) + x_7) = ((4 * Y) + x_3).
    Have: (1 + y_1) = y.
  }
  (* Invariant *)
  Have: y <= x_1.
}
Prove: (x_2 + (2 * (Y * x_1))) = (X + v + x_6).
Prover Z3 4.8.12 returns Valid (Qed:18ms) (30ms) (79545)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:18ms) (9ms) (224)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 20):
Let x_1 = Y * x.
Let x_2 = 1 + y.
Let x_3 = X * x_2.
Let x_4 = X * y.
Let x_5 = 1 + x.
Let x_6 = Y * x_5.
Let x_7 = 2 * Y.
Let x_8 = 2 * x_1.
Let x_9 = -X.
Let x_10 = (-2) * x_3.
Let x_11 = 2 * x_6.
Assume {
  Type: is_sint32(X) /\ is_sint32(Y) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_5) /\ is_sint32(x_2) /\ is_sint32(x_7 - X) /\
      is_sint32(x_7 + x_8 - X - (2 * x_4)) /\
      is_sint32(X + x_11 - (2 * x_3)) /\
      is_sint32(x_7 + x_11 - X - (2 * x_3)).
  (* Residual *)
  When: (X + (2 * x_4)) <= (x_7 + x_8).
  (* Pre-condition *)
  Have: 0 < X.
  (* Pre-condition *)
  Have: 0 < Y.
  (* Pre-condition *)
  Have: Y <= X.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: x <= (1 + X).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: x <= X.
  Have: (Y + x_1 + x_3) = (X + x_4 + x_6).
}
Prove: (-1) <= y.
Prover Z3 4.8.12 returns Valid (Qed:16ms) (10ms) (32735)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:16ms) (5ms) (77)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.78ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (8ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assertion (file out/21_0001/21_merged.c, line 38):
Let x_1 = -X.
Let x_2 = 2 * Y.
Let x_3 = X * y.
Assume {
  Type: is_sint32(X) /\ is_sint32(Y) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_2 - X) /\ is_sint32(x_2 + (2 * (Y * x)) - X - (2 * x_3)).
  (* Pre-condition *)
  Have: 0 < X.
  (* Pre-condition *)
  Have: 0 < Y.
  (* Pre-condition *)
  Have: Y <= X.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: x <= (1 + X).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x.
  (* Else *)
  Have: X < x.
}
Prove: (x * y) = (y + x_3).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (34)

------------------------------------------------------------

Goal Loop assigns (file out/21_0001/21_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/21_0001/21_merged.c:6: Warning: 
  No 'assigns' specification for function 'hoo21'.
  Callers assumptions might be imprecise.

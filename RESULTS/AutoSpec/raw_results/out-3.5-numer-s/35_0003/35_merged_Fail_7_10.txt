[kernel] Parsing out/35_0003/35_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 10 goals scheduled
[wp] [Timeout] typed_hoo35_loop_invariant_preserved (Qed 2ms) (Z3)
[wp] [Timeout] typed_hoo35_loop_invariant_4_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_hoo35_assert (Qed 2ms) (Z3)
[wp] Proved goals:    7 / 10
  Qed:               4
  Alt-Ergo 2.5.4:    3 (7ms-11ms)
  Timeout:           3
------------------------------------------------------------
  Function hoo35
------------------------------------------------------------

Goal Preservation of Invariant (file out/35_0003/35_merged.c, line 12):
Let x = (prev_guess_0 + (n / prev_guess_0)) / 2.
Assume {
  Type: is_sint32(n) /\ is_sint32(prev_guess_0) /\ is_sint32(prev_guess_1) /\
      is_sint32(n / 2) /\ is_sint32(x).
  (* Goal *)
  When: n <= (x * x).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: ((n <= (prev_guess_0 * prev_guess_0)) ->
      (prev_guess_1 <= prev_guess_0)).
  (* Invariant *)
  Have: 0 <= prev_guess_1.
  (* Invariant *)
  Have: 0 < prev_guess_0.
  (* Then *)
  Have: prev_guess_1 != prev_guess_0.
}
Prove: prev_guess_0 <= x.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/35_0003/35_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/35_0003/35_merged.c, line 13):
Let x = guess_0 + (n / guess_0).
Let x_1 = x / 2.
Assume {
  Type: is_sint32(guess_0) /\ is_sint32(n) /\ is_sint32(prev_guess_0) /\
      is_sint32(n / 2) /\ is_sint32(x_1).
  (* Goal *)
  When: x_1 != guess_0.
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: ((n <= (guess_0 * guess_0)) -> (prev_guess_0 <= guess_0)).
  (* Invariant *)
  Have: 0 <= prev_guess_0.
  (* Invariant *)
  Have: 0 < guess_0.
  (* Then *)
  Have: prev_guess_0 != guess_0.
  (* Invariant *)
  Have: ((n <= (x_1 * x_1)) -> (guess_0 <= x_1)).
}
Prove: 2 <= x.
Prover Z3 4.8.12 returns Valid (Qed:2ms) (20ms) (35157)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (9ms) (144)

------------------------------------------------------------

Goal Establishment of Invariant (file out/35_0003/35_merged.c, line 13):
Let x = n / 2.
Assume {
  Type: is_sint32(n) /\ is_sint32(x).
  (* Goal *)
  When: x != 0.
  (* Pre-condition *)
  Have: 0 < n.
}
Prove: 2 <= n.
Prover Z3 4.8.12 returns Valid (Qed:1ms) (10ms) (29766)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (7ms) (84)

------------------------------------------------------------

Goal Preservation of Invariant (file out/35_0003/35_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/35_0003/35_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/35_0003/35_merged.c, line 15):
Let x = guess_0 + (n / guess_0).
Let x_1 = x / 2.
Assume {
  Type: is_sint32(guess_0) /\ is_sint32(n) /\ is_sint32(prev_guess_0) /\
      is_sint32(n / 2) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: ((n <= (guess_0 * guess_0)) -> (prev_guess_0 <= guess_0)).
  (* Invariant *)
  Have: 0 <= prev_guess_0.
  (* Invariant *)
  Have: 0 < guess_0.
  (* Then *)
  Have: prev_guess_0 != guess_0.
  (* Invariant *)
  Have: ((n <= (x_1 * x_1)) -> (guess_0 <= x_1)).
  (* Invariant *)
  Have: ((x_1 != guess_0) -> (2 <= x)).
}
Prove: 2 <= x.
Prover Z3 4.8.12 returns Valid (Qed:2ms) (10ms) (33687)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (11ms) (146)

------------------------------------------------------------

Goal Establishment of Invariant (file out/35_0003/35_merged.c, line 15):
Let x = n / 2.
Assume {
  Type: is_sint32(n) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: ((x != 0) -> (2 <= n)).
}
Prove: 2 <= n.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Assertion (file out/35_0003/35_merged.c, line 24):
Assume {
  Type: is_sint32(guess_0) /\ is_sint32(n) /\ is_sint32(n / 2).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 <= guess_0.
  (* Invariant *)
  Have: 0 < guess_0.
}
Prove: (guess_0 * guess_0) <= n.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/35_0003/35_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/35_0003/35_merged.c:4: Warning: 
  No 'assigns' specification for function 'hoo35'.
  Callers assumptions might be imprecise.

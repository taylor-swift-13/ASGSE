[kernel] Parsing out/20_0002/20_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/20_0002/20_merged.c:30: Warning: 
  Body of function main20 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 27 goals scheduled
[wp] [Timeout] typed_main20_loop_invariant_4_preserved (Qed 3ms) (Z3)
[wp] [Timeout] typed_main20_assert_missing_return (Qed 2ms) (Z3)
[wp] Proved goals:   25 / 27
  Qed:              20
  Alt-Ergo 2.5.4:    5
  Timeout:           2
------------------------------------------------------------
  Function main20
------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 17):
Let x = 1 + a.
Let x_1 = x * x.
Let x_2 = 2 * a.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(1 + x_2) /\
      is_sint32(3 + x_2) /\ is_sint32(x_1) /\ is_sint32(3 + x_2 + x_1).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: x_1 = (1 + (a * a)).
  (* Invariant *)
  Have: x_1 = (1 + (a * x)).
  (* Invariant *)
  Have: ((x * (2 + a)) / 2) = x_1.
  (* Invariant *)
  Have: x_1 <= (1 + n + x_2).
  (* Invariant *)
  Have: x_1 <= (1 + n).
  (* Invariant *)
  Have: a <= n.
  (* Invariant *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: x_1 <= n.
}
Prove: a = (-1).
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 19):
Let x = 1 + a.
Let x_1 = 2 + a.
Let x_2 = x * x_1.
Let x_3 = x * x.
Let x_4 = 2 * a.
Let x_5 = 3 + x_4.
Let x_6 = 1 + x_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(1 + x_4) /\
      is_sint32(x_5) /\ is_sint32(x_6) /\ is_sint32(x_2 - 2 - x_4).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: x_2 = (3 + x_4 + (a * a)).
  (* Invariant *)
  Have: x_2 = (3 + x_4 + (a * x)).
  (* Invariant *)
  Have: x_2 = (2 + x_4 + (x_2 / 2)).
  (* Invariant *)
  Have: x_2 = (2 + x_4 + x_3).
  (* Invariant *)
  Have: x_2 <= (3 + n + (4 * a)).
  (* Invariant *)
  Have: x_2 <= (3 + n + x_4).
  (* Invariant *)
  Have: a <= n.
  (* Invariant *)
  Have: x_5 <= x_2.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: x_2 <= (2 + n + x_4).
  (* Invariant *)
  Have: x_2 = x_3.
}
Prove: ((x_1 * (3 + a)) / 2) = x_6.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10167)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (6ms) (38)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 20):
Let x = 2 + a.
Let x_1 = (x * (3 + a)) / 2.
Let x_2 = 1 + a.
Let x_3 = x_2 * x.
Let x_4 = x_2 * x_2.
Let x_5 = 2 * a.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x_2) /\
      is_sint32(1 + x_5) /\ is_sint32(3 + x_5) /\ is_sint32(x_1) /\
      is_sint32(x_1 - 3 - x_5).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: x_1 = (4 + x_5 + (a * a)).
  (* Invariant *)
  Have: x_1 = (4 + x_5 + (a * x_2)).
  (* Invariant *)
  Have: x_1 = (3 + x_5 + (x_3 / 2)).
  (* Invariant *)
  Have: x_1 = (3 + x_5 + x_4).
  (* Invariant *)
  Have: x_1 <= (4 + n + (4 * a)).
  (* Invariant *)
  Have: x_1 <= (4 + n + x_5).
  (* Invariant *)
  Have: a <= n.
  (* Invariant *)
  Have: (4 + x_5) <= x_1.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: x_1 <= (3 + n + x_5).
  (* Invariant *)
  Have: x_1 = (1 + x_4).
  (* Invariant *)
  Have: x_1 = (1 + x_3).
}
Prove: x_1 = (x * x).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (10255)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (7ms) (31)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 22):
Let x = 2 + a.
Let x_1 = x * x.
Let x_2 = 1 + a.
Let x_3 = x_2 * x.
Let x_4 = x_2 * x_2.
Let x_5 = 2 * a.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x_2) /\
      is_sint32(1 + x_5) /\ is_sint32(3 + x_5) /\ is_sint32(x_1) /\
      is_sint32(x_1 - 3 - x_5).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: x_1 = (4 + x_5 + (a * a)).
  (* Invariant *)
  Have: x_1 = (4 + x_5 + (a * x_2)).
  (* Invariant *)
  Have: x_1 = (3 + x_5 + (x_3 / 2)).
  (* Invariant *)
  Have: x_1 = (3 + x_5 + x_4).
  (* Invariant *)
  Have: x_1 <= (4 + n + (4 * a)).
  (* Invariant *)
  Have: x_1 <= (4 + n + x_5).
  (* Invariant *)
  Have: a <= n.
  (* Invariant *)
  Have: (4 + x_5) <= x_1.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: x_1 <= (3 + n + x_5).
  (* Invariant *)
  Have: x_1 = (1 + x_4).
  (* Invariant *)
  Have: x_1 = (1 + x_3).
  (* Invariant *)
  Have: ((x * (3 + a)) / 2) = x_1.
}
Prove: x_1 <= (1 + n).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (32991)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (6ms) (36)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 23):
Let x = 2 + a.
Let x_1 = x * x.
Let x_2 = 1 + a.
Let x_3 = x_2 * x.
Let x_4 = x_2 * x_2.
Let x_5 = 2 * a.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x_2) /\
      is_sint32(1 + x_5) /\ is_sint32(3 + x_5) /\ is_sint32(x_1) /\
      is_sint32(x_1 - 3 - x_5).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: x_1 = (4 + x_5 + (a * a)).
  (* Invariant *)
  Have: x_1 = (4 + x_5 + (a * x_2)).
  (* Invariant *)
  Have: x_1 = (3 + x_5 + (x_3 / 2)).
  (* Invariant *)
  Have: x_1 = (3 + x_5 + x_4).
  (* Invariant *)
  Have: x_1 <= (4 + n + (4 * a)).
  (* Invariant *)
  Have: x_1 <= (4 + n + x_5).
  (* Invariant *)
  Have: a <= n.
  (* Invariant *)
  Have: (4 + x_5) <= x_1.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: x_1 <= (3 + n + x_5).
  (* Invariant *)
  Have: x_1 = (1 + x_4).
  (* Invariant *)
  Have: x_1 = (1 + x_3).
  (* Invariant *)
  Have: ((x * (3 + a)) / 2) = x_1.
  (* Invariant *)
  Have: x_1 <= (1 + n).
}
Prove: a < n.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (33108)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (5ms) (37)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 24):
Let x = 2 + a.
Let x_1 = x * x.
Let x_2 = 1 + a.
Let x_3 = x_2 * x.
Let x_4 = x_2 * x_2.
Let x_5 = 2 * a.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x_2) /\
      is_sint32(1 + x_5) /\ is_sint32(3 + x_5) /\ is_sint32(x_1) /\
      is_sint32(x_1 - 3 - x_5).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: x_1 = (4 + x_5 + (a * a)).
  (* Invariant *)
  Have: x_1 = (4 + x_5 + (a * x_2)).
  (* Invariant *)
  Have: x_1 = (3 + x_5 + (x_3 / 2)).
  (* Invariant *)
  Have: x_1 = (3 + x_5 + x_4).
  (* Invariant *)
  Have: x_1 <= (4 + n + (4 * a)).
  (* Invariant *)
  Have: x_1 <= (4 + n + x_5).
  (* Invariant *)
  Have: a <= n.
  (* Invariant *)
  Have: (4 + x_5) <= x_1.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: x_1 <= (3 + n + x_5).
  (* Invariant *)
  Have: x_1 = (1 + x_4).
  (* Invariant *)
  Have: x_1 = (1 + x_3).
  (* Invariant *)
  Have: ((x * (3 + a)) / 2) = x_1.
  (* Invariant *)
  Have: x_1 <= (1 + n).
  (* Invariant *)
  Have: a < n.
}
Prove: 0 < x_1.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (33215)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (37)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.97ms)

------------------------------------------------------------

Goal Assertion (file out/20_0002/20_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/20_0002/20_merged.c, line 38):
Let x = 1 + a.
Let x_1 = x * x.
Let x_2 = 2 * a.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(1 + x_2) /\ is_sint32(x_1).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: x_1 = (1 + (a * a)).
  (* Invariant *)
  Have: x_1 = (1 + (a * x)).
  (* Invariant *)
  Have: ((x * (2 + a)) / 2) = x_1.
  (* Invariant *)
  Have: x_1 <= (1 + n + x_2).
  (* Invariant *)
  Have: x_1 <= (1 + n).
  (* Invariant *)
  Have: a <= n.
  (* Invariant *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: 0 <= a.
  (* Else *)
  Have: n < x_1.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/20_0002/20_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/20_0002/20_merged.c:4: Warning: 
  No 'assigns' specification for function 'main20'.
  Callers assumptions might be imprecise.

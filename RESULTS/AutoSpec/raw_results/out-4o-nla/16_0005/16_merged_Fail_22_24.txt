[kernel] Parsing out/16_0005/16_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/16_0005/16_merged.c:28: Warning: 
  Body of function main16 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 24 goals scheduled
[wp] [Timeout] typed_main16_loop_invariant_3_preserved (Qed 3ms) (Z3)
[wp] [Timeout] typed_main16_assert_missing_return (Qed 2ms) (Z3)
[wp] Proved goals:   22 / 24
  Qed:            17
  Z3 4.8.12:       5 (10ms-26ms-60ms)
  Timeout:         2
------------------------------------------------------------
  Function main16
------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0005/16_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0005/16_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0005/16_merged.c, line 14):
Let x = 1 + y.
Let x_1 = (y * x * (1 + (2 * y))) / 6.
Let x_2 = y * y * x.
Let x_3 = y * y * y.
Let x_4 = (x * x) + x_1.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_4).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_1 = x_3.
  (* Invariant *)
  Have: (x_3 / 3) = ((x_3 / 6) + x_1).
  (* Invariant *)
  Have: x_1 = (y * y * (x / 2)).
  (* Invariant *)
  Have: x_1 = (x_2 / 2).
  (* Invariant *)
  Have: x_1 = (x_2 / 3).
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y < k.
}
Prove: (x * x * x) = x_4.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (60ms) (94077)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0005/16_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0005/16_merged.c, line 15):
Let x = 1 + c.
Let x_1 = x * x * x.
Let x_2 = x * x.
Let x_3 = c * c * x.
Let x_4 = c * c * c.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_1 - x_2).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_1 = (x_4 + x_2).
  (* Invariant *)
  Have: ((x_4 / 6) + x_1) = (x_2 + (x_4 / 3)).
  (* Invariant *)
  Have: x_1 = (x_2 + (c * c * (x / 2))).
  (* Invariant *)
  Have: x_1 = (x_2 + (x_3 / 2)).
  (* Invariant *)
  Have: x_1 = (x_2 + (x_3 / 3)).
  (* Invariant *)
  Have: x_1 = (x_2 + ((c * x * (1 + (2 * c))) / 6)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
}
Prove: (x_1 / 3) = (x_1 + (x_1 / 6)).
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0005/16_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0005/16_merged.c, line 16):
Let x = 1 + y.
Let x_1 = x * x * x.
Let x_2 = x_1 / 3.
Let x_3 = x_1 / 6.
Let x_4 = x * x.
Let x_5 = y * y * x.
Let x_6 = y * y * y.
Let x_7 = -x_3.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x) /\
      is_sint32(x_2 - x_3) /\ is_sint32(x_2 - x_4 - x_3).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_2 = (x_6 + x_4 + x_3).
  (* Invariant *)
  Have: (x_4 + (x_6 / 3) + x_3) = ((x_6 / 6) + x_2).
  (* Invariant *)
  Have: x_2 = (x_4 + (y * y * (x / 2)) + x_3).
  (* Invariant *)
  Have: x_2 = (x_4 + (x_5 / 2) + x_3).
  (* Invariant *)
  Have: x_2 = (x_4 + (x_5 / 3) + x_3).
  (* Invariant *)
  Have: x_2 = (x_4 + x_3 + ((y * x * (1 + (2 * y))) / 6)).
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y < k.
  (* Invariant *)
  Have: x_2 = (x_1 + x_3).
}
Prove: x_2 = ((x * x * ((2 + y) / 2)) + x_3).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (44249)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0005/16_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0005/16_merged.c, line 17):
Let x = 1 + y.
Let x_1 = x * x * x.
Let x_2 = 2 + y.
Let x_3 = x * x * (x_2 / 2).
Let x_4 = x * x.
Let x_5 = y * y * x.
Let x_6 = y * y * y.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_3 - x_4).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_3 = (x_6 + x_4).
  (* Invariant *)
  Have: ((x_6 / 6) + x_3) = (x_4 + (x_6 / 3)).
  (* Invariant *)
  Have: x_3 = (x_4 + (y * y * (x / 2))).
  (* Invariant *)
  Have: x_3 = (x_4 + (x_5 / 2)).
  (* Invariant *)
  Have: x_3 = (x_4 + (x_5 / 3)).
  (* Invariant *)
  Have: x_3 = (x_4 + ((y * x * (1 + (2 * y))) / 6)).
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y < k.
  (* Invariant *)
  Have: x_3 = x_1.
  (* Invariant *)
  Have: (x_1 / 3) = (x_3 + (x_1 / 6)).
}
Prove: ((x * x * x_2) / 2) = x_3.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (30ms) (46673)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0005/16_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0005/16_merged.c, line 18):
Let x = 1 + c.
Let x_1 = 2 + c.
Let x_2 = x * x * x_1.
Let x_3 = x_2 / 2.
Let x_4 = x * x * x.
Let x_5 = x * x.
Let x_6 = c * c * x.
Let x_7 = c * c * c.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_3 - x_5).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_3 = (x_7 + x_5).
  (* Invariant *)
  Have: ((x_7 / 6) + x_3) = (x_5 + (x_7 / 3)).
  (* Invariant *)
  Have: x_3 = (x_5 + (c * c * (x / 2))).
  (* Invariant *)
  Have: x_3 = (x_5 + (x_6 / 2)).
  (* Invariant *)
  Have: x_3 = (x_5 + (x_6 / 3)).
  (* Invariant *)
  Have: x_3 = (x_5 + ((c * x * (1 + (2 * c))) / 6)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: x_3 = x_4.
  (* Invariant *)
  Have: (x_4 / 3) = ((x_4 / 6) + x_3).
  (* Invariant *)
  Have: x_3 = (x * x * (x_1 / 2)).
}
Prove: (x_2 / 3) = x_3.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (50737)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0005/16_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0005/16_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0005/16_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0005/16_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0005/16_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1.00ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0005/16_merged.c, line 21):
Let x = 1 + c.
Let x_1 = 2 + c.
Let x_2 = x * x * x_1.
Let x_3 = x * x * x.
Let x_4 = x * x.
Let x_5 = 2 * c.
Let x_6 = c * c * x.
Let x_7 = c * c * c.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_3 - x_4).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_3 = (x_7 + x_4).
  (* Invariant *)
  Have: ((x_7 / 6) + x_3) = (x_4 + (x_7 / 3)).
  (* Invariant *)
  Have: x_3 = (x_4 + (c * c * (x / 2))).
  (* Invariant *)
  Have: x_3 = (x_4 + (x_6 / 2)).
  (* Invariant *)
  Have: x_3 = (x_4 + (x_6 / 3)).
  (* Invariant *)
  Have: x_3 = (x_4 + ((c * x * (1 + x_5)) / 6)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: (x_3 / 3) = (x_3 + (x_3 / 6)).
  (* Invariant *)
  Have: (x * x * (x_1 / 2)) = x_3.
  (* Invariant *)
  Have: (x_2 / 2) = x_3.
  (* Invariant *)
  Have: (x_2 / 3) = x_3.
}
Prove: ((x * x_1 * (3 + x_5)) / 6) = x_3.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (51913)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0005/16_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0005/16_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0005/16_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0005/16_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0005/16_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/16_0005/16_merged.c, line 34):
Let x = 1 + c.
Let x_1 = (c * x * (1 + (2 * c))) / 6.
Let x_2 = c * c * x.
Let x_3 = c * c * c.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_1 = x_3.
  (* Invariant *)
  Have: (x_3 / 3) = ((x_3 / 6) + x_1).
  (* Invariant *)
  Have: x_1 = (c * c * (x / 2)).
  (* Invariant *)
  Have: x_1 = (x_2 / 2).
  (* Invariant *)
  Have: x_1 = (x_2 / 3).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 <= c.
  (* Else *)
  Have: k <= c.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/16_0005/16_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/16_0005/16_merged.c:4: Warning: 
  No 'assigns' specification for function 'main16'.
  Callers assumptions might be imprecise.

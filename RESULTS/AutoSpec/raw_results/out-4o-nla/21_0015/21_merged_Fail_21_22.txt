[kernel] Parsing out/21_0015/21_merged.c (with preprocessing)
[kernel:typing:no-proto] out/21_0015/21_merged.c:20: Warning: 
  Calling function unknown that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/21_0015/21_merged.c:2: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 22 goals scheduled
[wp] [Timeout] typed_main21_loop_invariant_2_preserved (Qed 6ms) (Z3)
[wp] Proved goals:   21 / 22
  Qed:              16
  Alt-Ergo 2.5.4:    5 (0.60ms-7ms-9ms)
  Timeout:           1
------------------------------------------------------------
  Function main21
------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0015/21_merged.c, line 7):
Let x = y * y.
Let x_1 = 2 * y.
Let x_2 = y - 1.
Let x_3 = 1 + y.
Let x_4 = x_3 * x_3.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x_3) /\ is_sint32(x) /\
      is_sint32(x_4).
  (* Invariant *)
  Have: (x_1 + (x_2 * x_2)) = (1 + x).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= y) -> ((i * i) = x))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= y) -> ((i * i) <= x))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) -> ((i * i) = x))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      (x = (1 + (2 * i) + (i * i))))).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: x_4 = (1 + x_1 + x).
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (10209)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (0.60ms) (34)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0015/21_merged.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0015/21_merged.c, line 8):
Let x = 1 + y.
Let x_1 = 2 * y.
Let x_2 = y * y.
Let x_3 = 1 + x_1 + x_2.
Let x_4 = y - 1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_3).
  (* Goal *)
  When: (0 <= i) /\ (i <= x).
  (* Invariant *)
  Have: (x_1 + (x_4 * x_4)) = (1 + x_2).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= y) -> ((i_1 * i_1) = x_2))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= y) -> ((i_1 * i_1) <= x_2))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y) -> ((i_1 * i_1) = x_2))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y) ->
      (x_2 = (1 + (2 * i_1) + (i_1 * i_1))))).
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (x * x) = x_3.
}
Prove: (i * i) = x_3.
Prover Z3 4.8.12 returns Timeout (Qed:6ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:6ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0015/21_merged.c, line 8):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0015/21_merged.c, line 9):
Let x = 1 + y.
Let x_1 = 2 * y.
Let x_2 = y * y.
Let x_3 = 1 + x_1 + x_2.
Let x_4 = y - 1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_3).
  (* Goal *)
  When: (0 <= i) /\ (i <= x).
  (* Invariant *)
  Have: (x_1 + (x_4 * x_4)) = (1 + x_2).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= y) -> ((i_1 * i_1) = x_2))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= y) -> ((i_1 * i_1) <= x_2))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y) -> ((i_1 * i_1) = x_2))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y) ->
      (x_2 = (1 + (2 * i_1) + (i_1 * i_1))))).
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (x * x) = x_3.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= x) -> ((i_1 * i_1) = x_3))).
}
Prove: (i * i) <= x_3.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (35220)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (8ms) (139)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0015/21_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0015/21_merged.c, line 10):
Let x = 1 + y.
Let x_1 = 2 * y.
Let x_2 = y * y.
Let x_3 = 1 + x_1 + x_2.
Let x_4 = y - 1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_3).
  (* Goal *)
  When: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: (x_1 + (x_4 * x_4)) = (1 + x_2).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= y) -> ((i_1 * i_1) = x_2))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= y) -> ((i_1 * i_1) <= x_2))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y) -> ((i_1 * i_1) = x_2))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y) ->
      (x_2 = (1 + (2 * i_1) + (i_1 * i_1))))).
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (x * x) = x_3.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= x) -> ((i_1 * i_1) = x_3))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= x) -> ((i_1 * i_1) <= x_3))).
}
Prove: (i * i) = x_3.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (36121)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (8ms) (144)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0015/21_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0015/21_merged.c, line 11):
Let x = 2 * y.
Let x_1 = y * y.
Let x_2 = 1 + x + x_1.
Let x_3 = 1 + y.
Let x_4 = y - 1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x_3) /\
      is_sint32(x_1) /\ is_sint32(x_2).
  (* Goal *)
  When: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: (x + (x_4 * x_4)) = (1 + x_1).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= y) -> ((i_1 * i_1) = x_1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= y) -> ((i_1 * i_1) <= x_1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y) -> ((i_1 * i_1) = x_1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y) ->
      (x_1 = (1 + (2 * i_1) + (i_1 * i_1))))).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (x_3 * x_3) = x_2.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= x_3) ->
      ((i_1 * i_1) = x_2))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= x_3) ->
      ((i_1 * i_1) <= x_2))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= y) -> ((i_1 * i_1) = x_2))).
}
Prove: (x + x_1) = ((2 * i) + (i * i)).
Prover Z3 4.8.12 returns Valid (Qed:9ms) (20ms) (37433)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (8ms) (162)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0015/21_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0015/21_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0015/21_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0015/21_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0015/21_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0015/21_merged.c, line 14):
Let x = 2 * y.
Let x_1 = y * y.
Let x_2 = x + x_1.
Let x_3 = 1 + x + x_1.
Let x_4 = 1 + y.
Let x_5 = y - 1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x_4) /\
      is_sint32(x_1) /\ is_sint32(x_3).
  (* Invariant *)
  Have: (x + (x_5 * x_5)) = (1 + x_1).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= y) -> ((i * i) = x_1))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= y) -> ((i * i) <= x_1))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) -> ((i * i) = x_1))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      (x_1 = (1 + (2 * i) + (i * i))))).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (x_4 * x_4) = x_3.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= x_4) -> ((i * i) = x_3))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= x_4) -> ((i * i) <= x_3))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= y) -> ((i * i) = x_3))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= y) ->
      (((2 * i) + (i * i)) = x_2))).
}
Prove: (-1) <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (20ms) (36509)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (9ms) (48)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0015/21_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0015/21_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0015/21_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0015/21_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0015/21_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Loop assigns (file out/21_0015/21_merged.c, line 17) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/21_0015/21_merged.c, line 17) (2/2):
Call Result at line 20
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/21_0015/21_merged.c:1: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/21_0015/21_merged.c:2: Warning: 
  No 'assigns' specification for function 'main21'.
  Callers assumptions might be imprecise.

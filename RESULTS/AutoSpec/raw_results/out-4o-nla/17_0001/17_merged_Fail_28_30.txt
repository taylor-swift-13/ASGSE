[kernel] Parsing out/17_0001/17_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/17_0001/17_merged.c:31: Warning: 
  Body of function main17 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 30 goals scheduled
[wp] [Timeout] typed_main17_loop_invariant_2_preserved (Qed 4ms) (Z3)
[wp] [Timeout] typed_main17_assert_missing_return (Qed 2ms) (Z3)
[wp] Proved goals:   28 / 30
  Qed:            23
  Z3 4.8.12:       5 (10ms-26ms-60ms)
  Timeout:         2
------------------------------------------------------------
  Function main17
------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0001/17_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0001/17_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0001/17_merged.c, line 14):
Let x = y * y * y.
Let x_1 = y * y.
Let x_2 = y * y * y * y.
Let x_3 = 1 + y.
Let x_4 = y * y * y * x_3.
Let x_5 = x_4 / 2.
Let x_6 = x_2 / 4.
Let x_7 = x_3 * x_3 * x_3.
Let x_8 = x_7 + x_5.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x_3) /\ is_sint32(x_5) /\
      is_sint32(x_8).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_5 = ((x_1 / 4) + (x / 2) + x_6).
  (* Invariant *)
  Have: x_5 = ((y * y * y * (y - 1)) / 2).
  (* Invariant *)
  Have: (x_4 / 4) = x_5.
  (* Invariant *)
  Have: x_5 = x_6.
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: (x_1 + (2 * x) + x_2) = (4 * x_5).
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y < k.
}
Prove: (((x_3 * x_3) / 4) + (x_7 / 2) + ((x_3 * x_3 * x_3 * x_3) / 4)) = x_8.
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0001/17_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0001/17_merged.c, line 15):
Let x = 1 + y.
Let x_1 = (x * x) / 4.
Let x_2 = x * x * x.
Let x_3 = x_2 / 2.
Let x_4 = (x * x * x * x) / 4.
Let x_5 = y * y * y.
Let x_6 = y * y.
Let x_7 = y * y * y * y.
Let x_8 = x_1 + x_3 + x_4.
Let x_9 = y * y * y * x.
Let x_10 = x_7 / 4.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_8) /\
      is_sint32(x_1 + x_3 + x_4 - x_2).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_8 = ((x_6 / 4) + (x_5 / 2) + x_2 + x_10).
  (* Invariant *)
  Have: x_8 = (x_2 + ((y * y * y * (y - 1)) / 2)).
  (* Invariant *)
  Have: x_8 = (x_2 + (x_9 / 4)).
  (* Invariant *)
  Have: x_8 = (x_2 + x_10).
  (* Invariant *)
  Have: x_8 = (x_2 + (x_9 / 2)).
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: ((4 * x_1) + (4 * x_3) + (4 * x_4))
          = (x_6 + (2 * x_5) + x_7 + (4 * x_2)).
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y < k.
}
Prove: ((y * x * x * x) / 2) = x_8.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (60ms) (150261)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0001/17_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0001/17_merged.c, line 16):
Let x = 1 + c.
Let x_1 = (c * x * x * x) / 2.
Let x_2 = x * x * x.
Let x_3 = c * c * c.
Let x_4 = c * c.
Let x_5 = c * c * c * c.
Let x_6 = c * c * c * x.
Let x_7 = x_5 / 4.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_1 - x_2).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_1 = ((x_4 / 4) + (x_3 / 2) + x_2 + x_7).
  (* Invariant *)
  Have: x_1 = (x_2 + ((c * c * c * (c - 1)) / 2)).
  (* Invariant *)
  Have: x_1 = (x_2 + (x_6 / 4)).
  (* Invariant *)
  Have: x_1 = (x_2 + x_7).
  (* Invariant *)
  Have: x_1 = (x_2 + (x_6 / 2)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: (x_4 + (2 * x_3) + x_5 + (4 * x_2)) = (4 * x_1).
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: x_1 = (((x * x) / 4) + (x_2 / 2) + ((x * x * x * x) / 4)).
}
Prove: ((x * x * x * (2 + c)) / 4) = x_1.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (55991)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0001/17_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.50ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0001/17_merged.c, line 17):
Let x = 1 + c.
Let x_1 = (x * x * x * (2 + c)) / 4.
Let x_2 = x * x * x.
Let x_3 = (x * x * x * x) / 4.
Let x_4 = c * c * c.
Let x_5 = c * c.
Let x_6 = c * c * c * c.
Let x_7 = c * c * c * x.
Let x_8 = x_6 / 4.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_1 - x_2).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_1 = ((x_5 / 4) + (x_4 / 2) + x_2 + x_8).
  (* Invariant *)
  Have: x_1 = (x_2 + ((c * c * c * (c - 1)) / 2)).
  (* Invariant *)
  Have: x_1 = (x_2 + (x_7 / 4)).
  (* Invariant *)
  Have: x_1 = (x_2 + x_8).
  (* Invariant *)
  Have: x_1 = (x_2 + (x_7 / 2)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: (x_5 + (2 * x_4) + x_6 + (4 * x_2)) = (4 * x_1).
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: x_1 = (((x * x) / 4) + (x_2 / 2) + x_3).
  (* Invariant *)
  Have: x_1 = ((c * x * x * x) / 2).
}
Prove: x_1 = x_3.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (56931)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0001/17_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.50ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0001/17_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0001/17_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0001/17_merged.c, line 19):
Let x = 1 + c.
Let x_1 = (x * x) / 4.
Let x_2 = x * x * x.
Let x_3 = x_2 / 2.
Let x_4 = x * x * x * (2 + c).
Let x_5 = (x * x * x * x) / 4.
Let x_6 = x_1 + x_3 + x_5.
Let x_7 = c * c * c.
Let x_8 = c * c.
Let x_9 = c * c * c * c.
Let x_10 = c * c * c * x.
Let x_11 = x_9 / 4.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_6) /\
      is_sint32(x_1 + x_3 + x_5 - x_2).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_6 = ((x_8 / 4) + (x_7 / 2) + x_2 + x_11).
  (* Invariant *)
  Have: x_6 = (x_2 + ((c * c * c * (c - 1)) / 2)).
  (* Invariant *)
  Have: x_6 = (x_2 + (x_10 / 4)).
  (* Invariant *)
  Have: x_6 = (x_2 + x_11).
  (* Invariant *)
  Have: x_6 = (x_2 + (x_10 / 2)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: ((4 * x_1) + (4 * x_3) + (4 * x_5))
          = (x_8 + (2 * x_7) + x_9 + (4 * x_2)).
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: ((c * x * x * x) / 2) = x_6.
  (* Invariant *)
  Have: (x_4 / 4) = x_6.
  (* Invariant *)
  Have: (x_1 + x_3) = 0.
}
Prove: (x_4 / 2) = x_6.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (20ms) (55649)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0001/17_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0001/17_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0001/17_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.82ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0001/17_merged.c, line 21):
Let x = 1 + y.
Let x_1 = x * x * x * (2 + y).
Let x_2 = x_1 / 2.
Let x_3 = x * x * x * x.
Let x_4 = x_3 / 4.
Let x_5 = x * x.
Let x_6 = x * x * x.
Let x_7 = y * y * y.
Let x_8 = y * y.
Let x_9 = y * y * y * y.
Let x_10 = 4 * x_2.
Let x_11 = y * y * y * x.
Let x_12 = x_9 / 4.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_2 - x_6).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_2 = ((x_8 / 4) + (x_7 / 2) + x_6 + x_12).
  (* Invariant *)
  Have: x_2 = (x_6 + ((y * y * y * (y - 1)) / 2)).
  (* Invariant *)
  Have: x_2 = (x_6 + (x_11 / 4)).
  (* Invariant *)
  Have: x_2 = (x_6 + x_12).
  (* Invariant *)
  Have: x_2 = (x_6 + (x_11 / 2)).
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: (x_8 + (2 * x_7) + x_9 + (4 * x_6)) = x_10.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y < k.
  (* Invariant *)
  Have: x_2 = ((x_5 / 4) + (x_6 / 2) + x_4).
  (* Invariant *)
  Have: x_2 = ((y * x * x * x) / 2).
  (* Invariant *)
  Have: (x_1 / 4) = x_2.
  (* Invariant *)
  Have: x_2 = x_4.
}
Prove: (x_5 + (2 * x_6) + x_3) = x_10.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (10623)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0001/17_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0001/17_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0001/17_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0001/17_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0001/17_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.84ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0001/17_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0001/17_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0001/17_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0001/17_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0001/17_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0001/17_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.78ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/17_0001/17_merged.c, line 37):
Let x = c * c * c.
Let x_1 = c * c.
Let x_2 = c * c * c * c.
Let x_3 = c * c * c * (1 + c).
Let x_4 = x_3 / 2.
Let x_5 = x_2 / 4.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x_4).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_4 = ((x_1 / 4) + (x / 2) + x_5).
  (* Invariant *)
  Have: x_4 = ((c * c * c * (c - 1)) / 2).
  (* Invariant *)
  Have: (x_3 / 4) = x_4.
  (* Invariant *)
  Have: x_4 = x_5.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: (x_1 + (2 * x) + x_2) = (4 * x_4).
  (* Invariant *)
  Have: 0 <= c.
  (* Else *)
  Have: k <= c.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/17_0001/17_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/17_0001/17_merged.c:4: Warning: 
  No 'assigns' specification for function 'main17'.
  Callers assumptions might be imprecise.

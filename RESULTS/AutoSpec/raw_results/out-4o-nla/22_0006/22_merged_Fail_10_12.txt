[kernel] Parsing out/22_0006/22_merged.c (with preprocessing)
[kernel:typing:implicit-function-declaration] out/22_0006/22_merged.c:17: Warning: 
  Calling undeclared function unknown. Old style K&R code?
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/22_0006/22_merged.c:4: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 12 goals scheduled
[wp] [Timeout] typed_main22_loop_invariant_3_preserved (Qed 3ms) (Z3)
[wp] [Timeout] typed_main22_loop_invariant_4_established (Qed 0.98ms) (Z3)
[wp] Proved goals:   10 / 12
  Qed:               6
  Alt-Ergo 2.5.4:    4 (4ms-5ms-8ms)
  Timeout:           2
------------------------------------------------------------
  Function main22
------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0006/22_merged.c, line 9):
Let x_2 = x * x.
Let x_3 = 1 + x.
Let x_4 = x_1 * x_1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_3) /\ is_sint32(x_2) /\ is_sint32(x_4) /\
      is_sint32(1 + x_2).
  (* Pre-condition *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: x_4 <= (x_1 * (1 + x_1)).
  (* Invariant *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: x_2 <= (x * x_3).
  (* Invariant *)
  Have: 0 < x.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: x_2 < (x_3 * x_3).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (31111)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (4ms) (39)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0006/22_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0006/22_merged.c, line 10):
Let x_2 = x * x.
Let x_3 = 1 + x.
Let x_4 = x_1 * x_1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_3) /\ is_sint32(x_2) /\ is_sint32(x_4) /\
      is_sint32(1 + x_2).
  (* Pre-condition *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: x_4 <= (x_1 * (1 + x_1)).
  (* Invariant *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: x_2 <= (x * x_3).
  (* Invariant *)
  Have: 0 < x.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: x_2 < (x_3 * x_3).
}
Prove: x_2 < (x_3 * (2 + x)).
Prover Z3 4.8.12 returns Valid (Qed:3ms) (9739)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (5ms) (38)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0006/22_merged.c, line 10):
Let x_1 = x * x.
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 <= x.
}
Prove: x_1 <= (x * (1 + x)).
Prover Z3 4.8.12 returns Valid (Qed:0.96ms) (9223)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:0.96ms) (4ms) (15)

------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0006/22_merged.c, line 11):
Let x_2 = x * x.
Let x_3 = 1 + x.
Let x_4 = x_3 * x_3.
Let x_5 = x_1 * x_1.
Let x_6 = 1 + x_2.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_3) /\ is_sint32(x_2) /\ is_sint32(x_5) /\ is_sint32(x_6).
  (* Pre-condition *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: x_5 <= (x_1 * (1 + x_1)).
  (* Invariant *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: x_2 <= (x * x_3).
  (* Invariant *)
  Have: 0 < x.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: x_2 < x_4.
  (* Invariant *)
  Have: x_2 < (x_3 * (2 + x)).
}
Prove: x_4 <= x_6.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0006/22_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0006/22_merged.c, line 12):
Let x_2 = 1 + x.
Let x_3 = x_2 * x_2.
Let x_4 = x * x.
Let x_5 = 1 + x_4.
Let x_6 = x_1 * x_1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_2) /\ is_sint32(x_4) /\ is_sint32(x_6) /\ is_sint32(x_5).
  (* Pre-condition *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: x_6 <= (x_1 * (1 + x_1)).
  (* Invariant *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: x_4 <= (x * x_2).
  (* Invariant *)
  Have: 0 < x.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: x_4 < x_3.
  (* Invariant *)
  Have: x_4 < (x_2 * (2 + x)).
  (* Invariant *)
  Have: x_3 <= x_5.
}
Prove: x_3 <= (2 + (2 * x) + x_4).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (9815)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (8ms) (46)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0006/22_merged.c, line 12):
Let x_1 = x * x.
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 <= x.
  (* Invariant *)
  Have: x_1 <= (x * (1 + x)).
}
Prove: 0 < x.
Prover Z3 4.8.12 returns Timeout (Qed:0.98ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.98ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0006/22_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0006/22_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Loop assigns (file out/22_0006/22_merged.c, line 14) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/22_0006/22_merged.c, line 14) (2/2):
Call Result at line 17
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/22_0006/22_merged.c:4: Warning: 
  No 'assigns' specification for function 'main22'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/22_0006/22_merged.c:17: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.

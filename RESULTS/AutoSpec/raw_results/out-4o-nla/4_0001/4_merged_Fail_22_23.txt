[kernel] Parsing out/4_0001/4_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/4_0001/4_merged.c:23: Warning: 
  Body of function main4 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 23 goals scheduled
[wp] [Timeout] typed_main4_assert_missing_return (Qed 1ms) (Z3)
[wp] Proved goals:   22 / 23
  Qed:              18
  Alt-Ergo 2.5.4:    4 (3ms-7ms)
  Timeout:           1
------------------------------------------------------------
  Function main4
------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 10):
Let x_1 = q_2 * y.
Let x_2 = r + x_1.
Assume {
  Type: is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: x_2 <= x.
  (* Invariant *)
  Have: (0 <= r) /\ (r < y).
  (* Invariant *)
  Have: 0 <= q_2.
  (* Then *)
  Have: x_2 < x.
  If (1 + r) = y
  Then { Have: q_2 = q_1. Have: (1 + q_1) = q. }
  Else { Have: q_2 = q. }
}
Prove: (q * y) <= x.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (30ms) (52021)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (58)

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 11):
Let x_1 = q * y.
Let x_2 = q_2 * y.
Let x_3 = r_2 + x_2.
Assume {
  Type: is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_2 <= x.
  (* Invariant *)
  Have: x_3 <= x.
  (* Invariant *)
  Have: (0 <= r_2) /\ (r_2 < y).
  (* Invariant *)
  Have: 0 <= q_2.
  (* Then *)
  Have: x_3 < x.
  If (1 + r_2) = y
  Then { Have: q_2 = q_1. Have: r = 0. Have: (1 + q_1) = q. }
  Else { Have: (q_2 = q) /\ (r_2 = r_1). Have: (1 + r_1) = r. }
  (* Invariant *)
  Have: x_1 <= x.
}
Prove: (r + x_1) <= x.
Prover Z3 4.8.12 returns Valid (Qed:2ms) (10ms) (39632)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (6ms) (141)

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 12):
Let x_1 = q * y.
Let x_2 = q_2 * y.
Let x_3 = r_2 + x_2.
Assume {
  Type: is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_2 <= x.
  (* Invariant *)
  Have: x_3 <= x.
  (* Invariant *)
  Have: (0 <= r_2) /\ (r_2 < y).
  (* Invariant *)
  Have: 0 <= q_2.
  (* Then *)
  Have: x_3 < x.
  If (1 + r_2) = y
  Then { Have: q_2 = q_1. Have: r = 0. Have: (1 + q_1) = q. }
  Else { Have: (q_2 = q) /\ (r_2 = r_1). Have: (1 + r_1) = r. }
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: (r + x_1) <= x.
}
Prove: (0 <= r) /\ (r < y).
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (34153)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (7ms) (179)

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 17):
Let x_1 = q * y.
Let x_2 = q_2 * y.
Let x_3 = r_2 + x_2.
Assume {
  Type: is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_2 <= x.
  (* Invariant *)
  Have: x_3 <= x.
  (* Invariant *)
  Have: (0 <= r_2) /\ (r_2 < y).
  (* Invariant *)
  Have: 0 <= q_2.
  (* Then *)
  Have: x_3 < x.
  If (1 + r_2) = y
  Then { Have: q_2 = q_1. Have: r = 0. Have: (1 + q_1) = q. }
  Else { Have: (q_2 = q) /\ (r_2 = r_1). Have: (1 + r_1) = r. }
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: (r + x_1) <= x.
  (* Invariant *)
  Have: (0 <= r) /\ (r < y).
}
Prove: 0 <= q.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (34076)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (3ms) (145)

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assertion (file out/4_0001/4_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/4_0001/4_merged.c, line 35):
Let x_1 = q * y.
Assume {
  Type: is_sint32(q) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(x - x_1).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: x < (y + x_1).
  (* Invariant *)
  Have: 0 <= q.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/4_0001/4_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/4_0001/4_merged.c:4: Warning: 
  No 'assigns' specification for function 'main4'.
  Callers assumptions might be imprecise.

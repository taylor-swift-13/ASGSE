[kernel] Parsing out/26_0005/26_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 13 goals scheduled
[wp] Proved goals:   13 / 13
  Qed:              10
  Alt-Ergo 2.5.4:    2 (5ms-5ms)
  Z3 4.8.12:         1 (10ms)
------------------------------------------------------------
  Function main26
------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0005/26_merged.c, line 10):
Let x_1 = w * x.
Assume {
  Type: is_sint32(w) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(z) /\
      is_sint32(z_1) /\ is_sint32(z_2) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: z_2 <= w.
  (* Invariant *)
  Have: (0 < x) /\ (x <= (1 + y)).
  (* Invariant *)
  Have: 0 < z_2.
  (* Invariant *)
  Have: 0 < w.
  (* Then *)
  Have: x <= y.
  If x < y
  Then { Have: z_2 = z_1. Have: (x * z_1) = z. }
  Else { Have: z_2 = z. }
}
Prove: z <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (54640)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0005/26_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0005/26_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0005/26_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0005/26_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0005/26_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0005/26_merged.c, line 13):
Let x_1 = x * z.
Let x_2 = w * x.
Assume {
  Type: is_sint32(w) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(z) /\
      is_sint32(1 + x) /\ is_sint32(x_2) /\ is_sint32(x_1).
  (* Residual *)
  When: x < y.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: z <= w.
  (* Invariant *)
  Have: (0 < x) /\ (x <= (1 + y)).
  (* Invariant *)
  Have: 0 < z.
  (* Invariant *)
  Have: 0 < w.
  (* Invariant *)
  Have: x_1 <= x_2.
}
Prove: 0 < x_1.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (32040)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (5ms) (48)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0005/26_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0005/26_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0005/26_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.81ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0005/26_merged.c, line 15):
Let x_1 = w * x.
Assume {
  Type: is_sint32(w) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(z) /\
      is_sint32(z_1) /\ is_sint32(z_2) /\ is_sint32(1 + x) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: z_2 <= w.
  (* Invariant *)
  Have: (0 < x) /\ (x <= (1 + y)).
  (* Invariant *)
  Have: 0 < z_2.
  (* Invariant *)
  Have: 0 < w.
  (* Then *)
  Have: x <= y.
  If x < y
  Then { Have: z_2 = z_1. Have: (x * z_1) = z. }
  Else { Have: z_2 = z. }
  (* Invariant *)
  Have: z <= x_1.
  (* Invariant *)
  Have: 0 < z.
}
Prove: 0 < x_1.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (32551)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (5ms) (30)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0005/26_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/26_0005/26_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/26_0005/26_merged.c:4: Warning: 
  No 'assigns' specification for function 'main26'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/18_0003/18_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/18_0003/18_merged.c:22: Warning: 
  Body of function main18 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 14 goals scheduled
[wp] [Timeout] typed_main18_loop_invariant_2_preserved (Qed 3ms) (Z3)
[wp] [Timeout] typed_main18_loop_invariant_2_established (Qed 0.54ms) (Z3)
[wp] [Timeout] typed_main18_assert_missing_return (Qed 3ms) (Z3)
[wp] Proved goals:   11 / 14
  Qed:             9
  Z3 4.8.12:       2 (6.2s-7.6s)
  Timeout:         3
------------------------------------------------------------
  Function main18
------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0003/18_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0003/18_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0003/18_merged.c, line 13):
Let x = y * y * y * y * y.
Let x_1 = (y * y * y * y * (y - 1)) / 6.
Let x_2 = 1 + y.
Let x_3 = x_2 * x_2 * x_2 * x_2.
Let x_4 = x_2 * x_2 * x_2 * x_2 * x_2.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x_2) /\ is_sint32(x_1) /\
      is_sint32(x_3 + x_1).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: (0 / 0) = 0.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x = ((x / y) + x_1).
  (* Invariant *)
  Have: ((10 * (y * y * y)) + (15 * (y * y * y * y)) + (6 * x)) = (31 * x_1).
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y < k.
}
Prove: x_4 = (x_3 + x_1 + (x_4 / x_2)).
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0003/18_merged.c, line 13):
Assume { Type: is_sint32(k). (* Pre-condition *) Have: (0 <= k) /\ (k <= 30).
}
Prove: (0 / 0) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:0.54ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.54ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0003/18_merged.c, line 14):
Let x = y * y * y * y * y.
Let x_1 = 1 + y.
Let x_2 = x_1 * x_1 * x_1 * x_1.
Let x_3 = x_1 * x_1 * x_1 * x_1 * x_1.
Let x_4 = x_3 / x_1.
Let x_5 = -x_4.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x_1) /\
      is_sint32(x_3 - x_4) /\ is_sint32(x_3 - x_2 - x_4).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: (0 / 0) = 0.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: (x + x_2 + x_4) = ((x / y) + x_3).
  (* Invariant *)
  Have: x_3 = (x_2 + ((y * y * y * y * (y - 1)) / 6) + x_4).
  (* Invariant *)
  Have: ((10 * (y * y * y)) + (15 * (y * y * y * y)) + (6 * x) + (31 * x_2)
         + (31 * x_4)) = (31 * x_3).
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y < k.
}
Prove: x_3 = (((y * x_1 * x_1 * x_1 * x_1) / 6) + x_4).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (7.6s) (9080971)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0003/18_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0003/18_merged.c, line 15):
Let x = 1 + c.
Let x_1 = x * x * x * x * x.
Let x_2 = (c * x * x * x * x) / 6.
Let x_3 = c * c * c * c * c.
Let x_4 = x * x * x * x.
Let x_5 = 31 * x_2.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_2 - x_4).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: (0 / 0) = 0.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: ((x_3 / c) + x_2) = (x_3 + x_4).
  (* Invariant *)
  Have: x_2 = (x_4 + ((c * c * c * c * (c - 1)) / 6)).
  (* Invariant *)
  Have: ((10 * (c * c * c)) + (15 * (c * c * c * c)) + (6 * x_3)
         + (31 * x_4)) = x_5.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: x_1 = (x_2 + (x_1 / x)).
}
Prove: ((10 * (x * x * x)) + (15 * x_4) + (6 * x_1)) = x_5.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (6.2s) (8688635)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0003/18_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0003/18_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0003/18_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0003/18_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0003/18_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.88ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/18_0003/18_merged.c, line 29):
Let x = c * c * c * c * c.
Let x_1 = (c * c * c * c * (c - 1)) / 6.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: (0 / 0) = 0.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x = ((x / c) + x_1).
  (* Invariant *)
  Have: ((10 * (c * c * c)) + (15 * (c * c * c * c)) + (6 * x)) = (31 * x_1).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 <= c.
  (* Else *)
  Have: k <= c.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/18_0003/18_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/18_0003/18_merged.c:4: Warning: 
  No 'assigns' specification for function 'main18'.
  Callers assumptions might be imprecise.

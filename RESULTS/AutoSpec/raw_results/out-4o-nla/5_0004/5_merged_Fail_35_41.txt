[kernel] Parsing out/5_0004/5_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/5_0004/5_merged.c:43: Warning: 
  Body of function main5 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 41 goals scheduled
[wp] [Timeout] typed_main5_loop_invariant_3_preserved (Qed 45ms) (Z3)
[wp] [Timeout] typed_main5_loop_invariant_4_preserved (Qed 49ms) (Z3)
[wp] [Timeout] typed_main5_loop_invariant_8_preserved (Qed 49ms) (Z3)
[wp] [Timeout] typed_main5_loop_invariant_10_preserved (Qed 53ms) (Z3)
[wp] [Timeout] typed_main5_loop_invariant_13_preserved (Qed 52ms) (Z3)
[wp] [Timeout] typed_main5_assert_missing_return (Qed 5ms) (Z3)
[wp] Proved goals:   35 / 41
  Qed:              31
  Alt-Ergo 2.5.4:    2 (149ms-2.0s)
  Z3 4.8.12:         2 (10ms-600ms)
  Timeout:           6
------------------------------------------------------------
  Function main5
------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0004/5_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0004/5_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0004/5_merged.c, line 18):
Let x = i_1 - 1.
Let x_1 = a + b - y.
Let x_2 = r_1 * y.
Let x_3 = i - 1.
Assume {
  Type: is_sint32(a_1) /\ is_sint32(a) /\ is_sint32(b_1) /\ is_sint32(b) /\
      is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(q) /\ is_sint32(q_1) /\
      is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\ is_sint32(s) /\
      is_sint32(s_1) /\ is_sint32(s_2) /\ is_sint32(y) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: y < (a + b).
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: ((y + (i * x_1)) = (a + b + (y * x_3))) \/
      ((i * y) = (y + (x_3 * x_1))).
  (* Invariant *)
  Have: ((s_2 * y) + (q_2 * x_1)) = b.
  (* Invariant *)
  Have: (x_2 + (p_1 * x_1)) = a.
  (* Invariant *)
  Have: (p_1 * s_2) = (1 + (q_2 * r_1)).
  (* Invariant *)
  Have: b <= y.
  (* Invariant *)
  Have: (0 < a) /\ (0 < b).
  (* Invariant *)
  Have: (s_2 * x_1) = (a + x_2).
  (* Invariant *)
  Have: y <= b.
  (* Invariant *)
  Have: ((a * i_1) = (a + (b * x))) \/ ((b * i_1) = (b + (a * x))).
  (* Then *)
  Have: b != a.
  If b < a
  Then { Have: (b = b_1) /\ (q_2 = q) /\ (s_2 = s). }
  Else {
    Have: (a = a_1) /\ (p_1 = p) /\ (q_2 = q_1) /\ (r_1 = r) /\
        (s_2 = s_1) /\ ((a_1 + b_1) = b).
    Have: (p + q) = q_1.
    Have: (r + s) = s_1.
  }
}
Prove: ((a * q) + (b * s)) = b_1.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:35ms) (2.0s) (1374)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0004/5_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.84ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0004/5_merged.c, line 19):
Let x = i_1 - 1.
Let x_1 = a + b - y.
Let x_2 = r_2 * y.
Let x_3 = i - 1.
Assume {
  Type: is_sint32(a_1) /\ is_sint32(a) /\ is_sint32(b_1) /\ is_sint32(b) /\
      is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(y) /\ is_sint32(x_1) /\ is_sint32((s * y) + (q * x_1)).
  (* Pre-condition *)
  Have: y < (a + b).
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: ((y + (i * x_1)) = (a + b + (y * x_3))) \/
      ((i * y) = (y + (x_3 * x_1))).
  (* Invariant *)
  Have: ((s_2 * y) + (q_2 * x_1)) = b.
  (* Invariant *)
  Have: (x_2 + (p_2 * x_1)) = a.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: b <= y.
  (* Invariant *)
  Have: (0 < a) /\ (0 < b).
  (* Invariant *)
  Have: (s_2 * x_1) = (a + x_2).
  (* Invariant *)
  Have: y <= b.
  (* Invariant *)
  Have: ((a * i_1) = (a + (b * x))) \/ ((b * i_1) = (b + (a * x))).
  (* Then *)
  Have: b != a.
  If b < a
  Then {
    Let x_4 = a * q.
    Let x_5 = b * s.
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        ((x_4 + x_5) = b).
    Have: (a_1 + x_4 + x_5) = a.
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_6 = a * (q_1 - p).
    Let x_7 = b_1 * (s_1 - r).
    Have: (b = b_1) /\ (p_2 = p) /\ (q_2 = q_1) /\ (r_2 = r) /\
        (s_2 = s_1) /\ ((p + q) = q_1) /\ ((r + s) = s_1) /\
        ((a_1 + x_6 + x_7) = b_1) /\ ((a + x_6 + x_7) = b_1).
  }
}
Prove: ((a * p) + (b * r)) = a_1.
Prover Z3 4.8.12 returns Timeout (Qed:45ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:45ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0004/5_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0004/5_merged.c, line 20):
Let x_1 = b * s_2.
Let x_2 = q_2 * x.
Let x_3 = (2 * x_1) + (2 * x_2).
Let x_4 = b + x.
Let x_5 = i_1 - 1.
Let x_6 = x_1 + x_2.
Let x_7 = b * r_2.
Let x_8 = i - 1.
Assume {
  Type: is_sint32(b) /\ is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\
      is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\
      is_sint32(s_2) /\ is_sint32(x) /\ is_sint32((b * r) + (p * x)) /\
      is_sint32((b * s) + (q * x)) /\ is_sint32(x_6) /\
      is_sint32(b + x - x_1 - x_2).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < b.
  (* Invariant *)
  Have: ((b * i) = (b + (x * x_8))) \/ ((i * x) = (x + (b * x_8))).
  (* Invariant *)
  Have: (x_7 + x_1 + (p_2 * x) + x_2) = x_4.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: x_6 <= b.
  (* Invariant *)
  Have: (0 < x_6) /\ (x_6 < x_4).
  (* Invariant *)
  Have: (x_1 + x_2 + (s_2 * x)) = (b + x + x_7).
  (* Invariant *)
  Have: b <= x_6.
  (* Invariant *)
  Have: ((b + x + (b * x_5)) = (x_1 + (i_1 * x) + x_2)) \/
      ((b * i_1) = (x_1 + x_2 + (x * x_5))).
  (* Then *)
  Have: x_3 != x_4.
  If x_3 < x_4
  Then {
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (((2 * (b * s)) + (2 * (q * x)) + (b * (r_1 - s)) + (x * (p_1 - q)))
           = x_4).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_9 = b * (s_1 - s).
    Let x_10 = x * (q_1 - q).
    Let x_11 = b * s_1.
    Let x_12 = q_1 * x.
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        (((b * s) + (q * x) + x_9 + x_10) = (x_11 + x_12)) /\
        ((x_11 + x_12 + x_9 + x_10) = x_4).
  }
}
Prove: (p * s) = (1 + (q * r)).
Prover Z3 4.8.12 returns Timeout (Qed:49ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:49ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0004/5_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0004/5_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0004/5_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0004/5_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0004/5_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0004/5_merged.c, line 23):
Let x = s - r.
Let x_1 = q - p.
Let x_2 = a * p.
Let x_3 = b * r.
Let x_4 = a * x_1.
Let x_5 = b * x.
Let x_6 = i_1 - 1.
Let x_7 = a + b - b_1.
Let x_8 = b_1 * r.
Let x_9 = i - 1.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(b_1) /\ is_sint32(p) /\
      is_sint32(q) /\ is_sint32(r) /\ is_sint32(s) /\ is_sint32(x_1) /\
      is_sint32(x) /\ is_sint32(x_7) /\ is_sint32((b_1 * x) + (x_1 * x_7)).
  (* Residual *)
  When: a <= b.
  (* Pre-condition *)
  Have: b_1 < (a + b).
  (* Pre-condition *)
  Have: 0 < b_1.
  (* Invariant *)
  Have: ((b_1 + (i * x_7)) = (a + b + (b_1 * x_9))) \/
      ((b_1 * i) = (b_1 + (x_9 * x_7))).
  (* Invariant *)
  Have: ((b_1 * s) + (q * x_7)) = b.
  (* Invariant *)
  Have: (x_8 + (p * x_7)) = a.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: b <= b_1.
  (* Invariant *)
  Have: (0 < a) /\ (0 < b).
  (* Invariant *)
  Have: (s * x_7) = (a + x_8).
  (* Invariant *)
  Have: b_1 <= b.
  (* Invariant *)
  Have: ((a * i_1) = (a + (b * x_6))) \/ ((b * i_1) = (b + (a * x_6))).
  (* Then *)
  Have: b != a.
  Have: ((x_2 + x_3) = a) /\ ((x_2 + x_3 + x_4 + x_5) = b).
  (* Invariant *)
  Have: (p * x) = (1 + (r * x_1)).
}
Prove: (x_4 + x_5) <= b.
Prover Z3 4.8.12 returns Valid (Qed:37ms) (10ms) (41269)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0004/5_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0004/5_merged.c, line 24):
Let x_1 = (b * s) + (q * x).
Let x_2 = b * s_2.
Let x_3 = q_2 * x.
Let x_4 = (2 * x_2) + (2 * x_3).
Let x_5 = b + x.
Let x_6 = i_1 - 1.
Let x_7 = x_2 + x_3.
Let x_8 = b * r_2.
Let x_9 = i - 1.
Let x_10 = (b * r) + (p * x).
Assume {
  Type: is_sint32(b) /\ is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\
      is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\
      is_sint32(s_2) /\ is_sint32(x) /\ is_sint32(x_10) /\ is_sint32(x_1) /\
      is_sint32(x_7) /\ is_sint32(b + x - x_2 - x_3).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < b.
  (* Invariant *)
  Have: ((b * i) = (b + (x * x_9))) \/ ((i * x) = (x + (b * x_9))).
  (* Invariant *)
  Have: (x_8 + x_2 + (p_2 * x) + x_3) = x_5.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: x_7 <= b.
  (* Invariant *)
  Have: (0 < x_7) /\ (x_7 < x_5).
  (* Invariant *)
  Have: (x_2 + x_3 + (s_2 * x)) = (b + x + x_8).
  (* Invariant *)
  Have: b <= x_7.
  (* Invariant *)
  Have: ((b + x + (b * x_6)) = (x_2 + (i_1 * x) + x_3)) \/
      ((b * i_1) = (x_2 + x_3 + (x * x_6))).
  (* Then *)
  Have: x_4 != x_5.
  If x_4 < x_5
  Then {
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (((2 * (b * s)) + (2 * (q * x)) + (b * (r_1 - s)) + (x * (p_1 - q)))
           = x_5).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_11 = b * (s_1 - s).
    Let x_12 = x * (q_1 - q).
    Let x_13 = b * s_1.
    Let x_14 = q_1 * x.
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        (((b * s) + (q * x) + x_11 + x_12) = (x_13 + x_14)) /\
        ((x_13 + x_14 + x_11 + x_12) = x_5).
  }
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: x_1 <= b.
}
Prove: (0 < x_10) /\ (0 < x_1).
Prover Z3 4.8.12 returns Timeout (Qed:49ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:49ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0004/5_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0004/5_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0004/5_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0004/5_merged.c, line 26):
Let x = a * p.
Let x_1 = b * r.
Let x_2 = (a * q) + (b * s).
Let x_3 = i_1 - 1.
Let x_4 = a + b - y.
Let x_5 = r_2 * y.
Let x_6 = i - 1.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(p) /\ is_sint32(p_1) /\
      is_sint32(p_2) /\ is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\
      is_sint32(r) /\ is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\
      is_sint32(s_1) /\ is_sint32(s_2) /\ is_sint32(y) /\ is_sint32(x_4) /\
      is_sint32((r * y) + (p * x_4)) /\ is_sint32((s * y) + (q * x_4)).
  (* Pre-condition *)
  Have: y < (a + b).
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: ((y + (i * x_4)) = (a + b + (y * x_6))) \/
      ((i * y) = (y + (x_6 * x_4))).
  (* Invariant *)
  Have: ((s_2 * y) + (q_2 * x_4)) = b.
  (* Invariant *)
  Have: (x_5 + (p_2 * x_4)) = a.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: b <= y.
  (* Invariant *)
  Have: (0 < a) /\ (0 < b).
  (* Invariant *)
  Have: (s_2 * x_4) = (a + x_5).
  (* Invariant *)
  Have: y <= b.
  (* Invariant *)
  Have: ((a * i_1) = (a + (b * x_3))) \/ ((b * i_1) = (b + (a * x_3))).
  (* Then *)
  Have: b != a.
  If b < a
  Then {
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (x_2 = b) /\
        (((a * q) + (b * s) + (a * (p_1 - q)) + (b * (r_1 - s))) = a).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_7 = a * (q_1 - q).
    Let x_8 = b * (s_1 - s).
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        ((x_7 + x_8) = a) /\ (((a * q) + (b * s) + x_7 + x_8) = b).
  }
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: x_2 <= b.
  (* Invariant *)
  Have: (0 < (x + x_1)) /\ (0 < x_2).
}
Prove: (a * s) = (x + (2 * x_1)).
Prover Z3 4.8.12 returns Timeout (Qed:53ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:53ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0004/5_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0004/5_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0004/5_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0004/5_merged.c, line 28):
Let x = b * r.
Let x_1 = a * s.
Let x_2 = (a * q) + (b * s).
Let x_3 = i_1 - 1.
Let x_4 = a + b - b_2.
Let x_5 = b_2 * r_2.
Let x_6 = i - 1.
Assume {
  Type: is_sint32(a_1) /\ is_sint32(a) /\ is_sint32(b_1) /\ is_sint32(b) /\
      is_sint32(b_2) /\ is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\
      is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\
      is_sint32(s_2) /\ is_sint32(x_4) /\ is_sint32((s * x_4) - (b_2 * r)) /\
      is_sint32((b_2 * s) + (q * x_4)).
  (* Pre-condition *)
  Have: b_2 < (a + b).
  (* Pre-condition *)
  Have: 0 < b_2.
  (* Invariant *)
  Have: ((b_2 + (i * x_4)) = (a + b + (b_2 * x_6))) \/
      ((b_2 * i) = (b_2 + (x_6 * x_4))).
  (* Invariant *)
  Have: ((b_2 * s_2) + (q_2 * x_4)) = b.
  (* Invariant *)
  Have: (x_5 + (p_2 * x_4)) = a.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: b <= b_2.
  (* Invariant *)
  Have: (0 < a) /\ (0 < b).
  (* Invariant *)
  Have: (s_2 * x_4) = (a + x_5).
  (* Invariant *)
  Have: b_2 <= b.
  (* Invariant *)
  Have: ((a * i_1) = (a + (b * x_3))) \/ ((b * i_1) = (b + (a * x_3))).
  (* Then *)
  Have: b != a.
  If b < a
  Then {
    Let x_7 = b * (r_1 - s).
    Let x_8 = (a * q) + x_1 + (b * s).
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (x_2 = b) /\ ((a_1 + x_7) = x_8) /\ ((a + x_7) = x_8).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_9 = b * (s_1 - s).
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        ((b_1 + x_9) = x_8) /\ ((b + x_9) = x_8) /\ (x_1 = (a + x_9)).
  }
  (* Invariant *)
  Have: x_1 = ((a * p) + (2 * x)).
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: x_2 <= b.
  (* Invariant *)
  Have: (x < x_1) /\ (0 < x_2).
}
Prove: x_1 <= (a + x).
Prover Z3 4.8.12 returns Valid (Qed:54ms) (600ms) (1030226)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0004/5_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0004/5_merged.c, line 29):
Let x = a * s.
Let x_1 = b * r.
Let x_2 = a * q.
Let x_3 = b * s.
Let x_4 = x_2 + x_3.
Let x_5 = i_1 - 1.
Let x_6 = a + b - y.
Let x_7 = r_2 * y.
Let x_8 = i - 1.
Assume {
  Type: is_sint32(a_1) /\ is_sint32(a) /\ is_sint32(b_1) /\ is_sint32(b) /\
      is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(y) /\ is_sint32(x_6) /\ is_sint32((s * x_6) - (r * y)) /\
      is_sint32((s * y) + (q * x_6)).
  (* Pre-condition *)
  Have: y < (a + b).
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: ((y + (i * x_6)) = (a + b + (y * x_8))) \/
      ((i * y) = (y + (x_8 * x_6))).
  (* Invariant *)
  Have: ((s_2 * y) + (q_2 * x_6)) = b.
  (* Invariant *)
  Have: (x_7 + (p_2 * x_6)) = a.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: b <= y.
  (* Invariant *)
  Have: (0 < a) /\ (0 < b).
  (* Invariant *)
  Have: (s_2 * x_6) = (a + x_7).
  (* Invariant *)
  Have: y <= b.
  (* Invariant *)
  Have: ((a * i_1) = (a + (b * x_5))) \/ ((b * i_1) = (b + (a * x_5))).
  (* Then *)
  Have: b != a.
  If b < a
  Then {
    Let x_9 = b * (r_1 - s).
    Let x_10 = x_2 + x + x_3.
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (x_4 = b) /\ ((a_1 + x_9) = x_10) /\ ((a + x_9) = x_10).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_11 = b * (s_1 - s).
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        ((b_1 + x_11) = x_10) /\ ((b + x_11) = x_10) /\ (x = (a + x_11)).
  }
  (* Invariant *)
  Have: x = ((a * p) + (2 * x_1)).
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: x_4 <= b.
  (* Invariant *)
  Have: (x_1 < x) /\ (0 < x_4).
  (* Invariant *)
  Have: x <= (a + x_1).
}
Prove: x_10 = (a + b + x_1).
Prover Z3 4.8.12 returns Timeout (Qed:52ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:52ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0004/5_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0004/5_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0004/5_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0004/5_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (8ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0004/5_merged.c, line 31):
Assume {
  Type: is_sint32(b) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < b.
}
Prove: exists i : Z. let x_1 = i - 1 in ((b * i) = (b + (x * x_1))) \/
    ((x * i) = (x + (b * x_1))).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (149ms) (2440)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0004/5_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0004/5_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0004/5_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0004/5_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0004/5_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0004/5_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0004/5_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0004/5_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Assertion (file out/5_0004/5_merged.c, line 56):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/5_0004/5_merged.c, line 57):
Let x = 2 * a.
Let x_1 = x - b.
Let x_2 = b * r.
Let x_3 = i - 1.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(p) /\ is_sint32(q) /\
      is_sint32(r) /\ is_sint32(s) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: b < x.
  (* Pre-condition *)
  Have: 0 < b.
  (* Invariant *)
  Have: ((b + (i * x_1)) = (x + (b * x_3))) \/ ((b * i) = (b + (x_3 * x_1))).
  (* Invariant *)
  Have: ((b * s) + (q * x_1)) = a.
  (* Invariant *)
  Have: (x_2 + (p * x_1)) = a.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: a <= b.
  (* Invariant *)
  Have: 0 < a.
  (* Invariant *)
  Have: (s * x_1) = (a + x_2).
  (* Invariant *)
  Have: b <= a.
  (* Invariant *)
  Have: (a * i_1) = (a + (a * (i_1 - 1))).
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/5_0004/5_merged.c, line 36):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/5_0004/5_merged.c:4: Warning: 
  No 'assigns' specification for function 'main5'.
  Callers assumptions might be imprecise.

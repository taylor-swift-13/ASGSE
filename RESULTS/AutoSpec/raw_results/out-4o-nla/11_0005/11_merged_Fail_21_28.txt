[kernel] Parsing out/11_0005/11_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/11_0005/11_merged.c:29: Warning: 
  Body of function main11 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 28 goals scheduled
[wp] [Timeout] typed_main11_loop_invariant_6_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_main11_loop_invariant_6_preserved (Qed 6ms) (Z3)
[wp] [Timeout] typed_main11_loop_invariant_7_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_main11_loop_invariant_8_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_main11_loop_invariant_9_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_main11_loop_invariant_11_preserved (Qed 6ms) (Z3)
[wp] [Timeout] typed_main11_loop_invariant_11_established (Qed 2ms) (Z3)
[wp] Proved goals:   21 / 28
  Qed:              16
  Alt-Ergo 2.5.4:    4 (5ms-83ms-182ms)
  Z3 4.8.12:         1 (160ms)
  Timeout:           7
------------------------------------------------------------
  Function main11
------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 12):
Let x_2 = x_1 * z.
Let x_3 = x - x_2.
Let x_4 = y * x_3.
Let x_5 = z - 1.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y) /\ is_sint32(z) /\ is_sint32(y * z) /\ is_sint32(x_3).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: (x_5 / x_5) = 0.
  (* Invariant *)
  Have: (0 / x_5) = 0.
  (* Invariant *)
  Have: ((lxor(-1, z) * x_3) / x_5) = 0.
  (* Invariant *)
  Have: (0 / z) = 0.
  (* Invariant *)
  Have: k != 1.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (x_1 + (y * z * x_3)) = x.
  (* Invariant *)
  Have: (x_4 + ((z * (y - 1) * x_3) / x_5)) = x_1.
  (* Invariant *)
  Have: (x_4 + ((lxor(z, c - 2) * x_3) / x_5)) = x_1.
  (* Invariant *)
  Have: (x_4 + ((z * (x_1 + x_2 - x)) / z)) = x_1.
  (* Invariant *)
  Have: (((y * x_5) / x_5) + x_4) = x_1.
  (* Invariant *)
  Have: k != c.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
}
Prove: (x * z) = (x_2 + (y * z * z * x_3)).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (9ms) (140)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 17):
Let x_2 = x_1 * z.
Let x_3 = x - x_2.
Let x_4 = y * x_3.
Let x_5 = z - 1.
Let x_6 = y * z * x_3.
Let x_7 = y * z.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y) /\ is_sint32(z) /\ is_sint32(x_7) /\ is_sint32(x_3).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: (x_5 / x_5) = 0.
  (* Invariant *)
  Have: (0 / x_5) = 0.
  (* Invariant *)
  Have: ((lxor(-1, z) * x_3) / x_5) = 0.
  (* Invariant *)
  Have: (0 / z) = 0.
  (* Invariant *)
  Have: k != 1.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (x_1 + x_6) = x.
  (* Invariant *)
  Have: (x_4 + ((z * (y - 1) * x_3) / x_5)) = x_1.
  (* Invariant *)
  Have: (x_4 + ((lxor(z, c - 2) * x_3) / x_5)) = x_1.
  (* Invariant *)
  Have: (x_4 + ((z * (x_1 + x_2 - x)) / z)) = x_1.
  (* Invariant *)
  Have: (((y * x_5) / x_5) + x_4) = x_1.
  (* Invariant *)
  Have: k != c.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: (x * z) = (x_2 + (y * z * z * x_3)).
}
Prove: (x_6 + ((z * (x_7 - 1) * x_3) / x_5)) = x.
Prover Z3 4.8.12 returns Timeout (Qed:6ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:6ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 17):
Assume {
  Type: is_sint32(k) /\ is_sint32(z).
  (* Pre-condition *)
  Have: (0 < k) /\ (0 <= z) /\ (k <= 10) /\ (z <= 10).
}
Prove: (0 / (z - 1)) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 18):
Let x_1 = x * y * z.
Let x_2 = y * z.
Let x_3 = z - 1.
Let x_4 = (x * z * (x_2 - 1)) / x_3.
Let x_5 = x_1 + x_4.
Let x_6 = x * y.
Let x_7 = (y * x_3) / x_3.
Let x_8 = x_6 + x_7.
Let x_9 = x + (z * x_8).
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x_2) /\ is_sint32(x_8) /\
      is_sint32(x_5).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: (x_3 / x_3) = 0.
  (* Invariant *)
  Have: (0 / x_3) = 0.
  (* Invariant *)
  Have: ((x * lxor(-1, z)) / x_3) = 0.
  (* Invariant *)
  Have: (0 / z) = 0.
  (* Invariant *)
  Have: k != 1.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: x_9 = (x_6 + x_1 + x_7).
  (* Invariant *)
  Have: ((x * z * (y - 1)) / x_3) = x_7.
  (* Invariant *)
  Have: ((x * lxor(z, c - 2)) / x_3) = x_7.
  (* Invariant *)
  Have: ((z * (x_6 + x_7 - x)) / z) = x_7.
  (* Invariant *)
  Have: k != c.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  Have: x_9 = x_5.
  (* Invariant *)
  Have: (x + (z * x_5)) = (x_1 + (x * y * z * z) + x_4).
}
Prove: x_4 = ((x * lxor(z, c - 1)) / x_3).
Prover Z3 4.8.12 returns Valid (Qed:6ms) (140ms) (593507)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (137ms) (2964)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 18):
Let x_1 = z - 1.
Assume {
  Type: is_sint32(k) /\ is_sint32(x) /\ is_sint32(z).
  (* Pre-condition *)
  Have: (0 < k) /\ (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: (0 / x_1) = 0.
}
Prove: ((x * lxor(-1, z)) / x_1) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 19):
Let x_1 = y * z.
Let x_2 = z - 1.
Let x_3 = (x * lxor(z, c - 1)) / x_2.
Let x_4 = x * y * z.
Let x_5 = x_4 + x_3.
Let x_6 = x * y.
Let x_7 = (y * x_2) / x_2.
Let x_8 = x_6 + x_7.
Let x_9 = x + (z * x_8).
Let x_10 = -x.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x_1) /\ is_sint32(x_8) /\
      is_sint32(x_5).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: (x_2 / x_2) = 0.
  (* Invariant *)
  Have: (0 / x_2) = 0.
  (* Invariant *)
  Have: ((x * lxor(-1, z)) / x_2) = 0.
  (* Invariant *)
  Have: (0 / z) = 0.
  (* Invariant *)
  Have: k != 1.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: x_9 = (x_6 + x_4 + x_7).
  (* Invariant *)
  Have: ((x * z * (y - 1)) / x_2) = x_7.
  (* Invariant *)
  Have: ((x * lxor(z, c - 2)) / x_2) = x_7.
  (* Invariant *)
  Have: ((z * (x_6 + x_7 - x)) / z) = x_7.
  (* Invariant *)
  Have: k != c.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  Have: x_9 = x_5.
  (* Invariant *)
  Have: (x + (z * x_5)) = (x_4 + (x * y * z * z) + x_3).
  (* Invariant *)
  Have: ((x * z * (x_1 - 1)) / x_2) = x_3.
}
Prove: ((z * (x_4 + x_3 - x)) / z) = x_3.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (160ms) (532413)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 19):
Assume {
  Type: is_sint32(k) /\ is_sint32(z).
  (* Pre-condition *)
  Have: (0 < k) /\ (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Invariant *)
  Have: (0 / (z - 1)) = 0.
}
Prove: (0 / z) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 20):
Let x_1 = -x.
Let x_2 = x * y * z.
Let x_3 = z - 1.
Let x_4 = (x * lxor(z, c - 1)) / x_3.
Let x_5 = y * z.
Let x_6 = x_2 + x_4.
Let x_7 = x * y.
Let x_8 = (y * x_3) / x_3.
Let x_9 = x_7 + x_8.
Let x_10 = x + (z * x_9).
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x_5) /\ is_sint32(x_9) /\
      is_sint32(x_6).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: (x_3 / x_3) = 0.
  (* Invariant *)
  Have: (0 / x_3) = 0.
  (* Invariant *)
  Have: ((x * lxor(-1, z)) / x_3) = 0.
  (* Invariant *)
  Have: (0 / z) = 0.
  (* Invariant *)
  Have: k != 1.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: x_10 = (x_7 + x_2 + x_8).
  (* Invariant *)
  Have: ((x * z * (y - 1)) / x_3) = x_8.
  (* Invariant *)
  Have: ((x * lxor(z, c - 2)) / x_3) = x_8.
  (* Invariant *)
  Have: ((z * (x_7 + x_8 - x)) / z) = x_8.
  (* Invariant *)
  Have: k != c.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  Have: x_10 = x_6.
  (* Invariant *)
  Have: (x + (z * x_6)) = (x_2 + (x * y * z * z) + x_4).
  (* Invariant *)
  Have: ((x * z * (x_5 - 1)) / x_3) = x_4.
  (* Invariant *)
  Have: ((z * (x_2 + x_4 - x)) / z) = x_4.
}
Prove: x_4 = ((y * z * x_3) / x_3).
Prover Z3 4.8.12 returns Valid (Qed:6ms) (260ms) (1098821)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (182ms) (3439)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 20):
Let x = z - 1.
Assume {
  Type: is_sint32(k) /\ is_sint32(z).
  (* Pre-condition *)
  Have: (0 < k) /\ (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Invariant *)
  Have: (0 / x) = 0.
  (* Invariant *)
  Have: (0 / z) = 0.
}
Prove: (x / x) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.94ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 22):
Let x_1 = -x.
Let x_2 = x * y * z.
Let x_3 = z - 1.
Let x_4 = (y * z * x_3) / x_3.
Let x_5 = y * z.
Let x_6 = x_2 + x_4.
Let x_7 = x * y.
Let x_8 = (y * x_3) / x_3.
Let x_9 = x_7 + x_8.
Let x_10 = x + (z * x_9).
Let x_11 = 1 + c.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(x_11) /\ is_sint32(x_5) /\ is_sint32(x_9) /\
      is_sint32(x_6).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: (x_3 / x_3) = 0.
  (* Invariant *)
  Have: (0 / x_3) = 0.
  (* Invariant *)
  Have: ((x * lxor(-1, z)) / x_3) = 0.
  (* Invariant *)
  Have: (0 / z) = 0.
  (* Invariant *)
  Have: k != 1.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: x_10 = (x_7 + x_2 + x_8).
  (* Invariant *)
  Have: ((x * z * (y - 1)) / x_3) = x_8.
  (* Invariant *)
  Have: ((x * lxor(z, c - 2)) / x_3) = x_8.
  (* Invariant *)
  Have: ((z * (x_7 + x_8 - x)) / z) = x_8.
  (* Invariant *)
  Have: k != c.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  Have: x_10 = x_6.
  (* Invariant *)
  Have: (x + (z * x_6)) = (x_2 + (x * y * z * z) + x_4).
  (* Invariant *)
  Have: ((x * z * (x_5 - 1)) / x_3) = x_4.
  (* Invariant *)
  Have: ((x * lxor(z, c - 1)) / x_3) = x_4.
  (* Invariant *)
  Have: ((z * (x_2 + x_4 - x)) / z) = x_4.
}
Prove: x_11 != k.
Prover Z3 4.8.12 returns Timeout (Qed:6ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:6ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 22):
Let x_1 = z - 1.
Assume {
  Type: is_sint32(k) /\ is_sint32(x) /\ is_sint32(z).
  (* Pre-condition *)
  Have: (0 < k) /\ (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: (x_1 / x_1) = 0.
  (* Invariant *)
  Have: (0 / x_1) = 0.
  (* Invariant *)
  Have: ((x * lxor(-1, z)) / x_1) = 0.
  (* Invariant *)
  Have: (0 / z) = 0.
}
Prove: k != 1.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/11_0005/11_merged.c, line 36):
Let x_1 = x * y.
Let x_2 = z - 1.
Let x_3 = (y * x_2) / x_2.
Let x_4 = x_1 + x_3.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(x_4).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: (x_2 / x_2) = 0.
  (* Invariant *)
  Have: (0 / x_2) = 0.
  (* Invariant *)
  Have: ((x * lxor(-1, z)) / x_2) = 0.
  (* Invariant *)
  Have: (0 / z) = 0.
  (* Invariant *)
  Have: k != 1.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (x + (z * x_4)) = (x_1 + (x * y * z) + x_3).
  (* Invariant *)
  Have: ((x * z * (y - 1)) / x_2) = x_3.
  (* Invariant *)
  Have: ((x * lxor(z, c - 2)) / x_2) = x_3.
  (* Invariant *)
  Have: ((z * (x_1 + x_3 - x)) / z) = x_3.
  (* Invariant *)
  Have: k != c.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Else *)
  Have: k <= c.
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (100520)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (77)

------------------------------------------------------------

Goal Loop assigns (file out/11_0005/11_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/11_0005/11_merged.c:4: Warning: 
  No 'assigns' specification for function 'main11'.
  Callers assumptions might be imprecise.

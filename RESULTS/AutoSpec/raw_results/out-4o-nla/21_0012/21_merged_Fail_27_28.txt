[kernel] Parsing out/21_0012/21_merged.c (with preprocessing)
[kernel:typing:no-proto] out/21_0012/21_merged.c:23: Warning: 
  Calling function unknown that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/21_0012/21_merged.c:2: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 28 goals scheduled
[wp] [Timeout] typed_main21_loop_invariant_6_preserved (Qed 13ms) (Z3)
[wp] Proved goals:   27 / 28
  Qed:              19
  Alt-Ergo 2.5.4:    8 (3ms-11ms-16ms)
  Timeout:           1
------------------------------------------------------------
  Function main21
------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0012/21_merged.c, line 7):
Let x = i * i.
Let x_1 = y * y.
Let x_2 = y - 1.
Let x_3 = 1 + y.
Let x_4 = x_3 * x_3.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x_3) /\ is_sint32(x) /\
      is_sint32(x_4).
  (* Invariant *)
  Have: ((i_1 * i_1) = 0) /\ (i_1 <= 0) /\ (0 <= i_1).
  (* Invariant *)
  Have: sqrt(real_of_int(x)) = real_of_int(y).
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: ((2 * y) + (x_2 * x_2)) = (1 + x).
  (* Invariant *)
  Have: x <= x_1.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < y) -> ((i_2 * i_2) <= x))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= y) -> ((i_2 * i_2) = x))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < y) -> ((i_2 * i_2) = x))).
  (* Invariant *)
  Have: x_1 = x.
  (* Invariant *)
  Have: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: sqrt(real_of_int(x_4)) = real_of_int(x_3).
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (42707)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (13ms) (423)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0012/21_merged.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0012/21_merged.c, line 8):
Let x = 1 + y.
Let x_1 = x * x.
Let x_2 = i * i.
Let x_3 = y * y.
Let x_4 = y - 1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: ((i_1 * i_1) = 0) /\ (i_1 <= 0) /\ (0 <= i_1).
  (* Invariant *)
  Have: sqrt(real_of_int(x_2)) = real_of_int(y).
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: ((2 * y) + (x_4 * x_4)) = (1 + x_2).
  (* Invariant *)
  Have: x_2 <= x_3.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < y) -> ((i_2 * i_2) <= x_2))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= y) -> ((i_2 * i_2) = x_2))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < y) -> ((i_2 * i_2) = x_2))).
  (* Invariant *)
  Have: x_3 = x_2.
  (* Invariant *)
  Have: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: sqrt(real_of_int(x_1)) = real_of_int(x).
}
Prove: y < x_1.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (36412)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (5ms) (91)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0012/21_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0012/21_merged.c, line 9):
Let x = 1 + y.
Let x_1 = x * x.
Let x_2 = i * i.
Let x_3 = y * y.
Let x_4 = 2 * y.
Let x_5 = y - 1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: ((i_1 * i_1) = 0) /\ (i_1 <= 0) /\ (0 <= i_1).
  (* Invariant *)
  Have: sqrt(real_of_int(x_2)) = real_of_int(y).
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: (x_4 + (x_5 * x_5)) = (1 + x_2).
  (* Invariant *)
  Have: x_2 <= x_3.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < y) -> ((i_2 * i_2) <= x_2))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= y) -> ((i_2 * i_2) = x_2))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < y) -> ((i_2 * i_2) = x_2))).
  (* Invariant *)
  Have: x_3 = x_2.
  (* Invariant *)
  Have: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: sqrt(real_of_int(x_1)) = real_of_int(x).
  (* Invariant *)
  Have: y < x_1.
}
Prove: x_1 = (1 + x_4 + x_3).
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (11123)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (6ms) (85)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0012/21_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0012/21_merged.c, line 10):
Let x = y * y.
Let x_1 = 2 * y.
Let x_2 = 1 + x_1 + x.
Let x_3 = 1 + y.
Let x_4 = x_3 * x_3.
Let x_5 = i * i.
Let x_6 = y - 1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x_3) /\
      is_sint32(x_5) /\ is_sint32(x_2).
  (* Invariant *)
  Have: ((i_1 * i_1) = 0) /\ (i_1 <= 0) /\ (0 <= i_1).
  (* Invariant *)
  Have: sqrt(real_of_int(x_5)) = real_of_int(y).
  (* Invariant *)
  Have: y <= x_5.
  (* Invariant *)
  Have: (x_1 + (x_6 * x_6)) = (1 + x_5).
  (* Invariant *)
  Have: x_5 <= x.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < y) -> ((i_2 * i_2) <= x_5))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= y) -> ((i_2 * i_2) = x_5))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < y) -> ((i_2 * i_2) = x_5))).
  (* Invariant *)
  Have: x = x_5.
  (* Invariant *)
  Have: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_5.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_4 = x_2.
  (* Invariant *)
  Have: sqrt(real_of_int(x_2)) = real_of_int(x_3).
  (* Invariant *)
  Have: 0 <= (y + x).
}
Prove: (x_1 + x) < x_4.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (11209)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (3ms) (90)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0012/21_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0012/21_merged.c, line 11):
Let x = 2 * y.
Let x_1 = y * y.
Let x_2 = 1 + y.
Let x_3 = x_2 * x_2.
Let x_4 = 1 + x + x_1.
Let x_5 = i_1 * i_1.
Let x_6 = y - 1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x_2) /\
      is_sint32(x_5) /\ is_sint32(x_4).
  (* Goal *)
  When: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: ((i_2 * i_2) = 0) /\ (i_2 <= 0) /\ (0 <= i_2).
  (* Invariant *)
  Have: sqrt(real_of_int(x_5)) = real_of_int(y).
  (* Invariant *)
  Have: y <= x_5.
  (* Invariant *)
  Have: (x + (x_6 * x_6)) = (1 + x_5).
  (* Invariant *)
  Have: x_5 <= x_1.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < y) -> ((i_3 * i_3) <= x_5))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 <= y) -> ((i_3 * i_3) = x_5))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < y) -> ((i_3 * i_3) = x_5))).
  (* Invariant *)
  Have: x_1 = x_5.
  (* Invariant *)
  Have: (0 <= i_1) /\ (i_1 <= y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_5.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_3 = x_4.
  (* Invariant *)
  Have: sqrt(real_of_int(x_4)) = real_of_int(x_2).
  (* Invariant *)
  Have: 0 <= (y + x_1).
  (* Invariant *)
  Have: (x + x_1) < x_3.
}
Prove: (i * i) <= x_4.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (38801)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (13ms) (403)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0012/21_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0012/21_merged.c, line 12):
Let x = 2 * y.
Let x_1 = y * y.
Let x_2 = 1 + x + x_1.
Let x_3 = 1 + y.
Let x_4 = x_3 * x_3.
Let x_5 = i_1 * i_1.
Let x_6 = y - 1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x_3) /\
      is_sint32(x_5) /\ is_sint32(x_2).
  (* Goal *)
  When: (0 <= i) /\ (i <= x_3).
  (* Invariant *)
  Have: ((i_2 * i_2) = 0) /\ (i_2 <= 0) /\ (0 <= i_2).
  (* Invariant *)
  Have: sqrt(real_of_int(x_5)) = real_of_int(y).
  (* Invariant *)
  Have: y <= x_5.
  (* Invariant *)
  Have: (x + (x_6 * x_6)) = (1 + x_5).
  (* Invariant *)
  Have: x_5 <= x_1.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < y) -> ((i_3 * i_3) <= x_5))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 <= y) -> ((i_3 * i_3) = x_5))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < y) -> ((i_3 * i_3) = x_5))).
  (* Invariant *)
  Have: x_1 = x_5.
  (* Invariant *)
  Have: (0 <= i_1) /\ (i_1 <= y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_5.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_4 = x_2.
  (* Invariant *)
  Have: sqrt(real_of_int(x_2)) = real_of_int(x_3).
  (* Invariant *)
  Have: 0 <= (y + x_1).
  (* Invariant *)
  Have: (x + x_1) < x_4.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 <= y) -> ((i_3 * i_3) <= x_2))).
}
Prove: (i * i) = x_2.
Prover Z3 4.8.12 returns Timeout (Qed:13ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:13ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0012/21_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0012/21_merged.c, line 13):
Let x = 1 + y.
Let x_1 = 2 * y.
Let x_2 = y * y.
Let x_3 = 1 + x_1 + x_2.
Let x_4 = x * x.
Let x_5 = i_1 * i_1.
Let x_6 = y - 1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_5) /\
      is_sint32(x_3).
  (* Goal *)
  When: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: ((i_2 * i_2) = 0) /\ (i_2 <= 0) /\ (0 <= i_2).
  (* Invariant *)
  Have: sqrt(real_of_int(x_5)) = real_of_int(y).
  (* Invariant *)
  Have: y <= x_5.
  (* Invariant *)
  Have: (x_1 + (x_6 * x_6)) = (1 + x_5).
  (* Invariant *)
  Have: x_5 <= x_2.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < y) -> ((i_3 * i_3) <= x_5))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 <= y) -> ((i_3 * i_3) = x_5))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < y) -> ((i_3 * i_3) = x_5))).
  (* Invariant *)
  Have: x_2 = x_5.
  (* Invariant *)
  Have: (0 <= i_1) /\ (i_1 <= y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_5.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_4 = x_3.
  (* Invariant *)
  Have: sqrt(real_of_int(x_3)) = real_of_int(x).
  (* Invariant *)
  Have: 0 <= (y + x_2).
  (* Invariant *)
  Have: (x_1 + x_2) < x_4.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 <= y) -> ((i_3 * i_3) <= x_3))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 <= x) -> ((i_3 * i_3) = x_3))).
}
Prove: (i * i) <= x_3.
Prover Z3 4.8.12 returns Valid (Qed:13ms) (10ms) (40439)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (15ms) (454)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0012/21_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0012/21_merged.c, line 14):
Let x = 1 + y.
Let x_1 = 2 * y.
Let x_2 = y * y.
Let x_3 = 1 + x_1 + x_2.
Let x_4 = x * x.
Let x_5 = i_1 * i_1.
Let x_6 = y - 1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_5) /\
      is_sint32(x_3).
  (* Goal *)
  When: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: ((i_2 * i_2) = 0) /\ (i_2 <= 0) /\ (0 <= i_2).
  (* Invariant *)
  Have: sqrt(real_of_int(x_5)) = real_of_int(y).
  (* Invariant *)
  Have: y <= x_5.
  (* Invariant *)
  Have: (x_1 + (x_6 * x_6)) = (1 + x_5).
  (* Invariant *)
  Have: x_5 <= x_2.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < y) -> ((i_3 * i_3) <= x_5))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 <= y) -> ((i_3 * i_3) = x_5))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < y) -> ((i_3 * i_3) = x_5))).
  (* Invariant *)
  Have: x_2 = x_5.
  (* Invariant *)
  Have: (0 <= i_1) /\ (i_1 <= y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_5.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_4 = x_3.
  (* Invariant *)
  Have: sqrt(real_of_int(x_3)) = real_of_int(x).
  (* Invariant *)
  Have: 0 <= (y + x_2).
  (* Invariant *)
  Have: (x_1 + x_2) < x_4.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 <= y) -> ((i_3 * i_3) <= x_3))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 <= x) -> ((i_3 * i_3) = x_3))).
}
Prove: (i * i) = x_3.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (20ms) (40437)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (16ms) (452)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0012/21_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0012/21_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0012/21_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0012/21_merged.c, line 16):
Let x = 2 * y.
Let x_1 = y * y.
Let x_2 = 1 + x + x_1.
Let x_3 = 1 + y.
Let x_4 = x_3 * x_3.
Let x_5 = i * i.
Let x_6 = y - 1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x_3) /\
      is_sint32(x_5) /\ is_sint32(x_2).
  (* Invariant *)
  Have: ((i_1 * i_1) = 0) /\ (i_1 <= 0) /\ (0 <= i_1).
  (* Invariant *)
  Have: sqrt(real_of_int(x_5)) = real_of_int(y).
  (* Invariant *)
  Have: y <= x_5.
  (* Invariant *)
  Have: (x + (x_6 * x_6)) = (1 + x_5).
  (* Invariant *)
  Have: x_5 <= x_1.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < y) -> ((i_2 * i_2) <= x_5))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= y) -> ((i_2 * i_2) = x_5))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < y) -> ((i_2 * i_2) = x_5))).
  (* Invariant *)
  Have: x_1 = x_5.
  (* Invariant *)
  Have: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_5.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_4 = x_2.
  (* Invariant *)
  Have: sqrt(real_of_int(x_2)) = real_of_int(x_3).
  (* Invariant *)
  Have: 0 <= (y + x_1).
  (* Invariant *)
  Have: (x + x_1) < x_4.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= y) -> ((i_2 * i_2) <= x_2))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= x_3) ->
      ((i_2 * i_2) = x_2))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= y) -> ((i_2 * i_2) = x_2))).
}
Prove: exists i_2 : Z. ((i_2 * i_2) = x_2) /\ (0 <= i_2) /\ (i_2 <= x_3).
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (41220)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (14ms) (466)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0012/21_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.81ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0012/21_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0012/21_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.85ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0012/21_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0012/21_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.82ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0012/21_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0012/21_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Loop assigns (file out/21_0012/21_merged.c, line 20) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/21_0012/21_merged.c, line 20) (2/2):
Call Result at line 23
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/21_0012/21_merged.c:1: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/21_0012/21_merged.c:2: Warning: 
  No 'assigns' specification for function 'main21'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/8_0002/8_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/8_0002/8_merged.c:38: Warning: 
  Body of function main8 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 31 goals scheduled
[wp] [Timeout] typed_main8_loop_invariant_13_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_main8_loop_invariant_14_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_main8_assert_missing_return (Qed 7ms) (Z3)
[wp] Proved goals:   28 / 31
  Qed:            25
  Z3 4.8.12:       3 (10ms-17ms-20ms)
  Timeout:         3
------------------------------------------------------------
  Function main8
------------------------------------------------------------

Goal Preservation of Invariant (file out/8_0002/8_merged.c, line 17):
Let x = a_1 * s.
Let x_1 = b_1 * r_1.
Let x_2 = a_1 + b_1 + x_1 - x.
Let x_3 = x - x_1.
Let x_4 = a_1 + b_1 + x_1.
Let x_5 = a_1 + x_1.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b) /\ is_sint32(b_2) /\
      is_sint32(b_1) /\ is_sint32(p) /\ is_sint32(q) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(s_1) /\ is_sint32(s_2) /\ is_sint32(s) /\
      is_sint32(x_3) /\ is_sint32(x_2).
  (* Pre-condition *)
  Have: x_1 < x.
  (* Pre-condition *)
  Have: x < x_4.
  (* Invariant *)
  Have: ((x + (i * x_3)) = x_4) \/ (x = (x_1 + (i * x_2))).
  (* Invariant *)
  Have: (a_1 + b_1 + (2 * x_1)) = (2 * x).
  (* Invariant *)
  Have: ((a_1 * r_1) + x + (b_1 * s)) = x_4.
  (* Invariant *)
  Have: (x <= x_5) /\ (x_5 <= x).
  (* Invariant *)
  Have: x = ((a_1 * p) + (b_1 * q) + x_1).
  (* Invariant *)
  Have: (x + (r_1 * x_3) + (s * x_2)) = x_4.
  (* Invariant *)
  Have: x = (x_1 + (p * x_3) + (q * x_2)).
  (* Invariant *)
  Have: (a_1 + b_1 + (a_1 * q) + x_1) = (x + (b_1 * p)).
  (* Invariant *)
  Have: (0 < a_1) /\ (0 < b_1).
  (* Invariant *)
  Have: (x_3 % x_2) = (a_1 % b_1).
  (* Invariant *)
  Have: ((a_1 * i_1) = b_1) \/ ((b_1 * i_1) = a_1).
  (* Invariant *)
  Have: ((r_1 - s) * x_2) = ((q - p) * x_3).
  (* Then *)
  Have: b_1 != a_1.
  If b_1 < a_1
  Then {
    Have: (b_1 = b) /\ (s = s_1).
    Have: (a + b) = a_1.
    Have: (r + s_1) = r_1.
  }
  Else {
    Have: (b_1 = b_2) /\ (s = s_2) /\ ((a + b) = b_2) /\ ((a_1 + b) = b_2) /\
        ((r + s_1) = s_2) /\ ((r_1 + s_1) = s_2).
  }
}
Prove: ((a * r) + x + (b * s_1)) = x_4.
Prover Z3 4.8.12 returns Valid (Qed:44ms) (20ms) (44293)

------------------------------------------------------------

Goal Establishment of Invariant (file out/8_0002/8_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/8_0002/8_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/8_0002/8_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/8_0002/8_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (8ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/8_0002/8_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/8_0002/8_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/8_0002/8_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/8_0002/8_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (8ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/8_0002/8_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/8_0002/8_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/8_0002/8_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/8_0002/8_merged.c, line 23):
Let x = a * p.
Let x_1 = b * q.
Let x_2 = x + x_1.
Let x_3 = a * q.
Let x_4 = -x_3.
Let x_5 = b * p.
Let x_6 = x_5 - x_3.
Let x_7 = (2 * b_2) + x_3.
Let x_8 = x + x_5 + x_1.
Let x_9 = x + x_5 + x_1 - b_2 - x_3.
Let x_10 = b_2 + x_3.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b) /\ is_sint32(b_1) /\
      is_sint32(b_2) /\ is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\
      is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\
      is_sint32(s_2) /\ is_sint32(x_2) /\ is_sint32(x_6) /\ is_sint32(x_9).
  (* Pre-condition *)
  Have: 0 < x_2.
  (* Pre-condition *)
  Have: x_3 < x_5.
  (* Invariant *)
  Have: ((i * x_6) = x_2) \/ (x_5 = (x_3 + (i * x_2))).
  (* Invariant *)
  Have: x_5 = (x + x_3 + x_1).
  (* Invariant *)
  Have: x_5 = (x_3 + (b_2 * s_2) + (r_2 * x_9)).
  (* Invariant *)
  Have: (x_5 <= x_10) /\ (x_10 <= x_5).
  (* Invariant *)
  Have: ((b_2 * q_2) + (p_2 * x_9)) = x_2.
  (* Invariant *)
  Have: x_5 = (x_3 + (r_2 * x_2) + (s_2 * x_6)).
  (* Invariant *)
  Have: ((p_2 * x_2) + (q_2 * x_6)) = x_2.
  (* Invariant *)
  Have: (x_5 + (q_2 * x_9)) = (x_3 + (b_2 * p_2)).
  (* Invariant *)
  Have: (0 < b_2) /\ (x_10 < x_8).
  (* Invariant *)
  Have: (s_2 * x_9) = (x + x_1 + (b_2 * r_2)).
  (* Invariant *)
  Have: (x_9 % b_2) = (x_2 % x_6).
  (* Invariant *)
  Have: (x_8 = (b_2 + x_3 + (b_2 * i_1))) \/ ((i_1 * x_9) = b_2).
  (* Invariant *)
  Have: ((r_2 - s_2) * x_6) = ((q_2 - p_2) * x_2).
  (* Then *)
  Have: x_8 != x_7.
  If x_7 < x_8
  Then {
    Let x_11 = p_1 - q.
    Let x_12 = a_1 - b.
    Have: (b_2 = b) /\ (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\
        (s_2 = s) /\
        ((x_1 + (b * x_11) + (x_12 * x_11)) = (a_1 + b + (q * x_12))).
    Have: (a + b) = a_1.
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_13 = q_1 - q.
    Let x_14 = b_1 - b.
    Have: (b_2 = b_1) /\ (q_2 = q_1) /\ (s_2 = s_1) /\ ((a + b) = b_1) /\
        ((p + q) = q_1) /\ ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\
        ((r_2 + s) = s_1) /\
        ((b + x_1 + (b * x_13) + (x_14 * x_13)) = ((2 * b_1) + (q * x_14))).
  }
  (* Invariant *)
  Have: x_5 = (x_3 + (a * r) + (b * s)).
  (* Invariant *)
  Have: (a <= x_2) /\ ((b + x_3) <= x_5).
  (* Invariant *)
  Have: x_5 = (x_3 + (r * x_2) + (s * x_6)).
  (* Invariant *)
  Have: ((p * x_2) + (q * x_6)) = x_2.
}
Prove: (0 < a) /\ (0 < b).
Prover Z3 4.8.12 returns Valid (Qed:70ms) (20ms) (51211)

------------------------------------------------------------

Goal Establishment of Invariant (file out/8_0002/8_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.89ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/8_0002/8_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/8_0002/8_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/8_0002/8_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/8_0002/8_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.88ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/8_0002/8_merged.c, line 26):
Let x = a * p.
Let x_1 = b * q.
Let x_2 = x + x_1.
Let x_3 = a * q.
Let x_4 = -x_3.
Let x_5 = b * p.
Let x_6 = x_5 - x_3.
Let x_7 = (2 * b_2) + x_3.
Let x_8 = x + x_5 + x_1.
Let x_9 = x + x_5 + x_1 - b_2 - x_3.
Let x_10 = b_2 + x_3.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b) /\ is_sint32(b_1) /\
      is_sint32(b_2) /\ is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\
      is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\
      is_sint32(s_2) /\ is_sint32(x_2) /\ is_sint32(x_6) /\ is_sint32(x_9).
  (* Pre-condition *)
  Have: 0 < x_2.
  (* Pre-condition *)
  Have: x_3 < x_5.
  (* Invariant *)
  Have: ((i * x_6) = x_2) \/ (x_5 = (x_3 + (i * x_2))).
  (* Invariant *)
  Have: x_5 = (x + x_3 + x_1).
  (* Invariant *)
  Have: x_5 = (x_3 + (b_2 * s_2) + (r_2 * x_9)).
  (* Invariant *)
  Have: (x_5 <= x_10) /\ (x_10 <= x_5).
  (* Invariant *)
  Have: ((b_2 * q_2) + (p_2 * x_9)) = x_2.
  (* Invariant *)
  Have: x_5 = (x_3 + (r_2 * x_2) + (s_2 * x_6)).
  (* Invariant *)
  Have: ((p_2 * x_2) + (q_2 * x_6)) = x_2.
  (* Invariant *)
  Have: (x_5 + (q_2 * x_9)) = (x_3 + (b_2 * p_2)).
  (* Invariant *)
  Have: (0 < b_2) /\ (x_10 < x_8).
  (* Invariant *)
  Have: (s_2 * x_9) = (x + x_1 + (b_2 * r_2)).
  (* Invariant *)
  Have: (x_9 % b_2) = (x_2 % x_6).
  (* Invariant *)
  Have: (x_8 = (b_2 + x_3 + (b_2 * i_1))) \/ ((i_1 * x_9) = b_2).
  (* Invariant *)
  Have: ((r_2 - s_2) * x_6) = ((q_2 - p_2) * x_2).
  (* Then *)
  Have: x_8 != x_7.
  If x_7 < x_8
  Then {
    Let x_11 = p_1 - q.
    Let x_12 = a_1 - b.
    Have: (b_2 = b) /\ (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\
        (s_2 = s) /\
        ((x_1 + (b * x_11) + (x_12 * x_11)) = (a_1 + b + (q * x_12))).
    Have: (a + b) = a_1.
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_13 = q_1 - q.
    Let x_14 = b_1 - b.
    Have: (b_2 = b_1) /\ (q_2 = q_1) /\ (s_2 = s_1) /\ ((a + b) = b_1) /\
        ((p + q) = q_1) /\ ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\
        ((r_2 + s) = s_1) /\
        ((b + x_1 + (b * x_13) + (x_14 * x_13)) = ((2 * b_1) + (q * x_14))).
  }
  (* Invariant *)
  Have: x_5 = (x_3 + (a * r) + (b * s)).
  (* Invariant *)
  Have: (a <= x_2) /\ ((b + x_3) <= x_5).
  (* Invariant *)
  Have: x_5 = (x_3 + (r * x_2) + (s * x_6)).
  (* Invariant *)
  Have: ((p * x_2) + (q * x_6)) = x_2.
  (* Invariant *)
  Have: (0 < a) /\ (0 < b).
}
Prove: x_8 = (a + b + x_3).
Prover Z3 4.8.12 returns Valid (Qed:71ms) (10ms) (51330)

------------------------------------------------------------

Goal Establishment of Invariant (file out/8_0002/8_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/8_0002/8_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/8_0002/8_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/8_0002/8_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (10ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/8_0002/8_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/8_0002/8_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (13ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/8_0002/8_merged.c, line 29):
Assume {
  Type: is_sint32(a) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 < a.
  (* Pre-condition *)
  Have: 0 < y.
}
Prove: exists i : Z. ((a * i) = y) \/ ((y * i) = a).
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/8_0002/8_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (13ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/8_0002/8_merged.c, line 30):
Assume {
  Type: is_sint32(b) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < b.
  (* Invariant *)
  Have: ((b * i) = x) \/ ((i * x) = b).
}
Prove: x = b.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Assertion (file out/8_0002/8_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/8_0002/8_merged.c, line 52):
Let x = a * p.
Let x_1 = a * q.
Assume {
  Type: is_sint32(a) /\ is_sint32(p) /\ is_sint32(q) /\ is_sint32(r) /\
      is_sint32(s).
  (* Pre-condition *)
  Have: 0 < a.
  (* Invariant *)
  Have: (a * i) = a.
  (* Invariant *)
  Have: ((a * r) = 0) /\ ((a * s) = a).
  (* Invariant *)
  Have: (x + x_1) = a.
  (* Invariant *)
  Have: x = (a + x_1).
  (* Invariant *)
  Have: (a * i_1) = a.
  (* Invariant *)
  Have: (a * (r - s)) = (a * (q - p)).
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/8_0002/8_merged.c, line 31):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/8_0002/8_merged.c:4: Warning: 
  No 'assigns' specification for function 'main8'.
  Callers assumptions might be imprecise.

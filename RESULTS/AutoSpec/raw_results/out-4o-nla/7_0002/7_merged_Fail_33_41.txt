[kernel] Parsing out/7_0002/7_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/7_0002/7_merged.c:44: Warning: 
  Body of function main7 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 41 goals scheduled
[wp] [Timeout] typed_main7_loop_invariant_preserved (Qed 40ms) (Z3)
[wp] [Timeout] typed_main7_loop_invariant_2_preserved (Qed 51ms) (Z3)
[wp] [Timeout] typed_main7_loop_invariant_3_preserved (Qed 59ms) (Z3)
[wp] [Timeout] typed_main7_loop_invariant_4_preserved (Qed 62ms) (Z3)
[wp] [Timeout] typed_main7_loop_invariant_5_preserved (Qed 71ms) (Z3)
[wp] [Timeout] typed_main7_loop_invariant_8_preserved (Qed 55ms) (Z3)
[wp] [Timeout] typed_main7_loop_invariant_14_preserved (Qed 65ms) (Z3)
[wp] [Timeout] typed_main7_assert_missing_return (Qed 5ms) (Z3)
[wp] Proved goals:   33 / 41
  Qed:              28
  Alt-Ergo 2.5.4:    1 (4ms)
  Z3 4.8.12:         4 (10ms-18ms-20ms)
  Timeout:           8
------------------------------------------------------------
  Function main7
------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 18):
Let x = b * r_2.
Let x_1 = a_1 * s_2.
Let x_2 = x_1 - x.
Let x_3 = a_1 * q.
Let x_4 = b * p.
Let x_5 = x_4 - x_3.
Let x_6 = a_1 * p.
Let x_7 = b * s_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b_1) /\ is_sint32(b_2) /\
      is_sint32(b) /\ is_sint32(p) /\ is_sint32(q) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\
      is_sint32(s_2) /\ is_sint32(x_5) /\ is_sint32(x_2).
  (* Pre-condition *)
  Have: x < x_1.
  (* Pre-condition *)
  Have: x_3 < x_4.
  (* Invariant *)
  Have: 0 < (x_5 * x_2).
  (* Invariant *)
  Have: x_4 = (x_3 + (a_1 * r_2) + x_7).
  (* Invariant *)
  Have: x_4 = (x_7 + (2 * x_3)).
  (* Invariant *)
  Have: x_1 = (x_6 + (b * q) + x).
  (* Invariant *)
  Have: x_1 = (x_6 + (2 * x)).
  (* Invariant *)
  Have: (p * s_2) = (1 + (q * r_2)).
  (* Invariant *)
  Have: ((q * x_2) + (s_2 * x_5)) = b.
  (* Invariant *)
  Have: (0 < a_1) /\ (0 < b).
  (* Invariant *)
  Have: ((p * x_2) + (r_2 * x_5)) = a_1.
  (* Invariant *)
  Have: 0 < (a_1 * b).
  (* Then *)
  Have: b != a_1.
  If b < a_1
  Then {
    Have: (b = b_1) /\ (r_2 = r_1) /\ (s_2 = s).
    Have: (a + b_1) = a_1.
    Have: (r + s) = r_1.
  }
  Else {
    Have: (b = b_2) /\ (s_2 = s_1) /\ ((a + b_1) = b_2) /\
        ((a_1 + b_1) = b_2) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1).
  }
}
Prove: x_4 = ((a * r) + x_3 + (b_1 * s)).
Prover Z3 4.8.12 returns Timeout (Qed:40ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:40ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.87ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 19):
Let x = a * r.
Let x_1 = b * s.
Let x_2 = x + x_1.
Let x_3 = b_2 * r_2.
Let x_4 = a_2 * s_2.
Let x_5 = x_4 - x_3.
Let x_6 = a_2 * q_2.
Let x_7 = a_2 * p_1.
Let x_8 = b_2 * s_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(b) /\
      is_sint32(b_1) /\ is_sint32(b_2) /\ is_sint32(p) /\ is_sint32(p_1) /\
      is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\
      is_sint32(s_2) /\ is_sint32(x_2) /\ is_sint32(x_5).
  (* Pre-condition *)
  Have: x_3 < x_4.
  (* Pre-condition *)
  Have: 0 < x_2.
  (* Invariant *)
  Have: 0 < (x_2 * x_5).
  (* Invariant *)
  Have: ((a_2 * r_2) + x_8) = x_2.
  (* Invariant *)
  Have: (x_6 + x_8) = x_2.
  (* Invariant *)
  Have: x_4 = (x_7 + (b_2 * q_2) + x_3).
  (* Invariant *)
  Have: x_4 = (x_7 + (2 * x_3)).
  (* Invariant *)
  Have: (p_1 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: ((s_2 * x_2) + (q_2 * x_5)) = b_2.
  (* Invariant *)
  Have: (b_2 * p_1) = (x + x_6 + x_1).
  (* Invariant *)
  Have: (0 < a_2) /\ (0 < b_2).
  (* Invariant *)
  Have: ((r_2 * x_2) + (p_1 * x_5)) = a_2.
  (* Invariant *)
  Have: 0 < (a_2 * b_2).
  (* Then *)
  Have: b_2 != a_2.
  If b_2 < a_2
  Then {
    Have: (a_2 = a_1) /\ (b_2 = b) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s).
    Have: (a + b) = a_1.
    Have: (r + s) = r_1.
  }
  Else {
    Have: (b_2 = b_1) /\ (p_1 = p) /\ (q_2 = q_1) /\ (s_2 = s_1) /\
        ((a + b) = b_1) /\ ((a_2 + b) = b_1) /\ ((r + s) = s_1) /\
        ((r_2 + s) = s_1).
    Have: (p + q) = q_1.
  }
}
Prove: x = (a * q).
Prover Z3 4.8.12 returns Timeout (Qed:51ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:51ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 20):
Let x_1 = a * q.
Let x_2 = b * s.
Let x_3 = x_1 + x_2.
Let x_4 = (q_2 * x) + (s_2 * x_3).
Let x_5 = (p_2 * x) + (r_2 * x_3).
Let x_6 = r_2 * x_4.
Let x_7 = q_2 * x_5.
Let x_8 = p_2 * x_5.
Let x_9 = s_2 * x_4.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b) /\ is_sint32(b_1) /\
      is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x) /\ is_sint32(x_3) /\ is_sint32(x_5) /\ is_sint32(x_4).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < x_3.
  (* Invariant *)
  Have: 0 < (x * x_3).
  (* Invariant *)
  Have: ((r_2 * x_5) + x_9) = x_3.
  (* Invariant *)
  Have: (x_7 + x_9) = x_3.
  (* Invariant *)
  Have: (x_8 + (q_2 * x_4)) = x.
  (* Invariant *)
  Have: (x_8 + x_6) = x.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: (p_2 * x_4) = (x_1 + x_2 + x_7).
  (* Invariant *)
  Have: (0 < x_5) /\ (0 < x_4).
  (* Invariant *)
  Have: (s_2 * x_5) = (x + x_6).
  (* Invariant *)
  Have: 0 < (x_5 * x_4).
  (* Then *)
  Have: x_4 != x_5.
  If x_4 < x_5
  Then {
    Let x_10 = x_2 + (q * (a_1 - b)).
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (((p_1 * x) + (r_1 * x_10)) = a_1) /\ (((q * x) + (s * x_10)) = b).
    Have: (a + b) = a_1.
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_11 = x_2 + (q * (b_1 - b)).
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((a + b) = b_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        (((q_1 * x) + (s_1 * x_11)) = b_1) /\
        ((b + (x * (q_1 - q)) + ((s_1 - s) * x_11)) = b_1).
  }
  (* Invariant *)
  Have: (a * r) = x_1.
}
Prove: ((a * p) + (b * q)) = x.
Prover Z3 4.8.12 returns Timeout (Qed:59ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:59ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 21):
Let x = a * q.
Let x_1 = a * p.
Let x_2 = b * q.
Let x_3 = x_1 + x_2.
Let x_4 = b * s.
Let x_5 = x + x_4.
Let x_6 = (q_2 * x_3) + (s_2 * x_5).
Let x_7 = (p_2 * x_3) + (r_2 * x_5).
Let x_8 = r_2 * x_6.
Let x_9 = q_2 * x_7.
Let x_10 = p_2 * x_7.
Let x_11 = s_2 * x_6.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b) /\ is_sint32(b_1) /\
      is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x_3) /\ is_sint32(x_5) /\ is_sint32(x_7) /\ is_sint32(x_6).
  (* Pre-condition *)
  Have: 0 < x_3.
  (* Pre-condition *)
  Have: 0 < x_5.
  (* Invariant *)
  Have: 0 < (x_3 * x_5).
  (* Invariant *)
  Have: ((r_2 * x_7) + x_11) = x_5.
  (* Invariant *)
  Have: (x_9 + x_11) = x_5.
  (* Invariant *)
  Have: (x_10 + (q_2 * x_6)) = x_3.
  (* Invariant *)
  Have: (x_10 + x_8) = x_3.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: (p_2 * x_6) = (x + x_4 + x_9).
  (* Invariant *)
  Have: (0 < x_7) /\ (0 < x_6).
  (* Invariant *)
  Have: (s_2 * x_7) = (x_1 + x_2 + x_8).
  (* Invariant *)
  Have: 0 < (x_7 * x_6).
  (* Then *)
  Have: x_6 != x_7.
  If x_6 < x_7
  Then {
    Let x_12 = a_1 - b.
    Let x_13 = x_2 + (x_12 * (p_1 - q)).
    Let x_14 = x_4 + (q * x_12).
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        ((p + q) = p_1) /\ (((p_1 * x_13) + (r_1 * x_14)) = a_1) /\
        (((q * x_13) + (s * x_14)) = b).
    Have: (a + b) = a_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_15 = q_1 - p.
    Let x_16 = b_1 - b.
    Let x_17 = (b * x_15) + (p * x_16).
    Let x_18 = x_4 + (x_16 * x_15).
    Have: (p_2 = p) /\ (q_2 = q_1) /\ (s_2 = s_1) /\ ((a + b) = b_1) /\
        ((p + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        (((q_1 * x_17) + (s_1 * x_18)) = b_1) /\
        ((b + (p * x_17) + ((s_1 - s) * x_18)) = b_1).
  }
  (* Invariant *)
  Have: (a * r) = x.
}
Prove: (b * r) = x_2.
Prover Z3 4.8.12 returns Timeout (Qed:62ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:62ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 22):
Let x = b * r.
Let x_1 = a * q.
Let x_2 = a * p.
Let x_3 = x_2 + x.
Let x_4 = b * s.
Let x_5 = x_1 + x_4.
Let x_6 = (q_2 * x_3) + (s_2 * x_5).
Let x_7 = (p_2 * x_3) + (r_2 * x_5).
Let x_8 = r_2 * x_6.
Let x_9 = q_2 * x_7.
Let x_10 = p_2 * x_7.
Let x_11 = s_2 * x_6.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b) /\ is_sint32(b_1) /\
      is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x_3) /\ is_sint32(x_5) /\ is_sint32(x_7) /\ is_sint32(x_6).
  (* Pre-condition *)
  Have: 0 < x_3.
  (* Pre-condition *)
  Have: 0 < x_5.
  (* Invariant *)
  Have: 0 < (x_3 * x_5).
  (* Invariant *)
  Have: ((r_2 * x_7) + x_11) = x_5.
  (* Invariant *)
  Have: (x_9 + x_11) = x_5.
  (* Invariant *)
  Have: (x_10 + (q_2 * x_6)) = x_3.
  (* Invariant *)
  Have: (x_10 + x_8) = x_3.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: (p_2 * x_6) = (x_1 + x_4 + x_9).
  (* Invariant *)
  Have: (0 < x_7) /\ (0 < x_6).
  (* Invariant *)
  Have: (s_2 * x_7) = (x_2 + x + x_8).
  (* Invariant *)
  Have: 0 < (x_7 * x_6).
  (* Then *)
  Have: x_6 != x_7.
  If x_6 < x_7
  Then {
    Let x_12 = a_1 - b.
    Let x_13 = (b * (r_1 - s)) + (x_12 * (p_1 - q)).
    Let x_14 = x_4 + (q * x_12).
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (((p_1 * x_13) + (r_1 * x_14)) = a_1) /\
        (((q * x_13) + (s * x_14)) = b).
    Have: (a + b) = a_1.
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_15 = s_1 - s.
    Let x_16 = b_1 - b.
    Let x_17 = q_1 - q.
    Let x_18 = (b * x_15) + (x_16 * x_17).
    Let x_19 = x_4 + (q * x_16).
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((a + b) = b_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        (((q_1 * x_18) + (s_1 * x_19)) = b_1) /\
        ((b + (x_17 * x_18) + (x_15 * x_19)) = b_1).
  }
  (* Invariant *)
  Have: (a * r) = x_1.
  (* Invariant *)
  Have: x = (b * q).
}
Prove: (p * s) = (1 + (q * r)).
Prover Z3 4.8.12 returns Timeout (Qed:71ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:71ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 23):
Let x = s - r.
Let x_1 = q - p.
Let x_2 = b * r.
Let x_3 = b_1 - b.
Let x_4 = x_3 * x_1.
Let x_5 = p * x_3.
Let x_6 = x_2 + x_5.
Let x_7 = b * x.
Let x_8 = x_7 + x_4.
Let x_9 = p * x_6.
Let x_10 = r * x_8.
Let x_11 = x_9 + x_10.
Let x_12 = b_1 * r.
Let x_13 = q * x_11.
Let x_14 = p * x_11.
Let x_15 = b_1 * s.
Assume {
  Type: is_sint32(b) /\ is_sint32(b_1) /\ is_sint32(p) /\ is_sint32(q) /\
      is_sint32(r) /\ is_sint32(s) /\ is_sint32(x_3) /\ is_sint32(x_1) /\
      is_sint32(x) /\ is_sint32(x_6) /\ is_sint32(x_8) /\ is_sint32(x_11).
  (* Residual *)
  When: x_11 <= b_1.
  (* Pre-condition *)
  Have: 0 < x_6.
  (* Pre-condition *)
  Have: 0 < x_8.
  (* Invariant *)
  Have: 0 < (x_6 * x_8).
  (* Invariant *)
  Have: (x_15 + (r * x_11)) = x_8.
  (* Invariant *)
  Have: (x_15 + x_13) = x_8.
  (* Invariant *)
  Have: ((b_1 * q) + x_14) = x_6.
  (* Invariant *)
  Have: (x_12 + x_14) = x_6.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: (b_1 * p) = (x_7 + x_4 + x_13).
  (* Invariant *)
  Have: (0 < b_1) /\ (0 < x_11).
  (* Invariant *)
  Have: (s * x_11) = (x_2 + x_12 + x_5).
  (* Invariant *)
  Have: 0 < (b_1 * x_11).
  (* Then *)
  Have: x_11 != b_1.
  Have: (((q * x_6) + (s * x_8)) = b_1) /\ ((b + x_9 + x_10) = b_1).
  (* Invariant *)
  Have: x_4 = (r * x_3).
  (* Invariant *)
  Have: (b * x_1) = x_2.
  (* Invariant *)
  Have: (p * x) = (1 + (r * x_1)).
}
Prove: ((x_1 * x_6) + (x * x_8)) = b.
Prover Z3 4.8.12 returns Valid (Qed:68ms) (20ms) (45782)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.88ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 25):
Let x_1 = a * p.
Let x_2 = (q * x) + (s * y).
Let x_3 = a * q.
Let x_4 = s * x_2.
Let x_5 = (q_1 * x) + (s_1 * y).
Let x_6 = (p_1 * x) + (r_1 * y).
Let x_7 = r_1 * x_5.
Let x_8 = q_1 * x_6.
Let x_9 = p_1 * x_6.
Let x_10 = s_1 * x_5.
Assume {
  Type: is_sint32(a) /\ is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(r) /\ is_sint32(r_1) /\ is_sint32(s) /\
      is_sint32(s_1) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_6) /\
      is_sint32(x_2) /\ is_sint32(x_5).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: 0 < (x * y).
  (* Invariant *)
  Have: ((r_1 * x_6) + x_10) = y.
  (* Invariant *)
  Have: (x_8 + x_10) = y.
  (* Invariant *)
  Have: (x_9 + (q_1 * x_5)) = x.
  (* Invariant *)
  Have: (x_9 + x_7) = x.
  (* Invariant *)
  Have: (p_1 * s_1) = (1 + (q_1 * r_1)).
  (* Invariant *)
  Have: (p_1 * x_5) = (y + x_8).
  (* Invariant *)
  Have: (0 < x_6) /\ (0 < x_5).
  (* Invariant *)
  Have: (s_1 * x_6) = (x + x_7).
  (* Invariant *)
  Have: 0 < (x_6 * x_5).
  (* Then *)
  Have: x_5 != x_6.
  If x_5 < x_6
  Then {
    Have: (q_1 = q) /\ (s_1 = s).
    Have: (a + (q * x) + (s * y)) = x_6.
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_11 = x * (q_1 - p).
    Let x_12 = y * (s_1 - r).
    Have: (p_1 = p) /\ (r_1 = r) /\ ((p + q) = q_1) /\ ((r + s) = s_1) /\
        ((a + x_11 + x_12) = x_5) /\
        (((p * x) + (r * y) + x_11 + x_12) = x_5).
  }
  (* Invariant *)
  Have: ((a * r) + x_4) = y.
  (* Invariant *)
  Have: (x_3 + x_4) = y.
  (* Invariant *)
  Have: (x_1 + (q * x_2)) = x.
  (* Invariant *)
  Have: (x_1 + (r * x_2)) = x.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
}
Prove: (p * x_2) = (y + x_3).
Prover Z3 4.8.12 returns Timeout (Qed:55ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:55ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 26):
Let x = q - p.
Let x_1 = b * r.
Let x_2 = b_1 - b.
Let x_3 = p * x_2.
Let x_4 = x_1 + x_3.
Let x_5 = s - r.
Let x_6 = x_2 * x.
Let x_7 = b * p.
Let x_8 = x_7 - x_6.
Let x_9 = b * x_5.
Let x_10 = p * x_4.
Let x_11 = r * x_8.
Let x_12 = x_10 + x_11.
Let x_13 = b_1 * r.
Let x_14 = q * x_12.
Let x_15 = p * x_12.
Let x_16 = b_1 * s.
Assume {
  Type: is_sint32(b) /\ is_sint32(b_1) /\ is_sint32(p) /\ is_sint32(q) /\
      is_sint32(r) /\ is_sint32(s) /\ is_sint32(x_2) /\ is_sint32(x) /\
      is_sint32(x_5) /\ is_sint32(x_4) /\ is_sint32(x_8) /\ is_sint32(x_12).
  (* Residual *)
  When: x_12 <= b_1.
  (* Pre-condition *)
  Have: 0 < x_4.
  (* Pre-condition *)
  Have: x_6 < x_7.
  (* Invariant *)
  Have: 0 < (x_4 * x_8).
  (* Invariant *)
  Have: x_7 = (x_16 + x_6 + (r * x_12)).
  (* Invariant *)
  Have: x_7 = (x_16 + x_6 + x_14).
  (* Invariant *)
  Have: ((b_1 * q) + x_15) = x_4.
  (* Invariant *)
  Have: (x_13 + x_15) = x_4.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: (x_7 + x_14) = ((b_1 * p) + x_6).
  (* Invariant *)
  Have: (0 < b_1) /\ (0 < x_12).
  (* Invariant *)
  Have: (s * x_12) = (x_1 + x_13 + x_3).
  (* Invariant *)
  Have: 0 < (b_1 * x_12).
  (* Then *)
  Have: x_12 != b_1.
  Have: (((q * x_4) + (s * x_8)) = b_1) /\ ((b + x_10 + x_11) = b_1).
  (* Invariant *)
  Have: x_7 = (x_9 + (r * x_2) + x_6).
  (* Invariant *)
  Have: x_7 = (x_9 + (2 * x_6)).
  (* Invariant *)
  Have: (b * x) = x_1.
  (* Invariant *)
  Have: (p * x_5) = (1 + (r * x)).
  (* Invariant *)
  Have: ((x * x_4) + (x_5 * x_8)) = b.
}
Prove: (0 < b) /\ (b < b_1).
Prover Z3 4.8.12 returns Valid (Qed:64ms) (20ms) (43312)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 29):
Let x = p - q.
Let x_1 = r - s.
Let x_2 = b * x_1.
Let x_3 = b * q.
Let x_4 = b * x.
Let x_5 = a - b.
Let x_6 = q * x_5.
Let x_7 = b * s.
Let x_8 = x_5 * x.
Let x_9 = x_2 + x_8.
Let x_10 = x_4 - x_6.
Let x_11 = b * r.
Let x_12 = a * q.
Let x_13 = a * p.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(p) /\ is_sint32(q) /\
      is_sint32(r) /\ is_sint32(s) /\ is_sint32(x_5) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_9) /\ is_sint32(x_10).
  (* Residual *)
  When: b < a.
  (* Pre-condition *)
  Have: 0 < x_9.
  (* Pre-condition *)
  Have: x_6 < x_4.
  (* Invariant *)
  Have: 0 < (x_9 * x_10).
  (* Invariant *)
  Have: x_4 = ((a * r) + x_7 + x_6).
  (* Invariant *)
  Have: x_4 = (x_12 + x_7 + x_6).
  (* Invariant *)
  Have: x_9 = (x_13 + x_3).
  (* Invariant *)
  Have: x_9 = (x_13 + x_11).
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: ((b * p) + x_6) = (x_12 + x_4).
  (* Invariant *)
  Have: (0 < a) /\ (0 < b).
  (* Invariant *)
  Have: (a * s) = (x_11 + x_2 + x_8).
  (* Invariant *)
  Have: 0 < (a * b).
  Have: (((p * x_9) + (r * x_10)) = a) /\ (((q * x_9) + (s * x_10)) = b).
  (* Invariant *)
  Have: x_4 = (x_7 + x_6 + (x_5 * x_1)).
  (* Invariant *)
  Have: x_4 = (x_7 + (2 * x_6)).
  (* Invariant *)
  Have: x_2 = x_3.
  (* Invariant *)
  Have: (s * x) = (1 + (q * x_1)).
}
Prove: (b + (x * x_9) + (x_1 * x_10)) = a.
Prover Z3 4.8.12 returns Valid (Qed:66ms) (10ms) (41135)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 31):
Let x_1 = (p * x) + (r * y).
Let x_2 = (q * x) + (s * y).
Let x_3 = q * x_1.
Let x_4 = p * x_1.
Let x_5 = r * x_2.
Let x_6 = s * x_2.
Let x_7 = (q_2 * x) + (s_2 * y).
Let x_8 = (p_2 * x) + (r_2 * y).
Let x_9 = r_2 * x_7.
Let x_10 = q_2 * x_8.
Let x_11 = p_2 * x_8.
Let x_12 = s_2 * x_7.
Assume {
  Type: is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_1) /\ is_sint32(x_8) /\
      is_sint32(x_2) /\ is_sint32(x_7).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: 0 < (x * y).
  (* Invariant *)
  Have: ((r_2 * x_8) + x_12) = y.
  (* Invariant *)
  Have: (x_10 + x_12) = y.
  (* Invariant *)
  Have: (x_11 + (q_2 * x_7)) = x.
  (* Invariant *)
  Have: (x_11 + x_9) = x.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: (p_2 * x_7) = (y + x_10).
  (* Invariant *)
  Have: (0 < x_8) /\ (0 < x_7).
  (* Invariant *)
  Have: (s_2 * x_8) = (x + x_9).
  (* Invariant *)
  Have: 0 < (x_8 * x_7).
  (* Then *)
  Have: x_7 != x_8.
  If x_7 < x_8
  Then {
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (((q * x) + (s * y) + (x * (p_1 - q)) + (y * (r_1 - s)))
           = ((p_1 * x) + (r_1 * y))).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        (((q * x) + (s * y) + (x * (q_1 - q)) + (y * (s_1 - s)))
           = ((q_1 * x) + (s_1 * y))).
  }
  (* Invariant *)
  Have: ((r * x_1) + x_6) = y.
  (* Invariant *)
  Have: (x_3 + x_6) = y.
  (* Invariant *)
  Have: (x_4 + (q * x_2)) = x.
  (* Invariant *)
  Have: (x_4 + x_5) = x.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: (p * x_2) = (y + x_3).
  (* Invariant *)
  Have: (0 < x_1) /\ (0 < x_2).
}
Prove: (s * x_1) = (x + x_5).
Prover Z3 4.8.12 returns Timeout (Qed:65ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:65ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 36):
Let x = b * r.
Let x_1 = a * s.
Let x_2 = x_1 - x.
Let x_3 = a * q.
Let x_4 = b * p.
Let x_5 = x_4 - x_3.
Let x_6 = a * p.
Let x_7 = b * s.
Let x_8 = (q_2 * x_2) + (s_2 * x_5).
Let x_9 = (p_2 * x_2) + (r_2 * x_5).
Let x_10 = r_2 * x_8.
Let x_11 = q_2 * x_9.
Let x_12 = p_2 * x_9.
Let x_13 = s_2 * x_8.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b) /\ is_sint32(b_1) /\
      is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x_5) /\ is_sint32(x_2) /\ is_sint32(x_9) /\ is_sint32(x_8).
  (* Pre-condition *)
  Have: x < x_1.
  (* Pre-condition *)
  Have: x_3 < x_4.
  (* Invariant *)
  Have: 0 < (x_5 * x_2).
  (* Invariant *)
  Have: x_4 = (x_3 + (r_2 * x_9) + x_13).
  (* Invariant *)
  Have: x_4 = (x_3 + x_11 + x_13).
  (* Invariant *)
  Have: x_1 = (x + x_12 + (q_2 * x_8)).
  (* Invariant *)
  Have: x_1 = (x + x_12 + x_10).
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: (x_4 + x_11) = (x_3 + (p_2 * x_8)).
  (* Invariant *)
  Have: (0 < x_9) /\ (0 < x_8).
  (* Invariant *)
  Have: (x + (s_2 * x_9)) = (x_1 + x_10).
  (* Invariant *)
  Have: 0 < (x_9 * x_8).
  (* Then *)
  Have: x_8 != x_9.
  If x_8 < x_9
  Then {
    Let x_14 = a_1 - b.
    Let x_15 = (s * x_14) - (b * (r_1 - s)).
    Let x_16 = (b * (p_1 - q)) - (q * x_14).
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (((p_1 * x_15) + (r_1 * x_16)) = a_1) /\
        (((q * x_15) + (s * x_16)) = b).
    Have: (a + b) = a_1.
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_17 = s_1 - s.
    Let x_18 = b_1 - b.
    Let x_19 = (s * x_18) - (b * x_17).
    Let x_20 = q_1 - q.
    Let x_21 = (b * x_20) - (q * x_18).
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((a + b) = b_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        (((q_1 * x_19) + (s_1 * x_21)) = b_1) /\
        ((b + (x_20 * x_19) + (x_17 * x_21)) = b_1).
  }
  (* Invariant *)
  Have: x_4 = (x_3 + (a * r) + x_7).
  (* Invariant *)
  Have: x_4 = (x_7 + (2 * x_3)).
  (* Invariant *)
  Have: x_1 = (x_6 + (b * q) + x).
  (* Invariant *)
  Have: x_1 = (x_6 + (2 * x)).
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: ((q * x_2) + (s * x_5)) = b.
  (* Invariant *)
  Have: (0 < a) /\ (0 < b).
  (* Invariant *)
  Have: ((p * x_2) + (r * x_5)) = a.
}
Prove: 0 < (a * b).
Prover Z3 4.8.12 returns Valid (Qed:81ms) (20ms) (53546)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 36):
Assume {
  Type: is_sint32(a) /\ is_sint32(b).
  (* Pre-condition *)
  Have: 0 < a.
  (* Pre-condition *)
  Have: 0 < b.
}
Prove: 0 < (a * b).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (4ms) (16)

------------------------------------------------------------

Goal Assertion (file out/7_0002/7_merged.c, line 57):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/7_0002/7_merged.c, line 58):
Let x_1 = (q * x) + (s * y).
Let x_2 = s * x_1.
Let x_3 = r * x_1.
Let x_4 = p * x_1.
Let x_5 = q * x_1.
Assume {
  Type: is_sint32(p) /\ is_sint32(q) /\ is_sint32(r) /\ is_sint32(s) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: 0 < (x * y).
  (* Invariant *)
  Have: (x_3 + x_2) = y.
  (* Invariant *)
  Have: (x_5 + x_2) = y.
  (* Invariant *)
  Have: (x_4 + x_5) = x.
  (* Invariant *)
  Have: (x_4 + x_3) = x.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: x_4 = (y + x_5).
  (* Invariant *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: x_1 = ((p * x) + (r * y)).
  (* Invariant *)
  Have: x_2 = (x + x_3).
  (* Invariant *)
  Have: 0 < (x_1 * x_1).
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/7_0002/7_merged.c, line 37):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/7_0002/7_merged.c:5: Warning: 
  No 'assigns' specification for function 'main7'.
  Callers assumptions might be imprecise.

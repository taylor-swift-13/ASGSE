[kernel] Parsing out/11_0004/11_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/11_0004/11_merged.c:28: Warning: 
  Body of function main11 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 26 goals scheduled
[wp] [Timeout] typed_main11_loop_invariant_6_preserved (Qed 10ms) (Alt-Ergo)
[wp] [Timeout] typed_main11_loop_invariant_6_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_main11_loop_invariant_7_preserved (Qed 11ms) (Alt-Ergo)
[wp] [Timeout] typed_main11_loop_invariant_7_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_main11_loop_invariant_8_preserved (Qed 7ms) (Alt-Ergo)
[wp] [Timeout] typed_main11_loop_invariant_8_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_main11_assert_missing_return (Qed 4ms) (Alt-Ergo)
[wp] Proved goals:   19 / 26
  Qed:              17
  Alt-Ergo 2.5.4:    2 (11ms-346ms)
  Timeout:           7
------------------------------------------------------------
  Function main11
------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0004/11_merged.c, line 12):
Let x_2 = x_1 * z.
Let x_3 = x - x_2.
Let r = real_of_int(x_3).
Let r_1 = real_of_int(z).
Let x_4 = z - 1.
Let r_2 = real_of_int(x_4).
Let x_5 = y * x_3.
Let x_6 = c - 1.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y) /\ is_sint32(z) /\ is_sint32(y * z) /\ is_sint32(x_3).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: ((z * x_3) / x_4) = 0.
  (* Invariant *)
  Have: (((x_3 * (0 / x_4)) = 0) -> (z = 1)).
  (* Invariant *)
  Have: ((r * (r_1 - 1.0)) / r_2) = r.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (x_1 + (y * z * x_3)) = x.
  (* Invariant *)
  Have: pow(r_1, real_of_int(x_6)) = real_of_int(y).
  (* Invariant *)
  Have: (x_5 + ((lxor(z, x_6) * x_3) / x_4)) = x_1.
  (* Invariant *)
  Have: (((x_5 + (x_3 * ((z * (y - 1)) / x_4))) = x_1) -> (z = y)).
  (* Invariant *)
  Have: ((r * (pow(r_1, real_of_int(c)) - 1.0)) / r_2) = real_of_int(x_1).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
}
Prove: (x * z) = (x_2 + (y * z * z * x_3)).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (11ms) (150)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0004/11_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0004/11_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0004/11_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0004/11_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0004/11_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0004/11_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0004/11_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0004/11_merged.c, line 16):
Let x_2 = x_1 * z.
Let x_3 = x - x_2.
Let r = real_of_int(x_3).
Let r_1 = real_of_int(z).
Let r_2 = pow(r_1, real_of_int(c)).
Let x_4 = z - 1.
Let r_3 = real_of_int(x_4).
Let x_5 = y * x_3.
Let x_6 = c - 1.
Let x_7 = y * z.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y) /\ is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x_7) /\
      is_sint32(x_3).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: ((z * x_3) / x_4) = 0.
  (* Invariant *)
  Have: (((x_3 * (0 / x_4)) = 0) -> (z = 1)).
  (* Invariant *)
  Have: ((r * (r_1 - 1.0)) / r_3) = r.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (x_1 + (y * z * x_3)) = x.
  (* Invariant *)
  Have: pow(r_1, real_of_int(x_6)) = real_of_int(y).
  (* Invariant *)
  Have: (x_5 + ((lxor(z, x_6) * x_3) / x_4)) = x_1.
  (* Invariant *)
  Have: (((x_5 + (x_3 * ((z * (y - 1)) / x_4))) = x_1) -> (z = y)).
  (* Invariant *)
  Have: ((r * (r_2 - 1.0)) / r_3) = real_of_int(x_1).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: (x * z) = (x_2 + (y * z * z * x_3)).
}
Prove: r_2 = real_of_int(x_7).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (346ms) (6917)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0004/11_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0004/11_merged.c, line 17):
Let r = real_of_int(z).
Let x_2 = y * z.
Let r_1 = real_of_int(x_2).
Let x_3 = x_1 * z.
Let x_4 = x - x_3.
Let r_2 = real_of_int(x_4).
Let x_5 = z - 1.
Let r_3 = real_of_int(x_5).
Let x_6 = y * x_4.
Let x_7 = c - 1.
Let x_8 = y * z * x_4.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y) /\ is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x_2) /\
      is_sint32(x_4).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: ((z * x_4) / x_5) = 0.
  (* Invariant *)
  Have: (((x_4 * (0 / x_5)) = 0) -> (z = 1)).
  (* Invariant *)
  Have: ((r_2 * (r - 1.0)) / r_3) = r_2.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (x_1 + x_8) = x.
  (* Invariant *)
  Have: pow(r, real_of_int(x_7)) = real_of_int(y).
  (* Invariant *)
  Have: (x_6 + ((lxor(z, x_7) * x_4) / x_5)) = x_1.
  (* Invariant *)
  Have: (((x_6 + (x_4 * ((z * (y - 1)) / x_5))) = x_1) -> (z = y)).
  (* Invariant *)
  Have: ((r_2 * (r_1 - 1.0)) / r_3) = real_of_int(x_1).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: (x * z) = (x_3 + (y * z * z * x_4)).
  (* Invariant *)
  Have: pow(r, real_of_int(c)) = r_1.
}
Prove: (x_8 + ((lxor(c, z) * x_4) / x_5)) = x.
Prover Z3 4.8.12 returns Failed
out of memory
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:10ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0004/11_merged.c, line 17):
Assume {
  Type: is_sint32(a) /\ is_sint32(k) /\ is_sint32(z).
  (* Pre-condition *)
  Have: (0 < k) /\ (0 <= z) /\ (k <= 10) /\ (z <= 10).
}
Prove: ((a * z) / (z - 1)) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0004/11_merged.c, line 18):
Let r = real_of_int(z).
Let x = y * z.
Let r_1 = real_of_int(x).
Let x_1 = a * y * z.
Let x_2 = z - 1.
Let x_3 = (a * lxor(c, z)) / x_2.
Let x_4 = x_1 + x_3.
Let x_5 = a * y.
Let x_6 = c - 1.
Let x_7 = (a * lxor(z, x_6)) / x_2.
Let x_8 = x_5 + x_7.
Let x_9 = a + (z * x_8).
Let r_2 = real_of_int(a).
Let r_3 = real_of_int(x_2).
Assume {
  Type: is_sint32(a) /\ is_sint32(c) /\ is_sint32(k) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x) /\ is_sint32(x_4) /\
      is_sint32(x_8).
  (* Goal *)
  When: x_3 = (a * ((z * (x - 1)) / x_2)).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: ((a * z) / x_2) = 0.
  (* Invariant *)
  Have: (((a * (0 / x_2)) = 0) -> (z = 1)).
  (* Invariant *)
  Have: ((r_2 * (r - 1.0)) / r_3) = r_2.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: x_9 = (x_5 + x_1 + x_7).
  (* Invariant *)
  Have: pow(r, real_of_int(x_6)) = real_of_int(y).
  (* Invariant *)
  Have: ((x_7 = (a * ((z * (y - 1)) / x_2))) -> (z = y)).
  (* Invariant *)
  Have: ((r_2 * (r_1 - 1.0)) / r_3) = real_of_int(x_8).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  Have: x_9 = x_4.
  (* Invariant *)
  Have: (a + (z * x_4)) = (x_1 + (a * y * z * z) + x_3).
  (* Invariant *)
  Have: pow(r, real_of_int(c)) = r_1.
}
Prove: x = z.
Prover Z3 4.8.12 returns Failed
out of memory
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:11ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0004/11_merged.c, line 18):
Let x = z - 1.
Assume {
  Type: is_sint32(a) /\ is_sint32(k) /\ is_sint32(z).
  (* Goal *)
  When: (a * (0 / x)) = 0.
  (* Pre-condition *)
  Have: (0 < k) /\ (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: ((a * z) / x) = 0.
}
Prove: z = 1.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0004/11_merged.c, line 19):
Let x = z - 1.
Let x_1 = (a * lxor(c, z)) / x.
Let x_2 = y * z.
Let r = real_of_int(z).
Let r_1 = real_of_int(x_2).
Let x_3 = a * y * z.
Let x_4 = x_3 + x_1.
Let x_5 = a * y.
Let x_6 = c - 1.
Let x_7 = (a * lxor(z, x_6)) / x.
Let x_8 = x_5 + x_7.
Let x_9 = a + (z * x_8).
Let r_2 = real_of_int(a).
Let r_3 = real_of_int(x).
Let x_10 = 1 + c.
Assume {
  Type: is_sint32(a) /\ is_sint32(c) /\ is_sint32(k) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(x_10) /\ is_sint32(x_2) /\ is_sint32(x_4) /\
      is_sint32(x_8).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: ((a * z) / x) = 0.
  (* Invariant *)
  Have: (((a * (0 / x)) = 0) -> (z = 1)).
  (* Invariant *)
  Have: ((r_2 * (r - 1.0)) / r_3) = r_2.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: x_9 = (x_5 + x_3 + x_7).
  (* Invariant *)
  Have: pow(r, real_of_int(x_6)) = real_of_int(y).
  (* Invariant *)
  Have: ((x_7 = (a * ((z * (y - 1)) / x))) -> (z = y)).
  (* Invariant *)
  Have: ((r_2 * (r_1 - 1.0)) / r_3) = real_of_int(x_8).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  Have: x_9 = x_4.
  (* Invariant *)
  Have: (a + (z * x_4)) = (x_3 + (a * y * z * z) + x_1).
  (* Invariant *)
  Have: pow(r, real_of_int(c)) = r_1.
  (* Invariant *)
  Have: ((x_1 = (a * ((z * (x_2 - 1)) / x))) -> (x_2 = z)).
}
Prove: ((r_2 * (pow(r, real_of_int(x_10)) - 1.0)) / r_3) = real_of_int(x_4).
Prover Z3 4.8.12 returns Failed
out of memory
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0004/11_merged.c, line 19):
Let x = z - 1.
Let r = real_of_int(a).
Assume {
  Type: is_sint32(a) /\ is_sint32(k) /\ is_sint32(z).
  (* Pre-condition *)
  Have: (0 < k) /\ (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: ((a * z) / x) = 0.
  (* Invariant *)
  Have: (((a * (0 / x)) = 0) -> (z = 1)).
}
Prove: ((r * (real_of_int(z) - 1.0)) / real_of_int(x)) = r.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0004/11_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0004/11_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0004/11_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0004/11_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0004/11_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0004/11_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0004/11_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0004/11_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/11_0004/11_merged.c, line 35):
Let r = real_of_int(a).
Let r_1 = real_of_int(z).
Let x = z - 1.
Let r_2 = real_of_int(x).
Let x_1 = a * y.
Let x_2 = c - 1.
Let x_3 = (a * lxor(z, x_2)) / x.
Let x_4 = x_1 + x_3.
Assume {
  Type: is_sint32(a) /\ is_sint32(c) /\ is_sint32(k) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(x_4).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: ((a * z) / x) = 0.
  (* Invariant *)
  Have: (((a * (0 / x)) = 0) -> (z = 1)).
  (* Invariant *)
  Have: ((r * (r_1 - 1.0)) / r_2) = r.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (a + (z * x_4)) = (x_1 + (a * y * z) + x_3).
  (* Invariant *)
  Have: pow(r_1, real_of_int(x_2)) = real_of_int(y).
  (* Invariant *)
  Have: ((x_3 = (a * ((z * (y - 1)) / x))) -> (z = y)).
  (* Invariant *)
  Have: ((r * (pow(r_1, real_of_int(c)) - 1.0)) / r_2) = real_of_int(x_4).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Else *)
  Have: k <= c.
}
Prove: false.
Prover Z3 4.8.12 returns Failed
out of memory
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/11_0004/11_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/11_0004/11_merged.c:4: Warning: 
  No 'assigns' specification for function 'main11'.
  Callers assumptions might be imprecise.

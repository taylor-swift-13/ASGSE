[kernel] Parsing out/17_0003/17_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/17_0003/17_merged.c:30: Warning: 
  Body of function main17 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 28 goals scheduled
[wp] [Timeout] typed_main17_loop_invariant_2_preserved (Qed 4ms) (Z3)
[wp] [Timeout] typed_main17_assert_missing_return (Qed 3ms) (Z3)
[wp] Proved goals:   26 / 28
  Qed:            19
  Z3 4.8.12:       7 (10ms-30ms)
  Timeout:         2
------------------------------------------------------------
  Function main17
------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0003/17_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0003/17_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0003/17_merged.c, line 14):
Let x = c * c * c * c.
Let x_1 = c - 1.
Let x_2 = c * c * c * x_1.
Let x_3 = x_2 / 4.
Let x_4 = c / 2.
Let x_5 = 1 + c.
Let x_6 = (x_5 * x_5 * x_5) + x_3.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x_5) /\ is_sint32(x_3) /\
      is_sint32(x_6).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_3 = (x / 4).
  (* Invariant *)
  Have: x_3 = (c * c * c * (1 + x_4)).
  (* Invariant *)
  Have: ((c * c * c * x_5) / 4) = x_3.
  (* Invariant *)
  Have: x_3 = (c * c * c * (c - (c / 4))).
  (* Invariant *)
  Have: x_3 = ((x_2 / 2) + (c * c * c * (c - x_4))).
  (* Invariant *)
  Have: x_3 = ((c * x_1) + (x_2 / 3) + ((c * c * (c - 2) * x_1) / 6)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: ((c * c) + (2 * (c * c * c)) + x) = (4 * x_3).
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
}
Prove: ((x_5 * x_5 * x_5 * x_5) / 4) = x_6.
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0003/17_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0003/17_merged.c, line 15):
Let x = 1 + c.
Let x_1 = x * x * x.
Let x_2 = c * c * c * c.
Let x_3 = (x * x * x * x) / 4.
Let x_4 = c - 1.
Let x_5 = c * c * c * x_4.
Let x_6 = c / 2.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_3 - x_1).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_3 = (x_1 + (x_2 / 4)).
  (* Invariant *)
  Have: x_3 = (x_1 + (c * c * c * (1 + x_6))).
  (* Invariant *)
  Have: x_3 = (x_1 + ((c * c * c * x) / 4)).
  (* Invariant *)
  Have: x_3 = (x_1 + (c * c * c * (c - (c / 4)))).
  (* Invariant *)
  Have: x_3 = (x_1 + (x_5 / 2) + (c * c * c * (c - x_6))).
  (* Invariant *)
  Have: x_3 = ((c * x_4) + x_1 + (x_5 / 3) + ((c * c * (c - 2) * x_4) / 6)).
  (* Invariant *)
  Have: x_3 = (x_1 + (x_5 / 4)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: ((c * c) + (2 * (c * c * c)) + x_2 + (4 * x_1)) = (4 * x_3).
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
}
Prove: x_3 = (x * x * x * (1 + (x / 2))).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (53975)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0003/17_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0003/17_merged.c, line 16):
Let x = 1 + c.
Let x_1 = x * x * x * (1 + (x / 2)).
Let x_2 = x * x * x.
Let x_3 = c * c * c * c.
Let x_4 = c - 1.
Let x_5 = c * c * c * x_4.
Let x_6 = c / 2.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_1 - x_2).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_1 = (x_2 + (x_3 / 4)).
  (* Invariant *)
  Have: x_1 = (x_2 + (c * c * c * (1 + x_6))).
  (* Invariant *)
  Have: x_1 = (x_2 + ((c * c * c * x) / 4)).
  (* Invariant *)
  Have: x_1 = (x_2 + (c * c * c * (c - (c / 4)))).
  (* Invariant *)
  Have: x_1 = (x_2 + (x_5 / 2) + (c * c * c * (c - x_6))).
  (* Invariant *)
  Have: x_1 = ((c * x_4) + x_2 + (x_5 / 3) + ((c * c * (c - 2) * x_4) / 6)).
  (* Invariant *)
  Have: x_1 = (x_2 + (x_5 / 4)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: ((c * c) + (2 * (c * c * c)) + x_3 + (4 * x_2)) = (4 * x_1).
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: ((x * x * x * x) / 4) = x_1.
}
Prove: ((x * x * x * (2 + c)) / 4) = x_1.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (64141)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0003/17_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0003/17_merged.c, line 17):
Let x = 1 + c.
Let x_1 = (x * x * x * (2 + c)) / 4.
Let x_2 = x * x * x.
Let x_3 = c * c * c * c.
Let x_4 = c - 1.
Let x_5 = c * c * c * x_4.
Let x_6 = c / 2.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_1 - x_2).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_1 = (x_2 + (x_3 / 4)).
  (* Invariant *)
  Have: x_1 = (x_2 + (c * c * c * (1 + x_6))).
  (* Invariant *)
  Have: x_1 = (x_2 + ((c * c * c * x) / 4)).
  (* Invariant *)
  Have: x_1 = (x_2 + (c * c * c * (c - (c / 4)))).
  (* Invariant *)
  Have: x_1 = (x_2 + (x_5 / 2) + (c * c * c * (c - x_6))).
  (* Invariant *)
  Have: x_1 = ((c * x_4) + x_2 + (x_5 / 3) + ((c * c * (c - 2) * x_4) / 6)).
  (* Invariant *)
  Have: x_1 = (x_2 + (x_5 / 4)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: ((c * c) + (2 * (c * c * c)) + x_3 + (4 * x_2)) = (4 * x_1).
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: x_1 = ((x * x * x * x) / 4).
  (* Invariant *)
  Have: x_1 = (x * x * x * (1 + (x / 2))).
}
Prove: x_1 = (x * x * x * (1 + c - (x / 4))).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (30ms) (58622)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0003/17_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.94ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0003/17_merged.c, line 18):
Let x = 1 + c.
Let x_1 = x * x * x * (1 + c - (x / 4)).
Let x_2 = x / 2.
Let x_3 = x * x * x.
Let x_4 = c * c * c * c.
Let x_5 = c - 1.
Let x_6 = c * c * c * x_5.
Let x_7 = c / 2.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_1 - x_3).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_1 = (x_3 + (x_4 / 4)).
  (* Invariant *)
  Have: x_1 = (x_3 + (c * c * c * (1 + x_7))).
  (* Invariant *)
  Have: x_1 = (x_3 + ((c * c * c * x) / 4)).
  (* Invariant *)
  Have: x_1 = (x_3 + (c * c * c * (c - (c / 4)))).
  (* Invariant *)
  Have: x_1 = (x_3 + (x_6 / 2) + (c * c * c * (c - x_7))).
  (* Invariant *)
  Have: x_1 = ((c * x_5) + x_3 + (x_6 / 3) + ((c * c * (c - 2) * x_5) / 6)).
  (* Invariant *)
  Have: x_1 = (x_3 + (x_6 / 4)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: ((c * c) + (2 * (c * c * c)) + x_4 + (4 * x_3)) = (4 * x_1).
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: ((x * x * x * x) / 4) = x_1.
  (* Invariant *)
  Have: x_1 = (x * x * x * (1 + x_2)).
  (* Invariant *)
  Have: ((x * x * x * (2 + c)) / 4) = x_1.
}
Prove: x_1 = (((c * x * x * x) / 2) + (x * x * x * (1 + c - x_2))).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (60731)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0003/17_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0003/17_merged.c, line 19):
Let x = 1 + c.
Let x_1 = x / 2.
Let x_2 = x * x * x * (1 + c - x_1).
Let x_3 = c * x * x * x.
Let x_4 = x_3 / 2.
Let x_5 = x_4 + x_2.
Let x_6 = x * x * x.
Let x_7 = c * c * c * c.
Let x_8 = c - 1.
Let x_9 = c * c * c * x_8.
Let x_10 = c / 2.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_5) /\
      is_sint32(x_4 + x_2 - x_6).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_5 = (x_6 + (x_7 / 4)).
  (* Invariant *)
  Have: x_5 = (x_6 + (c * c * c * (1 + x_10))).
  (* Invariant *)
  Have: x_5 = (x_6 + ((c * c * c * x) / 4)).
  (* Invariant *)
  Have: x_5 = (x_6 + (c * c * c * (c - (c / 4)))).
  (* Invariant *)
  Have: x_5 = (x_6 + (x_9 / 2) + (c * c * c * (c - x_10))).
  (* Invariant *)
  Have: x_5 = ((c * x_8) + x_6 + (x_9 / 3) + ((c * c * (c - 2) * x_8) / 6)).
  (* Invariant *)
  Have: x_5 = (x_6 + (x_9 / 4)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: ((4 * x_4) + (4 * x_2))
          = ((c * c) + (2 * (c * c * c)) + x_7 + (4 * x_6)).
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: ((x * x * x * x) / 4) = x_5.
  (* Invariant *)
  Have: (x * x * x * (1 + x_1)) = x_5.
  (* Invariant *)
  Have: ((x * x * x * (2 + c)) / 4) = x_5.
  (* Invariant *)
  Have: (x * x * x * (1 + c - (x / 4))) = x_5.
}
Prove: x_5 = ((c * x) + ((c * x_8 * x * x) / 6) + (x_3 / 3)).
Prover Z3 4.8.12 returns Valid (Qed:6ms) (20ms) (73530)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0003/17_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0003/17_merged.c, line 20):
Let x = 1 + y.
Let x_1 = x / 2.
Let x_2 = y * x * x * x.
Let x_3 = y * x.
Let x_4 = y - 1.
Let x_5 = (y * x_4 * x * x) / 6.
Let x_6 = x_2 / 3.
Let x_7 = x_3 + x_5 + x_6.
Let x_8 = x * x * x.
Let x_9 = y * y * y * y.
Let x_10 = y * y * y * x_4.
Let x_11 = y / 2.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_7) /\
      is_sint32(x_3 + x_5 + x_6 - x_8).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_7 = (x_8 + (x_9 / 4)).
  (* Invariant *)
  Have: x_7 = (x_8 + (y * y * y * (1 + x_11))).
  (* Invariant *)
  Have: x_7 = (x_8 + ((y * y * y * x) / 4)).
  (* Invariant *)
  Have: (x_8 + (y * y * y * (y - (y / 4)))) = x_7.
  (* Invariant *)
  Have: (x_8 + (x_10 / 2) + (y * y * y * (y - x_11))) = x_7.
  (* Invariant *)
  Have: ((y * x_4) + x_8 + (x_10 / 3) + ((y * y * (y - 2) * x_4) / 6)) = x_7.
  (* Invariant *)
  Have: x_7 = (x_8 + (x_10 / 4)).
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: ((4 * x_3) + (4 * x_5) + (4 * x_6))
          = ((y * y) + (2 * (y * y * y)) + x_9 + (4 * x_8)).
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y < k.
  (* Invariant *)
  Have: ((x * x * x * x) / 4) = x_7.
  (* Invariant *)
  Have: (x * x * x * (1 + x_1)) = x_7.
  (* Invariant *)
  Have: ((x * x * x * (2 + y)) / 4) = x_7.
  (* Invariant *)
  Have: (x * x * x * (1 + y - (x / 4))) = x_7.
  (* Invariant *)
  Have: ((x_2 / 2) + (x * x * x * (1 + y - x_1))) = x_7.
}
Prove: (x_2 / 4) = x_7.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (20ms) (68111)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0003/17_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0003/17_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0003/17_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0003/17_merged.c, line 22):
Let x = 1 + y.
Let x_1 = y * x * x * x.
Let x_2 = x_1 / 4.
Let x_3 = y - 1.
Let x_4 = x / 2.
Let x_5 = x * x * x * x.
Let x_6 = x * x * x.
Let x_7 = y * y * y * y.
Let x_8 = 4 * x_2.
Let x_9 = y * y * y * x_3.
Let x_10 = y / 2.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_2 - x_6).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_2 = (x_6 + (x_7 / 4)).
  (* Invariant *)
  Have: x_2 = (x_6 + (y * y * y * (1 + x_10))).
  (* Invariant *)
  Have: x_2 = (x_6 + ((y * y * y * x) / 4)).
  (* Invariant *)
  Have: x_2 = (x_6 + (y * y * y * (y - (y / 4)))).
  (* Invariant *)
  Have: x_2 = (x_6 + (x_9 / 2) + (y * y * y * (y - x_10))).
  (* Invariant *)
  Have: x_2 = ((y * x_3) + x_6 + (x_9 / 3) + ((y * y * (y - 2) * x_3) / 6)).
  (* Invariant *)
  Have: x_2 = (x_6 + (x_9 / 4)).
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: ((y * y) + (2 * (y * y * y)) + x_7 + (4 * x_6)) = x_8.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y < k.
  (* Invariant *)
  Have: (x_5 / 4) = x_2.
  (* Invariant *)
  Have: x_2 = (x * x * x * (1 + x_4)).
  (* Invariant *)
  Have: ((x * x * x * (2 + y)) / 4) = x_2.
  (* Invariant *)
  Have: x_2 = (x * x * x * (1 + y - (x / 4))).
  (* Invariant *)
  Have: x_2 = ((x_1 / 2) + (x * x * x * (1 + y - x_4))).
  (* Invariant *)
  Have: x_2 = ((y * x) + ((y * x_3 * x * x) / 6) + (x_1 / 3)).
}
Prove: ((x * x) + (2 * x_6) + x_5) = x_8.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (11551)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0003/17_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.98ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0003/17_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0003/17_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0003/17_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0003/17_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0003/17_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0003/17_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/17_0003/17_merged.c, line 36):
Let x = c * c * c * c.
Let x_1 = c - 1.
Let x_2 = c * c * c * x_1.
Let x_3 = x_2 / 4.
Let x_4 = c / 2.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x_3).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_3 = (x / 4).
  (* Invariant *)
  Have: x_3 = (c * c * c * (1 + x_4)).
  (* Invariant *)
  Have: ((c * c * c * (1 + c)) / 4) = x_3.
  (* Invariant *)
  Have: x_3 = (c * c * c * (c - (c / 4))).
  (* Invariant *)
  Have: x_3 = ((x_2 / 2) + (c * c * c * (c - x_4))).
  (* Invariant *)
  Have: x_3 = ((c * x_1) + (x_2 / 3) + ((c * c * (c - 2) * x_1) / 6)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: ((c * c) + (2 * (c * c * c)) + x) = (4 * x_3).
  (* Invariant *)
  Have: 0 <= c.
  (* Else *)
  Have: k <= c.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/17_0003/17_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/17_0003/17_merged.c:4: Warning: 
  No 'assigns' specification for function 'main17'.
  Callers assumptions might be imprecise.

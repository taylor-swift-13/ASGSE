[kernel] Parsing out/16_0002/16_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/16_0002/16_merged.c:28: Warning: 
  Body of function main16 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 24 goals scheduled
[wp] [Timeout] typed_main16_loop_invariant_3_preserved (Qed 4ms) (Z3)
[wp] [Timeout] typed_main16_assert_missing_return (Qed 2ms) (Z3)
[wp] Proved goals:   22 / 24
  Qed:            19
  Z3 4.8.12:       3 (10ms)
  Timeout:         2
------------------------------------------------------------
  Function main16
------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0002/16_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0002/16_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0002/16_merged.c, line 14):
Let x = 1 + y.
Let x_1 = 2 * y.
Let x_2 = (y * x * (1 + x_1)) / 6.
Let x_3 = (x * x) + x_2.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_3).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: ((y * y * (y - 1)) / 3) = 0.
  (* Invariant *)
  Have: x_2 = ((y * y * x) / 3).
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: (y + (3 * (y * y)) + (2 * (y * y * y))) = (6 * x_2).
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y < k.
}
Prove: (((y * x * x) / 3) + ((x * (2 + y) * (3 + x_1)) / 6)) = x_3.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (42352)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0002/16_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0002/16_merged.c, line 15):
Let x = 1 + y.
Let x_1 = (y * x * x) / 3.
Let x_2 = 2 + y.
Let x_3 = 2 * y.
Let x_4 = (x * x_2 * (3 + x_3)) / 6.
Let x_5 = x * x.
Let x_6 = x_1 + x_4.
Let x_7 = (y * x * (1 + x_3)) / 6.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_6) /\
      is_sint32(x_1 + x_4 - x_5).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: (x_5 + ((y * y * (y - 1)) / 3) + x_7) = x_6.
  (* Invariant *)
  Have: x_6 = (x_5 + ((y * y * x) / 3)).
  (* Invariant *)
  Have: x_6 = (x_5 + x_7).
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: ((6 * x_1) + (6 * x_4))
          = (y + (3 * (y * y)) + (2 * (y * y * y)) + (6 * x_5)).
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y < k.
}
Prove: ((x * x * x_2) / 3) = x_6.
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0002/16_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0002/16_merged.c, line 16):
Let x = 1 + y.
Let x_1 = 2 + y.
Let x_2 = (x * x * x_1) / 3.
Let x_3 = 2 * y.
Let x_4 = (x * x_1 * (3 + x_3)) / 6.
Let x_5 = x * x.
Let x_6 = (y * x * (1 + x_3)) / 6.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_2 - x_5).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_2 = (x_5 + ((y * y * (y - 1)) / 3) + x_6).
  (* Invariant *)
  Have: x_2 = (x_5 + ((y * y * x) / 3)).
  (* Invariant *)
  Have: x_2 = (x_5 + x_6).
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: (y + (3 * (y * y)) + (2 * (y * y * y)) + (6 * x_5)) = (6 * x_2).
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y < k.
  (* Invariant *)
  Have: x_2 = (((y * x * x) / 3) + x_4).
}
Prove: x_4 = x_2.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (41796)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0002/16_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0002/16_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0002/16_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.84ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0002/16_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0002/16_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0002/16_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0002/16_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0002/16_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0002/16_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0002/16_merged.c, line 21):
Let x = 1 + y.
Let x_1 = 2 + y.
Let x_2 = 2 * y.
Let x_3 = (x * x_1 * (3 + x_2)) / 6.
Let x_4 = x * x.
Let x_5 = 6 * x_3.
Let x_6 = (y * x * (1 + x_2)) / 6.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_3 - x_4).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_3 = (x_4 + ((y * y * (y - 1)) / 3) + x_6).
  (* Invariant *)
  Have: x_3 = (x_4 + ((y * y * x) / 3)).
  (* Invariant *)
  Have: x_3 = (x_4 + x_6).
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: (y + (3 * (y * y)) + (2 * (y * y * y)) + (6 * x_4)) = x_5.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y < k.
  (* Invariant *)
  Have: ((y * x * x) / 3) = 0.
  (* Invariant *)
  Have: x_3 = ((x * x * x_1) / 3).
}
Prove: (1 + y + (3 * x_4) + (2 * (x * x * x))) = x_5.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (10393)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0002/16_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.92ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0002/16_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0002/16_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.92ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0002/16_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0002/16_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/16_0002/16_merged.c, line 34):
Let x = 1 + c.
Let x_1 = (c * x * (1 + (2 * c))) / 6.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: ((c * c * (c - 1)) / 3) = 0.
  (* Invariant *)
  Have: x_1 = ((c * c * x) / 3).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: (c + (3 * (c * c)) + (2 * (c * c * c))) = (6 * x_1).
  (* Invariant *)
  Have: 0 <= c.
  (* Else *)
  Have: k <= c.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/16_0002/16_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/16_0002/16_merged.c:4: Warning: 
  No 'assigns' specification for function 'main16'.
  Callers assumptions might be imprecise.

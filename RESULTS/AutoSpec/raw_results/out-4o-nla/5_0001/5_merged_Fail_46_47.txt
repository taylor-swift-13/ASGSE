[kernel] Parsing out/5_0001/5_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/5_0001/5_merged.c:46: Warning: 
  Body of function main5 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 47 goals scheduled
[wp] [Timeout] typed_main5_loop_invariant_11_established (Qed 2ms) (Z3)
[wp] Proved goals:   46 / 47
  Qed:            31
  Z3 4.8.12:      15 (10ms-13ms-20ms)
  Timeout:         1
------------------------------------------------------------
  Function main5
------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0001/5_merged.c, line 17):
Let x_1 = i_2 * x.
Let x_2 = i_3 * y.
Let x_3 = x_1 + x_2.
Let x_4 = i * x.
Let x_5 = i_1 * y.
Let x_6 = x_4 + x_5.
Let x_7 = p * x.
Let x_8 = q * x_3.
Let x_9 = s_2 * x_3.
Let x_10 = i_6 * x.
Let x_11 = i_7 * y.
Let x_12 = i_4 * x.
Let x_13 = i_5 * y.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(p) /\ is_sint32(q) /\
      is_sint32(r) /\ is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\
      is_sint32(s_1) /\ is_sint32(s_2) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_6) /\ is_sint32(x_3).
  (* Invariant *)
  Have: (x_12 + x_13) = y.
  (* Invariant *)
  Have: (0 < x) /\ (0 < y).
  (* Invariant *)
  Have: (x_10 + x_11 + x_12 + x_13) = x.
  (* Invariant *)
  Have: (x_10 + x_11) = x.
  (* Invariant *)
  Have: ((y = x) -> (((x % y) + (y % x)) = x)).
  (* Invariant *)
  Have: forall i_8 : Z. ((x_10 + x_11 + (y * i_8)) = x) /\
      ((x_12 + x_13 + (x * i_8)) = y).
  (* Invariant *)
  Have: ((r_2 * x_6) + x_9) = y.
  (* Invariant *)
  Have: ((r_2 * x) + x_9) = y.
  (* Invariant *)
  Have: (x_7 + x_8) = x.
  (* Invariant *)
  Have: ((p * x_6) + x_8) = x.
  (* Invariant *)
  Have: (p * s_2) = (1 + (q * r_2)).
  (* Invariant *)
  Have: ((q * x) + (s_2 * y)) = x_3.
  (* Invariant *)
  Have: x_3 <= y.
  (* Invariant *)
  Have: (0 < x_6) /\ (0 < x_3).
  (* Invariant *)
  Have: (x_7 + (r_2 * y)) = x_6.
  (* Invariant *)
  Have: (x_4 + x_5 + (p * x_3)) = (x + (q * y)).
  (* Invariant *)
  Have: x_6 <= x.
  (* Invariant *)
  Have: forall i_8 : Z. ((x_4 + x_5 + (i_8 * x_3)) = x) /\
      ((x_1 + x_2 + (i_8 * x_6)) = y).
  (* Then *)
  Have: x_3 != x_6.
  If x_3 < x_6
  Then {
    Have: (r_2 = r_1) /\ (s_2 = s) /\ (x_3 = b).
    Have: (a + x_1 + x_2) = x_6.
    Have: (r + s) = r_1.
  }
  Else {
    Have: (s_2 = s_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\ (x_6 = a) /\
        ((b + x_4 + x_5) = x_3).
  }
}
Prove: ((a * r) + (b * s)) = y.
Prover Z3 4.8.12 returns Valid (Qed:51ms) (10ms) (43767)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0001/5_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0001/5_merged.c, line 18):
Let x_1 = i_2 * x.
Let x_2 = a * r.
Let x_3 = x_2 + (b * s).
Let x_4 = i_3 * x_3.
Let x_5 = x_1 + x_4.
Let x_6 = i * x.
Let x_7 = i_1 * x_3.
Let x_8 = x_6 + x_7.
Let x_9 = p * x.
Let x_10 = q * x_5.
Let x_11 = s_2 * x_5.
Let x_12 = i_6 * x.
Let x_13 = i_7 * x_3.
Let x_14 = i_4 * x.
Let x_15 = i_5 * x_3.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b) /\ is_sint32(b_1) /\
      is_sint32(p) /\ is_sint32(q) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x) /\ is_sint32(x_3) /\ is_sint32(x_8) /\ is_sint32(x_5).
  (* Invariant *)
  Have: (x_14 + x_15) = x_3.
  (* Invariant *)
  Have: (0 < x) /\ (0 < x_3).
  (* Invariant *)
  Have: (x_12 + x_14 + x_13 + x_15) = x.
  (* Invariant *)
  Have: (x_12 + x_13) = x.
  (* Invariant *)
  Have: ((x_3 = x) -> (((x % x_3) + (x_3 % x)) = x)).
  (* Invariant *)
  Have: forall i_8 : Z. ((x_12 + x_13 + (i_8 * x_3)) = x) /\
      ((x_14 + (x * i_8) + x_15) = x_3).
  (* Invariant *)
  Have: ((r_2 * x_8) + x_11) = x_3.
  (* Invariant *)
  Have: ((r_2 * x) + x_11) = x_3.
  (* Invariant *)
  Have: (x_9 + x_10) = x.
  (* Invariant *)
  Have: ((p * x_8) + x_10) = x.
  (* Invariant *)
  Have: (p * s_2) = (1 + (q * r_2)).
  (* Invariant *)
  Have: ((q * x) + (s_2 * x_3)) = x_5.
  (* Invariant *)
  Have: x_5 <= x_3.
  (* Invariant *)
  Have: (0 < x_8) /\ (0 < x_5).
  (* Invariant *)
  Have: (x_9 + (r_2 * x_3)) = x_8.
  (* Invariant *)
  Have: (x_6 + x_7 + (p * x_5)) = (x + (q * x_3)).
  (* Invariant *)
  Have: x_8 <= x.
  (* Invariant *)
  Have: forall i_8 : Z. ((x_6 + x_7 + (i_8 * x_5)) = x) /\
      ((x_1 + x_4 + (i_8 * x_8)) = x_3).
  (* Then *)
  Have: x_5 != x_8.
  If x_5 < x_8
  Then {
    Let x_16 = (b * s) + ((a_1 - b) * (r_1 - s)).
    Have: (r_2 = r_1) /\ (s_2 = s) /\ ((x_6 + (i_1 * x_16)) = a_1) /\
        ((x_1 + (i_3 * x_16)) = b).
    Have: (a + b) = a_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_17 = (b * s) + ((b_1 - b) * (s_1 - s)).
    Have: (s_2 = s_1) /\ ((a + b) = b_1) /\ ((r + s) = s_1) /\
        ((r_2 + s) = s_1) /\ ((x_1 + (i_3 * x_17)) = b_1) /\
        ((b + x_6 + (i_1 * x_17)) = b_1).
  }
}
Prove: (r * x) = x_2.
Prover Z3 4.8.12 returns Valid (Qed:71ms) (10ms) (47141)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0001/5_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0001/5_merged.c, line 19):
Let x_1 = r * x.
Let x_2 = i_2 * x.
Let x_3 = (b * s) + x_1.
Let x_4 = i_3 * x_3.
Let x_5 = x_2 + x_4.
Let x_6 = i * x.
Let x_7 = i_1 * x_3.
Let x_8 = x_6 + x_7.
Let x_9 = p_2 * x.
Let x_10 = q_2 * x_5.
Let x_11 = s_2 * x_5.
Let x_12 = i_6 * x.
Let x_13 = i_7 * x_3.
Let x_14 = i_4 * x.
Let x_15 = i_5 * x_3.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(p) /\ is_sint32(p_1) /\
      is_sint32(p_2) /\ is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\
      is_sint32(r) /\ is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\
      is_sint32(s_1) /\ is_sint32(s_2) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_8) /\ is_sint32(x_5).
  (* Invariant *)
  Have: (x_14 + x_15) = x_3.
  (* Invariant *)
  Have: (0 < x) /\ (0 < x_3).
  (* Invariant *)
  Have: (x_12 + x_14 + x_13 + x_15) = x.
  (* Invariant *)
  Have: (x_12 + x_13) = x.
  (* Invariant *)
  Have: ((x_3 = x) -> (((x % x_3) + (x_3 % x)) = x)).
  (* Invariant *)
  Have: forall i_8 : Z. ((x_12 + x_13 + (i_8 * x_3)) = x) /\
      ((x_14 + (x * i_8) + x_15) = x_3).
  (* Invariant *)
  Have: ((r_2 * x_8) + x_11) = x_3.
  (* Invariant *)
  Have: ((r_2 * x) + x_11) = x_3.
  (* Invariant *)
  Have: (x_9 + x_10) = x.
  (* Invariant *)
  Have: ((p_2 * x_8) + x_10) = x.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: ((q_2 * x) + (s_2 * x_3)) = x_5.
  (* Invariant *)
  Have: x_5 <= x_3.
  (* Invariant *)
  Have: (0 < x_8) /\ (0 < x_5).
  (* Invariant *)
  Have: (x_9 + (r_2 * x_3)) = x_8.
  (* Invariant *)
  Have: (x_6 + x_7 + (p_2 * x_5)) = (x + (q_2 * x_3)).
  (* Invariant *)
  Have: x_8 <= x.
  (* Invariant *)
  Have: forall i_8 : Z. ((x_6 + x_7 + (i_8 * x_5)) = x) /\
      ((x_2 + x_4 + (i_8 * x_8)) = x_3).
  (* Then *)
  Have: x_5 != x_8.
  If x_5 < x_8
  Then {
    Let x_16 = (b * s) + (x * (r_1 - s)).
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        ((x_2 + (i_3 * x_16)) = b).
    Have: (x_6 + (i_1 * x_16)) = (a + b).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_17 = x_1 + (b * (s_1 - r)).
    Let x_18 = x_2 + (i_3 * x_17).
    Have: (q_2 = q_1) /\ (r_2 = r) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ (x_18 = (a + b)) /\
        ((b + x_6 + (i_1 * x_17)) = x_18).
  }
  (* Invariant *)
  Have: x_1 = (a * r).
}
Prove: ((b * q) + (p * x)) = x.
Prover Z3 4.8.12 returns Valid (Qed:70ms) (20ms) (48636)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0001/5_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0001/5_merged.c, line 20):
Let x_1 = b * q.
Let x_2 = r * x.
Let x_3 = i_2 * x.
Let x_4 = (b * s) + x_2.
Let x_5 = i_3 * x_4.
Let x_6 = x_3 + x_5.
Let x_7 = i * x.
Let x_8 = i_1 * x_4.
Let x_9 = x_7 + x_8.
Let x_10 = p_2 * x.
Let x_11 = q_2 * x_6.
Let x_12 = s_2 * x_6.
Let x_13 = i_6 * x.
Let x_14 = i_7 * x_4.
Let x_15 = i_4 * x.
Let x_16 = i_5 * x_4.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(p) /\ is_sint32(p_1) /\
      is_sint32(p_2) /\ is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\
      is_sint32(r) /\ is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\
      is_sint32(s_1) /\ is_sint32(s_2) /\ is_sint32(x) /\ is_sint32(x_4) /\
      is_sint32(x_9) /\ is_sint32(x_6).
  (* Invariant *)
  Have: (x_15 + x_16) = x_4.
  (* Invariant *)
  Have: (0 < x) /\ (0 < x_4).
  (* Invariant *)
  Have: (x_13 + x_15 + x_14 + x_16) = x.
  (* Invariant *)
  Have: (x_13 + x_14) = x.
  (* Invariant *)
  Have: ((x_4 = x) -> (((x % x_4) + (x_4 % x)) = x)).
  (* Invariant *)
  Have: forall i_8 : Z. ((x_13 + x_14 + (i_8 * x_4)) = x) /\
      ((x_15 + (x * i_8) + x_16) = x_4).
  (* Invariant *)
  Have: ((r_2 * x_9) + x_12) = x_4.
  (* Invariant *)
  Have: ((r_2 * x) + x_12) = x_4.
  (* Invariant *)
  Have: (x_10 + x_11) = x.
  (* Invariant *)
  Have: ((p_2 * x_9) + x_11) = x.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: ((q_2 * x) + (s_2 * x_4)) = x_6.
  (* Invariant *)
  Have: x_6 <= x_4.
  (* Invariant *)
  Have: (0 < x_9) /\ (0 < x_6).
  (* Invariant *)
  Have: (x_10 + (r_2 * x_4)) = x_9.
  (* Invariant *)
  Have: (x_7 + x_8 + (p_2 * x_6)) = (x + (q_2 * x_4)).
  (* Invariant *)
  Have: x_9 <= x.
  (* Invariant *)
  Have: forall i_8 : Z. ((x_7 + x_8 + (i_8 * x_6)) = x) /\
      ((x_3 + x_5 + (i_8 * x_9)) = x_4).
  (* Then *)
  Have: x_6 != x_9.
  If x_6 < x_9
  Then {
    Let x_17 = (b * s) + (x * (r_1 - s)).
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        ((x_3 + (i_3 * x_17)) = b).
    Have: (x_7 + (i_1 * x_17)) = (a + b).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_18 = x_2 + (b * (s_1 - r)).
    Let x_19 = x_3 + (i_3 * x_18).
    Have: (q_2 = q_1) /\ (r_2 = r) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ (x_19 = (a + b)) /\
        ((b + x_7 + (i_1 * x_18)) = x_19).
  }
  (* Invariant *)
  Have: x_2 = (a * r).
  (* Invariant *)
  Have: (x_1 + (p * x)) = x.
}
Prove: ((a * p) + x_1) = x.
Prover Z3 4.8.12 returns Valid (Qed:83ms) (20ms) (49176)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0001/5_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0001/5_merged.c, line 21):
Let x = a * p.
Let x_1 = b * q.
Let x_2 = x + x_1.
Let x_3 = r * x_2.
Let x_4 = i_2 * x_2.
Let x_5 = (b * s) + x_3.
Let x_6 = i_3 * x_5.
Let x_7 = x_4 + x_6.
Let x_8 = i * x_2.
Let x_9 = i_1 * x_5.
Let x_10 = x_8 + x_9.
Let x_11 = p_2 * x_2.
Let x_12 = q_2 * x_7.
Let x_13 = s_2 * x_7.
Let x_14 = i_6 * x_2.
Let x_15 = i_7 * x_5.
Let x_16 = i_4 * x_2.
Let x_17 = i_5 * x_5.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b) /\ is_sint32(b_1) /\
      is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x_2) /\ is_sint32(x_5) /\ is_sint32(x_10) /\ is_sint32(x_7).
  (* Invariant *)
  Have: (x_16 + x_17) = x_5.
  (* Invariant *)
  Have: (0 < x_2) /\ (0 < x_5).
  (* Invariant *)
  Have: (x_14 + x_16 + x_15 + x_17) = x_2.
  (* Invariant *)
  Have: (x_14 + x_15) = x_2.
  (* Invariant *)
  Have: ((x_5 = x_2) -> (((x_2 % x_5) + (x_5 % x_2)) = x_2)).
  (* Invariant *)
  Have: forall i_8 : Z. ((x_14 + x_15 + (i_8 * x_5)) = x_2) /\
      ((x_16 + (i_8 * x_2) + x_17) = x_5).
  (* Invariant *)
  Have: ((r_2 * x_10) + x_13) = x_5.
  (* Invariant *)
  Have: ((r_2 * x_2) + x_13) = x_5.
  (* Invariant *)
  Have: (x_11 + x_12) = x_2.
  (* Invariant *)
  Have: ((p_2 * x_10) + x_12) = x_2.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: ((q_2 * x_2) + (s_2 * x_5)) = x_7.
  (* Invariant *)
  Have: x_7 <= x_5.
  (* Invariant *)
  Have: (0 < x_10) /\ (0 < x_7).
  (* Invariant *)
  Have: (x_11 + (r_2 * x_5)) = x_10.
  (* Invariant *)
  Have: (x_8 + x_9 + (p_2 * x_7)) = (x + x_1 + (q_2 * x_5)).
  (* Invariant *)
  Have: x_10 <= x_2.
  (* Invariant *)
  Have: forall i_8 : Z. ((x_8 + x_9 + (i_8 * x_7)) = x_2) /\
      ((x_4 + x_6 + (i_8 * x_10)) = x_5).
  (* Then *)
  Have: x_7 != x_10.
  If x_7 < x_10
  Then {
    Let x_18 = x_1 + ((a_1 - b) * (p_1 - q)).
    Let x_19 = (b * s) + ((r_1 - s) * x_18).
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (((i * x_18) + (i_1 * x_19)) = a_1) /\
        (((i_2 * x_18) + (i_3 * x_19)) = b).
    Have: (a + b) = a_1.
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_20 = x_1 + ((b_1 - b) * (q_1 - q)).
    Let x_21 = (b * s) + ((s_1 - s) * x_20).
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((a + b) = b_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        (((i_2 * x_20) + (i_3 * x_21)) = b_1) /\
        ((b + (i * x_20) + (i_1 * x_21)) = b_1).
  }
  (* Invariant *)
  Have: x_3 = (a * r).
  (* Invariant *)
  Have: (p * x_2) = x.
}
Prove: (p * s) = (1 + (q * r)).
Prover Z3 4.8.12 returns Valid (Qed:94ms) (10ms) (57183)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0001/5_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0001/5_merged.c, line 22):
Let x = s - r.
Let x_1 = q - p.
Let x_2 = b * x_1.
Let x_3 = b_1 - b.
Let x_4 = p * x_3.
Let x_5 = x_2 + x_4.
Let x_6 = r * x_5.
Let x_7 = i_6 * x_5.
Let x_8 = b * x.
Let x_9 = x_8 + x_6.
Let x_10 = i_7 * x_9.
Let x_11 = i * x_5.
Let x_12 = i_1 * x_9.
Let x_13 = x_11 + x_12.
Let x_14 = b_1 * q.
Let x_15 = b_1 * s.
Let x_16 = i_4 * x_5.
Let x_17 = i_5 * x_9.
Let x_18 = i_2 * x_5.
Let x_19 = i_3 * x_9.
Assume {
  Type: is_sint32(b) /\ is_sint32(b_1) /\ is_sint32(p) /\ is_sint32(q) /\
      is_sint32(r) /\ is_sint32(s) /\ is_sint32(x_3) /\ is_sint32(x_1) /\
      is_sint32(x) /\ is_sint32(x_5) /\ is_sint32(x_9) /\ is_sint32(x_13).
  (* Residual *)
  When: x_13 <= b_1.
  (* Invariant *)
  Have: (x_18 + x_19) = x_9.
  (* Invariant *)
  Have: (0 < x_5) /\ (0 < x_9).
  (* Invariant *)
  Have: (x_16 + x_18 + x_17 + x_19) = x_5.
  (* Invariant *)
  Have: (x_16 + x_17) = x_5.
  (* Invariant *)
  Have: ((x_9 = x_5) -> (((x_5 % x_9) + (x_9 % x_5)) = x_5)).
  (* Invariant *)
  Have: forall i_8 : Z. ((x_16 + x_17 + (i_8 * x_9)) = x_5) /\
      ((x_18 + (i_8 * x_5) + x_19) = x_9).
  (* Invariant *)
  Have: (x_15 + (r * x_13)) = x_9.
  (* Invariant *)
  Have: x_8 = x_15.
  (* Invariant *)
  Have: x_2 = x_14.
  (* Invariant *)
  Have: (x_14 + (p * x_13)) = x_5.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: ((q * x_5) + (s * x_9)) = b_1.
  (* Invariant *)
  Have: b_1 <= x_9.
  (* Invariant *)
  Have: (0 < b_1) /\ (0 < x_13).
  (* Invariant *)
  Have: x_13 = (x_4 + (r * x_9)).
  (* Invariant *)
  Have: (x_2 + x_4 + (q * x_9)) = ((b_1 * p) + x_11 + x_12).
  (* Invariant *)
  Have: x_13 <= x_5.
  (* Invariant *)
  Have: forall i_8 : Z. (((b_1 * i_8) + x_11 + x_12) = x_5) /\
      ((x_7 + x_10 + (i_8 * x_13)) = x_9).
  (* Then *)
  Have: x_13 != b_1.
  Have: ((x_7 + x_10) = b_1) /\ ((b + x_11 + x_12) = b_1).
  (* Invariant *)
  Have: x_6 = (r * x_3).
  (* Invariant *)
  Have: (p * x_5) = x_4.
  (* Invariant *)
  Have: (p * x) = (1 + (r * x_1)).
}
Prove: ((x_1 * x_5) + (x * x_9)) = b.
Prover Z3 4.8.12 returns Valid (Qed:75ms) (10ms) (55297)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0001/5_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0001/5_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0001/5_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.96ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0001/5_merged.c, line 24):
Let x_1 = (q * x) + (s * y).
Let x_2 = q * x_1.
Let x_3 = s * x_1.
Let x_4 = i_2 * x.
Let x_5 = i_3 * y.
Let x_6 = x_4 + x_5.
Let x_7 = i * x.
Let x_8 = i_1 * y.
Let x_9 = x_7 + x_8.
Let x_10 = p_2 * x.
Let x_11 = q_2 * x_6.
Let x_12 = s_2 * x_6.
Let x_13 = i_6 * x.
Let x_14 = i_7 * y.
Let x_15 = i_4 * x.
Let x_16 = i_5 * y.
Assume {
  Type: is_sint32(a) /\ is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\
      is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\
      is_sint32(s_2) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_9) /\
      is_sint32(x_6) /\ is_sint32(x_1).
  (* Invariant *)
  Have: (x_15 + x_16) = y.
  (* Invariant *)
  Have: (0 < x) /\ (0 < y).
  (* Invariant *)
  Have: (x_13 + x_14 + x_15 + x_16) = x.
  (* Invariant *)
  Have: (x_13 + x_14) = x.
  (* Invariant *)
  Have: ((y = x) -> (((x % y) + (y % x)) = x)).
  (* Invariant *)
  Have: forall i_8 : Z. ((x_13 + x_14 + (y * i_8)) = x) /\
      ((x_15 + x_16 + (x * i_8)) = y).
  (* Invariant *)
  Have: ((r_2 * x_9) + x_12) = y.
  (* Invariant *)
  Have: ((r_2 * x) + x_12) = y.
  (* Invariant *)
  Have: (x_10 + x_11) = x.
  (* Invariant *)
  Have: ((p_2 * x_9) + x_11) = x.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: ((q_2 * x) + (s_2 * y)) = x_6.
  (* Invariant *)
  Have: x_6 <= y.
  (* Invariant *)
  Have: (0 < x_9) /\ (0 < x_6).
  (* Invariant *)
  Have: (x_10 + (r_2 * y)) = x_9.
  (* Invariant *)
  Have: (x_7 + x_8 + (p_2 * x_6)) = (x + (q_2 * y)).
  (* Invariant *)
  Have: x_9 <= x.
  (* Invariant *)
  Have: forall i_8 : Z. ((x_7 + x_8 + (i_8 * x_6)) = x) /\
      ((x_4 + x_5 + (i_8 * x_9)) = y).
  (* Then *)
  Have: x_6 != x_9.
  If x_6 < x_9
  Then {
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (x_1 = x_6).
    Have: (a + (q * x) + (s * y)) = x_9.
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_17 = x * (q_1 - p).
    Let x_18 = y * (s_1 - r).
    Have: (p_2 = p) /\ (q_2 = q_1) /\ (r_2 = r) /\ (s_2 = s_1) /\
        ((p + q) = q_1) /\ ((r + s) = s_1) /\ ((a + x_17 + x_18) = x_6) /\
        ((x_7 + x_8 + x_17 + x_18) = x_6).
  }
  (* Invariant *)
  Have: ((a * r) + x_3) = y.
  (* Invariant *)
  Have: ((r * x) + x_3) = y.
  (* Invariant *)
  Have: ((p * x) + x_2) = x.
  (* Invariant *)
  Have: ((a * p) + x_2) = x.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
}
Prove: x_1 <= y.
Prover Z3 4.8.12 returns Valid (Qed:70ms) (10ms) (48334)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0001/5_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0001/5_merged.c, line 25):
Let x_1 = (q * x) + (s * y).
Let x_2 = q * x_1.
Let x_3 = s * x_1.
Let x_4 = i_2 * x.
Let x_5 = i_3 * y.
Let x_6 = x_4 + x_5.
Let x_7 = i * x.
Let x_8 = i_1 * y.
Let x_9 = x_7 + x_8.
Let x_10 = p_2 * x.
Let x_11 = q_2 * x_6.
Let x_12 = s_2 * x_6.
Let x_13 = i_6 * x.
Let x_14 = i_7 * y.
Let x_15 = i_4 * x.
Let x_16 = i_5 * y.
Assume {
  Type: is_sint32(a) /\ is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\
      is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\
      is_sint32(s_2) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_9) /\
      is_sint32(x_6) /\ is_sint32(x_1).
  (* Invariant *)
  Have: (x_15 + x_16) = y.
  (* Invariant *)
  Have: (0 < x) /\ (0 < y).
  (* Invariant *)
  Have: (x_13 + x_14 + x_15 + x_16) = x.
  (* Invariant *)
  Have: (x_13 + x_14) = x.
  (* Invariant *)
  Have: ((y = x) -> (((x % y) + (y % x)) = x)).
  (* Invariant *)
  Have: forall i_8 : Z. ((x_13 + x_14 + (y * i_8)) = x) /\
      ((x_15 + x_16 + (x * i_8)) = y).
  (* Invariant *)
  Have: ((r_2 * x_9) + x_12) = y.
  (* Invariant *)
  Have: ((r_2 * x) + x_12) = y.
  (* Invariant *)
  Have: (x_10 + x_11) = x.
  (* Invariant *)
  Have: ((p_2 * x_9) + x_11) = x.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: ((q_2 * x) + (s_2 * y)) = x_6.
  (* Invariant *)
  Have: x_6 <= y.
  (* Invariant *)
  Have: (0 < x_9) /\ (0 < x_6).
  (* Invariant *)
  Have: (x_10 + (r_2 * y)) = x_9.
  (* Invariant *)
  Have: (x_7 + x_8 + (p_2 * x_6)) = (x + (q_2 * y)).
  (* Invariant *)
  Have: x_9 <= x.
  (* Invariant *)
  Have: forall i_8 : Z. ((x_7 + x_8 + (i_8 * x_6)) = x) /\
      ((x_4 + x_5 + (i_8 * x_9)) = y).
  (* Then *)
  Have: x_6 != x_9.
  If x_6 < x_9
  Then {
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (x_1 = x_6).
    Have: (a + (q * x) + (s * y)) = x_9.
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_17 = x * (q_1 - p).
    Let x_18 = y * (s_1 - r).
    Have: (p_2 = p) /\ (q_2 = q_1) /\ (r_2 = r) /\ (s_2 = s_1) /\
        ((p + q) = q_1) /\ ((r + s) = s_1) /\ ((a + x_17 + x_18) = x_6) /\
        ((x_7 + x_8 + x_17 + x_18) = x_6).
  }
  (* Invariant *)
  Have: ((a * r) + x_3) = y.
  (* Invariant *)
  Have: ((r * x) + x_3) = y.
  (* Invariant *)
  Have: ((p * x) + x_2) = x.
  (* Invariant *)
  Have: ((a * p) + x_2) = x.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: x_1 <= y.
}
Prove: (0 < a) /\ (0 < x_1).
Prover Z3 4.8.12 returns Valid (Qed:76ms) (10ms) (48608)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0001/5_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0001/5_merged.c, line 26):
Let x_1 = (q * x) + (s * y).
Let x_2 = q * x_1.
Let x_3 = p * x.
Let x_4 = s * x_1.
Let x_5 = i_2 * x.
Let x_6 = i_3 * y.
Let x_7 = x_5 + x_6.
Let x_8 = i * x.
Let x_9 = i_1 * y.
Let x_10 = x_8 + x_9.
Let x_11 = p_2 * x.
Let x_12 = q_2 * x_7.
Let x_13 = s_2 * x_7.
Let x_14 = i_6 * x.
Let x_15 = i_7 * y.
Let x_16 = i_4 * x.
Let x_17 = i_5 * y.
Assume {
  Type: is_sint32(a) /\ is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\
      is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\
      is_sint32(s_2) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_10) /\
      is_sint32(x_7) /\ is_sint32(x_1).
  (* Invariant *)
  Have: (x_16 + x_17) = y.
  (* Invariant *)
  Have: (0 < x) /\ (0 < y).
  (* Invariant *)
  Have: (x_14 + x_15 + x_16 + x_17) = x.
  (* Invariant *)
  Have: (x_14 + x_15) = x.
  (* Invariant *)
  Have: ((y = x) -> (((x % y) + (y % x)) = x)).
  (* Invariant *)
  Have: forall i_8 : Z. ((x_14 + x_15 + (y * i_8)) = x) /\
      ((x_16 + x_17 + (x * i_8)) = y).
  (* Invariant *)
  Have: ((r_2 * x_10) + x_13) = y.
  (* Invariant *)
  Have: ((r_2 * x) + x_13) = y.
  (* Invariant *)
  Have: (x_11 + x_12) = x.
  (* Invariant *)
  Have: ((p_2 * x_10) + x_12) = x.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: ((q_2 * x) + (s_2 * y)) = x_7.
  (* Invariant *)
  Have: x_7 <= y.
  (* Invariant *)
  Have: (0 < x_10) /\ (0 < x_7).
  (* Invariant *)
  Have: (x_11 + (r_2 * y)) = x_10.
  (* Invariant *)
  Have: (x_8 + x_9 + (p_2 * x_7)) = (x + (q_2 * y)).
  (* Invariant *)
  Have: x_10 <= x.
  (* Invariant *)
  Have: forall i_8 : Z. ((x_8 + x_9 + (i_8 * x_7)) = x) /\
      ((x_5 + x_6 + (i_8 * x_10)) = y).
  (* Then *)
  Have: x_7 != x_10.
  If x_7 < x_10
  Then {
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (x_1 = x_7).
    Have: (a + (q * x) + (s * y)) = x_10.
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_18 = x * (q_1 - p).
    Let x_19 = y * (s_1 - r).
    Have: (p_2 = p) /\ (q_2 = q_1) /\ (r_2 = r) /\ (s_2 = s_1) /\
        ((p + q) = q_1) /\ ((r + s) = s_1) /\ ((a + x_18 + x_19) = x_7) /\
        ((x_8 + x_9 + x_18 + x_19) = x_7).
  }
  (* Invariant *)
  Have: ((a * r) + x_4) = y.
  (* Invariant *)
  Have: ((r * x) + x_4) = y.
  (* Invariant *)
  Have: (x_3 + x_2) = x.
  (* Invariant *)
  Have: ((a * p) + x_2) = x.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: x_1 <= y.
  (* Invariant *)
  Have: (0 < a) /\ (0 < x_1).
}
Prove: (x_3 + (r * y)) = a.
Prover Z3 4.8.12 returns Valid (Qed:78ms) (20ms) (48874)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0001/5_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0001/5_merged.c, line 27):
Let x_1 = p * x.
Let x_2 = r * y.
Let x_3 = x_1 + x_2.
Let x_4 = (q * x) + (s * y).
Let x_5 = q * x_4.
Let x_6 = s * x_4.
Let x_7 = i_2 * x.
Let x_8 = i_3 * y.
Let x_9 = x_7 + x_8.
Let x_10 = i * x.
Let x_11 = i_1 * y.
Let x_12 = x_10 + x_11.
Let x_13 = p_2 * x.
Let x_14 = q_2 * x_9.
Let x_15 = s_2 * x_9.
Let x_16 = i_6 * x.
Let x_17 = i_7 * y.
Let x_18 = i_4 * x.
Let x_19 = i_5 * y.
Assume {
  Type: is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_12) /\ is_sint32(x_9) /\
      is_sint32(x_3) /\ is_sint32(x_4).
  (* Invariant *)
  Have: (x_18 + x_19) = y.
  (* Invariant *)
  Have: (0 < x) /\ (0 < y).
  (* Invariant *)
  Have: (x_16 + x_17 + x_18 + x_19) = x.
  (* Invariant *)
  Have: (x_16 + x_17) = x.
  (* Invariant *)
  Have: ((y = x) -> (((x % y) + (y % x)) = x)).
  (* Invariant *)
  Have: forall i_8 : Z. ((x_16 + x_17 + (y * i_8)) = x) /\
      ((x_18 + x_19 + (x * i_8)) = y).
  (* Invariant *)
  Have: ((r_2 * x_12) + x_15) = y.
  (* Invariant *)
  Have: ((r_2 * x) + x_15) = y.
  (* Invariant *)
  Have: (x_13 + x_14) = x.
  (* Invariant *)
  Have: ((p_2 * x_12) + x_14) = x.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: ((q_2 * x) + (s_2 * y)) = x_9.
  (* Invariant *)
  Have: x_9 <= y.
  (* Invariant *)
  Have: (0 < x_12) /\ (0 < x_9).
  (* Invariant *)
  Have: (x_13 + (r_2 * y)) = x_12.
  (* Invariant *)
  Have: (x_10 + x_11 + (p_2 * x_9)) = (x + (q_2 * y)).
  (* Invariant *)
  Have: x_12 <= x.
  (* Invariant *)
  Have: forall i_8 : Z. ((x_10 + x_11 + (i_8 * x_9)) = x) /\
      ((x_7 + x_8 + (i_8 * x_12)) = y).
  (* Then *)
  Have: x_9 != x_12.
  If x_9 < x_12
  Then {
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (x_4 = x_9) /\
        (((q * x) + (s * y) + (x * (p_1 - q)) + (y * (r_1 - s))) = x_12).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        (((q * x) + (s * y) + (x * (q_1 - q)) + (y * (s_1 - s))) = x_9).
  }
  (* Invariant *)
  Have: ((r * x_3) + x_6) = y.
  (* Invariant *)
  Have: ((r * x) + x_6) = y.
  (* Invariant *)
  Have: (x_1 + x_5) = x.
  (* Invariant *)
  Have: ((p * x_3) + x_5) = x.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: x_4 <= y.
  (* Invariant *)
  Have: (0 < x_3) /\ (0 < x_4).
}
Prove: (x_1 + x_2 + (p * x_4)) = (x + (q * y)).
Prover Z3 4.8.12 returns Valid (Qed:70ms) (20ms) (49700)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0001/5_merged.c, line 27):
Assume {
  Type: is_sint32(a) /\ is_sint32(b).
  (* Pre-condition *)
  Have: 0 < a.
  (* Pre-condition *)
  Have: 0 < b.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0001/5_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0001/5_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0001/5_merged.c, line 29):
Let x_1 = p * x.
Let x_2 = q * x.
Let x_3 = s * y.
Let x_4 = x_2 + x_3.
Let x_5 = p * x_4.
Let x_6 = q * y.
Let x_7 = x + x_6.
Let x_8 = q * x_4.
Let x_9 = x + x_6 - x_5.
Let x_10 = s * x_4.
Let x_11 = i_2 * x.
Let x_12 = i_3 * y.
Let x_13 = x_11 + x_12.
Let x_14 = i * x.
Let x_15 = i_1 * y.
Let x_16 = x_14 + x_15.
Let x_17 = p_2 * x.
Let x_18 = q_2 * x_13.
Let x_19 = s_2 * x_13.
Let x_20 = i_6 * x.
Let x_21 = i_7 * y.
Let x_22 = i_4 * x.
Let x_23 = i_5 * y.
Let x_24 = x % y.
Let x_25 = y % x.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(p) /\ is_sint32(p_1) /\
      is_sint32(p_2) /\ is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\
      is_sint32(r) /\ is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\
      is_sint32(s_1) /\ is_sint32(s_2) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_16) /\ is_sint32(x_13) /\ is_sint32(x_4) /\ is_sint32(x_9).
  (* Goal *)
  When: (x_2 + x_3 + x_5) = x_7.
  (* Invariant *)
  Have: (x_22 + x_23) = y.
  (* Invariant *)
  Have: (0 < x) /\ (0 < y).
  (* Invariant *)
  Have: (x_20 + x_21 + x_22 + x_23) = x.
  (* Invariant *)
  Have: (x_20 + x_21) = x.
  (* Invariant *)
  Have: ((y = x) -> ((x_24 + x_25) = x)).
  (* Invariant *)
  Have: forall i_8 : Z. ((x_20 + x_21 + (y * i_8)) = x) /\
      ((x_22 + x_23 + (x * i_8)) = y).
  (* Invariant *)
  Have: ((r_2 * x_16) + x_19) = y.
  (* Invariant *)
  Have: ((r_2 * x) + x_19) = y.
  (* Invariant *)
  Have: (x_17 + x_18) = x.
  (* Invariant *)
  Have: ((p_2 * x_16) + x_18) = x.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: ((q_2 * x) + (s_2 * y)) = x_13.
  (* Invariant *)
  Have: x_13 <= y.
  (* Invariant *)
  Have: (0 < x_16) /\ (0 < x_13).
  (* Invariant *)
  Have: (x_17 + (r_2 * y)) = x_16.
  (* Invariant *)
  Have: (x_14 + x_15 + (p_2 * x_13)) = (x + (q_2 * y)).
  (* Invariant *)
  Have: x_16 <= x.
  (* Invariant *)
  Have: forall i_8 : Z. ((x_14 + x_15 + (i_8 * x_13)) = x) /\
      ((x_11 + x_12 + (i_8 * x_16)) = y).
  (* Then *)
  Have: x_13 != x_16.
  If x_13 < x_16
  Then {
    Let x_26 = (p_1 - q) * x_4.
    Let x_27 = x + x_2 + x_6 + x_3.
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (x_4 = x_13) /\ ((a + x_26) = x_27) /\ ((x_14 + x_15 + x_26) = x_27).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_28 = (q_1 - q) * x_4.
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        ((b + x_28) = x_27) /\ ((x_14 + x_15 + x_28) = x_7) /\
        ((x_11 + x_12 + x_28) = x_27).
  }
  (* Invariant *)
  Have: (x_10 + (r * x_9)) = y.
  (* Invariant *)
  Have: ((r * x) + x_10) = y.
  (* Invariant *)
  Have: (x_1 + x_8) = x.
  (* Invariant *)
  Have: (x_8 + (p * x_9)) = x.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: x_4 <= y.
  (* Invariant *)
  Have: (0 < x_4) /\ (x_5 < x_7).
  (* Invariant *)
  Have: (x_1 + (r * y) + x_5) = x_7.
}
Prove: (x_24 + x_25 + x_5) = x_7.
Prover Z3 4.8.12 returns Valid (Qed:76ms) (10ms) (51637)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0001/5_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0001/5_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0001/5_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0001/5_merged.c, line 31):
Let x_1 = q * x.
Let x_2 = s * y.
Let x_3 = x_1 + x_2.
Let x_4 = p * x_3.
Let x_5 = q * y.
Let x_6 = x + x_5.
Let x_7 = x % y.
Let x_8 = y % x.
Let x_9 = p * x.
Let x_10 = q * x_3.
Let x_11 = x + x_5 - x_4.
Let x_12 = s * x_3.
Let x_13 = i_2 * x.
Let x_14 = i_3 * y.
Let x_15 = x_13 + x_14.
Let x_16 = i * x.
Let x_17 = i_1 * y.
Let x_18 = x_16 + x_17.
Let x_19 = p_2 * x.
Let x_20 = q_2 * x_15.
Let x_21 = s_2 * x_15.
Let x_22 = i_6 * x.
Let x_23 = i_7 * y.
Let x_24 = i_4 * x.
Let x_25 = i_5 * y.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(p) /\ is_sint32(p_1) /\
      is_sint32(p_2) /\ is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\
      is_sint32(r) /\ is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\
      is_sint32(s_1) /\ is_sint32(s_2) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_18) /\ is_sint32(x_15) /\ is_sint32(x_3) /\
      is_sint32(x_11).
  (* Invariant *)
  Have: (x_24 + x_25) = y.
  (* Invariant *)
  Have: (0 < x) /\ (0 < y).
  (* Invariant *)
  Have: (x_22 + x_23 + x_24 + x_25) = x.
  (* Invariant *)
  Have: (x_22 + x_23) = x.
  (* Invariant *)
  Have: ((y = x) -> ((x_7 + x_8) = x)).
  (* Invariant *)
  Have: forall i_8 : Z. ((x_22 + x_23 + (y * i_8)) = x) /\
      ((x_24 + x_25 + (x * i_8)) = y).
  (* Invariant *)
  Have: ((r_2 * x_18) + x_21) = y.
  (* Invariant *)
  Have: ((r_2 * x) + x_21) = y.
  (* Invariant *)
  Have: (x_19 + x_20) = x.
  (* Invariant *)
  Have: ((p_2 * x_18) + x_20) = x.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: ((q_2 * x) + (s_2 * y)) = x_15.
  (* Invariant *)
  Have: x_15 <= y.
  (* Invariant *)
  Have: (0 < x_18) /\ (0 < x_15).
  (* Invariant *)
  Have: (x_19 + (r_2 * y)) = x_18.
  (* Invariant *)
  Have: (x_16 + x_17 + (p_2 * x_15)) = (x + (q_2 * y)).
  (* Invariant *)
  Have: x_18 <= x.
  (* Invariant *)
  Have: forall i_8 : Z. ((x_16 + x_17 + (i_8 * x_15)) = x) /\
      ((x_13 + x_14 + (i_8 * x_18)) = y).
  (* Then *)
  Have: x_15 != x_18.
  If x_15 < x_18
  Then {
    Let x_26 = (p_1 - q) * x_3.
    Let x_27 = x + x_1 + x_5 + x_2.
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (x_3 = x_15) /\ ((a + x_26) = x_27) /\ ((x_16 + x_17 + x_26) = x_27).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_28 = (q_1 - q) * x_3.
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        ((b + x_28) = x_27) /\ ((x_16 + x_17 + x_28) = x_6) /\
        ((x_13 + x_14 + x_28) = x_27).
  }
  (* Invariant *)
  Have: (x_12 + (r * x_11)) = y.
  (* Invariant *)
  Have: ((r * x) + x_12) = y.
  (* Invariant *)
  Have: (x_9 + x_10) = x.
  (* Invariant *)
  Have: (x_10 + (p * x_11)) = x.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: x_3 <= y.
  (* Invariant *)
  Have: (0 < x_3) /\ (x_4 < x_6).
  (* Invariant *)
  Have: (x_9 + (r * y) + x_4) = x_6.
  (* Invariant *)
  Have: (((x_1 + x_2 + x_4) = x_6) -> ((x_7 + x_8 + x_4) = x_6)).
}
Prove: x_5 <= x_4.
Prover Z3 4.8.12 returns Valid (Qed:78ms) (10ms) (51048)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0001/5_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0001/5_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0001/5_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0001/5_merged.c, line 33):
Let x_1 = q * y.
Let x_2 = q * x.
Let x_3 = s * y.
Let x_4 = x_2 + x_3.
Let x_5 = p * x_4.
Let x_6 = x + x_1.
Let x_7 = x % y.
Let x_8 = y % x.
Let x_9 = p * x.
Let x_10 = q * x_4.
Let x_11 = x + x_1 - x_5.
Let x_12 = s * x_4.
Let x_13 = i_3 * x.
Let x_14 = i_4 * y.
Let x_15 = x_13 + x_14.
Let x_16 = i_1 * x.
Let x_17 = i_2 * y.
Let x_18 = x_16 + x_17.
Let x_19 = p_2 * x.
Let x_20 = q_2 * x_15.
Let x_21 = s_2 * x_15.
Let x_22 = i_7 * x.
Let x_23 = i_8 * y.
Let x_24 = i_5 * x.
Let x_25 = i_6 * y.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(p) /\ is_sint32(p_1) /\
      is_sint32(p_2) /\ is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\
      is_sint32(r) /\ is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\
      is_sint32(s_1) /\ is_sint32(s_2) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_18) /\ is_sint32(x_15) /\ is_sint32(x_4) /\
      is_sint32(x_11).
  (* Invariant *)
  Have: (x_24 + x_25) = y.
  (* Invariant *)
  Have: (0 < x) /\ (0 < y).
  (* Invariant *)
  Have: (x_22 + x_23 + x_24 + x_25) = x.
  (* Invariant *)
  Have: (x_22 + x_23) = x.
  (* Invariant *)
  Have: ((y = x) -> ((x_7 + x_8) = x)).
  (* Invariant *)
  Have: forall i_9 : Z. ((x_22 + x_23 + (y * i_9)) = x) /\
      ((x_24 + x_25 + (x * i_9)) = y).
  (* Invariant *)
  Have: ((r_2 * x_18) + x_21) = y.
  (* Invariant *)
  Have: ((r_2 * x) + x_21) = y.
  (* Invariant *)
  Have: (x_19 + x_20) = x.
  (* Invariant *)
  Have: ((p_2 * x_18) + x_20) = x.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: ((q_2 * x) + (s_2 * y)) = x_15.
  (* Invariant *)
  Have: x_15 <= y.
  (* Invariant *)
  Have: (0 < x_18) /\ (0 < x_15).
  (* Invariant *)
  Have: (x_19 + (r_2 * y)) = x_18.
  (* Invariant *)
  Have: (x_16 + x_17 + (p_2 * x_15)) = (x + (q_2 * y)).
  (* Invariant *)
  Have: x_18 <= x.
  (* Invariant *)
  Have: forall i_9 : Z. ((x_16 + x_17 + (i_9 * x_15)) = x) /\
      ((x_13 + x_14 + (i_9 * x_18)) = y).
  (* Then *)
  Have: x_15 != x_18.
  If x_15 < x_18
  Then {
    Let x_26 = (p_1 - q) * x_4.
    Let x_27 = x + x_2 + x_1 + x_3.
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (x_4 = x_15) /\ ((a + x_26) = x_27) /\ ((x_16 + x_17 + x_26) = x_27).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_28 = (q_1 - q) * x_4.
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        ((b + x_28) = x_27) /\ ((x_16 + x_17 + x_28) = x_6) /\
        ((x_13 + x_14 + x_28) = x_27).
  }
  (* Invariant *)
  Have: (x_12 + (r * x_11)) = y.
  (* Invariant *)
  Have: ((r * x) + x_12) = y.
  (* Invariant *)
  Have: (x_9 + x_10) = x.
  (* Invariant *)
  Have: (x_10 + (p * x_11)) = x.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: x_4 <= y.
  (* Invariant *)
  Have: (0 < x_4) /\ (x_5 < x_6).
  (* Invariant *)
  Have: (x_9 + (r * y) + x_5) = x_6.
  (* Invariant *)
  Have: (((x_2 + x_3 + x_5) = x_6) -> ((x_7 + x_8 + x_5) = x_6)).
  (* Invariant *)
  Have: x_1 <= x_5.
}
Prove: (x_5 = (x_1 + (i * x_4))) /\ ((x_2 + x_3 + (i * x_11)) = y).
Prover Z3 4.8.12 returns Valid (Qed:90ms) (10ms) (51842)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0001/5_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0001/5_merged.c, line 34):
Let x_1 = q * x.
Let x_2 = s * y.
Let x_3 = x_1 + x_2.
Let x_4 = p * x_3.
Let x_5 = q * y.
Let x_6 = x + x_5 - x_4.
Let x_7 = x + x_5.
Let x_8 = x % y.
Let x_9 = y % x.
Let x_10 = p * x.
Let x_11 = q * x_3.
Let x_12 = s * x_3.
Let x_13 = i_2 * x.
Let x_14 = i_3 * y.
Let x_15 = x_13 + x_14.
Let x_16 = i * x.
Let x_17 = i_1 * y.
Let x_18 = x_16 + x_17.
Let x_19 = p_2 * x.
Let x_20 = q_2 * x_15.
Let x_21 = s_2 * x_15.
Let x_22 = i_6 * x.
Let x_23 = i_7 * y.
Let x_24 = i_4 * x.
Let x_25 = i_5 * y.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(p) /\ is_sint32(p_1) /\
      is_sint32(p_2) /\ is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\
      is_sint32(r) /\ is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\
      is_sint32(s_1) /\ is_sint32(s_2) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_18) /\ is_sint32(x_15) /\ is_sint32(x_3) /\ is_sint32(x_6).
  (* Invariant *)
  Have: (x_24 + x_25) = y.
  (* Invariant *)
  Have: (0 < x) /\ (0 < y).
  (* Invariant *)
  Have: (x_22 + x_23 + x_24 + x_25) = x.
  (* Invariant *)
  Have: (x_22 + x_23) = x.
  (* Invariant *)
  Have: ((y = x) -> ((x_8 + x_9) = x)).
  (* Invariant *)
  Have: forall i_8 : Z. ((x_22 + x_23 + (y * i_8)) = x) /\
      ((x_24 + x_25 + (x * i_8)) = y).
  (* Invariant *)
  Have: ((r_2 * x_18) + x_21) = y.
  (* Invariant *)
  Have: ((r_2 * x) + x_21) = y.
  (* Invariant *)
  Have: (x_19 + x_20) = x.
  (* Invariant *)
  Have: ((p_2 * x_18) + x_20) = x.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: ((q_2 * x) + (s_2 * y)) = x_15.
  (* Invariant *)
  Have: x_15 <= y.
  (* Invariant *)
  Have: (0 < x_18) /\ (0 < x_15).
  (* Invariant *)
  Have: (x_19 + (r_2 * y)) = x_18.
  (* Invariant *)
  Have: (x_16 + x_17 + (p_2 * x_15)) = (x + (q_2 * y)).
  (* Invariant *)
  Have: x_18 <= x.
  (* Invariant *)
  Have: forall i_8 : Z. ((x_16 + x_17 + (i_8 * x_15)) = x) /\
      ((x_13 + x_14 + (i_8 * x_18)) = y).
  (* Then *)
  Have: x_15 != x_18.
  If x_15 < x_18
  Then {
    Let x_26 = (p_1 - q) * x_3.
    Let x_27 = x + x_1 + x_5 + x_2.
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (x_3 = x_15) /\ ((a + x_26) = x_27) /\ ((x_16 + x_17 + x_26) = x_27).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_28 = (q_1 - q) * x_3.
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        ((b + x_28) = x_27) /\ ((x_16 + x_17 + x_28) = x_7) /\
        ((x_13 + x_14 + x_28) = x_27).
  }
  (* Invariant *)
  Have: (x_12 + (r * x_6)) = y.
  (* Invariant *)
  Have: ((r * x) + x_12) = y.
  (* Invariant *)
  Have: (x_10 + x_11) = x.
  (* Invariant *)
  Have: (x_11 + (p * x_6)) = x.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: x_3 <= y.
  (* Invariant *)
  Have: (0 < x_3) /\ (x_4 < x_7).
  (* Invariant *)
  Have: (x_10 + (r * y) + x_4) = x_7.
  (* Invariant *)
  Have: (((x_1 + x_2 + x_4) = x_7) -> ((x_8 + x_9 + x_4) = x_7)).
  (* Invariant *)
  Have: x_5 <= x_4.
  (* Invariant *)
  Have: forall i_8 : Z. (x_4 = (x_5 + (i_8 * x_3))) /\
      ((x_1 + x_2 + (i_8 * x_6)) = y).
}
Prove: exists i_11,i_10,i_9,i_8 : Z. (((x * i_9) + (y * i_8)) = x_3) /\
    (((x * i_11) + (y * i_10) + x_4) = x_7).
Prover Z3 4.8.12 returns Valid (Qed:82ms) (20ms) (53575)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0001/5_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0001/5_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0001/5_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0001/5_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0001/5_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0001/5_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0001/5_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0001/5_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0001/5_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Assertion (file out/5_0001/5_merged.c, line 59):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/5_0001/5_merged.c, line 60):
Let x_1 = i * x.
Let x_2 = i_1 * y.
Let x_3 = x_1 + x_2.
Let x_4 = (x % y) + (y % x).
Let x_5 = p * x_3.
Let x_6 = p * x.
Let x_7 = q * x_3.
Let x_8 = s * x_3.
Let x_9 = i_4 * x.
Let x_10 = i_5 * y.
Let x_11 = i_2 * x.
Let x_12 = i_3 * y.
Assume {
  Type: is_sint32(p) /\ is_sint32(q) /\ is_sint32(r) /\ is_sint32(s) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_3).
  (* Invariant *)
  Have: (x_11 + x_12) = y.
  (* Invariant *)
  Have: (0 < x) /\ (0 < y).
  (* Invariant *)
  Have: (x_9 + x_10 + x_11 + x_12) = x.
  (* Invariant *)
  Have: (x_9 + x_10) = x.
  (* Invariant *)
  Have: ((y = x) -> (x_4 = x)).
  (* Invariant *)
  Have: forall i_8 : Z. ((x_9 + x_10 + (y * i_8)) = x) /\
      ((x_11 + x_12 + (x * i_8)) = y).
  (* Invariant *)
  Have: ((r * x_3) + x_8) = y.
  (* Invariant *)
  Have: ((r * x) + x_8) = y.
  (* Invariant *)
  Have: (x_6 + x_7) = x.
  (* Invariant *)
  Have: (x_5 + x_7) = x.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: ((q * x) + (s * y)) = x_3.
  (* Invariant *)
  Have: x_3 <= y.
  (* Invariant *)
  Have: 0 < x_3.
  (* Invariant *)
  Have: (x_6 + (r * y)) = x_3.
  (* Invariant *)
  Have: (x_1 + x_2 + x_5) = (x + (q * y)).
  (* Invariant *)
  Have: x_3 = x_4.
  (* Invariant *)
  Have: x_3 <= x.
  (* Invariant *)
  Have: forall i_8 : Z. let x_13 = x_1 + x_2 + (i_8 * x_3) in (x_13 = x) /\
      (x_13 = y).
  (* Invariant *)
  Have: ((i_6 * x) + (i_7 * y)) = x_3.
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (40201)

------------------------------------------------------------

Goal Loop assigns (file out/5_0001/5_merged.c, line 39):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/5_0001/5_merged.c:4: Warning: 
  No 'assigns' specification for function 'main5'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/14_0002/14_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/14_0002/14_merged.c:22: Warning: 
  Body of function main14 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 14 goals scheduled
[wp] [Timeout] typed_main14_loop_invariant_2_preserved (Qed 13ms) (Z3)
[wp] [Timeout] typed_main14_loop_invariant_2_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_main14_loop_invariant_3_preserved (Qed 15ms) (Z3)
[wp] Proved goals:   11 / 14
  Qed:               9
  Alt-Ergo 2.5.4:    1 (47ms)
  Z3 4.8.12:         1 (10ms)
  Timeout:           3
------------------------------------------------------------
  Function main14
------------------------------------------------------------

Goal Preservation of Invariant (file out/14_0002/14_merged.c, line 12):
Let x_1 = x * y_2.
Let x_2 = y / 2.
Let x_3 = a * b.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(y_1) /\ is_sint32(y_2) /\ is_sint32(z) /\ is_sint32(z_1) /\
      is_sint32(2 * x) /\ is_sint32(x_2) /\ is_sint32(x_3 - x_1).
  (* Pre-condition *)
  Have: (0 <= a) /\ (0 <= b).
  (* Invariant *)
  Have: b != 0.
  (* Invariant *)
  Have: y_2 != 0.
  (* Invariant *)
  Have: forall i : Z. let x_4 = b - i in (((x_4 % 2) = 1) -> ((0 <= i) ->
      (((y_2 + i) < b) -> ((x * x_4) = x_1)))).
  (* Invariant *)
  Have: (y_2 <= b) /\ (0 <= y_2).
  (* Invariant *)
  Have: 0 <= x.
  If (y_2 % 2) = 1
  Then {
    Have: (y_2 = y_1) /\ (x_3 = (z_1 + (y_1 * (z - z_1)))).
    Have: (x + z_1) = z.
    Have: (1 + y) = y_1.
  }
  Else { Have: (y_2 = y) /\ (x_3 = (z + (x * y))). }
}
Prove: x_3 = (z + (2 * (x * x_2))).
Prover Z3 4.8.12 returns Valid (Qed:14ms) (130ms) (323855)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:14ms) (47ms) (844)

------------------------------------------------------------

Goal Establishment of Invariant (file out/14_0002/14_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/14_0002/14_merged.c, line 13):
Let x_1 = x * y_2.
Let x_2 = y / 2.
Let x_3 = a * b.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(y_1) /\ is_sint32(y_2) /\ is_sint32(z) /\ is_sint32(2 * x) /\
      is_sint32(x_2) /\ is_sint32(x_3 - x_1) /\
      is_sint32(x_3 - (2 * (x * x_2))).
  (* Pre-condition *)
  Have: (0 <= a) /\ (0 <= b).
  (* Invariant *)
  Have: b != 0.
  (* Invariant *)
  Have: y_2 != 0.
  (* Invariant *)
  Have: forall i : Z. let x_4 = b - i in (((x_4 % 2) = 1) -> ((0 <= i) ->
      (((y_2 + i) < b) -> ((x * x_4) = x_1)))).
  (* Invariant *)
  Have: (y_2 <= b) /\ (0 <= y_2).
  (* Invariant *)
  Have: 0 <= x.
  If (y_2 % 2) = 1
  Then {
    Let x_4 = 2 * (x * ((y_1 - 1) / 2)).
    Have: (y_2 = y_1) /\ ((x * y_1) = (x + x_4)) /\ (x_3 = (x + z + x_4)).
    Have: (1 + y) = y_1.
  }
  Else { Have: (y_2 = y) /\ ((x * y) = (2 * (x * x_2))). }
}
Prove: x_2 != 0.
Prover Z3 4.8.12 returns Timeout (Qed:13ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:13ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/14_0002/14_merged.c, line 13):
Assume {
  Type: is_sint32(a) /\ is_sint32(y).
  (* Pre-condition *)
  Have: (0 <= a) /\ (0 <= y).
}
Prove: y != 0.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/14_0002/14_merged.c, line 14):
Let x_1 = y / 2.
Let x_2 = x * y_2.
Let x_3 = b - i.
Let x_4 = a * b.
Let x_5 = x * x_1.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(y_1) /\ is_sint32(y_2) /\ is_sint32(z) /\ is_sint32(2 * x) /\
      is_sint32(x_1) /\ is_sint32(x_4 - x_2) /\ is_sint32(x_4 - (2 * x_5)).
  (* Goal *)
  When: ((x_3 % 2) = 1) /\ (0 <= i) /\ ((i + x_1) < b).
  (* Pre-condition *)
  Have: (0 <= a) /\ (0 <= b).
  (* Invariant *)
  Have: b != 0.
  (* Invariant *)
  Have: y_2 != 0.
  (* Invariant *)
  Have: forall i_1 : Z. let x_6 = b - i_1 in (((x_6 % 2) = 1) ->
      ((0 <= i_1) -> (((y_2 + i_1) < b) -> ((x * x_6) = x_2)))).
  (* Invariant *)
  Have: (y_2 <= b) /\ (0 <= y_2).
  (* Invariant *)
  Have: 0 <= x.
  If (y_2 % 2) = 1
  Then {
    Let x_6 = 2 * (x * ((y_1 - 1) / 2)).
    Have: (y_2 = y_1) /\ ((x * y_1) = (x + x_6)) /\ (x_4 = (x + z + x_6)).
    Have: (1 + y) = y_1.
  }
  Else { Have: (y_2 = y) /\ ((x * y) = (2 * x_5)). }
  (* Invariant *)
  Have: x_1 != 0.
}
Prove: (x * x_3) = x_5.
Prover Z3 4.8.12 returns Timeout (Qed:15ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:15ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/14_0002/14_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.79ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/14_0002/14_merged.c, line 15):
Let x_1 = y / 2.
Let x_2 = x * x_1.
Let x_3 = x * y_2.
Let x_4 = a * b.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(y_1) /\ is_sint32(y_2) /\ is_sint32(z) /\ is_sint32(2 * x) /\
      is_sint32(x_1) /\ is_sint32(x_4 - x_3) /\ is_sint32(x_4 - (2 * x_2)).
  (* Pre-condition *)
  Have: (0 <= a) /\ (0 <= b).
  (* Invariant *)
  Have: b != 0.
  (* Invariant *)
  Have: y_2 != 0.
  (* Invariant *)
  Have: forall i : Z. let x_5 = b - i in (((x_5 % 2) = 1) -> ((0 <= i) ->
      (((y_2 + i) < b) -> ((x * x_5) = x_3)))).
  (* Invariant *)
  Have: (y_2 <= b) /\ (0 <= y_2).
  (* Invariant *)
  Have: 0 <= x.
  If (y_2 % 2) = 1
  Then {
    Let x_5 = 2 * (x * ((y_1 - 1) / 2)).
    Have: (y_2 = y_1) /\ ((x * y_1) = (x + x_5)) /\ (x_4 = (x + z + x_5)).
    Have: (1 + y) = y_1.
  }
  Else { Have: (y_2 = y) /\ ((x * y) = (2 * x_2)). }
  (* Invariant *)
  Have: x_1 != 0.
  (* Invariant *)
  Have: forall i : Z. let x_6 = b - i in (((x_6 % 2) = 1) -> ((0 <= i) ->
      (((i + x_1) < b) -> ((x * x_6) = x_2)))).
}
Prove: (x_1 <= b) /\ ((-1) <= y).
Prover Z3 4.8.12 returns Valid (Qed:16ms) (10ms) (40381)

------------------------------------------------------------

Goal Establishment of Invariant (file out/14_0002/14_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/14_0002/14_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/14_0002/14_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.85ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/14_0002/14_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/14_0002/14_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/14_0002/14_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Loop assigns (file out/14_0002/14_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/14_0002/14_merged.c:4: Warning: 
  No 'assigns' specification for function 'main14'.
  Callers assumptions might be imprecise.

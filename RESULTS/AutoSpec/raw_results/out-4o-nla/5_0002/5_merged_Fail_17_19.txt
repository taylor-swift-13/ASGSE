[kernel] Parsing out/5_0002/5_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/5_0002/5_merged.c:32: Warning: 
  Body of function main5 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 19 goals scheduled
[wp] [Timeout] typed_main5_loop_invariant_3_preserved (Qed 45ms) (Z3)
[wp] [Timeout] typed_main5_assert_missing_return (Qed 4ms) (Z3)
[wp] Proved goals:   17 / 19
  Qed:              15
  Alt-Ergo 2.5.4:    2 (5ms-12ms)
  Timeout:           2
------------------------------------------------------------
  Function main5
------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0002/5_merged.c, line 17):
Let x = a * s_2.
Let x_1 = b * r_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(p) /\ is_sint32(p_1) /\
      is_sint32(p_2) /\ is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\
      is_sint32(r) /\ is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\
      is_sint32(s_1) /\ is_sint32(s_2) /\ is_sint32(x - x_1) /\
      is_sint32(a + b + x_1 - x).
  (* Pre-condition *)
  Have: x_1 < x.
  (* Pre-condition *)
  Have: x < (a + b + x_1).
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: (0 < a) /\ (0 < b).
  (* Then *)
  Have: b != a.
  If b < a
  Then {
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1).
  }
}
Prove: (p * s) = (1 + (q * r)).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:32ms) (12ms) (381)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0002/5_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0002/5_merged.c, line 18):
Let x = s - r.
Let x_1 = q - p.
Let x_2 = a * s.
Let x_3 = b * r.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(p) /\ is_sint32(q) /\
      is_sint32(r) /\ is_sint32(s) /\ is_sint32(b - a) /\ is_sint32(x_1) /\
      is_sint32(x) /\ is_sint32(x_2 - x_3) /\ is_sint32(a + b + x_3 - x_2).
  (* Residual *)
  When: a <= b.
  (* Pre-condition *)
  Have: x_3 < x_2.
  (* Pre-condition *)
  Have: x_2 < (a + b + x_3).
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: (0 < a) /\ (0 < b).
  (* Then *)
  Have: b != a.
  (* Invariant *)
  Have: (p * x) = (1 + (r * x_1)).
}
Prove: a < b.
Prover Z3 4.8.12 returns Valid (Qed:40ms) (10ms) (32876)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:40ms) (5ms) (101)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0002/5_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0002/5_merged.c, line 19):
Let x = a * s_2.
Let x_1 = b * r_2.
Assume {
  Type: is_sint32(a_1) /\ is_sint32(a) /\ is_sint32(b_1) /\ is_sint32(b_2) /\
      is_sint32(b) /\ is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\
      is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\
      is_sint32(s_2) /\ is_sint32(x - x_1) /\ is_sint32(a + b + x_1 - x).
  (* Pre-condition *)
  Have: x_1 < x.
  (* Pre-condition *)
  Have: x < (a + b + x_1).
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: (0 < a) /\ (0 < b).
  (* Then *)
  Have: b != a.
  If b < a
  Then {
    Have: (b = b_1) /\ (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s).
    Have: (a_1 + b_1) = a.
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Have: (b = b_2) /\ (q_2 = q_1) /\ (s_2 = s_1) /\ ((a_1 + b_1) = b_2) /\
        ((a + b_1) = b_2) /\ ((p + q) = q_1) /\ ((p_2 + q) = q_1) /\
        ((r + s) = s_1) /\ ((r_2 + s) = s_1).
  }
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: (0 < a_1) /\ (0 < b_1).
}
Prove: (a + b) = (a_1 + b_1).
Prover Z3 4.8.12 returns Timeout (Qed:45ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:45ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0002/5_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0002/5_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0002/5_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0002/5_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0002/5_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0002/5_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0002/5_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0002/5_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0002/5_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0002/5_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0002/5_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Assertion (file out/5_0002/5_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/5_0002/5_merged.c, line 46):
Let x = a * s.
Let x_1 = 2 * a.
Let x_2 = a * r.
Assume {
  Type: is_sint32(a) /\ is_sint32(p) /\ is_sint32(q) /\ is_sint32(r) /\
      is_sint32(s) /\ is_sint32(x - x_2) /\ is_sint32(x_1 + x_2 - x).
  (* Pre-condition *)
  Have: x_2 < x.
  (* Pre-condition *)
  Have: x < (x_1 + x_2).
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: 0 < a.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/5_0002/5_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/5_0002/5_merged.c:4: Warning: 
  No 'assigns' specification for function 'main5'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/30_0003/30_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/30_0003/30_merged.c:23: Warning: 
  Body of function main30 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 16 goals scheduled
[wp] [Timeout] typed_main30_loop_invariant_established (Qed 0.67ms) (Z3)
[wp] [Timeout] typed_main30_loop_invariant_2_established (Qed 0.97ms) (Z3)
[wp] [Timeout] typed_main30_loop_invariant_4_established (Qed 0.92ms) (Z3)
[wp] [Timeout] typed_main30_loop_invariant_7_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_main30_assert_missing_return (Qed 2ms) (Z3)
[wp] Proved goals:   11 / 16
  Qed:               3
  Alt-Ergo 2.5.4:    4 (5ms-34ms-92ms)
  Z3 4.8.12:         4 (30ms-38ms-40ms)
  Timeout:           5
------------------------------------------------------------
  Function main30
------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0003/30_merged.c, line 11):
Let x_1 = p / y.
Let x_2 = 0 / y.
Let x_3 = n - 1.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(p) /\ is_sint32(x) /\
      is_sint32(y) /\ is_sint32(x_3) /\ is_sint32(x * x_1) /\
      is_sint32(y * y * x_1).
  (* Invariant *)
  Have: (n_1 * x * x) = 0.
  (* Invariant *)
  Have: (x * x_2) = 0.
  (* Invariant *)
  Have: (y * y * x_2) = 0.
  (* Invariant *)
  Have: (n_1 * y * y) = 0.
  (* Invariant *)
  Have: (n_1 * x * y) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: (n * y * y) = 0.
  (* Invariant *)
  Have: (n * x * y) = 0.
  (* Invariant *)
  Have: (p * p) <= (x * y * y * x_1 * x_1).
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
}
Prove: (x * x * x_3) = 0.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (38321)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (5ms) (140)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0003/30_merged.c, line 11):
Assume { Type: is_sint32(n) /\ is_sint32(x). }
Prove: (n * x * x) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:0.67ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.67ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0003/30_merged.c, line 12):
Let x_1 = n - 1.
Let x_2 = p / y.
Let x_3 = 0 / y.
Let x_4 = x * x_2.
Let x_5 = p + (x * y).
Let x_6 = (x * x) + x_4.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(p) /\ is_sint32(x) /\
      is_sint32(y) /\ is_sint32(x_1) /\ is_sint32(x_4) /\ is_sint32(x_5) /\
      is_sint32(y * y * x_2) /\ is_sint32(x_6).
  (* Invariant *)
  Have: (n_1 * x * x) = 0.
  (* Invariant *)
  Have: (x * x_3) = 0.
  (* Invariant *)
  Have: (y * y * x_3) = 0.
  (* Invariant *)
  Have: (n_1 * y * y) = 0.
  (* Invariant *)
  Have: (n_1 * x * y) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: (n * y * y) = 0.
  (* Invariant *)
  Have: (n * x * y) = 0.
  (* Invariant *)
  Have: (p * p) <= (x * y * y * x_2 * x_2).
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x * x * x_1) = 0.
}
Prove: (x * (x_5 / y)) = x_6.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (30ms) (88800)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (29ms) (646)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0003/30_merged.c, line 12):
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: (n * x * x) = 0.
}
Prove: (x * (0 / y)) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:0.97ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.97ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0003/30_merged.c, line 13):
Let x_1 = n - 1.
Let x_2 = x * x.
Let x_3 = p + (x * y).
Let x_4 = x_3 / y.
Let x_5 = x * x_4.
Let x_6 = x_5 - x_2.
Let x_7 = p / y.
Let x_8 = 0 / y.
Let x_9 = y * y * x_7.
Let x_10 = (y * y) + x_9.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(p) /\ is_sint32(x) /\
      is_sint32(y) /\ is_sint32(x_1) /\ is_sint32(x_3) /\ is_sint32(x_9) /\
      is_sint32(x_10) /\ is_sint32(x_5) /\ is_sint32(x_6).
  (* Invariant *)
  Have: (n_1 * x * x) = 0.
  (* Invariant *)
  Have: (x * x_8) = 0.
  (* Invariant *)
  Have: (y * y * x_8) = 0.
  (* Invariant *)
  Have: (n_1 * y * y) = 0.
  (* Invariant *)
  Have: (n_1 * x * y) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: x_5 = (x_2 + (x * x_7)).
  (* Invariant *)
  Have: (n * y * y) = 0.
  (* Invariant *)
  Have: (n * x * y) = 0.
  (* Invariant *)
  Have: (p * p) <= (y * y * x_6 * x_7).
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x * x * x_1) = 0.
}
Prove: (y * y * x_4) = x_10.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (40ms) (193602)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0003/30_merged.c, line 13):
Let x_1 = 0 / y.
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: (x * x_1) = 0.
}
Prove: (y * y * x_1) = 0.
Prover Z3 4.8.12 returns Valid (Qed:1ms) (10ms) (41188)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (9ms) (321)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0003/30_merged.c, line 14):
Let x_1 = n - 1.
Let x_2 = x * x.
Let x_3 = p + (x * y).
Let x_4 = x_3 / y.
Let x_5 = x * x_4.
Let x_6 = x_5 - x_2.
Let x_7 = y * y.
Let x_8 = y * y * x_4.
Let x_9 = x_8 - x_7.
Let x_10 = p / y.
Let x_11 = 0 / y.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(p) /\ is_sint32(x) /\
      is_sint32(y) /\ is_sint32(x_1) /\ is_sint32(x_3) /\ is_sint32(x_5) /\
      is_sint32(x_8) /\ is_sint32(x_6) /\ is_sint32(x_9).
  (* Invariant *)
  Have: (n_1 * x * x) = 0.
  (* Invariant *)
  Have: (x * x_11) = 0.
  (* Invariant *)
  Have: (y * y * x_11) = 0.
  (* Invariant *)
  Have: (n_1 * y * y) = 0.
  (* Invariant *)
  Have: (n_1 * x * y) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: x_5 = (x_2 + (x * x_10)).
  (* Invariant *)
  Have: x_8 = (x_7 + (y * y * x_10)).
  (* Invariant *)
  Have: (n * y * y) = 0.
  (* Invariant *)
  Have: (n * x * y) = 0.
  (* Invariant *)
  Have: (p * p) <= (x_6 * x_9).
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x * x * x_1) = 0.
}
Prove: (y * y * x_1) = 0.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (40ms) (137158)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0003/30_merged.c, line 14):
Let x_1 = 0 / y.
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: (x * x_1) = 0.
  (* Invariant *)
  Have: (y * y * x_1) = 0.
}
Prove: (n * y * y) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:0.92ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.92ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0003/30_merged.c, line 15):
Let x_1 = n - 1.
Let x_2 = x * x.
Let x_3 = p + (x * y).
Let x_4 = x_3 / y.
Let x_5 = x * x_4.
Let x_6 = x_5 - x_2.
Let x_7 = y * y.
Let x_8 = y * y * x_4.
Let x_9 = x_8 - x_7.
Let x_10 = p / y.
Let x_11 = 0 / y.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(p) /\ is_sint32(x) /\
      is_sint32(y) /\ is_sint32(x_1) /\ is_sint32(x_3) /\ is_sint32(x_5) /\
      is_sint32(x_8) /\ is_sint32(x_6) /\ is_sint32(x_9).
  (* Invariant *)
  Have: (n_1 * x * x) = 0.
  (* Invariant *)
  Have: (x * x_11) = 0.
  (* Invariant *)
  Have: (y * y * x_11) = 0.
  (* Invariant *)
  Have: (n_1 * y * y) = 0.
  (* Invariant *)
  Have: (n_1 * x * y) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: x_5 = (x_2 + (x * x_10)).
  (* Invariant *)
  Have: x_8 = (x_7 + (y * y * x_10)).
  (* Invariant *)
  Have: (n * y * y) = 0.
  (* Invariant *)
  Have: (n * x * y) = 0.
  (* Invariant *)
  Have: (p * p) <= (x_6 * x_9).
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x * x * x_1) = 0.
  (* Invariant *)
  Have: (y * y * x_1) = 0.
}
Prove: (x * y * x_1) = 0.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (30ms) (97517)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0003/30_merged.c, line 15):
Let x_1 = 0 / y.
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: (x * x_1) = 0.
  (* Invariant *)
  Have: (y * y * x_1) = 0.
  (* Invariant *)
  Have: (n * y * y) = 0.
}
Prove: (n * x * y) = 0.
Prover Z3 4.8.12 returns Valid (Qed:1ms) (20ms) (69383)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (92ms) (6190)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0003/30_merged.c, line 16):
Let x_1 = n - 1.
Let x_2 = x * x.
Let x_3 = p + (x * y).
Let x_4 = x_3 / y.
Let x_5 = x * x_4.
Let x_6 = x_5 - x_2.
Let x_7 = y * y.
Let x_8 = y * y * x_4.
Let x_9 = x_8 - x_7.
Let x_10 = p / y.
Let x_11 = 0 / y.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(p) /\ is_sint32(x) /\
      is_sint32(y) /\ is_sint32(x_1) /\ is_sint32(x_3) /\ is_sint32(x_5) /\
      is_sint32(x_8) /\ is_sint32(x_6) /\ is_sint32(x_9).
  (* Invariant *)
  Have: (n_1 * x * x) = 0.
  (* Invariant *)
  Have: (x * x_11) = 0.
  (* Invariant *)
  Have: (y * y * x_11) = 0.
  (* Invariant *)
  Have: (n_1 * y * y) = 0.
  (* Invariant *)
  Have: (n_1 * x * y) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: x_5 = (x_2 + (x * x_10)).
  (* Invariant *)
  Have: x_8 = (x_7 + (y * y * x_10)).
  (* Invariant *)
  Have: (n * y * y) = 0.
  (* Invariant *)
  Have: (n * x * y) = 0.
  (* Invariant *)
  Have: (p * p) <= (x_6 * x_9).
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x * x * x_1) = 0.
  (* Invariant *)
  Have: (y * y * x_1) = 0.
  (* Invariant *)
  Have: (x * y * x_1) = 0.
}
Prove: (x_3 * x_3) <= (x * y * y * x_4 * x_4).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (40ms) (147155)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0003/30_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.94ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0003/30_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0003/30_merged.c, line 17):
Let x_1 = 0 / y.
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: (x * x_1) = 0.
  (* Invariant *)
  Have: (y * y * x_1) = 0.
  (* Invariant *)
  Have: (n * y * y) = 0.
  (* Invariant *)
  Have: (n * x * y) = 0.
}
Prove: 0 <= n.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/30_0003/30_merged.c, line 31):
Let x_1 = p / y.
Let x_2 = 0 / y.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(p) /\ is_sint32(x) /\
      is_sint32(y) /\ is_sint32(x * x_1) /\ is_sint32(y * y * x_1).
  (* Invariant *)
  Have: (n_1 * x * x) = 0.
  (* Invariant *)
  Have: (x * x_2) = 0.
  (* Invariant *)
  Have: (y * y * x_2) = 0.
  (* Invariant *)
  Have: (n_1 * y * y) = 0.
  (* Invariant *)
  Have: (n_1 * x * y) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: (n * y * y) = 0.
  (* Invariant *)
  Have: (n * x * y) = 0.
  (* Invariant *)
  Have: (p * p) <= (x * y * y * x_1 * x_1).
  (* Invariant *)
  Have: 0 <= n.
  (* Else *)
  Have: n <= 0.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/30_0003/30_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/30_0003/30_merged.c:2: Warning: 
  No 'assigns' specification for function 'main30'.
  Callers assumptions might be imprecise.

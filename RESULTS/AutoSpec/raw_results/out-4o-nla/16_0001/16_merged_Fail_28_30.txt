[kernel] Parsing out/16_0001/16_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/16_0001/16_merged.c:31: Warning: 
  Body of function main16 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 30 goals scheduled
[wp] [Timeout] typed_main16_loop_invariant_3_preserved (Qed 3ms) (Z3)
[wp] [Timeout] typed_main16_assert_missing_return (Qed 2ms) (Z3)
[wp] Proved goals:   28 / 30
  Qed:              23
  Alt-Ergo 2.5.4:    2 (7ms-9ms)
  Z3 4.8.12:         3 (10ms-13ms-20ms)
  Timeout:           2
------------------------------------------------------------
  Function main16
------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0001/16_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0001/16_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0001/16_merged.c, line 14):
Let x = y * y.
Let x_1 = 3 * x.
Let x_2 = y * y * y.
Let x_3 = (y * (1 + x)) / 2.
Let x_4 = 6 * x_3.
Let x_5 = 1 + y.
Let x_6 = (x_5 * x_5) + x_3.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x_5) /\ is_sint32(x_3) /\
      is_sint32(x_6).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_3 = x_2.
  (* Invariant *)
  Have: x_3 = ((y * y * x_5) / 3).
  (* Invariant *)
  Have: x_3 = ((y * x_5 * (1 + (2 * y))) / 6).
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: (y + x_1 + (2 * x_2)) = x_4.
  (* Invariant *)
  Have: (y + x_1 + x_2) = x_4.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y < k.
}
Prove: (x_5 * x_5 * x_5) = x_6.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (36161)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (9ms) (243)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0001/16_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0001/16_merged.c, line 15):
Let x = y * y.
Let x_1 = 3 * x.
Let x_2 = 1 + y.
Let x_3 = x_2 * x_2.
Let x_4 = 6 * x_3.
Let x_5 = y * y * y.
Let x_6 = x_2 * x_2 * x_2.
Let x_7 = 6 * x_6.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x_2) /\ is_sint32(x_6) /\
      is_sint32(x_6 - x_3).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_6 = (x_5 + x_3).
  (* Invariant *)
  Have: x_6 = (x_3 + ((y * y * x_2) / 3)).
  (* Invariant *)
  Have: x_6 = (x_3 + ((y * x_2 * (1 + (2 * y))) / 6)).
  (* Invariant *)
  Have: x_6 = (x_3 + ((y * (1 + x)) / 2)).
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: (y + x_1 + (2 * x_5) + x_4) = x_7.
  (* Invariant *)
  Have: (y + x_1 + x_5 + x_4) = x_7.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y < k.
}
Prove: ((x_2 * x_2 * (2 + y)) / 3) = x_6.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0001/16_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.88ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0001/16_merged.c, line 16):
Let x = 1 + c.
Let x_1 = 2 + c.
Let x_2 = (x * x * x_1) / 3.
Let x_3 = c * c.
Let x_4 = 3 * x_3.
Let x_5 = x * x.
Let x_6 = 6 * x_5.
Let x_7 = c * c * c.
Let x_8 = 6 * x_2.
Let x_9 = 2 * c.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_2 - x_5).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_2 = (x_7 + x_5).
  (* Invariant *)
  Have: x_2 = (x_5 + ((c * c * x) / 3)).
  (* Invariant *)
  Have: x_2 = (x_5 + ((c * x * (1 + x_9)) / 6)).
  (* Invariant *)
  Have: x_2 = (x_5 + ((c * (1 + x_3)) / 2)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: (c + x_4 + (2 * x_7) + x_6) = x_8.
  (* Invariant *)
  Have: (c + x_4 + x_7 + x_6) = x_8.
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: x_2 = (x * x * x).
}
Prove: ((x * x_1 * (3 + x_9)) / 6) = x_2.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (39410)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0001/16_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0001/16_merged.c, line 17):
Let x = 1 + c.
Let x_1 = 2 + c.
Let x_2 = 2 * c.
Let x_3 = (x * x_1 * (3 + x_2)) / 6.
Let x_4 = c * c.
Let x_5 = 3 * x_4.
Let x_6 = x * x.
Let x_7 = 6 * x_6.
Let x_8 = c * c * c.
Let x_9 = 6 * x_3.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_3 - x_6).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_3 = (x_8 + x_6).
  (* Invariant *)
  Have: x_3 = (x_6 + ((c * c * x) / 3)).
  (* Invariant *)
  Have: x_3 = (x_6 + ((c * x * (1 + x_2)) / 6)).
  (* Invariant *)
  Have: x_3 = (x_6 + ((c * (1 + x_4)) / 2)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: (c + x_5 + (2 * x_8) + x_7) = x_9.
  (* Invariant *)
  Have: (c + x_5 + x_8 + x_7) = x_9.
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: x_3 = (x * x * x).
  (* Invariant *)
  Have: x_3 = ((x * x * x_1) / 3).
}
Prove: ((x * (1 + x_6)) / 2) = x_3.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (41281)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0001/16_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0001/16_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0001/16_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0001/16_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0001/16_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0001/16_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0001/16_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0001/16_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0001/16_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.78ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0001/16_merged.c, line 22):
Let x = 1 + c.
Let x_1 = x * x.
Let x_2 = (x * (1 + x_1)) / 2.
Let x_3 = 2 + c.
Let x_4 = 2 * c.
Let x_5 = x * x * x.
Let x_6 = c * c.
Let x_7 = 3 * x_6.
Let x_8 = 6 * x_1.
Let x_9 = c * c * c.
Let x_10 = 6 * x_2.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_2 - x_1).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_2 = (x_9 + x_1).
  (* Invariant *)
  Have: x_2 = (x_1 + ((c * c * x) / 3)).
  (* Invariant *)
  Have: x_2 = (x_1 + ((c * x * (1 + x_4)) / 6)).
  (* Invariant *)
  Have: x_2 = (x_1 + ((c * (1 + x_6)) / 2)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: (c + x_7 + (2 * x_9) + x_8) = x_10.
  (* Invariant *)
  Have: (c + x_7 + x_9 + x_8) = x_10.
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: x_2 = x_5.
  (* Invariant *)
  Have: x_2 = ((x * x * x_3) / 3).
  (* Invariant *)
  Have: x_2 = ((x * x_3 * (3 + x_4)) / 6).
}
Prove: (1 + c + (3 * x_1) + (2 * x_5)) = x_10.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (10579)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (7ms) (142)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0001/16_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0001/16_merged.c, line 23):
Let x = 1 + c.
Let x_1 = x * x.
Let x_2 = 3 * x_1.
Let x_3 = x * x * x.
Let x_4 = (x * (1 + x_1)) / 2.
Let x_5 = 6 * x_4.
Let x_6 = 2 + c.
Let x_7 = 2 * c.
Let x_8 = c * c.
Let x_9 = 3 * x_8.
Let x_10 = 6 * x_1.
Let x_11 = c * c * c.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_4) /\
      is_sint32(x_4 - x_1).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_4 = (x_11 + x_1).
  (* Invariant *)
  Have: x_4 = (x_1 + ((c * c * x) / 3)).
  (* Invariant *)
  Have: x_4 = (x_1 + ((c * x * (1 + x_7)) / 6)).
  (* Invariant *)
  Have: x_4 = (x_1 + ((c * (1 + x_8)) / 2)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: (c + x_9 + (2 * x_11) + x_10) = x_5.
  (* Invariant *)
  Have: (c + x_9 + x_11 + x_10) = x_5.
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: x_4 = x_3.
  (* Invariant *)
  Have: x_4 = ((x * x * x_6) / 3).
  (* Invariant *)
  Have: x_4 = ((x * x_6 * (3 + x_7)) / 6).
  (* Invariant *)
  Have: (1 + c + x_2 + (2 * x_3)) = x_5.
}
Prove: (1 + c + x_2 + x_3) = x_5.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (42464)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0001/16_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0001/16_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0001/16_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0001/16_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0001/16_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0001/16_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0001/16_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/16_0001/16_merged.c, line 37):
Let x = c * c.
Let x_1 = 3 * x.
Let x_2 = c * c * c.
Let x_3 = (c * (1 + x)) / 2.
Let x_4 = 6 * x_3.
Let x_5 = 1 + c.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x_3).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_3 = x_2.
  (* Invariant *)
  Have: x_3 = ((c * c * x_5) / 3).
  (* Invariant *)
  Have: x_3 = ((c * x_5 * (1 + (2 * c))) / 6).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: (c + x_1 + (2 * x_2)) = x_4.
  (* Invariant *)
  Have: (c + x_1 + x_2) = x_4.
  (* Invariant *)
  Have: 0 <= c.
  (* Else *)
  Have: k <= c.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/16_0001/16_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/16_0001/16_merged.c:4: Warning: 
  No 'assigns' specification for function 'main16'.
  Callers assumptions might be imprecise.

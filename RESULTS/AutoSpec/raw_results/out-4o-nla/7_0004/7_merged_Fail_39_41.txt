[kernel] Parsing out/7_0004/7_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/7_0004/7_merged.c:44: Warning: 
  Body of function main7 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 41 goals scheduled
[wp] [Timeout] typed_main7_loop_invariant_2_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_main7_assert_missing_return (Qed 7ms) (Z3)
[wp] Proved goals:   39 / 41
  Qed:              25
  Alt-Ergo 2.5.4:    4 (50ms-252ms)
  Z3 4.8.12:        10 (10ms-856ms-4.2s)
  Timeout:           2
------------------------------------------------------------
  Function main7
------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 19):
Let x_1 = q * x.
Let x_2 = s_2 * x.
Let x_3 = x_1 + x_2.
Let x_4 = i * x_3.
Let x_5 = x_1 + x_2 + x_4.
Let x_6 = x - x_4.
Let x_7 = i_1 * x_6.
Let x_8 = p * x.
Let x_9 = r_2 * x.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(p) /\ is_sint32(q) /\
      is_sint32(r) /\ is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\
      is_sint32(s_1) /\ is_sint32(s_2) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_6).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: (x_1 + x_2 + x_7) = x.
  (* Invariant *)
  Have: (i_2 * x) = 0.
  (* Invariant *)
  Have: 0 <= (x + x_1 + x_2 + x_7).
  (* Invariant *)
  Have: (i_3 * x) = 0.
  (* Invariant *)
  Have: (i_4 * x) = x.
  (* Invariant *)
  Have: (x_1 + x_9) = 0.
  (* Invariant *)
  Have: x_9 = x_1.
  (* Invariant *)
  Have: (x_8 + x_1 + x_4) = x.
  (* Invariant *)
  Have: (p * s_2) = (1 + (q * r_2)).
  (* Invariant *)
  Have: (0 < x_3) /\ (x_4 < x).
  (* Invariant *)
  Have: (x_8 + x_9 + x_4) = x.
  (* Invariant *)
  Have: 0 <= (x_4 + x_7).
  (* Invariant *)
  Have: 0 < i_5.
  (* Invariant *)
  Have: x_4 <= (x + x_1 + x_2).
  (* Invariant *)
  Have: (((i_6 * x_3) + x_4) = x) \/ ((i_6 * x_6) = x_3).
  (* Then *)
  Have: x_5 != x.
  If x_5 < x
  Then { Have: (r_2 = r_1) /\ (s_2 = s) /\ (x_3 = b). Have: (r + s_2) = r_1.
  }
  Else {
    Let x_10 = s_1 * x.
    Let x_11 = i * (x_1 + x_10).
    Have: (r_2 = r) /\ (s_2 = s_1) /\ ((r_2 + s) = s_1) /\ ((a + x_11) = x).
    Have: (x_1 + x_10 + x_11) = (b + x).
  }
}
Prove: (s * x) = (b + (r * x)).
Prover Z3 4.8.12 returns Valid (Qed:63ms) (330ms) (677339)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 19):
Assume {
  Type: is_sint32(b) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < b.
}
Prove: x = b.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 20):
Let x_1 = q * x.
Let x_2 = s_2 * x.
Let x_3 = x_1 + x_2.
Let x_4 = i * x_3.
Let x_5 = x_1 + x_2 + x_4.
Let x_6 = x - x_4.
Let x_7 = i_1 * x_6.
Let x_8 = p * x.
Let x_9 = r_2 * x.
Let x_10 = r * x.
Assume {
  Type: is_sint32(a) /\ is_sint32(p) /\ is_sint32(q) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\
      is_sint32(s_2) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32((s * x) - x_10) /\ is_sint32(x_6).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: (x_1 + x_2 + x_7) = x.
  (* Invariant *)
  Have: (i_2 * x) = 0.
  (* Invariant *)
  Have: 0 <= (x + x_1 + x_2 + x_7).
  (* Invariant *)
  Have: (i_3 * x) = 0.
  (* Invariant *)
  Have: (i_4 * x) = x.
  (* Invariant *)
  Have: (x_1 + x_9) = 0.
  (* Invariant *)
  Have: x_9 = x_1.
  (* Invariant *)
  Have: (x_8 + x_1 + x_4) = x.
  (* Invariant *)
  Have: (p * s_2) = (1 + (q * r_2)).
  (* Invariant *)
  Have: (0 < x_3) /\ (x_4 < x).
  (* Invariant *)
  Have: (x_8 + x_9 + x_4) = x.
  (* Invariant *)
  Have: 0 <= (x_4 + x_7).
  (* Invariant *)
  Have: 0 < i_5.
  (* Invariant *)
  Have: x_4 <= (x + x_1 + x_2).
  (* Invariant *)
  Have: (((i_6 * x_3) + x_4) = x) \/ ((i_6 * x_6) = x_3).
  (* Then *)
  Have: x_5 != x.
  If x_5 < x
  Then {
    Have: (r_2 = r_1) /\ (s_2 = s) /\ ((x_1 + (x * (r_1 - s))) = 0).
    Have: (r + s) = r_1.
  }
  Else {
    Let x_11 = x * (s_1 - r_2).
    Let x_12 = s_1 * x.
    Have: (r_2 = r) /\ (s_2 = s_1) /\ ((r_2 + s) = s_1) /\
        ((a + x_11) = (x_1 + x_9 + x_12)) /\
        ((x_1 + x_9 + x_12 + (i * (x_1 + x_12))) = (x + x_11)).
  }
}
Prove: x_10 = 0.
Prover Z3 4.8.12 returns Valid (Qed:70ms) (40ms) (144762)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 21):
Let x_1 = q_1 * x.
Let x_2 = s_2 * x.
Let x_3 = x_1 + x_2.
Let x_4 = i * x_3.
Let x_5 = x_1 + x_2 + x_4.
Let x_6 = x - x_4.
Let x_7 = i_1 * x_6.
Let x_8 = p_2 * x.
Let x_9 = r_2 * x.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(p) /\ is_sint32(p_1) /\
      is_sint32(p_2) /\ is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\
      is_sint32(s_2) /\ is_sint32(x) /\ is_sint32(s * x) /\ is_sint32(x_3) /\
      is_sint32(x_6).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: (x_1 + x_2 + x_7) = x.
  (* Invariant *)
  Have: (i_2 * x) = 0.
  (* Invariant *)
  Have: 0 <= (x + x_1 + x_2 + x_7).
  (* Invariant *)
  Have: (i_3 * x) = 0.
  (* Invariant *)
  Have: (i_4 * x) = x.
  (* Invariant *)
  Have: (x_1 + x_9) = 0.
  (* Invariant *)
  Have: x_9 = x_1.
  (* Invariant *)
  Have: (x_8 + x_1 + x_4) = x.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_1 * r_2)).
  (* Invariant *)
  Have: (0 < x_3) /\ (x_4 < x).
  (* Invariant *)
  Have: (x_8 + x_9 + x_4) = x.
  (* Invariant *)
  Have: 0 <= (x_4 + x_7).
  (* Invariant *)
  Have: 0 < i_5.
  (* Invariant *)
  Have: x_4 <= (x + x_1 + x_2).
  (* Invariant *)
  Have: (((i_6 * x_3) + x_4) = x) \/ ((i_6 * x_6) = x_3).
  (* Then *)
  Have: x_5 != x.
  If x_5 < x
  Then {
    Let x_10 = x * (r_1 - s_2).
    Let x_11 = q * x.
    Let x_12 = x_11 + x_2.
    Let x_13 = i * x_12.
    Let x_14 = s_2 * (x_11 + x_2 + (i_1 * (x - x_13))).
    Have: (p_2 = p_1) /\ (q_1 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        ((a_1 + x_13) = x) /\ ((x_10 + x_14) = x_12).
    Have: (a + x_10 + x_13 + x_14) = x.
    Have: (p + q) = p_1.
    Have: (r + s_2) = r_1.
  }
  Else {
    Let x_15 = p + q.
    Let x_16 = x * (s_1 - r).
    Let x_17 = s_1 * x.
    Let x_18 = x * x_15.
    Let x_19 = x_17 + x_18.
    Have: (p_2 = p) /\ (r_2 = r) /\ (s_2 = s_1) /\ (x_15 = q_1) /\
        ((r + s) = s_1) /\ ((a + x_16) = x_19) /\
        ((x_17 + x_18 + (i * x_19)) = (x + x_16)).
  }
  (* Invariant *)
  Have: (r * x) = 0.
}
Prove: ((p * x) + x_11) = a.
Prover Z3 4.8.12 returns Valid (Qed:80ms) (540ms) (1037442)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 22):
Let x_1 = q_2 * x.
Let x_2 = s_2 * x.
Let x_3 = x_1 + x_2.
Let x_4 = i * x_3.
Let x_5 = x_1 + x_2 + x_4.
Let x_6 = x - x_4.
Let x_7 = i_1 * x_6.
Let x_8 = p_2 * x.
Let x_9 = r_2 * x.
Assume {
  Type: is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x) /\ is_sint32(s * x) /\ is_sint32((p * x) + (q * x)) /\
      is_sint32(x_3) /\ is_sint32(x_6).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: (x_1 + x_2 + x_7) = x.
  (* Invariant *)
  Have: (i_2 * x) = 0.
  (* Invariant *)
  Have: 0 <= (x + x_1 + x_2 + x_7).
  (* Invariant *)
  Have: (i_3 * x) = 0.
  (* Invariant *)
  Have: (i_4 * x) = x.
  (* Invariant *)
  Have: (x_1 + x_9) = 0.
  (* Invariant *)
  Have: x_9 = x_1.
  (* Invariant *)
  Have: (x_8 + x_1 + x_4) = x.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: (0 < x_3) /\ (x_4 < x).
  (* Invariant *)
  Have: (x_8 + x_9 + x_4) = x.
  (* Invariant *)
  Have: 0 <= (x_4 + x_7).
  (* Invariant *)
  Have: 0 < i_5.
  (* Invariant *)
  Have: x_4 <= (x + x_1 + x_2).
  (* Invariant *)
  Have: (((i_6 * x_3) + x_4) = x) \/ ((i_6 * x_6) = x_3).
  (* Then *)
  Have: x_5 != x.
  If x_5 < x
  Then {
    Let x_10 = x * (r_1 - s).
    Let x_11 = q * x.
    Let x_12 = s * x.
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (x_10 = x_11) /\
        ((x_11 + x_12 + (x * (p_1 - q)) + x_10 + (i * (x_12 + x_10))) = x).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_13 = x * (q_1 - p_2).
    Let x_14 = x_8 + x_13 + (x * (s_1 - r_2)).
    Have: (p_2 = p) /\ (q_2 = q_1) /\ (r_2 = r) /\ (s_2 = s_1) /\
        ((p_2 + q) = q_1) /\ ((r_2 + s) = s_1) /\
        (x_14 = ((q_1 * x) + (s_1 * x))) /\ ((x_8 + x_13 + (i * x_14)) = x).
  }
  (* Invariant *)
  Have: (r * x) = 0.
}
Prove: (p * s) = (1 + (q * r)).
Prover Z3 4.8.12 returns Valid (Qed:96ms) (130ms) (405630)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 23):
Let x_1 = q - p.
Let x_2 = s_1 - s.
Let x_3 = s_1 * x.
Let x_4 = p * x.
Let x_5 = s * x.
Let x_6 = x * x_1.
Let x_7 = x_4 + x_5 + x_6.
Let x_8 = i * s_1 * x.
Let x_9 = x_3 + x_8.
Let x_10 = x - x_8.
Let x_11 = i_1 * x_10.
Assume {
  Type: is_sint32(p) /\ is_sint32(q) /\ is_sint32(s) /\ is_sint32(s_1) /\
      is_sint32(x) /\ is_sint32(x_5) /\ is_sint32(x_3) /\ is_sint32(x_1) /\
      is_sint32(x_2) /\ is_sint32(x_10) /\ is_sint32(x_4 + x_6) /\
      is_sint32(x_7).
  (* Residual *)
  When: x <= x_9.
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: (x_3 + x_11) = x.
  (* Invariant *)
  Have: (i_2 * x) = 0.
  (* Invariant *)
  Have: 0 <= (x + x_3 + x_11).
  (* Invariant *)
  Have: (i_3 * x) = 0.
  (* Invariant *)
  Have: (i_4 * x) = x.
  (* Invariant *)
  Have: (q * x) = 0.
  (* Invariant *)
  Have: (x_4 + x_8) = x.
  (* Invariant *)
  Have: (p * s_1) = (1 + (q * x_2)).
  (* Invariant *)
  Have: (0 < x_3) /\ (x_8 < x).
  (* Invariant *)
  Have: 0 <= (x_8 + x_11).
  (* Invariant *)
  Have: 0 < i_5.
  (* Invariant *)
  Have: x_8 <= (x + x_3).
  (* Invariant *)
  Have: (((i_6 * s_1 * x) + x_8) = x) \/ ((i_6 * x_10) = x_3).
  (* Then *)
  Have: x_9 != x.
  Have: (x_3 = x_7) /\ ((x_4 + x_6 + (i * x_7)) = x).
  (* Invariant *)
  Have: (x * x_2) = 0.
  (* Invariant *)
  Have: (p * s) = (1 + (x_1 * x_2)).
}
Prove: x_6 = 0.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:91ms) (50ms) (1855)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 25):
Let x_1 = r * x.
Let x_2 = q * x.
Let x_3 = q_2 * x.
Let x_4 = s_2 * x.
Let x_5 = x_3 + x_4.
Let x_6 = i * x_5.
Let x_7 = x_3 + x_4 + x_6.
Let x_8 = x - x_6.
Let x_9 = i_1 * x_8.
Let x_10 = p_2 * x.
Let x_11 = r_2 * x.
Let x_12 = (p * x) + x_2.
Let x_13 = x_2 + (s * x).
Assume {
  Type: is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x) /\ is_sint32(x_12) /\ is_sint32(x_13) /\ is_sint32(x_5) /\
      is_sint32(x_8).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: (x_3 + x_4 + x_9) = x.
  (* Invariant *)
  Have: (i_2 * x) = 0.
  (* Invariant *)
  Have: 0 <= (x + x_3 + x_4 + x_9).
  (* Invariant *)
  Have: (i_3 * x) = 0.
  (* Invariant *)
  Have: (i_4 * x) = x.
  (* Invariant *)
  Have: (x_3 + x_11) = 0.
  (* Invariant *)
  Have: x_11 = x_3.
  (* Invariant *)
  Have: (x_10 + x_3 + x_6) = x.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: (0 < x_5) /\ (x_6 < x).
  (* Invariant *)
  Have: (x_10 + x_11 + x_6) = x.
  (* Invariant *)
  Have: 0 <= (x_6 + x_9).
  (* Invariant *)
  Have: 0 < i_5.
  (* Invariant *)
  Have: x_6 <= (x + x_3 + x_4).
  (* Invariant *)
  Have: (((i_6 * x_5) + x_6) = x) \/ ((i_6 * x_8) = x_5).
  (* Then *)
  Have: x_7 != x.
  If x_7 < x
  Then {
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (((s * x) + (2 * x_2) + (x * (p_1 - q)) + (i * x_13)) = x).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_14 = x * (q_1 - p_2).
    Let x_15 = x_10 + (x * (s_1 - r_2)) + (2 * x_14).
    Have: (p_2 = p) /\ (q_2 = q_1) /\ (r_2 = r) /\ (s_2 = s_1) /\
        ((p_2 + q) = q_1) /\ ((r_2 + s) = s_1) /\
        (x_15 = ((q_1 * x) + (s_1 * x))) /\ ((x_10 + x_14 + (i * x_15)) = x).
  }
  (* Invariant *)
  Have: (x_2 + x_1) = 0.
  (* Invariant *)
  Have: x_1 = x_2.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
}
Prove: (0 < x_12) /\ (0 < x_13).
Prover Z3 4.8.12 returns Valid (Qed:85ms) (110ms) (354072)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (14ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 28):
Let x_1 = p * x.
Let x_2 = r * x.
Let x_3 = x_1 + x_2.
Let x_4 = q * x.
Let x_5 = s * x.
Let x_6 = x_4 + x_5.
Let x_7 = q_1 * x.
Let x_8 = s_1 * x.
Let x_9 = x_7 + x_8.
Let x_10 = i_1 * x_9.
Let x_11 = x_7 + x_8 + x_10.
Let x_12 = x - x_10.
Let x_13 = i * x_12.
Let x_14 = p_2 * x.
Let x_15 = r_2 * x.
Let x_16 = x + x_7 + x_8 + x_13.
Assume {
  Type: is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_2) /\ is_sint32(q_1) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_2) /\ is_sint32(s_1) /\
      is_sint32(x) /\ is_sint32(x_3) /\ is_sint32(x_6) /\ is_sint32(x_9) /\
      is_sint32(x_12).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: (x_7 + x_8 + x_13) = x.
  (* Invariant *)
  Have: (i_2 * x) = 0.
  (* Invariant *)
  Have: 0 <= x_16.
  (* Invariant *)
  Have: (i_3 * x) = 0.
  (* Invariant *)
  Have: (i_4 * x) = x.
  (* Invariant *)
  Have: (x_7 + x_15) = 0.
  (* Invariant *)
  Have: x_15 = x_7.
  (* Invariant *)
  Have: (x_14 + x_7 + x_10) = x.
  (* Invariant *)
  Have: (p_2 * s_1) = (1 + (q_1 * r_2)).
  (* Invariant *)
  Have: (0 < x_9) /\ (x_10 < x).
  (* Invariant *)
  Have: (x_14 + x_15 + x_10) = x.
  (* Invariant *)
  Have: 0 <= (x_10 + x_13).
  (* Invariant *)
  Have: 0 < i_5.
  (* Invariant *)
  Have: x_10 <= (x + x_7 + x_8).
  (* Invariant *)
  Have: (((i_6 * x_9) + x_10) = x) \/ ((i_6 * x_12) = x_9).
  (* Then *)
  Have: x_11 != x.
  If x_11 < x
  Then {
    Have: (p_2 = p_1) /\ (q_1 = q) /\ (r_2 = r_1) /\ (s_1 = s) /\
        ((x_4 + x_5 + (x * (p_1 - q)) + (x * (r_1 - s)) + (i_1 * x_6)) = x).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_17 = x_14 + x_15 + (x * (q_2 - p_2)) + (x * (s_2 - r_2)).
    Have: (p_2 = p) /\ (q_1 = q_2) /\ (r_2 = r) /\ (s_1 = s_2) /\
        ((p_2 + q) = q_2) /\ ((r_2 + s) = s_2) /\
        (x_17 = ((q_2 * x) + (s_2 * x))) /\
        ((x_14 + x_15 + (i_1 * x_17)) = x).
  }
  (* Invariant *)
  Have: (x_4 + x_2) = 0.
  (* Invariant *)
  Have: x_2 = x_4.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: (0 < x_3) /\ (0 < x_6).
}
Prove: (x_1 + x_4 + x_2 + x_5) <= x_16.
Prover Z3 4.8.12 returns Valid (Qed:89ms) (550ms) (1294117)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 31):
Let x_1 = p * x.
Let x_2 = q * x.
Let x_3 = r * x.
Let x_4 = s * x.
Let x_5 = x_1 + x_2 + x_3 + x_4.
Let x_6 = q_2 * x.
Let x_7 = s_2 * x.
Let x_8 = x_6 + x_7.
Let x_9 = i * x_8.
Let x_10 = x - x_9.
Let x_11 = i_1 * x_10.
Let x_12 = x + x_6 + x_7 + x_11.
Let x_13 = x_1 + x_3.
Let x_14 = x_2 + x_4.
Let x_15 = x_6 + x_7 + x_9.
Let x_16 = p_2 * x.
Let x_17 = r_2 * x.
Assume {
  Type: is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x) /\ is_sint32(x_13) /\ is_sint32(x_14) /\ is_sint32(x_8) /\
      is_sint32(x_10).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: (x_6 + x_7 + x_11) = x.
  (* Invariant *)
  Have: (i_2 * x) = 0.
  (* Invariant *)
  Have: 0 <= x_12.
  (* Invariant *)
  Have: (i_3 * x) = 0.
  (* Invariant *)
  Have: (i_4 * x) = x.
  (* Invariant *)
  Have: (x_6 + x_17) = 0.
  (* Invariant *)
  Have: x_17 = x_6.
  (* Invariant *)
  Have: (x_16 + x_6 + x_9) = x.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: (0 < x_8) /\ (x_9 < x).
  (* Invariant *)
  Have: (x_16 + x_17 + x_9) = x.
  (* Invariant *)
  Have: 0 <= (x_9 + x_11).
  (* Invariant *)
  Have: 0 < i_5.
  (* Invariant *)
  Have: x_9 <= (x + x_6 + x_7).
  (* Invariant *)
  Have: (((i_6 * x_8) + x_9) = x) \/ ((i_6 * x_10) = x_8).
  (* Then *)
  Have: x_15 != x.
  If x_15 < x
  Then {
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        ((x_2 + x_4 + (x * (p_1 - q)) + (x * (r_1 - s)) + (i * x_14)) = x).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_18 = x_16 + x_17 + (x * (q_1 - p_2)) + (x * (s_1 - r_2)).
    Have: (p_2 = p) /\ (q_2 = q_1) /\ (r_2 = r) /\ (s_2 = s_1) /\
        ((p_2 + q) = q_1) /\ ((r_2 + s) = s_1) /\
        (x_18 = ((q_1 * x) + (s_1 * x))) /\ ((x_16 + x_17 + (i * x_18)) = x).
  }
  (* Invariant *)
  Have: (x_2 + x_3) = 0.
  (* Invariant *)
  Have: x_3 = x_2.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: (0 < x_13) /\ (0 < x_14).
  (* Invariant *)
  Have: x_5 <= x_12.
}
Prove: 0 <= x_5.
Prover Z3 4.8.12 returns Valid (Qed:109ms) (10ms) (41847)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 32):
Let x_1 = p * x.
Let x_2 = q * x.
Let x_3 = r * x.
Let x_4 = s * x.
Let x_5 = x_1 + x_2 + x_3 + x_4.
Let x_6 = q_2 * x.
Let x_7 = s_2 * x.
Let x_8 = x_6 + x_7.
Let x_9 = i * x_8.
Let x_10 = x - x_9.
Let x_11 = i_1 * x_10.
Let x_12 = x + x_6 + x_7 + x_11.
Let x_13 = x_1 + x_3.
Let x_14 = x_2 + x_4.
Let x_15 = x_6 + x_7 + x_9.
Let x_16 = p_2 * x.
Let x_17 = r_2 * x.
Assume {
  Type: is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x) /\ is_sint32(x_13) /\ is_sint32(x_14) /\ is_sint32(x_8) /\
      is_sint32(x_10).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: (x_6 + x_7 + x_11) = x.
  (* Invariant *)
  Have: (i_2 * x) = 0.
  (* Invariant *)
  Have: 0 <= x_12.
  (* Invariant *)
  Have: (i_3 * x) = 0.
  (* Invariant *)
  Have: (i_4 * x) = x.
  (* Invariant *)
  Have: (x_6 + x_17) = 0.
  (* Invariant *)
  Have: x_17 = x_6.
  (* Invariant *)
  Have: (x_16 + x_6 + x_9) = x.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: (0 < x_8) /\ (x_9 < x).
  (* Invariant *)
  Have: (x_16 + x_17 + x_9) = x.
  (* Invariant *)
  Have: 0 <= (x_9 + x_11).
  (* Invariant *)
  Have: 0 < i_5.
  (* Invariant *)
  Have: x_9 <= (x + x_6 + x_7).
  (* Invariant *)
  Have: (((i_6 * x_8) + x_9) = x) \/ ((i_6 * x_10) = x_8).
  (* Then *)
  Have: x_15 != x.
  If x_15 < x
  Then {
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        ((x_2 + x_4 + (x * (p_1 - q)) + (x * (r_1 - s)) + (i * x_14)) = x).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_18 = x_16 + x_17 + (x * (q_1 - p_2)) + (x * (s_1 - r_2)).
    Have: (p_2 = p) /\ (q_2 = q_1) /\ (r_2 = r) /\ (s_2 = s_1) /\
        ((p_2 + q) = q_1) /\ ((r_2 + s) = s_1) /\
        (x_18 = ((q_1 * x) + (s_1 * x))) /\ ((x_16 + x_17 + (i * x_18)) = x).
  }
  (* Invariant *)
  Have: (x_2 + x_3) = 0.
  (* Invariant *)
  Have: x_3 = x_2.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: (0 < x_13) /\ (0 < x_14).
  (* Invariant *)
  Have: x_5 <= x_12.
  (* Invariant *)
  Have: 0 <= x_5.
}
Prove: exists i_7 : Z. (x_2 + x_4 + (i_7 * x_13)) = x.
Prover Z3 4.8.12 returns Valid (Qed:99ms) (570ms) (1378483)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 32):
Assume { Type: is_sint32(a). (* Pre-condition *) Have: 0 < a. }
Prove: exists i : Z. (a * i) = 0.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (108ms) (1867)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 33):
Let x_1 = p * x.
Let x_2 = r * x.
Let x_3 = x_1 + x_2.
Let x_4 = i * x_3.
Let x_5 = q * x.
Let x_6 = s * x.
Let x_7 = x_5 + x_6.
Let x_8 = i_2 * x_7.
Let x_9 = x - x_8.
Let x_10 = i_1 * x_9.
Let x_11 = q_1 * x.
Let x_12 = s_1 * x.
Let x_13 = x_5 + x_6 + x_8.
Let x_14 = p_2 * x.
Let x_15 = r_2 * x.
Let x_16 = x_5 + x_6 + x_10 - x_4.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(p) /\ is_sint32(p_1) /\
      is_sint32(p_2) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(q) /\
      is_sint32(r) /\ is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s_1) /\
      is_sint32(s_2) /\ is_sint32(s) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_7) /\ is_sint32(x_9) /\ is_sint32(x_16).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: (x_5 + x_6 + x_10) = x.
  (* Invariant *)
  Have: (i_3 * x) = 0.
  (* Invariant *)
  Have: 0 <= (x + x_5 + x_6 + x_10).
  (* Invariant *)
  Have: (i_4 * x) = 0.
  (* Invariant *)
  Have: (i_5 * x) = x.
  (* Invariant *)
  Have: (x_5 + x_15) = 0.
  (* Invariant *)
  Have: x_15 = x_5.
  (* Invariant *)
  Have: (x_14 + x_5 + x_8) = x.
  (* Invariant *)
  Have: (p_2 * s) = (1 + (q * r_2)).
  (* Invariant *)
  Have: (0 < x_7) /\ (x_8 < x).
  (* Invariant *)
  Have: (x_14 + x_15 + x_8) = x.
  (* Invariant *)
  Have: 0 <= (x_8 + x_10).
  (* Invariant *)
  Have: 0 < i_6.
  (* Invariant *)
  Have: x_8 <= (x + x_5 + x_6).
  (* Invariant *)
  Have: (((i_7 * x_7) + x_8) = x) \/ ((i_7 * x_9) = x_7).
  (* Then *)
  Have: x_13 != x.
  If x_13 < x
  Then {
    Let x_17 = i_1 * (x - (i_2 * (x_11 + x_12))).
    Let x_18 = x * (p_1 - q_1).
    Let x_19 = x * (r_1 - s_1).
    Let x_20 = i * (x_18 + x_19).
    Have: (p_2 = p_1) /\ (q = q_1) /\ (r_2 = r_1) /\ (s = s_1) /\
        (x_17 = x_20) /\ ((x_11 + x_12 + x_18 + x_19 + x_17) = (a + x_20)) /\
        ((x_11 + x_12 + x_18 + x_19 + x_17
          + (i_2 * (x_11 + x_12 + x_17 - x_20))) = (x + x_20)).
    Have: (p + q_1) = p_1.
    Have: (r + s_1) = r_1.
  }
  Else {
    Let x_21 = i * (x_14 + x_15).
    Let x_22 = q_2 * x.
    Let x_23 = s_2 * x.
    Let x_24 = i_1 * (x - (i_2 * (x_22 + x_23))).
    Have: (p_2 = p) /\ (q = q_2) /\ (r_2 = r) /\ (s = s_2) /\
        ((p_2 + q_1) = q_2) /\ ((r_2 + s_1) = s_2) /\
        (x_21 = (x_14 + x_15 + x_24)) /\
        ((x_14 + x_22 + x_15 + x_23 + x_24) = (b + x_21)) /\
        ((x_14 + x_15 + (i_2 * (x_14 + x_22 + x_15 + x_23 + x_24 - x_21)))
           = x).
  }
  (* Invariant *)
  Have: (x_5 + x_2 + x_6 + x_10) = (x_12 + x_4).
  (* Invariant *)
  Have: (x_2 + x_12 + x_4) = x.
  (* Invariant *)
  Have: x_2 = x_11.
  (* Invariant *)
  Have: (p * s_1) = (1 + (q_1 * r)).
  (* Invariant *)
  Have: (x_11 + x_12 + x_4) = x.
  (* Invariant *)
  Have: (0 < x_3) /\ (x_4 < x).
  (* Invariant *)
  Have: x_3 <= (x + x_4).
  (* Invariant *)
  Have: x_4 <= (x_1 + x_5 + x_2 + x_6 + x_10).
}
Prove: exists i_8 : Z. (x_1 + x_2 + (i_8 * x_16)) = x.
Prover Z3 4.8.12 returns Valid (Qed:107ms) (2s) (4108734)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 33):
Assume {
  Type: is_sint32(y).
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: (i * y) = 0.
}
Prove: exists i_1 : Z. (y * i_1) = 0.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (169ms) (3301)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 34):
Let x_1 = q * x.
Let x_2 = s * x.
Let x_3 = x_1 + x_2.
Let x_4 = i * x_3.
Let x_5 = x - x_4.
Let x_6 = i_2 * x_5.
Let x_7 = p * x.
Let x_8 = r * x.
Let x_9 = q_2 * x.
Let x_10 = s_2 * x.
Let x_11 = x_9 + x_10.
Let x_12 = i_1 * x_11.
Let x_13 = x_9 + x_10 + x_12.
Let x_14 = x - x_12.
Let x_15 = p_2 * x.
Let x_16 = r_2 * x.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(p) /\ is_sint32(p_1) /\
      is_sint32(p_2) /\ is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\
      is_sint32(r) /\ is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\
      is_sint32(s_1) /\ is_sint32(s_2) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_11) /\ is_sint32(x_5) /\ is_sint32(x_14).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: (x_1 + x_2 + x_6) = x.
  (* Invariant *)
  Have: (i_3 * x) = 0.
  (* Invariant *)
  Have: 0 <= (x + x_1 + x_2 + x_6).
  (* Invariant *)
  Have: (i_4 * x) = 0.
  (* Invariant *)
  Have: (i_5 * x) = x.
  (* Invariant *)
  Have: (x_9 + x_16) = 0.
  (* Invariant *)
  Have: x_16 = x_9.
  (* Invariant *)
  Have: (x_15 + x_9 + x_12) = x.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: (0 < x_11) /\ (x_12 < x).
  (* Invariant *)
  Have: (x_15 + x_16 + x_12) = x.
  (* Invariant *)
  Have: x_11 <= (x_1 + x_2 + x_12 + x_6).
  (* Invariant *)
  Have: 0 < i_6.
  (* Invariant *)
  Have: x_12 <= (x + x_9 + x_10).
  (* Invariant *)
  Have: (x_9 + x_10 + (i_7 * x_14)) = x.
  (* Invariant *)
  Have: (((i_8 * x_11) + x_12) = x) \/ ((i_8 * x_14) = x_11).
  (* Then *)
  Have: x_13 != x.
  If x_13 < x
  Then {
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        ((a + x_4) = (x + x_1 + x_2)) /\ (x_4 = (x_1 + x_2 + (i_1 * x_3))).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_17 = x * (q_1 - p_2).
    Let x_18 = x * (s_1 - r_2).
    Let x_19 = i * (x_17 + x_18).
    Let x_20 = x + x_17 + x_18.
    Have: (p_2 = p) /\ (q_2 = q_1) /\ (r_2 = r) /\ (s_2 = s_1) /\
        ((p_2 + q) = q_1) /\ ((r_2 + s) = s_1) /\ ((b + x_19) = x_20) /\
        (((q_1 * x) + (s_1 * x) + x_19) = x_20) /\
        ((i_1 * (x + x_17 + x_18 - x_19)) = x_19).
  }
  (* Invariant *)
  Have: (x_1 + x_8) = 0.
  (* Invariant *)
  Have: x_8 = x_1.
  (* Invariant *)
  Have: (x_7 + x_1 + x_4) = x.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: (0 < x_3) /\ (x_4 < x).
  (* Invariant *)
  Have: (x_7 + x_8 + x_4) = x.
  (* Invariant *)
  Have: 0 <= (x_4 + x_6).
  (* Invariant *)
  Have: x_4 <= (x + x_1 + x_2).
}
Prove: exists i_9 : Z. ((x_4 + (i_9 * x_3)) = x) \/ ((i_9 * x_5) = x_3).
Prover Z3 4.8.12 returns Valid (Qed:105ms) (4.2s) (8292814)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 34):
Assume {
  Type: is_sint32(b).
  (* Pre-condition *)
  Have: 0 < b.
  (* Invariant *)
  Have: (b * i) = 0.
  (* Invariant *)
  Have: (b * i_1) = 0.
}
Prove: exists i_2 : Z. (b * i_2) = b.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (252ms) (4664)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Assertion (file out/7_0004/7_merged.c, line 57):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/7_0004/7_merged.c, line 58):
Let x_1 = q * x.
Let x_2 = s * x.
Let x_3 = x_1 + x_2.
Let x_4 = p * x.
Let x_5 = r * x.
Assume {
  Type: is_sint32(p) /\ is_sint32(q) /\ is_sint32(r) /\ is_sint32(s) /\
      is_sint32(x) /\ is_sint32(x_3).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: (i * x) = 0.
  (* Invariant *)
  Have: (i_1 * x) = 0.
  (* Invariant *)
  Have: (i_2 * x) = x.
  (* Invariant *)
  Have: (x_1 + x_5) = 0.
  (* Invariant *)
  Have: x_5 = x_1.
  (* Invariant *)
  Have: x_2 = x_4.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: 0 < x_3.
  (* Invariant *)
  Have: x_3 = (x_4 + x_5).
  (* Invariant *)
  Have: x_3 <= x.
  (* Invariant *)
  Have: (x_1 + x_2 + (i_3 * x_3)) = x.
  (* Invariant *)
  Have: (x_1 + x_2 + (i_4 * x_3)) = x.
  (* Invariant *)
  Have: (i_5 * x_3) = x_3.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/7_0004/7_merged.c, line 37):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/7_0004/7_merged.c:5: Warning: 
  No 'assigns' specification for function 'main7'.
  Callers assumptions might be imprecise.

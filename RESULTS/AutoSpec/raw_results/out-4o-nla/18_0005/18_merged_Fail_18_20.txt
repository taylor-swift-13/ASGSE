[kernel] Parsing out/18_0005/18_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/18_0005/18_merged.c:25: Warning: 
  Body of function main18 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 20 goals scheduled
[wp] [Timeout] typed_main18_loop_invariant_4_preserved (Qed 4ms) (Z3)
[wp] [Timeout] typed_main18_assert_missing_return (Qed 3ms) (Z3)
[wp] Proved goals:   18 / 20
  Qed:              15
  Alt-Ergo 2.5.4:    2 (8ms-56ms)
  Z3 4.8.12:         1 (20ms)
  Timeout:           2
------------------------------------------------------------
  Function main18
------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0005/18_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0005/18_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0005/18_merged.c, line 13):
Let x = y * y * y * y * y.
Let x_1 = 1 + y.
Let x_2 = x + (x_1 * x_1 * x_1 * x_1).
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x_1) /\ is_sint32(x) /\
      is_sint32(x_2).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: (y * y * y * y) = 0.
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: (y + (24 * x)) = (10 * (y * y * y)).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y < k.
  Have: ((1 - y) / 6) = y.
}
Prove: (x_1 * x_1 * x_1 * x_1 * x_1) = x_2.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (20ms) (41889)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0005/18_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0005/18_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0005/18_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0005/18_merged.c, line 15):
Let x = 1 + c.
Let x_1 = x * x * x * x.
Let x_2 = x * x * x * x * x.
Let x_3 = c * c * c * c * c.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_2 - x_1).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_2 = (x_3 + x_1).
  (* Invariant *)
  Have: (x_3 + ((1 - c) / 6) + x_1) = (c + x_2).
  (* Invariant *)
  Have: (c * c * c * c) = 0.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: ((10 * (c * c * c)) + (6 * x_3) + (30 * x_1)) = (c + (30 * x_2)).
  (* Invariant *)
  Have: x_1 <= x_2.
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
}
Prove: ((c * (x_1 - 1)) / 6) = x.
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0005/18_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0005/18_merged.c, line 16):
Let x = 1 + c.
Let x_1 = x * x * x * x.
Let x_2 = x * x * x * x * x.
Let x_3 = c * c * c * c * c.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_2 - x_1).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_2 = (x_3 + x_1).
  (* Invariant *)
  Have: (x_3 + ((1 - c) / 6) + x_1) = (c + x_2).
  (* Invariant *)
  Have: (c * c * c * c) = 0.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: ((10 * (c * c * c)) + (6 * x_3) + (30 * x_1)) = (c + (30 * x_2)).
  (* Invariant *)
  Have: x_1 <= x_2.
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: ((c * (x_1 - 1)) / 6) = x.
}
Prove: x_1 = 0.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (38063)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (56ms) (911)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0005/18_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0005/18_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0005/18_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0005/18_merged.c, line 18):
Let x = 1 + c.
Let x_1 = -c.
Let x_2 = x_1 / 6.
Let x_3 = x * x * x * x * x.
Let x_4 = x_2 + x_3.
Let x_5 = 30 * x_2.
Let x_6 = 29 * c.
Let x_7 = c * c * c * c * c.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\
      is_sint32(x_2 + x_3 - 1 - c).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_4 = (1 + c + x_7).
  (* Invariant *)
  Have: x_4 = (1 + x_7 + ((1 - c) / 6)).
  (* Invariant *)
  Have: (c * c * c * c) = 0.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: (x_5 + (30 * x_3)) = (30 + x_6 + (10 * (c * c * c)) + (6 * x_7)).
  (* Invariant *)
  Have: c < x_4.
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: x_2 = x.
  (* Invariant *)
  Have: (x * x * x * x) = 0.
}
Prove: (x_5 + (24 * x_3)) = (29 + x_6 + (10 * (x * x * x))).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (37015)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (8ms) (191)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0005/18_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0005/18_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0005/18_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/18_0005/18_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/18_0005/18_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/18_0005/18_merged.c, line 32):
Let x = c * c * c * c * c.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: ((1 - c) / 6) = c.
  (* Invariant *)
  Have: (c * c * c * c) = 0.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: (c + (24 * x)) = (10 * (c * c * c)).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= c.
  (* Else *)
  Have: k <= c.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/18_0005/18_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/18_0005/18_merged.c:4: Warning: 
  No 'assigns' specification for function 'main18'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/23_0001/23_merged.c (with preprocessing)
[kernel:typing:implicit-function-declaration] out/23_0001/23_merged.c:17: Warning: 
  Calling undeclared function unknown. Old style K&R code?
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/23_0001/23_merged.c:4: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 12 goals scheduled
[wp] [Timeout] typed_main23_loop_invariant_preserved (Qed 4ms) (Z3)
[wp] Proved goals:   11 / 12
  Qed:               7
  Alt-Ergo 2.5.4:    4 (4ms-6ms)
  Timeout:           1
------------------------------------------------------------
  Function main23
------------------------------------------------------------

Goal Preservation of Invariant (file out/23_0001/23_merged.c, line 9):
Let x_2 = x * x.
Let x_3 = x_1 * x_1.
Let x_4 = 1 + x.
Let x_5 = 1 + x_2.
Let x_6 = x_4 * x_4.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_4) /\ is_sint32(x_2) /\ is_sint32(x_3) /\ is_sint32(x_5).
  (* Pre-condition *)
  Have: (0 <= x_1) /\ (x_1 <= 10).
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: (0 <= x) /\ (x <= 10).
  (* Invariant *)
  Have: 0 <= x_2.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: (x_6 = x_5) \/ (x_6 = x_2).
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/23_0001/23_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/23_0001/23_merged.c, line 10):
Let x_2 = 1 + x.
Let x_3 = x_2 * x_2.
Let x_4 = x * x.
Let x_5 = 1 + x_4.
Let x_6 = x_1 * x_1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_2) /\ is_sint32(x_4) /\ is_sint32(x_6) /\ is_sint32(x_5).
  (* Pre-condition *)
  Have: (0 <= x_1) /\ (x_1 <= 10).
  (* Invariant *)
  Have: 0 <= x_6.
  (* Invariant *)
  Have: (0 <= x) /\ (x <= 10).
  (* Invariant *)
  Have: 0 <= x_4.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x_3 = x_5) \/ (x_3 = x_4).
}
Prove: x_4 < x_3.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (31348)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (4ms) (48)

------------------------------------------------------------

Goal Establishment of Invariant (file out/23_0001/23_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/23_0001/23_merged.c, line 11):
Let x_2 = x * x.
Let x_3 = 1 + x.
Let x_4 = x_3 * x_3.
Let x_5 = 1 + x_2.
Let x_6 = x_1 * x_1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_3) /\ is_sint32(x_2) /\ is_sint32(x_6) /\ is_sint32(x_5).
  (* Pre-condition *)
  Have: (0 <= x_1) /\ (x_1 <= 10).
  (* Invariant *)
  Have: 0 <= x_6.
  (* Invariant *)
  Have: (0 <= x) /\ (x <= 10).
  (* Invariant *)
  Have: 0 <= x_2.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x_4 = x_5) \/ (x_4 = x_2).
  (* Invariant *)
  Have: x_2 < x_4.
}
Prove: ((-1) <= x) /\ (x <= 9).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (31753)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (6ms) (120)

------------------------------------------------------------

Goal Establishment of Invariant (file out/23_0001/23_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (0.86ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/23_0001/23_merged.c, line 12):
Let x_2 = x * x.
Let x_3 = 1 + x.
Let x_4 = x_3 * x_3.
Let x_5 = 1 + x_2.
Let x_6 = x_1 * x_1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_3) /\ is_sint32(x_2) /\ is_sint32(x_6) /\ is_sint32(x_5).
  (* Pre-condition *)
  Have: (0 <= x_1) /\ (x_1 <= 10).
  (* Invariant *)
  Have: 0 <= x_6.
  (* Invariant *)
  Have: (0 <= x) /\ (x <= 10).
  (* Invariant *)
  Have: 0 <= x_2.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x_4 = x_5) \/ (x_4 = x_2).
  (* Invariant *)
  Have: x_2 < x_4.
  (* Invariant *)
  Have: ((-1) <= x) /\ (x <= 9).
}
Prove: x_4 <= x_5.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (31650)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (6ms) (113)

------------------------------------------------------------

Goal Establishment of Invariant (file out/23_0001/23_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/23_0001/23_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/23_0001/23_merged.c, line 13):
Let x_1 = x * x.
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 10).
}
Prove: 0 <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:0.74ms) (10ms) (29643)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:0.74ms) (4ms) (13)

------------------------------------------------------------

Goal Loop assigns (file out/23_0001/23_merged.c, line 14) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/23_0001/23_merged.c, line 14) (2/2):
Call Result at line 17
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/23_0001/23_merged.c:4: Warning: 
  No 'assigns' specification for function 'main23'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/23_0001/23_merged.c:17: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/5_0005/5_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/5_0005/5_merged.c:45: Warning: 
  Body of function main5 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 45 goals scheduled
[wp] [Failure] typed_main5_loop_invariant_preserved (Qed 26ms) (Z3)
[wp] [Failure] typed_main5_loop_invariant_2_preserved (Qed 67ms) (Z3)
[wp] [Failure] typed_main5_loop_invariant_3_preserved (Qed 58ms) (Z3)
[wp] [Failure] typed_main5_loop_invariant_7_preserved (Qed 64ms) (Z3)
[wp] [Failure] typed_main5_loop_invariant_7_established (Qed 2ms) (Z3)
[wp] [Failure] typed_main5_loop_invariant_8_preserved (Qed 72ms) (Z3)
[wp] [Failure] typed_main5_loop_invariant_9_preserved (Qed 68ms) (Z3)
[wp] [Failure] typed_main5_loop_invariant_12_preserved (Qed 69ms) (Z3)
[wp] [Failure] typed_main5_loop_invariant_12_established (Qed 2ms) (Z3)
[wp] [Failure] typed_main5_loop_invariant_13_preserved (Qed 69ms) (Z3)
[wp] [Failure] typed_main5_loop_invariant_14_established (Qed 2ms) (Z3)
[wp] [Failure] typed_main5_loop_invariant_14_preserved (Qed 76ms) (Z3)
[wp] [Failure] typed_main5_loop_invariant_15_preserved (Qed 84ms) (Z3)
[wp] [Failure] typed_main5_loop_invariant_17_preserved (Qed 102ms) (Z3)
[wp] [Failure] typed_main5_loop_invariant_19_preserved (Qed 117ms) (Z3)
[wp] [Failure] typed_main5_assert_missing_return (Qed 7ms) (Z3)
[wp] [Timeout] typed_main5_loop_invariant_15_established (Qed 2ms) (Z3)
[wp] Proved goals:   28 / 45
  Qed:            28
  Failed:         16
  Timeout:         1
------------------------------------------------------------
  Function main5
------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0005/5_merged.c, line 17):
Let x_1 = i_1 * x.
Let x_2 = i_1 * y.
Let x_3 = x_1 + x_2.
Let x_4 = i * x.
Let x_5 = i * y.
Let x_6 = x_4 + x_5.
Let x_7 = q * r.
Let x_8 = p * s.
Let x_9 = x_4 - x_2.
Let x_10 = -x_5.
Let x_11 = x_1 - x_5.
Let x_12 = r * y.
Let x_13 = p * x.
Let x_14 = s * y.
Let x_15 = q * x.
Let x_16 = i_2 * y.
Let x_17 = i_3 * x.
Let x_18 = i_2 * x.
Let x_19 = i_3 * y.
Let x_20 = q - p.
Let x_21 = s - r.
Assume {
  Type: is_sint32(p) /\ is_sint32(q) /\ is_sint32(r) /\ is_sint32(s) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_20) /\ is_sint32(x_21) /\
      is_sint32(x_11) /\ is_sint32(x_9) /\ is_sint32(x_17 - x_16) /\
      is_sint32(x_18 - x_19) /\ is_sint32(x_1 + x_2 - x_4 - x_5).
  (* Residual *)
  When: x_6 <= x_3.
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_17 = (y + x_16).
  (* Invariant *)
  Have: x_17 = (IAbs.abs(y) + x_16).
  (* Invariant *)
  Have: (x_16 < x_17) /\ (x_19 < x_18).
  (* Invariant *)
  Have: x_18 = (x + x_19).
  (* Invariant *)
  Have: x_18 = (IAbs.abs(x) + x_19).
  (* Invariant *)
  Have: (x_18 + x_17) <= (x + y + x_16 + x_19).
  (* Invariant *)
  Have: x_18 = (y + x_19).
  (* Invariant *)
  Have: x_16 = (x + x_17).
  (* Invariant *)
  Have: x_1 = (x_5 + x_15 + x_14).
  (* Invariant *)
  Have: x_4 = (x_2 + x_13 + x_12).
  (* Invariant *)
  Have: x_8 = (1 + x_7).
  (* Invariant *)
  Have: x_1 = (x_5 + IAbs.abs(x_15 - x_14)).
  (* Invariant *)
  Have: (x_5 < x_1) /\ (x_2 < x_4).
  (* Invariant *)
  Have: (q * s) = (p * q).
  (* Invariant *)
  Have: x_4 = (x_2 + IAbs.abs(x_13 - x_12)).
  (* Invariant *)
  Have: (x_4 + x_1) <= (x + y + x_5 + x_2).
  (* Invariant *)
  Have: (s * x_9) = (y + (r * x_11)).
  (* Invariant *)
  Have: (q * x_9) = (x + (p * x_11)).
  (* Invariant *)
  Have: IAbs.abs(x_8 - x_7) = 1.
  (* Then *)
  Have: x_3 != x_6.
}
Prove: (x_4 + x_5 + (x * x_20) + (y * x_21)) = x_3.
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0005/5_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.79ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0005/5_merged.c, line 18):
Let x_1 = i_1 * x.
Let x_2 = i_1 * y.
Let x_3 = x_1 + x_2.
Let x_4 = i * x.
Let x_5 = i * y.
Let x_6 = x_4 + x_5.
Let x_7 = q_2 * r_2.
Let x_8 = p_2 * s_2.
Let x_9 = x_4 - x_2.
Let x_10 = x_1 - x_5.
Let x_11 = r_2 * y.
Let x_12 = p_2 * x.
Let x_13 = s_2 * y.
Let x_14 = q_2 * x.
Let x_15 = i_2 * y.
Let x_16 = i_3 * x.
Let x_17 = i_2 * x.
Let x_18 = i_3 * y.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b) /\ is_sint32(p) /\
      is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\ is_sint32(q_1) /\
      is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\ is_sint32(r_2) /\
      is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\ is_sint32(x) /\
      is_sint32(y) /\ is_sint32((q * x) + (s * y)) /\ is_sint32(x_10) /\
      is_sint32(x_9) /\ is_sint32(x_16 - x_15) /\ is_sint32(x_17 - x_18).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_16 = (y + x_15).
  (* Invariant *)
  Have: x_16 = (IAbs.abs(y) + x_15).
  (* Invariant *)
  Have: (x_15 < x_16) /\ (x_18 < x_17).
  (* Invariant *)
  Have: x_17 = (x + x_18).
  (* Invariant *)
  Have: x_17 = (IAbs.abs(x) + x_18).
  (* Invariant *)
  Have: (x_17 + x_16) <= (x + y + x_15 + x_18).
  (* Invariant *)
  Have: x_17 = (y + x_18).
  (* Invariant *)
  Have: x_15 = (x + x_16).
  (* Invariant *)
  Have: x_1 = (x_5 + x_14 + x_13).
  (* Invariant *)
  Have: x_4 = (x_2 + x_12 + x_11).
  (* Invariant *)
  Have: x_8 = (1 + x_7).
  (* Invariant *)
  Have: x_1 = (x_5 + IAbs.abs(x_14 - x_13)).
  (* Invariant *)
  Have: (x_5 < x_1) /\ (x_2 < x_4).
  (* Invariant *)
  Have: (q_2 * s_2) = (p_2 * q_2).
  (* Invariant *)
  Have: x_4 = (x_2 + IAbs.abs(x_12 - x_11)).
  (* Invariant *)
  Have: (x_4 + x_1) <= (x + y + x_5 + x_2).
  (* Invariant *)
  Have: (s_2 * x_9) = (y + (r_2 * x_10)).
  (* Invariant *)
  Have: (q_2 * x_9) = (x + (p_2 * x_10)).
  (* Invariant *)
  Have: IAbs.abs(x_8 - x_7) = 1.
  (* Then *)
  Have: x_3 != x_6.
  If x_3 < x_6
  Then {
    Let x_19 = q * x.
    Let x_20 = s * y.
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (x_4 = (a_1 + x_2)) /\ (x_1 = (x_5 + x_19 + x_20)).
    Have: x_4 = (a + x_2 + x_19 + x_20).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_21 = x * (q_1 - p).
    Let x_22 = y * (s_1 - r).
    Have: (p_2 = p) /\ (q_2 = q_1) /\ (r_2 = r) /\ (s_2 = s_1) /\
        ((p + q) = q_1) /\ ((r + s) = s_1) /\ (x_1 = (b + x_5)) /\
        ((x_4 + x_5 + x_21 + x_22) = x_3) /\ (x_1 = (a + x_5 + x_21 + x_22)).
  }
}
Prove: ((p * x) + (r * y)) = a.
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0005/5_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.86ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0005/5_merged.c, line 19):
Let x_1 = i_1 * x.
Let x_2 = i_1 * y.
Let x_3 = x_1 + x_2.
Let x_4 = i * x.
Let x_5 = i * y.
Let x_6 = x_4 + x_5.
Let x_7 = q_2 * r_2.
Let x_8 = p_2 * s_2.
Let x_9 = x_4 - x_2.
Let x_10 = x_1 - x_5.
Let x_11 = r_2 * y.
Let x_12 = p_2 * x.
Let x_13 = s_2 * y.
Let x_14 = q_2 * x.
Let x_15 = i_2 * y.
Let x_16 = i_3 * x.
Let x_17 = i_2 * x.
Let x_18 = i_3 * y.
Assume {
  Type: is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32((p * x) + (r * y)) /\
      is_sint32((q * x) + (s * y)) /\ is_sint32(x_10) /\ is_sint32(x_9) /\
      is_sint32(x_16 - x_15) /\ is_sint32(x_17 - x_18).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_16 = (y + x_15).
  (* Invariant *)
  Have: x_16 = (IAbs.abs(y) + x_15).
  (* Invariant *)
  Have: (x_15 < x_16) /\ (x_18 < x_17).
  (* Invariant *)
  Have: x_17 = (x + x_18).
  (* Invariant *)
  Have: x_17 = (IAbs.abs(x) + x_18).
  (* Invariant *)
  Have: (x_17 + x_16) <= (x + y + x_15 + x_18).
  (* Invariant *)
  Have: x_17 = (y + x_18).
  (* Invariant *)
  Have: x_15 = (x + x_16).
  (* Invariant *)
  Have: x_1 = (x_5 + x_14 + x_13).
  (* Invariant *)
  Have: x_4 = (x_2 + x_12 + x_11).
  (* Invariant *)
  Have: x_8 = (1 + x_7).
  (* Invariant *)
  Have: x_1 = (x_5 + IAbs.abs(x_14 - x_13)).
  (* Invariant *)
  Have: (x_5 < x_1) /\ (x_2 < x_4).
  (* Invariant *)
  Have: (q_2 * s_2) = (p_2 * q_2).
  (* Invariant *)
  Have: x_4 = (x_2 + IAbs.abs(x_12 - x_11)).
  (* Invariant *)
  Have: (x_4 + x_1) <= (x + y + x_5 + x_2).
  (* Invariant *)
  Have: (s_2 * x_9) = (y + (r_2 * x_10)).
  (* Invariant *)
  Have: (q_2 * x_9) = (x + (p_2 * x_10)).
  (* Invariant *)
  Have: IAbs.abs(x_8 - x_7) = 1.
  (* Then *)
  Have: x_3 != x_6.
  If x_3 < x_6
  Then {
    Let x_19 = q * x.
    Let x_20 = s * y.
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (x_1 = (x_5 + x_19 + x_20)) /\
        (x_4 = (x_2 + x_19 + x_20 + (x * (p_1 - q)) + (y * (r_1 - s)))).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        (x_1 = (x_5 + x_19 + x_20 + (x * (q_1 - q)) + (y * (s_1 - s)))).
  }
}
Prove: (p * s) = (1 + (q * r)).
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0005/5_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0005/5_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0005/5_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0005/5_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0005/5_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0005/5_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0005/5_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0005/5_merged.c, line 23):
Let x_1 = i_1 * x.
Let x_2 = i_1 * y.
Let x_3 = x_1 + x_2.
Let x_4 = i * x.
Let x_5 = i * y.
Let x_6 = x_4 + x_5.
Let x_7 = q_2 * r_2.
Let x_8 = p_2 * s_2.
Let x_9 = x_4 - x_2.
Let x_10 = x_1 - x_5.
Let x_11 = r_2 * y.
Let x_12 = p_2 * x.
Let x_13 = s_2 * y.
Let x_14 = q_2 * x.
Let x_15 = i_2 * y.
Let x_16 = i_3 * x.
Let x_17 = i_2 * x.
Let x_18 = i_3 * y.
Let x_19 = q * x.
Let x_20 = s * y.
Let x_21 = x_19 + x_20.
Assume {
  Type: is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32((p * x) + (r * y)) /\
      is_sint32(x_21) /\ is_sint32(x_10) /\ is_sint32(x_9) /\
      is_sint32(x_16 - x_15) /\ is_sint32(x_17 - x_18).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_16 = (y + x_15).
  (* Invariant *)
  Have: x_16 = (IAbs.abs(y) + x_15).
  (* Invariant *)
  Have: (x_15 < x_16) /\ (x_18 < x_17).
  (* Invariant *)
  Have: x_17 = (x + x_18).
  (* Invariant *)
  Have: x_17 = (IAbs.abs(x) + x_18).
  (* Invariant *)
  Have: (x_17 + x_16) <= (x + y + x_15 + x_18).
  (* Invariant *)
  Have: x_17 = (y + x_18).
  (* Invariant *)
  Have: x_15 = (x + x_16).
  (* Invariant *)
  Have: x_1 = (x_5 + x_14 + x_13).
  (* Invariant *)
  Have: x_4 = (x_2 + x_12 + x_11).
  (* Invariant *)
  Have: x_8 = (1 + x_7).
  (* Invariant *)
  Have: x_1 = (x_5 + IAbs.abs(x_14 - x_13)).
  (* Invariant *)
  Have: (x_5 < x_1) /\ (x_2 < x_4).
  (* Invariant *)
  Have: (q_2 * s_2) = (p_2 * q_2).
  (* Invariant *)
  Have: x_4 = (x_2 + IAbs.abs(x_12 - x_11)).
  (* Invariant *)
  Have: (x_4 + x_1) <= (x + y + x_5 + x_2).
  (* Invariant *)
  Have: (s_2 * x_9) = (y + (r_2 * x_10)).
  (* Invariant *)
  Have: (q_2 * x_9) = (x + (p_2 * x_10)).
  (* Invariant *)
  Have: IAbs.abs(x_8 - x_7) = 1.
  (* Then *)
  Have: x_3 != x_6.
  If x_3 < x_6
  Then {
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (x_1 = (x_5 + x_19 + x_20)) /\
        (x_4 = (x_2 + x_19 + x_20 + (x * (p_1 - q)) + (y * (r_1 - s)))).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        (x_1 = (x_5 + x_19 + x_20 + (x * (q_1 - q)) + (y * (s_1 - s)))).
  }
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
}
Prove: x_21 = IAbs.abs(x_19 - x_20).
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0005/5_merged.c, line 23):
Assume {
  Type: is_sint32(a) /\ is_sint32(b).
  (* Pre-condition *)
  Have: 0 < a.
  (* Pre-condition *)
  Have: 0 < b.
}
Prove: IAbs.abs(b) = b.
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0005/5_merged.c, line 24):
Let x_1 = q * x.
Let x_2 = s * y.
Let x_3 = x_1 + x_2.
Let x_4 = i_1 * x.
Let x_5 = i_1 * y.
Let x_6 = x_4 + x_5.
Let x_7 = i * x.
Let x_8 = i * y.
Let x_9 = x_7 + x_8.
Let x_10 = q_2 * r_2.
Let x_11 = p_2 * s_2.
Let x_12 = x_7 - x_5.
Let x_13 = x_4 - x_8.
Let x_14 = r_2 * y.
Let x_15 = p_2 * x.
Let x_16 = s_2 * y.
Let x_17 = q_2 * x.
Let x_18 = i_2 * y.
Let x_19 = i_3 * x.
Let x_20 = i_2 * x.
Let x_21 = i_3 * y.
Let x_22 = (p * x) + (r * y).
Assume {
  Type: is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_22) /\ is_sint32(x_3) /\
      is_sint32(x_13) /\ is_sint32(x_12) /\ is_sint32(x_19 - x_18) /\
      is_sint32(x_20 - x_21).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_19 = (y + x_18).
  (* Invariant *)
  Have: x_19 = (IAbs.abs(y) + x_18).
  (* Invariant *)
  Have: (x_18 < x_19) /\ (x_21 < x_20).
  (* Invariant *)
  Have: x_20 = (x + x_21).
  (* Invariant *)
  Have: x_20 = (IAbs.abs(x) + x_21).
  (* Invariant *)
  Have: (x_20 + x_19) <= (x + y + x_18 + x_21).
  (* Invariant *)
  Have: x_20 = (y + x_21).
  (* Invariant *)
  Have: x_18 = (x + x_19).
  (* Invariant *)
  Have: x_4 = (x_8 + x_17 + x_16).
  (* Invariant *)
  Have: x_7 = (x_5 + x_15 + x_14).
  (* Invariant *)
  Have: x_11 = (1 + x_10).
  (* Invariant *)
  Have: x_4 = (x_8 + IAbs.abs(x_17 - x_16)).
  (* Invariant *)
  Have: (x_8 < x_4) /\ (x_5 < x_7).
  (* Invariant *)
  Have: (q_2 * s_2) = (p_2 * q_2).
  (* Invariant *)
  Have: x_7 = (x_5 + IAbs.abs(x_15 - x_14)).
  (* Invariant *)
  Have: (x_7 + x_4) <= (x + y + x_8 + x_5).
  (* Invariant *)
  Have: (s_2 * x_12) = (y + (r_2 * x_13)).
  (* Invariant *)
  Have: (q_2 * x_12) = (x + (p_2 * x_13)).
  (* Invariant *)
  Have: IAbs.abs(x_11 - x_10) = 1.
  (* Then *)
  Have: x_6 != x_9.
  If x_6 < x_9
  Then {
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (x_4 = (x_8 + x_1 + x_2)) /\
        (x_7 = (x_5 + x_1 + x_2 + (x * (p_1 - q)) + (y * (r_1 - s)))).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        (x_4 = (x_8 + x_1 + x_2 + (x * (q_1 - q)) + (y * (s_1 - s)))).
  }
  (* Invariant *)
  Have: x_3 = IAbs.abs(x_1 - x_2).
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
}
Prove: (x_2 != x_1) /\ (0 < x_22).
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0005/5_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0005/5_merged.c, line 25):
Let x_1 = s * y.
Let x_2 = q * x.
Let x_3 = (p * x) + (r * y).
Let x_4 = x_2 + x_1.
Let x_5 = i_1 * x.
Let x_6 = i_1 * y.
Let x_7 = x_5 + x_6.
Let x_8 = i * x.
Let x_9 = i * y.
Let x_10 = x_8 + x_9.
Let x_11 = q_2 * r_2.
Let x_12 = p_2 * s_2.
Let x_13 = x_8 - x_6.
Let x_14 = x_5 - x_9.
Let x_15 = r_2 * y.
Let x_16 = p_2 * x.
Let x_17 = s_2 * y.
Let x_18 = q_2 * x.
Let x_19 = i_2 * y.
Let x_20 = i_3 * x.
Let x_21 = i_2 * x.
Let x_22 = i_3 * y.
Assume {
  Type: is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_3) /\ is_sint32(x_4) /\
      is_sint32(x_14) /\ is_sint32(x_13) /\ is_sint32(x_20 - x_19) /\
      is_sint32(x_21 - x_22).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_20 = (y + x_19).
  (* Invariant *)
  Have: x_20 = (IAbs.abs(y) + x_19).
  (* Invariant *)
  Have: (x_19 < x_20) /\ (x_22 < x_21).
  (* Invariant *)
  Have: x_21 = (x + x_22).
  (* Invariant *)
  Have: x_21 = (IAbs.abs(x) + x_22).
  (* Invariant *)
  Have: (x_21 + x_20) <= (x + y + x_19 + x_22).
  (* Invariant *)
  Have: x_21 = (y + x_22).
  (* Invariant *)
  Have: x_19 = (x + x_20).
  (* Invariant *)
  Have: x_5 = (x_9 + x_18 + x_17).
  (* Invariant *)
  Have: x_8 = (x_6 + x_16 + x_15).
  (* Invariant *)
  Have: x_12 = (1 + x_11).
  (* Invariant *)
  Have: x_5 = (x_9 + IAbs.abs(x_18 - x_17)).
  (* Invariant *)
  Have: (x_9 < x_5) /\ (x_6 < x_8).
  (* Invariant *)
  Have: (q_2 * s_2) = (p_2 * q_2).
  (* Invariant *)
  Have: x_8 = (x_6 + IAbs.abs(x_16 - x_15)).
  (* Invariant *)
  Have: (x_8 + x_5) <= (x + y + x_9 + x_6).
  (* Invariant *)
  Have: (s_2 * x_13) = (y + (r_2 * x_14)).
  (* Invariant *)
  Have: (q_2 * x_13) = (x + (p_2 * x_14)).
  (* Invariant *)
  Have: IAbs.abs(x_12 - x_11) = 1.
  (* Then *)
  Have: x_7 != x_10.
  If x_7 < x_10
  Then {
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (x_5 = (x_9 + x_2 + x_1)) /\
        (x_8 = (x_6 + x_2 + x_1 + (x * (p_1 - q)) + (y * (r_1 - s)))).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        (x_5 = (x_9 + x_2 + x_1 + (x * (q_1 - q)) + (y * (s_1 - s)))).
  }
  (* Invariant *)
  Have: x_4 = IAbs.abs(x_2 - x_1).
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: (x_1 != x_2) /\ (0 < x_3).
}
Prove: (q * s) = (p * q).
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0005/5_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.94ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0005/5_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0005/5_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0005/5_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0005/5_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0005/5_merged.c, line 28):
Let x_1 = s * y.
Let x_2 = q * x.
Let x_3 = p * x.
Let x_4 = r * y.
Let x_5 = x_3 + x_4.
Let x_6 = x_2 + x_1.
Let x_7 = i_1 * x.
Let x_8 = i_1 * y.
Let x_9 = x_7 + x_8.
Let x_10 = i * x.
Let x_11 = i * y.
Let x_12 = x_10 + x_11.
Let x_13 = q_2 * r_2.
Let x_14 = p_2 * s_2.
Let x_15 = x_10 - x_8.
Let x_16 = x_7 - x_11.
Let x_17 = r_2 * y.
Let x_18 = p_2 * x.
Let x_19 = s_2 * y.
Let x_20 = q_2 * x.
Let x_21 = i_2 * y.
Let x_22 = i_3 * x.
Let x_23 = i_2 * x.
Let x_24 = i_3 * y.
Assume {
  Type: is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_5) /\ is_sint32(x_6) /\
      is_sint32(x_16) /\ is_sint32(x_15) /\ is_sint32(x_22 - x_21) /\
      is_sint32(x_23 - x_24).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_22 = (y + x_21).
  (* Invariant *)
  Have: x_22 = (IAbs.abs(y) + x_21).
  (* Invariant *)
  Have: (x_21 < x_22) /\ (x_24 < x_23).
  (* Invariant *)
  Have: x_23 = (x + x_24).
  (* Invariant *)
  Have: x_23 = (IAbs.abs(x) + x_24).
  (* Invariant *)
  Have: (x_23 + x_22) <= (x + y + x_21 + x_24).
  (* Invariant *)
  Have: x_23 = (y + x_24).
  (* Invariant *)
  Have: x_21 = (x + x_22).
  (* Invariant *)
  Have: x_7 = (x_11 + x_20 + x_19).
  (* Invariant *)
  Have: x_10 = (x_8 + x_18 + x_17).
  (* Invariant *)
  Have: x_14 = (1 + x_13).
  (* Invariant *)
  Have: x_7 = (x_11 + IAbs.abs(x_20 - x_19)).
  (* Invariant *)
  Have: (x_11 < x_7) /\ (x_8 < x_10).
  (* Invariant *)
  Have: (q_2 * s_2) = (p_2 * q_2).
  (* Invariant *)
  Have: x_10 = (x_8 + IAbs.abs(x_18 - x_17)).
  (* Invariant *)
  Have: (x_10 + x_7) <= (x + y + x_11 + x_8).
  (* Invariant *)
  Have: (s_2 * x_15) = (y + (r_2 * x_16)).
  (* Invariant *)
  Have: (q_2 * x_15) = (x + (p_2 * x_16)).
  (* Invariant *)
  Have: IAbs.abs(x_14 - x_13) = 1.
  (* Then *)
  Have: x_9 != x_12.
  If x_9 < x_12
  Then {
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (x_7 = (x_11 + x_2 + x_1)) /\
        (x_10 = (x_8 + x_2 + x_1 + (x * (p_1 - q)) + (y * (r_1 - s)))).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        (x_7 = (x_11 + x_2 + x_1 + (x * (q_1 - q)) + (y * (s_1 - s)))).
  }
  (* Invariant *)
  Have: x_6 = IAbs.abs(x_2 - x_1).
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: (x_1 != x_2) /\ (0 < x_5).
  (* Invariant *)
  Have: (q * s) = (p * q).
}
Prove: x_5 = IAbs.abs(x_3 - x_4).
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0005/5_merged.c, line 28):
Assume {
  Type: is_sint32(a) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 < a.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: IAbs.abs(y) = y.
}
Prove: IAbs.abs(a) = a.
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0005/5_merged.c, line 29):
Let x_1 = r * y.
Let x_2 = p * x.
Let x_3 = s * y.
Let x_4 = q * x.
Let x_5 = x_2 + x_1.
Let x_6 = x_4 + x_3.
Let x_7 = i_1 * x.
Let x_8 = i_1 * y.
Let x_9 = x_7 + x_8.
Let x_10 = i * x.
Let x_11 = i * y.
Let x_12 = x_10 + x_11.
Let x_13 = q_2 * r_2.
Let x_14 = p_2 * s_2.
Let x_15 = x_10 - x_8.
Let x_16 = x_7 - x_11.
Let x_17 = r_2 * y.
Let x_18 = p_2 * x.
Let x_19 = s_2 * y.
Let x_20 = q_2 * x.
Let x_21 = i_2 * y.
Let x_22 = i_3 * x.
Let x_23 = i_2 * x.
Let x_24 = i_3 * y.
Assume {
  Type: is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_5) /\ is_sint32(x_6) /\
      is_sint32(x_16) /\ is_sint32(x_15) /\ is_sint32(x_22 - x_21) /\
      is_sint32(x_23 - x_24).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_22 = (y + x_21).
  (* Invariant *)
  Have: x_22 = (IAbs.abs(y) + x_21).
  (* Invariant *)
  Have: (x_21 < x_22) /\ (x_24 < x_23).
  (* Invariant *)
  Have: x_23 = (x + x_24).
  (* Invariant *)
  Have: x_23 = (IAbs.abs(x) + x_24).
  (* Invariant *)
  Have: (x_23 + x_22) <= (x + y + x_21 + x_24).
  (* Invariant *)
  Have: x_23 = (y + x_24).
  (* Invariant *)
  Have: x_21 = (x + x_22).
  (* Invariant *)
  Have: x_7 = (x_11 + x_20 + x_19).
  (* Invariant *)
  Have: x_10 = (x_8 + x_18 + x_17).
  (* Invariant *)
  Have: x_14 = (1 + x_13).
  (* Invariant *)
  Have: x_7 = (x_11 + IAbs.abs(x_20 - x_19)).
  (* Invariant *)
  Have: (x_11 < x_7) /\ (x_8 < x_10).
  (* Invariant *)
  Have: (q_2 * s_2) = (p_2 * q_2).
  (* Invariant *)
  Have: x_10 = (x_8 + IAbs.abs(x_18 - x_17)).
  (* Invariant *)
  Have: (x_10 + x_7) <= (x + y + x_11 + x_8).
  (* Invariant *)
  Have: (s_2 * x_15) = (y + (r_2 * x_16)).
  (* Invariant *)
  Have: (q_2 * x_15) = (x + (p_2 * x_16)).
  (* Invariant *)
  Have: IAbs.abs(x_14 - x_13) = 1.
  (* Then *)
  Have: x_9 != x_12.
  If x_9 < x_12
  Then {
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (x_7 = (x_11 + x_4 + x_3)) /\
        (x_10 =
         (x_8 + x_4 + x_3 + IAbs.abs((x * (p_1 - q)) - (y * (r_1 - s))))).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        (x_7 = (x_11 + x_4 + x_3 + (x * (q_1 - q)) + (y * (s_1 - s)))).
  }
  (* Invariant *)
  Have: x_6 = IAbs.abs(x_4 - x_3).
  (* Invariant *)
  Have: x_5 = IAbs.abs(x_2 - x_1).
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: (x_1 != x_2) /\ (x_3 != x_4).
  (* Invariant *)
  Have: (q * s) = (p * q).
}
Prove: (x_2 + x_4 + x_1 + x_3) <= (x + y).
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0005/5_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0005/5_merged.c, line 30):
Let x_1 = p * x.
Let x_2 = q * x.
Let x_3 = r * y.
Let x_4 = s * y.
Let x_5 = x_1 + x_3.
Let x_6 = x_2 + x_4.
Let x_7 = i_1 * x.
Let x_8 = i_1 * y.
Let x_9 = x_7 + x_8.
Let x_10 = i * x.
Let x_11 = i * y.
Let x_12 = x_10 + x_11.
Let x_13 = q_2 * r_2.
Let x_14 = p_2 * s_2.
Let x_15 = x_10 - x_8.
Let x_16 = x_7 - x_11.
Let x_17 = r_2 * y.
Let x_18 = p_2 * x.
Let x_19 = s_2 * y.
Let x_20 = q_2 * x.
Let x_21 = i_2 * y.
Let x_22 = i_3 * x.
Let x_23 = i_2 * x.
Let x_24 = i_3 * y.
Assume {
  Type: is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_5) /\ is_sint32(x_6) /\
      is_sint32(x_16) /\ is_sint32(x_15) /\ is_sint32(x_22 - x_21) /\
      is_sint32(x_23 - x_24).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_22 = (y + x_21).
  (* Invariant *)
  Have: x_22 = (IAbs.abs(y) + x_21).
  (* Invariant *)
  Have: (x_21 < x_22) /\ (x_24 < x_23).
  (* Invariant *)
  Have: x_23 = (x + x_24).
  (* Invariant *)
  Have: x_23 = (IAbs.abs(x) + x_24).
  (* Invariant *)
  Have: (x_23 + x_22) <= (x + y + x_21 + x_24).
  (* Invariant *)
  Have: x_23 = (y + x_24).
  (* Invariant *)
  Have: x_21 = (x + x_22).
  (* Invariant *)
  Have: x_7 = (x_11 + x_20 + x_19).
  (* Invariant *)
  Have: x_10 = (x_8 + x_18 + x_17).
  (* Invariant *)
  Have: x_14 = (1 + x_13).
  (* Invariant *)
  Have: x_7 = (x_11 + IAbs.abs(x_20 - x_19)).
  (* Invariant *)
  Have: (x_11 < x_7) /\ (x_8 < x_10).
  (* Invariant *)
  Have: (q_2 * s_2) = (p_2 * q_2).
  (* Invariant *)
  Have: x_10 = (x_8 + IAbs.abs(x_18 - x_17)).
  (* Invariant *)
  Have: (x_10 + x_7) <= (x + y + x_11 + x_8).
  (* Invariant *)
  Have: (s_2 * x_15) = (y + (r_2 * x_16)).
  (* Invariant *)
  Have: (q_2 * x_15) = (x + (p_2 * x_16)).
  (* Invariant *)
  Have: IAbs.abs(x_14 - x_13) = 1.
  (* Then *)
  Have: x_9 != x_12.
  If x_9 < x_12
  Then {
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (x_7 = (x_11 + x_2 + x_4)) /\
        (x_10 =
         (x_8 + x_2 + x_4 + IAbs.abs((x * (p_1 - q)) - (y * (r_1 - s))))).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        (x_7 = (x_11 + x_2 + x_4 + (x * (q_1 - q)) + (y * (s_1 - s)))).
  }
  (* Invariant *)
  Have: x_6 = IAbs.abs(x_2 - x_4).
  (* Invariant *)
  Have: x_5 = IAbs.abs(x_1 - x_3).
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: (x_3 != x_1) /\ (x_4 != x_2).
  (* Invariant *)
  Have: (q * s) = (p * q).
  (* Invariant *)
  Have: (x_1 + x_2 + x_3 + x_4) <= (x + y).
}
Prove: (s * x_5) = (y + (r * x_6)).
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0005/5_merged.c, line 30):
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: IAbs.abs(y) = y.
  (* Invariant *)
  Have: IAbs.abs(x) = x.
}
Prove: y = x.
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0005/5_merged.c, line 31):
Let x_1 = b * r.
Let x_2 = a * s.
Let x_3 = x_2 - x_1.
Let x_4 = r * x_3.
Let x_5 = p * x.
Let x_6 = s * x_3.
Let x_7 = q * x.
Let x_8 = i_1 * x.
Let x_9 = i_1 * x_3.
Let x_10 = x_8 + x_9.
Let x_11 = i * x.
Let x_12 = i * x_3.
Let x_13 = x_11 + x_12.
Let x_14 = q_2 * r_2.
Let x_15 = p_2 * s_2.
Let x_16 = x_11 - x_9.
Let x_17 = x_8 - x_12.
Let x_18 = r_2 * x_3.
Let x_19 = p_2 * x.
Let x_20 = s_2 * x_3.
Let x_21 = q_2 * x.
Let x_22 = i_2 * x_3.
Let x_23 = i_3 * x.
Let x_24 = i_3 * x_3.
Let x_25 = i_2 * x.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b) /\ is_sint32(b_1) /\
      is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x) /\ is_sint32(x_3) /\ is_sint32(x_17) /\ is_sint32(x_16) /\
      is_sint32(x_23 - x_22) /\ is_sint32(x_25 - x_24).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: x_1 < x_2.
  (* Invariant *)
  Have: (x_2 + x_22) = (x_1 + x_23).
  (* Invariant *)
  Have: x_23 = (IAbs.abs(x_3) + x_22).
  (* Invariant *)
  Have: (x_22 < x_23) /\ (x_24 < x_25).
  (* Invariant *)
  Have: x_25 = (x + x_24).
  (* Invariant *)
  Have: x_25 = (IAbs.abs(x) + x_24).
  (* Invariant *)
  Have: (x_1 + x_25 + x_23) <= (x + x_2 + x_22 + x_24).
  (* Invariant *)
  Have: (x_2 + x_24) = (x_1 + x_25).
  (* Invariant *)
  Have: x_22 = (x + x_23).
  (* Invariant *)
  Have: x_8 = (x_21 + x_12 + x_20).
  (* Invariant *)
  Have: x_11 = (x_19 + x_9 + x_18).
  (* Invariant *)
  Have: x_15 = (1 + x_14).
  (* Invariant *)
  Have: x_8 = (x_12 + IAbs.abs(x_21 - x_20)).
  (* Invariant *)
  Have: (x_12 < x_8) /\ (x_9 < x_11).
  (* Invariant *)
  Have: (q_2 * s_2) = (p_2 * q_2).
  (* Invariant *)
  Have: x_11 = (x_9 + IAbs.abs(x_19 - x_18)).
  (* Invariant *)
  Have: (x_1 + x_11 + x_8) <= (x + x_2 + x_12 + x_9).
  (* Invariant *)
  Have: (x_1 + (s_2 * x_16)) = (x_2 + (r_2 * x_17)).
  (* Invariant *)
  Have: (q_2 * x_16) = (x + (p_2 * x_17)).
  (* Invariant *)
  Have: IAbs.abs(x_15 - x_14) = 1.
  (* Then *)
  Have: x_10 != x_13.
  If x_10 < x_13
  Then {
    Let x_26 = (s * (a_1 - b)) - (b * (r_1 - s)).
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (x_11 = (a_1 + (i_1 * x_26))) /\ (x_8 = (b + (i * x_26))).
    Have: (a + b) = a_1.
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_27 = (s * (b_1 - b)) - (b * (s_1 - s)).
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((a + b) = b_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        ((b_1 + (i_1 * x_27)) = (b + x_11)) /\ (x_8 = (b_1 + (i * x_27))).
  }
  (* Invariant *)
  Have: (x_7 + x_6) = b.
  (* Invariant *)
  Have: (x_5 + x_4) = a.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: IAbs.abs(x_7 - x_6) = b.
  (* Invariant *)
  Have: (0 < a) /\ (0 < b).
  (* Invariant *)
  Have: (q * s) = (p * q).
  (* Invariant *)
  Have: IAbs.abs(x_5 - x_4) = a.
  (* Invariant *)
  Have: (a + b + x_1) <= (x + x_2).
}
Prove: (a * q) = (x + (b * p)).
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0005/5_merged.c, line 31):
Assume {
  Type: is_sint32(x).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: IAbs.abs(x) = x.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0005/5_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (8ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0005/5_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0005/5_merged.c, line 33):
Let x = b * p.
Let x_1 = b * r.
Let x_2 = a * q.
Let x_3 = a * s.
Let x_4 = x_3 - x_1.
Let x_5 = r * x_4.
Let x_6 = x_2 - x.
Let x_7 = p * x_6.
Let x_8 = s * x_4.
Let x_9 = q * x_6.
Let x_10 = p * s.
Let x_11 = q * r.
Let x_12 = i_1 * x_6.
Let x_13 = i_1 * x_4.
Let x_14 = x_12 + x_13.
Let x_15 = i * x_6.
Let x_16 = i * x_4.
Let x_17 = x_15 + x_16.
Let x_18 = q_2 * r_2.
Let x_19 = p_2 * s_2.
Let x_20 = x_15 - x_13.
Let x_21 = x_12 - x_16.
Let x_22 = r_2 * x_4.
Let x_23 = p_2 * x_6.
Let x_24 = s_2 * x_4.
Let x_25 = q_2 * x_6.
Let x_26 = i_2 * x_4.
Let x_27 = i_3 * x_6.
Let x_28 = i_2 * x_6.
Let x_29 = i_3 * x_4.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b) /\ is_sint32(b_1) /\
      is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x_6) /\ is_sint32(x_4) /\ is_sint32(x_21) /\
      is_sint32(x_20) /\ is_sint32(x_27 - x_26) /\ is_sint32(x_28 - x_29).
  (* Goal *)
  When: b != a.
  (* Pre-condition *)
  Have: x < x_2.
  (* Pre-condition *)
  Have: x_1 < x_3.
  (* Invariant *)
  Have: (x_1 + x_27) = (x_3 + x_26).
  (* Invariant *)
  Have: x_27 = (IAbs.abs(x_4) + x_26).
  (* Invariant *)
  Have: (x_26 < x_27) /\ (x_29 < x_28).
  (* Invariant *)
  Have: (x + x_28) = (x_2 + x_29).
  (* Invariant *)
  Have: x_28 = (IAbs.abs(x_6) + x_29).
  (* Invariant *)
  Have: (x + x_1 + x_28 + x_27) <= (x_2 + x_3 + x_26 + x_29).
  (* Invariant *)
  Have: (x_1 + x_28) = (x_3 + x_29).
  (* Invariant *)
  Have: (x + x_26) = (x_2 + x_27).
  (* Invariant *)
  Have: x_12 = (x_16 + x_25 + x_24).
  (* Invariant *)
  Have: x_15 = (x_13 + x_23 + x_22).
  (* Invariant *)
  Have: x_19 = (1 + x_18).
  (* Invariant *)
  Have: x_12 = (x_16 + IAbs.abs(x_25 - x_24)).
  (* Invariant *)
  Have: (x_16 < x_12) /\ (x_13 < x_15).
  (* Invariant *)
  Have: (q_2 * s_2) = (p_2 * q_2).
  (* Invariant *)
  Have: x_15 = (x_13 + IAbs.abs(x_23 - x_22)).
  (* Invariant *)
  Have: (x + x_1 + x_15 + x_12) <= (x_2 + x_3 + x_16 + x_13).
  (* Invariant *)
  Have: (x_1 + (s_2 * x_20)) = (x_3 + (r_2 * x_21)).
  (* Invariant *)
  Have: (x + (q_2 * x_20)) = (x_2 + (p_2 * x_21)).
  (* Invariant *)
  Have: IAbs.abs(x_19 - x_18) = 1.
  (* Then *)
  Have: x_14 != x_17.
  If x_14 < x_17
  Then {
    Let x_30 = a_1 - b.
    Let x_31 = (q * x_30) - (b * (p_1 - q)).
    Let x_32 = (s * x_30) - (b * (r_1 - s)).
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        ((i * x_31) = (a_1 + (i_1 * x_32))) /\
        ((i_1 * x_31) = (b + (i * x_32))).
    Have: (a + b) = a_1.
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_33 = b_1 - b.
    Let x_34 = (s * x_33) - (b * (s_1 - s)).
    Let x_35 = (q * x_33) - (b * (q_1 - q)).
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((a + b) = b_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        ((b_1 + (i_1 * x_34)) = (b + (i * x_35))) /\
        ((i_1 * x_35) = (b_1 + (i * x_34))).
  }
  (* Invariant *)
  Have: (x_9 + x_8) = b.
  (* Invariant *)
  Have: (x_7 + x_5) = a.
  (* Invariant *)
  Have: x_10 = (1 + x_11).
  (* Invariant *)
  Have: IAbs.abs(x_9 - x_8) = b.
  (* Invariant *)
  Have: (0 < a) /\ (0 < b).
  (* Invariant *)
  Have: (q * s) = (p * q).
  (* Invariant *)
  Have: IAbs.abs(x_7 - x_5) = a.
  (* Invariant *)
  Have: (a + b + x + x_1) <= (x_2 + x_3).
}
Prove: IAbs.abs(x_10 - x_11) = 1.
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0005/5_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0005/5_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0005/5_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0005/5_merged.c, line 35):
Let x = q * r.
Let x_1 = p * s.
Let x_2 = b * p.
Let x_3 = b * r.
Let x_4 = a * q.
Let x_5 = a * s.
Let x_6 = x_5 - x_3.
Let x_7 = r * x_6.
Let x_8 = x_4 - x_2.
Let x_9 = p * x_8.
Let x_10 = s * x_6.
Let x_11 = q * x_8.
Let x_12 = i_1 * x_8.
Let x_13 = i_1 * x_6.
Let x_14 = x_12 + x_13.
Let x_15 = i * x_8.
Let x_16 = i * x_6.
Let x_17 = x_15 + x_16.
Let x_18 = q_2 * r_2.
Let x_19 = p_2 * s_2.
Let x_20 = x_15 - x_13.
Let x_21 = x_12 - x_16.
Let x_22 = r_2 * x_6.
Let x_23 = p_2 * x_8.
Let x_24 = s_2 * x_6.
Let x_25 = q_2 * x_8.
Let x_26 = i_2 * x_6.
Let x_27 = i_3 * x_8.
Let x_28 = i_2 * x_8.
Let x_29 = i_3 * x_6.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b) /\ is_sint32(b_1) /\
      is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x_8) /\ is_sint32(x_6) /\ is_sint32(x_21) /\
      is_sint32(x_20) /\ is_sint32(x_27 - x_26) /\ is_sint32(x_28 - x_29).
  (* Pre-condition *)
  Have: x_2 < x_4.
  (* Pre-condition *)
  Have: x_3 < x_5.
  (* Invariant *)
  Have: (x_3 + x_27) = (x_5 + x_26).
  (* Invariant *)
  Have: x_27 = (IAbs.abs(x_6) + x_26).
  (* Invariant *)
  Have: (x_26 < x_27) /\ (x_29 < x_28).
  (* Invariant *)
  Have: (x_2 + x_28) = (x_4 + x_29).
  (* Invariant *)
  Have: x_28 = (IAbs.abs(x_8) + x_29).
  (* Invariant *)
  Have: (x_2 + x_3 + x_28 + x_27) <= (x_4 + x_5 + x_26 + x_29).
  (* Invariant *)
  Have: (x_3 + x_28) = (x_5 + x_29).
  (* Invariant *)
  Have: (x_2 + x_26) = (x_4 + x_27).
  (* Invariant *)
  Have: x_12 = (x_16 + x_25 + x_24).
  (* Invariant *)
  Have: x_15 = (x_13 + x_23 + x_22).
  (* Invariant *)
  Have: x_19 = (1 + x_18).
  (* Invariant *)
  Have: x_12 = (x_16 + IAbs.abs(x_25 - x_24)).
  (* Invariant *)
  Have: (x_16 < x_12) /\ (x_13 < x_15).
  (* Invariant *)
  Have: (q_2 * s_2) = (p_2 * q_2).
  (* Invariant *)
  Have: x_15 = (x_13 + IAbs.abs(x_23 - x_22)).
  (* Invariant *)
  Have: (x_2 + x_3 + x_15 + x_12) <= (x_4 + x_5 + x_16 + x_13).
  (* Invariant *)
  Have: (x_3 + (s_2 * x_20)) = (x_5 + (r_2 * x_21)).
  (* Invariant *)
  Have: (x_2 + (q_2 * x_20)) = (x_4 + (p_2 * x_21)).
  (* Invariant *)
  Have: IAbs.abs(x_19 - x_18) = 1.
  (* Then *)
  Have: x_14 != x_17.
  If x_14 < x_17
  Then {
    Let x_30 = a_1 - b.
    Let x_31 = (q * x_30) - (b * (p_1 - q)).
    Let x_32 = (s * x_30) - (b * (r_1 - s)).
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        ((i * x_31) = (a_1 + (i_1 * x_32))) /\
        ((i_1 * x_31) = (b + (i * x_32))).
    Have: (a + b) = a_1.
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_33 = b_1 - b.
    Let x_34 = (s * x_33) - (b * (s_1 - s)).
    Let x_35 = (q * x_33) - (b * (q_1 - q)).
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((a + b) = b_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        ((b_1 + (i_1 * x_34)) = (b + (i * x_35))) /\
        ((i_1 * x_35) = (b_1 + (i * x_34))).
  }
  (* Invariant *)
  Have: (x_11 + x_10) = b.
  (* Invariant *)
  Have: (x_9 + x_7) = a.
  (* Invariant *)
  Have: x_1 = (1 + x).
  (* Invariant *)
  Have: IAbs.abs(x_11 - x_10) = b.
  (* Invariant *)
  Have: (0 < a) /\ (0 < b).
  (* Invariant *)
  Have: (q * s) = (p * q).
  (* Invariant *)
  Have: IAbs.abs(x_9 - x_7) = a.
  (* Invariant *)
  Have: (a + b + x_2 + x_3) <= (x_4 + x_5).
  (* Invariant *)
  Have: ((b != a) -> (IAbs.abs(x_1 - x) = 1)).
}
Prove: exists i_5,i_4 : Z. ((i_5 * x_8) = (a + (i_4 * x_6))) /\
    ((i_4 * x_8) = (b + (i_5 * x_6))).
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0005/5_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0005/5_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0005/5_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0005/5_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0005/5_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Assertion (file out/5_0005/5_merged.c, line 58):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/5_0005/5_merged.c, line 59):
Let x_1 = i * y.
Let x_2 = i_1 * x.
Let x_3 = x_2 - x_1.
Let x_4 = r * y.
Let x_5 = p * x.
Let x_6 = s * y.
Let x_7 = q * x.
Let x_8 = i_2 * y.
Let x_9 = i_3 * x.
Let x_10 = i_2 * x.
Let x_11 = i_3 * y.
Assume {
  Type: is_sint32(p) /\ is_sint32(q) /\ is_sint32(r) /\ is_sint32(s) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_3) /\
      is_sint32(x_9 - x_8) /\ is_sint32(x_10 - x_11).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_9 = (y + x_8).
  (* Invariant *)
  Have: x_9 = (IAbs.abs(y) + x_8).
  (* Invariant *)
  Have: (x_8 < x_9) /\ (x_11 < x_10).
  (* Invariant *)
  Have: x_10 = (x + x_11).
  (* Invariant *)
  Have: x_10 = (IAbs.abs(x) + x_11).
  (* Invariant *)
  Have: (x_10 + x_9) <= (x + y + x_8 + x_11).
  (* Invariant *)
  Have: x_10 = (y + x_11).
  (* Invariant *)
  Have: x_8 = (x + x_9).
  (* Invariant *)
  Have: x_2 = (x_1 + x_7 + x_6).
  (* Invariant *)
  Have: x_2 = (x_1 + x_5 + x_4).
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: x_2 = (x_1 + IAbs.abs(x_7 - x_6)).
  (* Invariant *)
  Have: x_1 < x_2.
  (* Invariant *)
  Have: (q * s) = (p * q).
  (* Invariant *)
  Have: x_2 = (x_1 + IAbs.abs(x_5 - x_4)).
  (* Invariant *)
  Have: (2 * x_2) <= (x + y + (2 * x_1)).
  (* Invariant *)
  Have: (s * x_3) = (y + (r * x_3)).
  (* Invariant *)
  Have: (q * x_3) = (x + (p * x_3)).
  (* Invariant *)
  Have: ((i * x) + x_1) = (x_2 + (i_1 * y)).
}
Prove: false.
Prover Z3 4.8.12 returns Failed
[Why3 Error] anomaly: Not_found
Prover Alt-Ergo 2.5.4 returns Failed
[Why3 Error] anomaly: Not_found

------------------------------------------------------------

Goal Loop assigns (file out/5_0005/5_merged.c, line 38):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/5_0005/5_merged.c:4: Warning: 
  No 'assigns' specification for function 'main5'.
  Callers assumptions might be imprecise.

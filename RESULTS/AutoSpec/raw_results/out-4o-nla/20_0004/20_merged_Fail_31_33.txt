[kernel] Parsing out/20_0004/20_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/20_0004/20_merged.c:33: Warning: 
  Body of function main20 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 33 goals scheduled
[wp] [Timeout] typed_main20_loop_invariant_5_preserved (Qed 4ms) (Z3)
[wp] [Timeout] typed_main20_assert_missing_return (Qed 2ms) (Z3)
[wp] Proved goals:   31 / 33
  Qed:              26
  Alt-Ergo 2.5.4:    5 (5ms-6ms-8ms)
  Timeout:           2
------------------------------------------------------------
  Function main20
------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0004/20_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0004/20_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0004/20_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0004/20_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0004/20_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0004/20_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0004/20_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0004/20_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0004/20_merged.c, line 18):
Let x = 1 + a.
Let x_1 = x * x.
Let x_2 = 2 * a.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(1 + x_2) /\
      is_sint32(3 + x_2) /\ is_sint32(x_1) /\ is_sint32(3 + x_2 + x_1).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: x_1 = (1 + x_2 + (a * a)).
  (* Invariant *)
  Have: x_1 = (1 + (a * x)).
  (* Invariant *)
  Have: x_1 <= (1 + n + x_2).
  (* Invariant *)
  Have: x_1 <= (1 + n).
  (* Invariant *)
  Have: a <= n.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: 0 < x_1.
  (* Then *)
  Have: x_1 <= n.
}
Prove: (x * (2 + a)) = (2 + x_2 + x_1).
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0004/20_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0004/20_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0004/20_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0004/20_merged.c, line 20):
Let x = 1 + a.
Let x_1 = 2 + a.
Let x_2 = x * x_1.
Let x_3 = 2 * a.
Let x_4 = 3 + x_3.
Let x_5 = 4 * a.
Let x_6 = 1 + x_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(1 + x_3) /\
      is_sint32(x_4) /\ is_sint32(x_6) /\ is_sint32(x_2 - 2 - x_3).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: x_2 = (3 + x_5 + (a * a)).
  (* Invariant *)
  Have: x_2 = (3 + x_3 + (a * x)).
  (* Invariant *)
  Have: x_2 = (2 + x_3 + (x * x)).
  (* Invariant *)
  Have: x_2 <= (3 + n + x_5).
  (* Invariant *)
  Have: x_2 <= (3 + n + x_3).
  (* Invariant *)
  Have: a <= n.
  (* Invariant *)
  Have: (2 + x_3) <= x_2.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: x_4 <= x_2.
  (* Then *)
  Have: x_2 <= (2 + n + x_3).
}
Prove: (x_1 * x_1) = x_6.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10081)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (6ms) (31)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0004/20_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0004/20_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0004/20_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0004/20_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0004/20_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0004/20_merged.c, line 23):
Let x = 2 + a.
Let x_1 = x * x.
Let x_2 = 1 + a.
Let x_3 = 2 * a.
Let x_4 = 3 + x_3.
Let x_5 = 4 * a.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x_2) /\
      is_sint32(1 + x_3) /\ is_sint32(x_4) /\ is_sint32(x_1) /\
      is_sint32(x_1 - 3 - x_3).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: x_1 = (4 + x_5 + (a * a)).
  (* Invariant *)
  Have: x_1 = (4 + x_3 + (a * x_2)).
  (* Invariant *)
  Have: x_1 = (3 + x_3 + (x_2 * x_2)).
  (* Invariant *)
  Have: x_1 <= (4 + n + x_5).
  (* Invariant *)
  Have: x_1 <= (4 + n + x_3).
  (* Invariant *)
  Have: a <= n.
  (* Invariant *)
  Have: x_4 <= x_1.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (4 + x_3) <= x_1.
  (* Then *)
  Have: x_1 <= (3 + n + x_3).
  (* Invariant *)
  Have: x_1 = (1 + (x_2 * x)).
}
Prove: x_1 <= (1 + n).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (32357)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (6ms) (36)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0004/20_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0004/20_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0004/20_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0004/20_merged.c, line 25):
Let x = 2 + a.
Let x_1 = x * x.
Let x_2 = 1 + a.
Let x_3 = 2 * a.
Let x_4 = 3 + x_3.
Let x_5 = 4 * a.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x_2) /\
      is_sint32(1 + x_3) /\ is_sint32(x_4) /\ is_sint32(x_1) /\
      is_sint32(x_1 - 3 - x_3).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: x_1 = (4 + x_5 + (a * a)).
  (* Invariant *)
  Have: x_1 = (4 + x_3 + (a * x_2)).
  (* Invariant *)
  Have: x_1 = (3 + x_3 + (x_2 * x_2)).
  (* Invariant *)
  Have: x_1 <= (4 + n + x_5).
  (* Invariant *)
  Have: x_1 <= (4 + n + x_3).
  (* Invariant *)
  Have: a <= n.
  (* Invariant *)
  Have: x_4 <= x_1.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (4 + x_3) <= x_1.
  (* Then *)
  Have: x_1 <= (3 + n + x_3).
  (* Invariant *)
  Have: x_1 = (1 + (x_2 * x)).
  (* Invariant *)
  Have: x_1 <= (1 + n).
}
Prove: a < n.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (32474)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (36)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0004/20_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0004/20_merged.c, line 26):
Let x = 2 + a.
Let x_1 = x * x.
Let x_2 = 1 + a.
Let x_3 = 2 * a.
Let x_4 = 3 + x_3.
Let x_5 = 4 * a.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x_2) /\
      is_sint32(1 + x_3) /\ is_sint32(x_4) /\ is_sint32(x_1) /\
      is_sint32(x_1 - 3 - x_3).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: x_1 = (4 + x_5 + (a * a)).
  (* Invariant *)
  Have: x_1 = (4 + x_3 + (a * x_2)).
  (* Invariant *)
  Have: x_1 = (3 + x_3 + (x_2 * x_2)).
  (* Invariant *)
  Have: x_1 <= (4 + n + x_5).
  (* Invariant *)
  Have: x_1 <= (4 + n + x_3).
  (* Invariant *)
  Have: a <= n.
  (* Invariant *)
  Have: x_4 <= x_1.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (4 + x_3) <= x_1.
  (* Then *)
  Have: x_1 <= (3 + n + x_3).
  (* Invariant *)
  Have: x_1 = (1 + (x_2 * x)).
  (* Invariant *)
  Have: x_1 <= (1 + n).
  (* Invariant *)
  Have: a < n.
}
Prove: 0 <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (32578)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (5ms) (37)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0004/20_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.73ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0004/20_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0004/20_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0004/20_merged.c, line 28):
Let x = 2 + a.
Let x_1 = x * x.
Let x_2 = 1 + a.
Let x_3 = 2 * a.
Let x_4 = 3 + x_3.
Let x_5 = 4 * a.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x_2) /\
      is_sint32(1 + x_3) /\ is_sint32(x_4) /\ is_sint32(x_1) /\
      is_sint32(x_1 - 3 - x_3).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: x_1 = (4 + x_5 + (a * a)).
  (* Invariant *)
  Have: x_1 = (4 + x_3 + (a * x_2)).
  (* Invariant *)
  Have: x_1 = (3 + x_3 + (x_2 * x_2)).
  (* Invariant *)
  Have: x_1 <= (4 + n + x_5).
  (* Invariant *)
  Have: x_1 <= (4 + n + x_3).
  (* Invariant *)
  Have: a <= n.
  (* Invariant *)
  Have: x_4 <= x_1.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (4 + x_3) <= x_1.
  (* Then *)
  Have: x_1 <= (3 + n + x_3).
  (* Invariant *)
  Have: x_1 = (1 + (x_2 * x)).
  (* Invariant *)
  Have: x_1 <= (1 + n).
  (* Invariant *)
  Have: a < n.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: (-1) <= a.
}
Prove: 0 < x_1.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (32809)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (8ms) (38)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0004/20_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Assertion (file out/20_0004/20_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/20_0004/20_merged.c, line 41):
Let x = 1 + a.
Let x_1 = x * x.
Let x_2 = 2 * a.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(1 + x_2) /\ is_sint32(x_1).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: x_1 = (1 + x_2 + (a * a)).
  (* Invariant *)
  Have: x_1 = (1 + (a * x)).
  (* Invariant *)
  Have: x_1 <= (1 + n + x_2).
  (* Invariant *)
  Have: x_1 <= (1 + n).
  (* Invariant *)
  Have: n < x_1.
  (* Invariant *)
  Have: a <= n.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: 0 < x_1.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/20_0004/20_merged.c, line 29):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/20_0004/20_merged.c:4: Warning: 
  No 'assigns' specification for function 'main20'.
  Callers assumptions might be imprecise.

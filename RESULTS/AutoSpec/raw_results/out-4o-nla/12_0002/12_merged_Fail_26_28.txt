[kernel] Parsing out/12_0002/12_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/12_0002/12_merged.c:31: Warning: 
  Body of function main12 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 28 goals scheduled
[wp] [Timeout] typed_main12_loop_invariant_6_preserved (Qed 9ms) (Z3)
[wp] [Timeout] typed_main12_assert_missing_return (Qed 3ms) (Z3)
[wp] Proved goals:   26 / 28
  Qed:              23
  Alt-Ergo 2.5.4:    3 (5ms-10ms-19ms)
  Timeout:           2
------------------------------------------------------------
  Function main12
------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0002/12_merged.c, line 14):
Let x = -t.
Let x_1 = (A - t) / B.
Let x_2 = B * x_1.
Let x_3 = B + t + x_2.
Let x_4 = 1 + A.
Assume {
  Type: is_sint32(A) /\ is_sint32(B) /\ is_sint32(q) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(t) /\ is_sint32(t - 1) /\ is_sint32(x_1) /\
      is_sint32(A - t - x_2).
  (* Invariant *)
  Have: 0 <= A.
  (* Invariant *)
  Have: 0 < B.
  (* Invariant *)
  Have: (0 / B) = 0.
  (* Invariant *)
  Have: 0 <= t.
  (* Invariant *)
  Have: t <= A.
  (* Invariant *)
  Have: ((t + x_2) <= A) /\ (A < x_3).
  (* Then *)
  Have: t != 0.
  If x_3 = x_4
  Then { Have: (1 + x_1) = q. Have: r = 0. }
  Else { Have: (x_1 = q) /\ ((r_1 + t + x_2) = A). Have: (r + t + x_2) = x_4.
  }
}
Prove: ((r + t + (B * q)) = x_4) /\ (0 < t).
Prover Z3 4.8.12 returns Valid (Qed:8ms) (30ms) (89055)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (7ms) (90)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0002/12_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0002/12_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0002/12_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0002/12_merged.c, line 16):
Let x = 1 + A.
Let x_1 = -t.
Let x_2 = (A - t) / B.
Let x_3 = B * x_2.
Let x_4 = B + t + x_3.
Let x_5 = B * q.
Assume {
  Type: is_sint32(A) /\ is_sint32(B) /\ is_sint32(q) /\ is_sint32(q_1) /\
      is_sint32(r) /\ is_sint32(t) /\ is_sint32(t - 1) /\ is_sint32(x_2) /\
      is_sint32(1 + A - t - x_5) /\ is_sint32(A - t - x_3).
  (* Invariant *)
  Have: 0 <= A.
  (* Invariant *)
  Have: 0 < B.
  (* Invariant *)
  Have: (0 / B) = 0.
  (* Invariant *)
  Have: 0 <= t.
  (* Invariant *)
  Have: t <= A.
  (* Invariant *)
  Have: ((t + x_3) <= A) /\ (A < x_4).
  (* Then *)
  Have: t != 0.
  If x_4 = x
  Then {
    Let x_6 = 1 + q_1.
    Let x_7 = B * x_6.
    Have: ((x_7 - 1) / B) = q_1.
    Have: x_6 = q.
    Have: (t + x_7) = x.
  }
  Else { Have: ((r + t + x_5) = A) /\ (((r + x_5) / B) = q). }
  (* Invariant *)
  Have: 0 < t.
  (* Invariant *)
  Have: t <= x.
}
Prove: ((t + x_5) <= x) /\ ((2 + A) <= (B + t + x_5)).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (19ms) (434)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0002/12_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0002/12_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0002/12_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0002/12_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0002/12_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0002/12_merged.c, line 19):
Let x = B * q.
Let x_1 = (r + x - 1) / B.
Let x_2 = B * x_1.
Let x_3 = B + x_2.
Let x_4 = r + x.
Assume {
  Type: is_sint32(B) /\ is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(t) /\ is_sint32(t - 1) /\
      is_sint32(r + t + x - 1) /\ is_sint32(x_1) /\
      is_sint32(r + x - 1 - x_2).
  (* Invariant *)
  Have: 0 < (r + t + x).
  (* Invariant *)
  Have: 0 < B.
  (* Invariant *)
  Have: (0 / B) = 0.
  (* Invariant *)
  Have: 0 <= t.
  (* Invariant *)
  Have: 0 < x_4.
  (* Invariant *)
  Have: (x_2 < x_4) /\ (x_4 <= x_3).
  (* Then *)
  Have: t != 0.
  If x_3 = x_4
  Then {
    Let x_5 = 1 + q_1.
    Have: (((B * x_5) - 1) / B) = q_1.
    Have: x_5 = q.
    Have: r = 0.
  }
  Else { Have: ((1 + r_1) = r) /\ (((r_1 + x) / B) = q). }
  (* Invariant *)
  Have: 0 < t.
  (* Invariant *)
  Have: (0 <= r) /\ (r < B).
}
Prove: (x_4 / B) = q.
Prover Z3 4.8.12 returns Timeout (Qed:9ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:9ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0002/12_merged.c, line 19):
Assume {
  Type: is_sint32(A) /\ is_sint32(B).
  (* Pre-condition *)
  Have: 0 <= A.
  (* Invariant *)
  Have: 0 < B.
}
Prove: (0 / B) = 0.
Prover Z3 4.8.12 returns Valid (Qed:1ms) (10ms) (29770)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (5ms) (32)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0002/12_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0002/12_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.82ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0002/12_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0002/12_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0002/12_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0002/12_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0002/12_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0002/12_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0002/12_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0002/12_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0002/12_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0002/12_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.79ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0002/12_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0002/12_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/12_0002/12_merged.c, line 43):
Let x = A / B.
Let x_1 = B * x.
Assume {
  Type: is_sint32(A) /\ is_sint32(B) /\ is_sint32(x) /\ is_sint32(A - x_1).
  (* Invariant *)
  Have: 0 <= A.
  (* Invariant *)
  Have: 0 < B.
  (* Invariant *)
  Have: (0 / B) = 0.
  (* Invariant *)
  Have: (x_1 <= A) /\ (A < (B + x_1)).
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/12_0002/12_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/12_0002/12_merged.c:5: Warning: 
  No 'assigns' specification for function 'main12'.
  Callers assumptions might be imprecise.

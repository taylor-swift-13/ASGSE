[kernel] Parsing out/30_0004/30_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/30_0004/30_merged.c:30: Warning: 
  Body of function main30 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 30 goals scheduled
[wp] [Timeout] typed_main30_loop_invariant_established (Qed 0.61ms) (Z3)
[wp] [Timeout] typed_main30_loop_invariant_2_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_main30_loop_invariant_5_established (Qed 0.90ms) (Z3)
[wp] [Timeout] typed_main30_loop_invariant_6_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_main30_assert_missing_return (Qed 2ms) (Z3)
[wp] [Timeout] typed_main30_loop_invariant_14_established (Qed 1ms) (Z3)
[wp] Proved goals:   24 / 30
  Qed:              16
  Alt-Ergo 2.5.4:    8 (5ms-8ms)
  Timeout:           6
------------------------------------------------------------
  Function main30
------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 11):
Let x_1 = 1 + n.
Let x_2 = 1 + n_1.
Let x_3 = n - 1.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_3).
  (* Invariant *)
  Have: (n_1 * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_2) = 0.
  (* Invariant *)
  Have: (n_1 * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_2) = 0.
  (* Invariant *)
  Have: (n_1 * x * y) = 0.
  (* Invariant *)
  Have: (x * y * x_2) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_1) = 0.
  (* Invariant *)
  Have: (n * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_1) = 0.
  (* Invariant *)
  Have: (n * x * y) = 0.
  (* Invariant *)
  Have: (x * y * x_1) = 0.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
}
Prove: (x * x * x_3) = 0.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (32988)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (8ms) (95)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 11):
Assume { Type: is_sint32(n) /\ is_sint32(x). }
Prove: (n * x * x) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:0.61ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.61ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 12):
Assume {
  Type: is_sint32(n) /\ is_sint32(x).
  (* Invariant *)
  Have: (n * x * x) = 0.
}
Prove: (x * x * (1 + n)) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 14):
Let x_1 = n - 1.
Let x_2 = 1 + n.
Let x_3 = 1 + n_1.
Let x_4 = x * x.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_1) /\ is_sint32(x_4).
  (* Invariant *)
  Have: (n_1 * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_3) = 0.
  (* Invariant *)
  Have: (n_1 * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_3) = 0.
  (* Invariant *)
  Have: (n_1 * x * y) = 0.
  (* Invariant *)
  Have: (x * y * x_3) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_2) = 0.
  (* Invariant *)
  Have: (n * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_2) = 0.
  (* Invariant *)
  Have: (n * x * y) = 0.
  (* Invariant *)
  Have: (x * y * x_2) = 0.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x * x * x_1) = 0.
}
Prove: x_4 = 0.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (33306)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (6ms) (135)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 15):
Let x_1 = n - 1.
Let x_2 = 1 + n.
Let x_3 = 1 + n_1.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: (n_1 * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_3) = 0.
  (* Invariant *)
  Have: (n_1 * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_3) = 0.
  (* Invariant *)
  Have: (n_1 * x * y) = 0.
  (* Invariant *)
  Have: (x * y * x_3) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_2) = 0.
  (* Invariant *)
  Have: (n * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_2) = 0.
  (* Invariant *)
  Have: (n * x * y) = 0.
  (* Invariant *)
  Have: (x * y * x_2) = 0.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  Have: (x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_1) = 0.
}
Prove: (y * y * x_1) = 0.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (33366)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (84)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 15):
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: (x * x * (1 + n)) = 0.
}
Prove: (n * y * y) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:0.90ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.90ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 16):
Let x_1 = 1 + n.
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_1) = 0.
  (* Invariant *)
  Have: (n * y * y) = 0.
}
Prove: (y * y * x_1) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 18):
Let x_1 = n - 1.
Let x_2 = 1 + n.
Let x_3 = 1 + n_1.
Let x_4 = y * y.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_1) /\ is_sint32(x_4).
  (* Invariant *)
  Have: (n_1 * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_3) = 0.
  (* Invariant *)
  Have: (n_1 * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_3) = 0.
  (* Invariant *)
  Have: (n_1 * x * y) = 0.
  (* Invariant *)
  Have: (x * y * x_3) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_2) = 0.
  (* Invariant *)
  Have: (n * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_2) = 0.
  (* Invariant *)
  Have: (n * x * y) = 0.
  (* Invariant *)
  Have: (x * y * x_2) = 0.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  Have: (x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_1) = 0.
  (* Invariant *)
  Have: (y * y * x_1) = 0.
}
Prove: x_4 = 0.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (33687)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (8ms) (96)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.99ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 19):
Let x_1 = n - 1.
Let x_2 = 1 + n.
Let x_3 = 1 + n_1.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: (n_1 * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_3) = 0.
  (* Invariant *)
  Have: (n_1 * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_3) = 0.
  (* Invariant *)
  Have: (n_1 * x * y) = 0.
  (* Invariant *)
  Have: (x * y * x_3) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_2) = 0.
  (* Invariant *)
  Have: (n * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_2) = 0.
  (* Invariant *)
  Have: (n * x * y) = 0.
  (* Invariant *)
  Have: (x * y * x_2) = 0.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  Have: (x * x) = 0.
  Have: (y * y) = 0.
  (* Invariant *)
  Have: (x * x * x_1) = 0.
  (* Invariant *)
  Have: (y * y * x_1) = 0.
}
Prove: (x * y * x_1) = 0.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (35172)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (7ms) (75)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 19):
Let x_1 = 1 + n.
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_1) = 0.
  (* Invariant *)
  Have: (n * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_1) = 0.
}
Prove: (n * x * y) = 0.
Prover Z3 4.8.12 returns Valid (Qed:0.95ms) (10ms) (31054)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:0.95ms) (6ms) (38)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 20):
Let x_1 = 1 + n.
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_1) = 0.
  (* Invariant *)
  Have: (n * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_1) = 0.
  (* Invariant *)
  Have: (n * x * y) = 0.
}
Prove: (x * y * x_1) = 0.
Prover Z3 4.8.12 returns Valid (Qed:1ms) (20ms) (32278)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (5ms) (48)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 22):
Let x_1 = n - 1.
Let x_2 = 1 + n.
Let x_3 = 1 + n_1.
Let x_4 = x * y.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_1) /\ is_sint32(x_4).
  (* Invariant *)
  Have: (n_1 * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_3) = 0.
  (* Invariant *)
  Have: (n_1 * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_3) = 0.
  (* Invariant *)
  Have: (n_1 * x * y) = 0.
  (* Invariant *)
  Have: (x * y * x_3) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_2) = 0.
  (* Invariant *)
  Have: (n * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_2) = 0.
  (* Invariant *)
  Have: (n * x * y) = 0.
  (* Invariant *)
  Have: (x * y * x_2) = 0.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  Have: (x * x) = 0.
  Have: (y * y) = 0.
  (* Invariant *)
  Have: (x * x * x_1) = 0.
  (* Invariant *)
  Have: (y * y * x_1) = 0.
  (* Invariant *)
  Have: (x * y * x_1) = 0.
}
Prove: x_4 = 0.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (35513)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (6ms) (112)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.89ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 24):
Let x_1 = 1 + n.
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_1) = 0.
  (* Invariant *)
  Have: (n * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_1) = 0.
  (* Invariant *)
  Have: (n * x * y) = 0.
  (* Invariant *)
  Have: (x * y * x_1) = 0.
}
Prove: 0 <= n.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/30_0004/30_merged.c, line 38):
Let x_1 = 1 + n.
Let x_2 = 1 + n_1.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: (n_1 * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_2) = 0.
  (* Invariant *)
  Have: (n_1 * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_2) = 0.
  (* Invariant *)
  Have: (n_1 * x * y) = 0.
  (* Invariant *)
  Have: (x * y * x_2) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_1) = 0.
  (* Invariant *)
  Have: (n * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_1) = 0.
  (* Invariant *)
  Have: (n * x * y) = 0.
  (* Invariant *)
  Have: (x * y * x_1) = 0.
  (* Invariant *)
  Have: 0 <= n.
  (* Else *)
  Have: n <= 0.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/30_0004/30_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/30_0004/30_merged.c:2: Warning: 
  No 'assigns' specification for function 'main30'.
  Callers assumptions might be imprecise.

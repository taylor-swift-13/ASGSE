[kernel] Parsing out/11_0001/11_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/11_0001/11_merged.c:26: Warning: 
  Body of function main11 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 22 goals scheduled
[wp] [Timeout] typed_main11_loop_invariant_4_preserved (Qed 6ms) (Alt-Ergo)
[wp] [Timeout] typed_main11_loop_invariant_5_preserved (Qed 8ms) (Alt-Ergo)
[wp] [Timeout] typed_main11_loop_invariant_5_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_main11_loop_invariant_6_preserved (Qed 7ms) (Alt-Ergo)
[wp] [Timeout] typed_main11_loop_invariant_6_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_main11_loop_invariant_7_preserved (Qed 8ms) (Alt-Ergo)
[wp] [Timeout] typed_main11_loop_invariant_7_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_main11_assert_missing_return (Qed 4ms) (Alt-Ergo)
[wp] Proved goals:   14 / 22
  Qed:              13
  Alt-Ergo 2.5.4:    1 (20ms)
  Timeout:           8
------------------------------------------------------------
  Function main11
------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 12):
Let x_2 = x_1 * z.
Let x_3 = x - x_2.
Let r = real_of_int(x_3).
Let r_1 = real_of_int(z).
Let x_4 = z - 1.
Let r_2 = real_of_int(x_4).
Let x_5 = c - 1.
Let x_6 = z * x_3.
Let x_7 = x_6 / x_4.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y) /\ is_sint32(z) /\ is_sint32(y * z) /\ is_sint32(x_3) /\
      is_sint32(x_7).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: (x_2 + x_7) = x.
  (* Invariant *)
  Have: (x + (z * x_7)) = (x_2 + x_6 + x_7).
  (* Invariant *)
  Have: (0 / x_4) = 0.
  (* Invariant *)
  Have: ((r * (r_1 - 1.0)) / r_2) = real_of_int(x_7).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (x_1 + (y * z * x_3)) = x.
  (* Invariant *)
  Have: pow(r_1, real_of_int(x_5)) = real_of_int(y).
  (* Invariant *)
  Have: ((y * x_3) + ((z * (1 - y) * x_3) / x_4)) = x_1.
  (* Invariant *)
  Have: ((lxor(z, x_5) * x_3) / x_4) = x_1.
  (* Invariant *)
  Have: ((r * (pow(r_1, real_of_int(c)) - 1.0)) / r_2) = real_of_int(x_1).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
}
Prove: (x * z) = (x_2 + (y * z * z * x_3)).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (20ms) (211)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.82ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 15):
Let x_2 = x_1 * z.
Let x_3 = x - x_2.
Let r = real_of_int(x_3).
Let r_1 = real_of_int(z).
Let r_2 = pow(r_1, real_of_int(c)).
Let x_4 = z - 1.
Let r_3 = real_of_int(x_4).
Let x_5 = c - 1.
Let x_6 = z * x_3.
Let x_7 = x_6 / x_4.
Let x_8 = y * z.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y) /\ is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x_8) /\
      is_sint32(x_3) /\ is_sint32(x_7).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: (x_2 + x_7) = x.
  (* Invariant *)
  Have: (x + (z * x_7)) = (x_2 + x_6 + x_7).
  (* Invariant *)
  Have: (0 / x_4) = 0.
  (* Invariant *)
  Have: ((r * (r_1 - 1.0)) / r_3) = real_of_int(x_7).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (x_1 + (y * z * x_3)) = x.
  (* Invariant *)
  Have: pow(r_1, real_of_int(x_5)) = real_of_int(y).
  (* Invariant *)
  Have: ((y * x_3) + ((z * (1 - y) * x_3) / x_4)) = x_1.
  (* Invariant *)
  Have: ((lxor(z, x_5) * x_3) / x_4) = x_1.
  (* Invariant *)
  Have: ((r * (r_2 - 1.0)) / r_3) = real_of_int(x_1).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: (x * z) = (x_2 + (y * z * z * x_3)).
}
Prove: r_2 = real_of_int(x_8).
Prover Z3 4.8.12 returns Failed
out of memory
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:6ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 16):
Let r = real_of_int(z).
Let x_2 = y * z.
Let r_1 = real_of_int(x_2).
Let x_3 = x_1 * z.
Let x_4 = x - x_3.
Let r_2 = real_of_int(x_4).
Let x_5 = z - 1.
Let r_3 = real_of_int(x_5).
Let x_6 = c - 1.
Let x_7 = y * z * x_4.
Let x_8 = z * x_4.
Let x_9 = x_8 / x_5.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y) /\ is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x_2) /\
      is_sint32(x_4) /\ is_sint32(x_9).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: (x_3 + x_9) = x.
  (* Invariant *)
  Have: (x + (z * x_9)) = (x_3 + x_8 + x_9).
  (* Invariant *)
  Have: (0 / x_5) = 0.
  (* Invariant *)
  Have: ((r_2 * (r - 1.0)) / r_3) = real_of_int(x_9).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (x_1 + x_7) = x.
  (* Invariant *)
  Have: pow(r, real_of_int(x_6)) = real_of_int(y).
  (* Invariant *)
  Have: ((y * x_4) + ((z * (1 - y) * x_4) / x_5)) = x_1.
  (* Invariant *)
  Have: ((lxor(z, x_6) * x_4) / x_5) = x_1.
  (* Invariant *)
  Have: ((r_2 * (r_1 - 1.0)) / r_3) = real_of_int(x_1).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: (x * z) = (x_3 + (y * z * z * x_4)).
  (* Invariant *)
  Have: pow(r, real_of_int(c)) = r_1.
}
Prove: (x_7 + ((z * (1 - x_2) * x_4) / x_5)) = x.
Prover Z3 4.8.12 returns Failed
out of memory
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:8ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 16):
Assume {
  Type: is_sint32(k) /\ is_sint32(z).
  (* Pre-condition *)
  Have: (0 < k) /\ (0 <= z) /\ (k <= 10) /\ (z <= 10).
}
Prove: (0 / (z - 1)) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 17):
Let r = real_of_int(z).
Let x = y * z.
Let r_1 = real_of_int(x).
Let x_1 = a * y * z.
Let x_2 = z - 1.
Let x_3 = (a * z * (1 - x)) / x_2.
Let x_4 = x_1 + x_3.
Let x_5 = c - 1.
Let x_6 = (a * lxor(z, x_5)) / x_2.
Let x_7 = a + (z * x_6).
Let r_2 = real_of_int(a).
Let r_3 = real_of_int(x_2).
Assume {
  Type: is_sint32(a) /\ is_sint32(c) /\ is_sint32(k) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x) /\ is_sint32(x_6) /\
      is_sint32(x_4).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: ((a * z) / x_2) = a.
  (* Invariant *)
  Have: (0 / x_2) = 0.
  (* Invariant *)
  Have: ((r_2 * (r - 1.0)) / r_3) = r_2.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: x_7 = (x_1 + x_6).
  (* Invariant *)
  Have: pow(r, real_of_int(x_5)) = real_of_int(y).
  (* Invariant *)
  Have: x_6 = ((a * y) + ((a * z * (1 - y)) / x_2)).
  (* Invariant *)
  Have: ((r_2 * (r_1 - 1.0)) / r_3) = real_of_int(x_6).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  Have: x_7 = x_4.
  (* Invariant *)
  Have: (a + (z * x_4)) = (x_1 + (a * y * z * z) + x_3).
  (* Invariant *)
  Have: pow(r, real_of_int(c)) = r_1.
}
Prove: ((a * lxor(c, z)) / x_2) = x_4.
Prover Z3 4.8.12 returns Failed
out of memory
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 17):
Let x_1 = z - 1.
Assume {
  Type: is_sint32(k) /\ is_sint32(x) /\ is_sint32(z).
  (* Pre-condition *)
  Have: (0 < k) /\ (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: (0 / x_1) = 0.
}
Prove: ((x * z) / x_1) = x.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 18):
Let x = z - 1.
Let x_1 = (a * lxor(c, z)) / x.
Let x_2 = a * y * z.
Let x_3 = y * z.
Let r = real_of_int(z).
Let r_1 = real_of_int(x_3).
Let x_4 = c - 1.
Let x_5 = (a * lxor(z, x_4)) / x.
Let x_6 = a + (z * x_5).
Let r_2 = real_of_int(a).
Let r_3 = real_of_int(x).
Let x_7 = 1 + c.
Assume {
  Type: is_sint32(a) /\ is_sint32(c) /\ is_sint32(k) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(x_7) /\ is_sint32(x_3) /\ is_sint32(x_1) /\
      is_sint32(x_5).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: ((a * z) / x) = a.
  (* Invariant *)
  Have: (0 / x) = 0.
  (* Invariant *)
  Have: ((r_2 * (r - 1.0)) / r_3) = r_2.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: x_6 = (x_2 + x_5).
  (* Invariant *)
  Have: pow(r, real_of_int(x_4)) = real_of_int(y).
  (* Invariant *)
  Have: x_5 = ((a * y) + ((a * z * (1 - y)) / x)).
  (* Invariant *)
  Have: ((r_2 * (r_1 - 1.0)) / r_3) = real_of_int(x_5).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  Have: x_1 = x_6.
  (* Invariant *)
  Have: (a + (z * x_1)) = ((a * y * z * z) + x_1).
  (* Invariant *)
  Have: pow(r, real_of_int(c)) = r_1.
  (* Invariant *)
  Have: x_1 = (x_2 + ((a * z * (1 - x_3)) / x)).
}
Prove: ((r_2 * (pow(r, real_of_int(x_7)) - 1.0)) / r_3) = real_of_int(x_1).
Prover Z3 4.8.12 returns Failed
out of memory
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:8ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 18):
Let x = z - 1.
Let r = real_of_int(a).
Assume {
  Type: is_sint32(a) /\ is_sint32(k) /\ is_sint32(z).
  (* Pre-condition *)
  Have: (0 < k) /\ (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: ((a * z) / x) = a.
  (* Invariant *)
  Have: (0 / x) = 0.
}
Prove: ((r * (real_of_int(z) - 1.0)) / real_of_int(x)) = r.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.97ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/11_0001/11_merged.c, line 33):
Let r = real_of_int(a).
Let r_1 = real_of_int(z).
Let x = z - 1.
Let r_2 = real_of_int(x).
Let x_1 = c - 1.
Let x_2 = (a * lxor(z, x_1)) / x.
Assume {
  Type: is_sint32(a) /\ is_sint32(c) /\ is_sint32(k) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(x_2).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: ((a * z) / x) = a.
  (* Invariant *)
  Have: (0 / x) = 0.
  (* Invariant *)
  Have: ((r * (r_1 - 1.0)) / r_2) = r.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (a + (z * x_2)) = ((a * y * z) + x_2).
  (* Invariant *)
  Have: pow(r_1, real_of_int(x_1)) = real_of_int(y).
  (* Invariant *)
  Have: x_2 = ((a * y) + ((a * z * (1 - y)) / x)).
  (* Invariant *)
  Have: ((r * (pow(r_1, real_of_int(c)) - 1.0)) / r_2) = real_of_int(x_2).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Else *)
  Have: k <= c.
}
Prove: false.
Prover Z3 4.8.12 returns Failed
out of memory
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/11_0001/11_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/11_0001/11_merged.c:4: Warning: 
  No 'assigns' specification for function 'main11'.
  Callers assumptions might be imprecise.

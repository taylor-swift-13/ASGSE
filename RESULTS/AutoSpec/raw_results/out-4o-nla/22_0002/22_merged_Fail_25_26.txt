[kernel] Parsing out/22_0002/22_merged.c (with preprocessing)
[kernel:typing:implicit-function-declaration] out/22_0002/22_merged.c:24: Warning: 
  Calling undeclared function unknown. Old style K&R code?
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/22_0002/22_merged.c:4: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 26 goals scheduled
[wp] [Timeout] typed_main22_loop_invariant_2_preserved (Qed 4ms) (Z3)
[wp] Proved goals:   25 / 26
  Qed:              17
  Alt-Ergo 2.5.4:    7 (3ms-5ms-6ms)
  Z3 4.8.12:         1 (10ms)
  Timeout:           1
------------------------------------------------------------
  Function main22
------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0002/22_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0002/22_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0002/22_merged.c, line 10):
Let x_1 = x * x.
Let x_2 = 1 + x.
Let x_3 = x_2 * x_2.
Let x_4 = i * i.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_4) /\ is_sint32(x_1) /\ is_sint32(1 + x_1).
  (* Pre-condition *)
  Have: 0 <= x.
  (* Initializer *)
  Init: x_1 = x_4.
  (* Invariant *)
  Have: x_4 <= x_3.
  (* Invariant *)
  Have: x_4 <= (1 + (2 * x) + x_1).
  (* Invariant *)
  Have: x <= x_4.
  (* Invariant *)
  Have: x_1 <= x_4.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: x_1 <= x_3.
  (* Invariant *)
  Have: x <= x_1.
  (* Invariant *)
  Have: (x_1 = (i_1 * i_1)) /\ (0 <= i_1).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: x_3 = x_1.
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0002/22_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0002/22_merged.c, line 11):
Let x_2 = x_1 * x_1.
Let x_3 = x_1 + x_2.
Let x_4 = i * i.
Let x_5 = 1 + x.
Let x_6 = x_5 * x_5.
Let x_7 = x + x_4 + x_6.
Let x_8 = x * x.
Let x_9 = x_1 + x_8 + x_2.
Let x_10 = x + x_4.
Let x_11 = x_4 + x_6.
Let x_12 = 1 + x_1.
Let x_13 = -x_1.
Let x_14 = -x_2.
Let x_15 = 2 + x.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_5) /\ is_sint32(x_4) /\ is_sint32(x_1 + x_2 - x_4) /\
      is_sint32(x + x_4 + x_6 - x_1 - x_2) /\
      is_sint32(1 + x + x_4 + x_6 - x_1 - x_2).
  Have: x_2 = x_4.
  (* Pre-condition *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: x_4 <= (x_12 * x_12).
  (* Invariant *)
  Have: x_4 <= (1 + (2 * x_1) + x_2).
  (* Invariant *)
  Have: x_1 <= x_4.
  (* Invariant *)
  Have: x_2 <= x_4.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: x_6 = x_8.
  (* Invariant *)
  Have: x_10 <= x_3.
  (* Invariant *)
  Have: x_11 <= (1 + x + x_1 + x_8 + x_2).
  (* Invariant *)
  Have: x_3 <= x_11.
  (* Invariant *)
  Have: x_9 <= x_7.
  (* Invariant *)
  Have: (x_7 = (x_1 + (i_1 * i_1) + x_2)) /\ (0 <= i_1).
  (* Invariant *)
  Have: (x_7 = x_9) /\ (x_3 <= x_10).
  (* Invariant *)
  Have: x_3 <= x_7.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: x_7 < (x_1 + x_2 + (x_15 * x_15)).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (10517)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (6ms) (81)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0002/22_merged.c, line 11):
Let x_1 = x * x.
Let x_2 = 1 + x.
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 <= x.
}
Prove: x_1 <= (x_2 * x_2).
Prover Z3 4.8.12 returns Valid (Qed:1ms) (10ms) (9233)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (4ms) (17)

------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0002/22_merged.c, line 12):
Let x_2 = i * i.
Let x_3 = 1 + x.
Let x_4 = x_3 * x_3.
Let x_5 = x + x_2 + x_4.
Let x_6 = x_1 * x_1.
Let x_7 = 2 + x.
Let x_8 = x_1 + x_6.
Let x_9 = x * x.
Let x_10 = x_1 + x_9 + x_6.
Let x_11 = x + x_2.
Let x_12 = x_2 + x_4.
Let x_13 = 1 + x_1.
Let x_14 = -x_1.
Let x_15 = -x_6.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_3) /\ is_sint32(x_2) /\ is_sint32(x_1 + x_6 - x_2) /\
      is_sint32(x + x_2 + x_4 - x_1 - x_6) /\
      is_sint32(1 + x + x_2 + x_4 - x_1 - x_6).
  Have: x_6 = x_2.
  (* Pre-condition *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: x_2 <= (x_13 * x_13).
  (* Invariant *)
  Have: x_2 <= (1 + (2 * x_1) + x_6).
  (* Invariant *)
  Have: x_1 <= x_2.
  (* Invariant *)
  Have: x_6 <= x_2.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: x_4 = x_9.
  (* Invariant *)
  Have: x_11 <= x_8.
  (* Invariant *)
  Have: x_12 <= (1 + x + x_1 + x_9 + x_6).
  (* Invariant *)
  Have: x_8 <= x_12.
  (* Invariant *)
  Have: x_10 <= x_5.
  (* Invariant *)
  Have: (x_5 = (x_1 + (i_1 * i_1) + x_6)) /\ (0 <= i_1).
  (* Invariant *)
  Have: (x_5 = x_10) /\ (x_8 <= x_11).
  (* Invariant *)
  Have: x_8 <= x_5.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: x_5 < (x_1 + x_6 + (x_7 * x_7)).
}
Prove: x_2 <= (2 + x + x_1 + x_6).
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10545)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (6ms) (82)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0002/22_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0002/22_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0002/22_merged.c, line 13):
Let x_1 = x * x.
Let x_2 = 1 + x.
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 <= x.
  (* Invariant *)
  Have: x_1 <= (x_2 * x_2).
}
Prove: x <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:1ms) (10ms) (29977)

------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0002/22_merged.c, line 14):
Let x_2 = i * i.
Let x_3 = x * x.
Let x_4 = 1 + x_1.
Let x_5 = x_4 * x_4.
Let x_6 = x_1 + x_2 + x_5.
Let x_7 = 2 + x_1.
Let x_8 = x + x_3.
Let x_9 = x_1 * x_1.
Let x_10 = x + x_9 + x_3.
Let x_11 = x_1 + x_2.
Let x_12 = x_2 + x_5.
Let x_13 = 1 + x.
Let x_14 = -x.
Let x_15 = -x_3.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x) /\
      is_sint32(x_4) /\ is_sint32(x_2) /\ is_sint32(x + x_3 - x_2) /\
      is_sint32(x_1 + x_2 + x_5 - x - x_3) /\
      is_sint32(1 + x_1 + x_2 + x_5 - x - x_3).
  Have: x_3 = x_2.
  (* Pre-condition *)
  Have: 0 <= x.
  (* Invariant *)
  Have: x_2 <= (x_13 * x_13).
  (* Invariant *)
  Have: x_2 <= (1 + (2 * x) + x_3).
  (* Invariant *)
  Have: x <= x_2.
  (* Invariant *)
  Have: x_3 <= x_2.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: x_5 = x_9.
  (* Invariant *)
  Have: x_11 <= x_8.
  (* Invariant *)
  Have: x_12 <= (1 + x_1 + x + x_9 + x_3).
  (* Invariant *)
  Have: x_8 <= x_12.
  (* Invariant *)
  Have: x_10 <= x_6.
  (* Invariant *)
  Have: (x_6 = (x + (i_1 * i_1) + x_3)) /\ (0 <= i_1).
  (* Invariant *)
  Have: (x_6 = x_10) /\ (x_8 <= x_11).
  (* Invariant *)
  Have: x_8 <= x_6.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: x_6 < (x + x_3 + (x_7 * x_7)).
  (* Invariant *)
  Have: x_2 <= (2 + x_1 + x + x_3).
}
Prove: x_8 <= (1 + x_1 + x_2).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (3ms) (82)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0002/22_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0002/22_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0002/22_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0002/22_merged.c, line 16):
Let x_2 = x_1 * x_1.
Let x_3 = x_1 + x_2.
Let x_4 = i * i.
Let x_5 = 1 + x.
Let x_6 = x_5 * x_5.
Let x_7 = x + x_4 + x_6.
Let x_8 = 2 + x.
Let x_9 = x * x.
Let x_10 = x_1 + x_9 + x_2.
Let x_11 = x + x_4.
Let x_12 = x_4 + x_6.
Let x_13 = 1 + x_1.
Let x_14 = -x_1.
Let x_15 = -x_2.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_5) /\ is_sint32(x_4) /\ is_sint32(x_1 + x_2 - x_4) /\
      is_sint32(x + x_4 + x_6 - x_1 - x_2) /\
      is_sint32(1 + x + x_4 + x_6 - x_1 - x_2).
  Have: x_2 = x_4.
  (* Pre-condition *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: x_4 <= (x_13 * x_13).
  (* Invariant *)
  Have: x_4 <= (1 + (2 * x_1) + x_2).
  (* Invariant *)
  Have: x_1 <= x_4.
  (* Invariant *)
  Have: x_2 <= x_4.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: x_6 = x_9.
  (* Invariant *)
  Have: x_11 <= x_3.
  (* Invariant *)
  Have: x_12 <= (1 + x + x_1 + x_9 + x_2).
  (* Invariant *)
  Have: x_3 <= x_12.
  (* Invariant *)
  Have: x_10 <= x_7.
  (* Invariant *)
  Have: (x_7 = (x_1 + (i_1 * i_1) + x_2)) /\ (0 <= i_1).
  (* Invariant *)
  Have: (x_7 = x_10) /\ (x_3 <= x_11).
  (* Invariant *)
  Have: x_3 <= x_7.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: x_7 < (x_1 + x_2 + (x_8 * x_8)).
  (* Invariant *)
  Have: x_4 <= (2 + x + x_1 + x_2).
  (* Invariant *)
  Have: x_3 <= (1 + x + x_4).
}
Prove: exists i_2 : Z. ((1 + x + x_4 + x_6) = (x_1 + x_2 + (i_2 * i_2))) /\
    (0 <= i_2).
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10815)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (6ms) (82)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0002/22_merged.c, line 16):
Let x_1 = x * x.
Let x_2 = 1 + x.
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 <= x.
  (* Invariant *)
  Have: x_1 <= (x_2 * x_2).
  (* Invariant *)
  Have: x <= x_1.
}
Prove: exists i : Z. ((i * i) = x_1) /\ (0 <= i).
Prover Z3 4.8.12 returns Valid (Qed:1ms) (30226)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (5ms) (49)

------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0002/22_merged.c, line 17):
Let x_1 = i * i.
Let x_2 = 2 * x.
Let x_3 = 1 + x.
Let x_4 = x_3 * x_3.
Let x_5 = 2 + x.
Let x_6 = x * x.
Let x_7 = i_1 * i_1.
Let x_8 = -x_1.
Let x_9 = 1 + x + x_4 - x_1.
Let x_10 = x_9 * x_9.
Let x_11 = 2 + x + x_4 - x_1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_1) /\ is_sint32(x_7) /\ is_sint32(x_1 - 1) /\
      is_sint32(x_9).
  (* Pre-condition *)
  Have: x_1 <= (1 + x + x_4).
  (* Initializer *)
  Init: x_10 = x_7.
  (* Invariant *)
  Have: x_7 <= (x_11 * x_11).
  (* Invariant *)
  Have: (x_7 + (2 * x_1)) <= (3 + x_2 + (2 * x_4) + x_10).
  (* Invariant *)
  Have: (x + x_4) < (x_1 + x_7).
  (* Invariant *)
  Have: x_10 <= x_7.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: 0 <= x_7.
  (* Invariant *)
  Have: x_4 = x_6.
  (* Invariant *)
  Have: x_1 <= (1 + x_4).
  (* Invariant *)
  Have: x_1 <= (2 + x_2 + x_6).
  (* Invariant *)
  Have: x < x_1.
  (* Invariant *)
  Have: x_6 < x_1.
  (* Invariant *)
  Have: (x_1 = (1 + (i_2 * i_2))) /\ (0 <= i_2).
  (* Invariant *)
  Have: (x_1 = (1 + x_6)) /\ (x_4 < x_1).
  (* Invariant *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: x_1 <= (x_5 * x_5).
  (* Invariant *)
  Have: x_1 <= (3 + x_2 + x_4).
  (* Invariant *)
  Have: 0 <= i.
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (10763)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (6ms) (84)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0002/22_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0002/22_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0002/22_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0002/22_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0002/22_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0002/22_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0002/22_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.73ms)

------------------------------------------------------------

Goal Loop assigns (file out/22_0002/22_merged.c, line 21) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/22_0002/22_merged.c, line 21) (2/2):
Call Result at line 24
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/22_0002/22_merged.c:4: Warning: 
  No 'assigns' specification for function 'main22'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/22_0002/22_merged.c:24: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/17_0004/17_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/17_0004/17_merged.c:32: Warning: 
  Body of function main17 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 32 goals scheduled
[wp] [Timeout] typed_main17_loop_invariant_3_preserved (Qed 6ms) (Z3)
[wp] [Timeout] typed_main17_assert_missing_return (Qed 2ms) (Z3)
[wp] Proved goals:   30 / 32
  Qed:            22
  Z3 4.8.12:       8 (10ms-86ms-560ms)
  Timeout:         2
------------------------------------------------------------
  Function main17
------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0004/17_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0004/17_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0004/17_merged.c, line 14):
Let x = 1 + c.
Let x_1 = (c * x) / 2.
Let x_2 = x_1 * x_1.
Let x_3 = c * c * c * c.
Let x_4 = (c * c * c * (c - 1)) / 2.
Let x_5 = -c.
Let x_6 = (x * x * x) + x_2.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_6).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_2 = ((x_3 / 3) + ((c * (3 - c)) / 6) + (c * c * (c - (c / 2)))).
  (* Invariant *)
  Have: x_4 = x_2.
  (* Invariant *)
  Have: ((c * c * c * x) / 2) = x_2.
  (* Invariant *)
  Have: x_2 = ((x_3 / 2) + x_4).
  (* Invariant *)
  Have: x_2 = (c * c * c * (c / c)).
  (* Invariant *)
  Have: ((c * c * x) / 2) = x_2.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: ((c * c) + (2 * (c * c * c)) + x_3) = (4 * x_2).
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
}
Prove: (((x * (2 - c)) / 6) + ((x * x * x * x) / 3)
        + (x * x * (1 + c - (x / 2)))) = x_6.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (560ms) (1332621)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0004/17_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0004/17_merged.c, line 15):
Let x = 1 + y.
Let x_1 = x * x * x.
Let x_2 = x * x * (1 + y - (x / 2)).
Let x_3 = -y.
Let x_4 = (x * (2 - y)) / 6.
Let x_5 = (x * x * x * x) / 3.
Let x_6 = x_4 + x_5 + x_2.
Let x_7 = y * y * y * y.
Let x_8 = (y * x) / 2.
Let x_9 = (y * y * y * (y - 1)) / 2.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_6) /\
      is_sint32(x_4 + x_5 + x_2 - x_1).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_6
          = (x_1 + (x_7 / 3) + ((y * (3 - y)) / 6) + (y * y * (y - (y / 2)))).
  (* Invariant *)
  Have: x_6 = (x_1 + x_9).
  (* Invariant *)
  Have: x_6 = (x_1 + ((y * y * y * x) / 2)).
  (* Invariant *)
  Have: x_6 = (x_1 + (x_7 / 2) + x_9).
  (* Invariant *)
  Have: x_6 = ((y * y * y * (y / y)) + x_1).
  (* Invariant *)
  Have: x_6 = (x_1 + ((y * y * x) / 2)).
  (* Invariant *)
  Have: x_6 = (x_1 + (x_8 * x_8)).
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: ((4 * x_4) + (4 * x_5) + (4 * x_2))
          = ((y * y) + (2 * (y * y * y)) + x_7 + (4 * x_1)).
  (* Invariant *)
  Have: x_1 <= x_6.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y < k.
}
Prove: ((y * x * x * x) / 2) = x_6.
Prover Z3 4.8.12 returns Timeout (Qed:6ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:6ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0004/17_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0004/17_merged.c, line 16):
Let x = 1 + y.
Let x_1 = (y * x * x * x) / 2.
Let x_2 = -y.
Let x_3 = x * x * x.
Let x_4 = y * y * y * y.
Let x_5 = (y * x) / 2.
Let x_6 = (y * y * y * (y - 1)) / 2.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_1 - x_3).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_1
          = (x_3 + (x_4 / 3) + ((y * (3 - y)) / 6) + (y * y * (y - (y / 2)))).
  (* Invariant *)
  Have: x_1 = (x_3 + x_6).
  (* Invariant *)
  Have: x_1 = (x_3 + ((y * y * y * x) / 2)).
  (* Invariant *)
  Have: x_1 = (x_3 + (x_4 / 2) + x_6).
  (* Invariant *)
  Have: x_1 = ((y * y * y * (y / y)) + x_3).
  (* Invariant *)
  Have: x_1 = (x_3 + ((y * y * x) / 2)).
  (* Invariant *)
  Have: x_1 = (x_3 + (x_5 * x_5)).
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: ((y * y) + (2 * (y * y * y)) + x_4 + (4 * x_3)) = (4 * x_1).
  (* Invariant *)
  Have: x_3 <= x_1.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y < k.
  (* Invariant *)
  Have: x_1
          = (((x * (2 - y)) / 6) + ((x * x * x * x) / 3)
             + (x * x * (1 + y - (x / 2)))).
}
Prove: ((x * x * x * (2 + y)) / 2) = x_1.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (59052)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0004/17_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0004/17_merged.c, line 17):
Let x = 1 + c.
Let x_1 = (x * x * x * (2 + c)) / 2.
Let x_2 = (c * x * x * x) / 2.
Let x_3 = -c.
Let x_4 = x * x * x * x.
Let x_5 = x * x * x.
Let x_6 = c * c * c * c.
Let x_7 = (c * x) / 2.
Let x_8 = (c * c * c * (c - 1)) / 2.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_1 - x_5).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_1
          = (x_5 + (x_6 / 3) + ((c * (3 - c)) / 6) + (c * c * (c - (c / 2)))).
  (* Invariant *)
  Have: x_1 = (x_5 + x_8).
  (* Invariant *)
  Have: x_1 = (x_5 + ((c * c * c * x) / 2)).
  (* Invariant *)
  Have: x_1 = (x_5 + (x_6 / 2) + x_8).
  (* Invariant *)
  Have: x_1 = ((c * c * c * (c / c)) + x_5).
  (* Invariant *)
  Have: x_1 = (x_5 + ((c * c * x) / 2)).
  (* Invariant *)
  Have: x_1 = (x_5 + (x_7 * x_7)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: ((c * c) + (2 * (c * c * c)) + x_6 + (4 * x_5)) = (4 * x_1).
  (* Invariant *)
  Have: x_5 <= x_1.
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: x_1 = (((x * (2 - c)) / 6) + (x_4 / 3) + (x * x * (1 + c - (x / 2)))).
  (* Invariant *)
  Have: x_1 = x_2.
}
Prove: x_1 = (x_2 + (x_4 / 2)).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (30ms) (60653)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0004/17_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0004/17_merged.c, line 18):
Let x = 1 + c.
Let x_1 = (c * x * x * x) / 2.
Let x_2 = -c.
Let x_3 = x * x * x * x.
Let x_4 = x * x * x.
Let x_5 = c * c * c * c.
Let x_6 = (c * x) / 2.
Let x_7 = (c * c * c * (c - 1)) / 2.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_1 - x_4).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_1
          = (x_4 + (x_5 / 3) + ((c * (3 - c)) / 6) + (c * c * (c - (c / 2)))).
  (* Invariant *)
  Have: x_1 = (x_4 + x_7).
  (* Invariant *)
  Have: x_1 = (x_4 + ((c * c * c * x) / 2)).
  (* Invariant *)
  Have: x_1 = (x_4 + (x_5 / 2) + x_7).
  (* Invariant *)
  Have: x_1 = ((c * c * c * (c / c)) + x_4).
  (* Invariant *)
  Have: x_1 = (x_4 + ((c * c * x) / 2)).
  (* Invariant *)
  Have: x_1 = (x_4 + (x_6 * x_6)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: ((c * c) + (2 * (c * c * c)) + x_5 + (4 * x_4)) = (4 * x_1).
  (* Invariant *)
  Have: x_4 <= x_1.
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  Have: (x_3 / 2) = 0.
  (* Invariant *)
  Have: x_1 = (((x * (2 - c)) / 6) + (x_3 / 3) + (x * x * (1 + c - (x / 2)))).
  (* Invariant *)
  Have: ((x * x * x * (2 + c)) / 2) = x_1.
}
Prove: x_1 = (x * x * x * (x / x)).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (61325)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0004/17_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0004/17_merged.c, line 19):
Let x = 1 + y.
Let x_1 = x * x * x * (x / x).
Let x_2 = (y * x * x * x) / 2.
Let x_3 = x * x * x * x.
Let x_4 = 2 + y.
Let x_5 = -y.
Let x_6 = x * x * x.
Let x_7 = y * y * y * y.
Let x_8 = (y * x) / 2.
Let x_9 = (y * y * y * (y - 1)) / 2.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_1 - x_6).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_1
          = (x_6 + (x_7 / 3) + ((y * (3 - y)) / 6) + (y * y * (y - (y / 2)))).
  (* Invariant *)
  Have: x_1 = (x_6 + x_9).
  (* Invariant *)
  Have: x_1 = (x_6 + ((y * y * y * x) / 2)).
  (* Invariant *)
  Have: x_1 = (x_6 + (x_7 / 2) + x_9).
  (* Invariant *)
  Have: x_1 = ((y * y * y * (y / y)) + x_6).
  (* Invariant *)
  Have: x_1 = (x_6 + ((y * y * x) / 2)).
  (* Invariant *)
  Have: x_1 = (x_6 + (x_8 * x_8)).
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: ((y * y) + (2 * (y * y * y)) + x_7 + (4 * x_6)) = (4 * x_1).
  (* Invariant *)
  Have: x_6 <= x_1.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y < k.
  (* Invariant *)
  Have: x_1 = (((x * (2 - y)) / 6) + (x_3 / 3) + (x * x * (1 + y - (x / 2)))).
  (* Invariant *)
  Have: x_2 = x_1.
  (* Invariant *)
  Have: ((x * x * x * x_4) / 2) = x_1.
  (* Invariant *)
  Have: x_1 = (x_2 + (x_3 / 2)).
}
Prove: ((x * x * x_4) / 2) = x_1.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (68804)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0004/17_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.94ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0004/17_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0004/17_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.79ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0004/17_merged.c, line 21):
Let x = 1 + c.
Let x_1 = (c * x * x * x) / 2.
Let x_2 = 2 + c.
Let x_3 = x * x * x * x.
Let x_4 = -c.
Let x_5 = x * x * x.
Let x_6 = c * c * c * c.
Let x_7 = (c * x) / 2.
Let x_8 = (c * c * c * (c - 1)) / 2.
Let x_9 = (x * x_2) / 2.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_1 - x_5).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_1
          = (x_5 + (x_6 / 3) + ((c * (3 - c)) / 6) + (c * c * (c - (c / 2)))).
  (* Invariant *)
  Have: x_1 = (x_5 + x_8).
  (* Invariant *)
  Have: x_1 = (x_5 + ((c * c * c * x) / 2)).
  (* Invariant *)
  Have: x_1 = (x_5 + (x_6 / 2) + x_8).
  (* Invariant *)
  Have: x_1 = ((c * c * c * (c / c)) + x_5).
  (* Invariant *)
  Have: x_1 = (x_5 + ((c * c * x) / 2)).
  (* Invariant *)
  Have: x_1 = (x_5 + (x_7 * x_7)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: ((c * c) + (2 * (c * c * c)) + x_6 + (4 * x_5)) = (4 * x_1).
  (* Invariant *)
  Have: x_5 <= x_1.
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: x_1 = (((x * (2 - c)) / 6) + (x_3 / 3) + (x * x * (1 + c - (x / 2)))).
  (* Invariant *)
  Have: ((x * x * x * x_2) / 2) = x_1.
  (* Invariant *)
  Have: (x_3 / 2) = 0.
  (* Invariant *)
  Have: x_1 = (x * x * x * (x / x)).
  (* Invariant *)
  Have: x_1 = ((x * x * x_2) / 2).
}
Prove: x_1 = (x_9 * x_9).
Prover Z3 4.8.12 returns Valid (Qed:6ms) (30ms) (72177)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0004/17_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0004/17_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0004/17_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0004/17_merged.c, line 23):
Let x = 1 + c.
Let x_1 = 2 + c.
Let x_2 = (x * x_1) / 2.
Let x_3 = x_2 * x_2.
Let x_4 = (c * x * x * x) / 2.
Let x_5 = x * x * x * x.
Let x_6 = -c.
Let x_7 = x * x * x.
Let x_8 = c * c * c * c.
Let x_9 = 4 * x_3.
Let x_10 = (c * x) / 2.
Let x_11 = (c * c * c * (c - 1)) / 2.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_3 - x_7).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_3
          = (x_7 + (x_8 / 3) + ((c * (3 - c)) / 6) + (c * c * (c - (c / 2)))).
  (* Invariant *)
  Have: x_3 = (x_7 + x_11).
  (* Invariant *)
  Have: x_3 = (x_7 + ((c * c * c * x) / 2)).
  (* Invariant *)
  Have: x_3 = (x_7 + (x_8 / 2) + x_11).
  (* Invariant *)
  Have: x_3 = ((c * c * c * (c / c)) + x_7).
  (* Invariant *)
  Have: x_3 = (x_7 + ((c * c * x) / 2)).
  (* Invariant *)
  Have: x_3 = (x_7 + (x_10 * x_10)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: ((c * c) + (2 * (c * c * c)) + x_8 + (4 * x_7)) = x_9.
  (* Invariant *)
  Have: x_7 <= x_3.
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: x_3 = (((x * (2 - c)) / 6) + (x_5 / 3) + (x * x * (1 + c - (x / 2)))).
  (* Invariant *)
  Have: x_4 = x_3.
  (* Invariant *)
  Have: ((x * x * x * x_1) / 2) = x_3.
  (* Invariant *)
  Have: x_3 = (x_4 + (x_5 / 2)).
  (* Invariant *)
  Have: x_3 = (x * x * x * (x / x)).
  (* Invariant *)
  Have: ((x * x * x_1) / 2) = x_3.
}
Prove: ((x * x) + (2 * x_7) + x_5) = x_9.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (11423)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0004/17_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.85ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0004/17_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0004/17_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0004/17_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0004/17_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.89ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0004/17_merged.c, line 26):
Let x = 1 + c.
Let x_1 = x * x * x.
Let x_2 = x * x * x * x.
Let x_3 = 2 + c.
Let x_4 = (x * x_3) / 2.
Let x_5 = x_4 * x_4.
Let x_6 = 4 * x_5.
Let x_7 = (c * x * x * x) / 2.
Let x_8 = -c.
Let x_9 = c * c * c * c.
Let x_10 = (c * x) / 2.
Let x_11 = (c * c * c * (c - 1)) / 2.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_5) /\
      is_sint32(x_5 - x_1).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_5
          = (x_1 + (x_9 / 3) + ((c * (3 - c)) / 6) + (c * c * (c - (c / 2)))).
  (* Invariant *)
  Have: x_5 = (x_1 + x_11).
  (* Invariant *)
  Have: x_5 = (x_1 + ((c * c * c * x) / 2)).
  (* Invariant *)
  Have: x_5 = (x_1 + (x_9 / 2) + x_11).
  (* Invariant *)
  Have: x_5 = ((c * c * c * (c / c)) + x_1).
  (* Invariant *)
  Have: x_5 = (x_1 + ((c * c * x) / 2)).
  (* Invariant *)
  Have: x_5 = (x_1 + (x_10 * x_10)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: ((c * c) + (2 * (c * c * c)) + x_9 + (4 * x_1)) = x_6.
  (* Invariant *)
  Have: x_1 <= x_5.
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: x_5 = (((x * (2 - c)) / 6) + (x_2 / 3) + (x * x * (1 + c - (x / 2)))).
  (* Invariant *)
  Have: x_7 = x_5.
  (* Invariant *)
  Have: ((x * x * x * x_3) / 2) = x_5.
  (* Invariant *)
  Have: x_5 = (x_7 + (x_2 / 2)).
  (* Invariant *)
  Have: x_5 = (x * x * x * (x / x)).
  (* Invariant *)
  Have: ((x * x * x_3) / 2) = x_5.
  (* Invariant *)
  Have: ((x * x) + (2 * x_1) + x_2) = x_6.
}
Prove: 0 <= x_5.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (66003)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0004/17_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.86ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0004/17_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0004/17_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/17_0004/17_merged.c, line 38):
Let x = 1 + c.
Let x_1 = (c * x) / 2.
Let x_2 = x_1 * x_1.
Let x_3 = c * c * c * c.
Let x_4 = (c * c * c * (c - 1)) / 2.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x_2).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_2 = ((x_3 / 3) + ((c * (3 - c)) / 6) + (c * c * (c - (c / 2)))).
  (* Invariant *)
  Have: x_4 = x_2.
  (* Invariant *)
  Have: ((c * c * c * x) / 2) = x_2.
  (* Invariant *)
  Have: x_2 = ((x_3 / 2) + x_4).
  (* Invariant *)
  Have: x_2 = (c * c * c * (c / c)).
  (* Invariant *)
  Have: ((c * c * x) / 2) = x_2.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: ((c * c) + (2 * (c * c * c)) + x_3) = (4 * x_2).
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 <= c.
  (* Else *)
  Have: k <= c.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/17_0004/17_merged.c, line 28):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/17_0004/17_merged.c:4: Warning: 
  No 'assigns' specification for function 'main17'.
  Callers assumptions might be imprecise.

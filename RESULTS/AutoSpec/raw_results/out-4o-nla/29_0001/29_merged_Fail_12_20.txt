[kernel] Parsing out/29_0001/29_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/29_0001/29_merged.c:28: Warning: 
  Body of function main29 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 20 goals scheduled
[wp] [Timeout] typed_main29_loop_invariant_preserved (Qed 6ms) (Z3)
[wp] [Timeout] typed_main29_loop_invariant_established (Qed 0.82ms) (Z3)
[wp] [Timeout] typed_main29_loop_invariant_2_preserved (Qed 7ms) (Z3)
[wp] [Timeout] typed_main29_loop_invariant_2_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_main29_loop_invariant_3_preserved (Qed 6ms) (Z3)
[wp] [Timeout] typed_main29_loop_invariant_4_preserved (Qed 7ms) (Z3)
[wp] [Timeout] typed_main29_loop_invariant_5_preserved (Qed 6ms) (Z3)
[wp] [Timeout] typed_main29_loop_invariant_5_established (Qed 2ms) (Z3)
[wp] Proved goals:   12 / 20
  Qed:               7
  Alt-Ergo 2.5.4:    2 (8ms-37ms)
  Z3 4.8.12:         3 (20ms-70ms)
  Timeout:           8
------------------------------------------------------------
  Function main29
------------------------------------------------------------

Goal Preservation of Invariant (file out/29_0001/29_merged.c, line 14):
Let x_1 = x * x.
Let x_2 = z / x_1.
Let x_3 = x * y * x_2.
Let x_4 = x * y.
Let x_5 = x_3 / x_4.
Let x_6 = y * y * x_5.
Let x_7 = 0 / x_4.
Let x_8 = z + x_1.
Let x_9 = x_4 + x_3.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(x_8) /\ is_sint32(x_3) /\ is_sint32(x_9) /\
      is_sint32(x_6).
  (* Pre-condition *)
  Have: 0 <= x.
  (* Pre-condition *)
  Have: 0 <= y.
  (* Pre-condition *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (x * x * x_7) = 0.
  (* Invariant *)
  Have: (y * y * x_7) = 0.
  (* Invariant *)
  Have: (x * y * (0 / x_1)) = 0.
  (* Invariant *)
  Have: n_1 != 0.
  (* Invariant *)
  Have: (x * x * x_5) = z.
  (* Invariant *)
  Have: (x * x * y * y * x_2 * x_2) <= (y * y * z * x_5).
  (* Invariant *)
  Have: n != 0.
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: 0 <= x_6.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
}
Prove: (x * x * (x_9 / x_4)) = x_8.
Prover Z3 4.8.12 returns Timeout (Qed:6ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:6ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/29_0001/29_merged.c, line 14):
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 <= x.
  (* Pre-condition *)
  Have: 0 <= y.
  (* Pre-condition *)
  Have: 0 <= n.
}
Prove: (x * x * (0 / (x * y))) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:0.82ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.82ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/29_0001/29_merged.c, line 15):
Let x_1 = x * y.
Let x_2 = p / x_1.
Let x_3 = y * y * x_2.
Let x_4 = x * x.
Let x_5 = p + x_1.
Let x_6 = x_5 / x_1.
Let x_7 = x * x * x_6.
Let x_8 = x_7 - x_4.
Let x_9 = 0 / x_1.
Let x_10 = (y * y) + x_3.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(p) /\ is_sint32(x) /\
      is_sint32(y) /\ is_sint32(x_5) /\ is_sint32(x_3) /\ is_sint32(x_10) /\
      is_sint32(x_7) /\ is_sint32(x_8).
  (* Pre-condition *)
  Have: 0 <= x.
  (* Pre-condition *)
  Have: 0 <= y.
  (* Pre-condition *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (x * x * x_9) = 0.
  (* Invariant *)
  Have: (y * y * x_9) = 0.
  (* Invariant *)
  Have: (x * y * (0 / x_4)) = 0.
  (* Invariant *)
  Have: n_1 != 0.
  (* Invariant *)
  Have: x_7 = (x_4 + (x * x * x_2)).
  (* Invariant *)
  Have: (x * y * (x_8 / x_4)) = p.
  (* Invariant *)
  Have: (p * p) <= (y * y * x_8 * x_2).
  (* Invariant *)
  Have: n != 0.
  (* Invariant *)
  Have: x_4 <= x_7.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: 0 <= p.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
}
Prove: (y * y * x_6) = x_10.
Prover Z3 4.8.12 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/29_0001/29_merged.c, line 15):
Let x_1 = 0 / (x * y).
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 <= x.
  (* Pre-condition *)
  Have: 0 <= y.
  (* Pre-condition *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (x * x * x_1) = 0.
}
Prove: (y * y * x_1) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/29_0001/29_merged.c, line 16):
Let x_1 = y * y.
Let x_2 = x * y.
Let x_3 = p + x_2.
Let x_4 = x_3 / x_2.
Let x_5 = y * y * x_4.
Let x_6 = x * x.
Let x_7 = x * x * x_4.
Let x_8 = x_7 - x_6.
Let x_9 = x_5 - x_1.
Let x_10 = p / x_2.
Let x_11 = 0 / x_2.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(p) /\ is_sint32(x) /\
      is_sint32(y) /\ is_sint32(x_3) /\ is_sint32(x_7) /\ is_sint32(x_5) /\
      is_sint32(x_8) /\ is_sint32(x_9).
  (* Pre-condition *)
  Have: 0 <= x.
  (* Pre-condition *)
  Have: 0 <= y.
  (* Pre-condition *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (x * x * x_11) = 0.
  (* Invariant *)
  Have: (y * y * x_11) = 0.
  (* Invariant *)
  Have: (x * y * (0 / x_6)) = 0.
  (* Invariant *)
  Have: n_1 != 0.
  (* Invariant *)
  Have: x_7 = (x_6 + (x * x * x_10)).
  (* Invariant *)
  Have: x_5 = (x_1 + (y * y * x_10)).
  (* Invariant *)
  Have: (x * y * (x_8 / x_6)) = p.
  (* Invariant *)
  Have: (p * p) <= (x_8 * x_9).
  (* Invariant *)
  Have: n != 0.
  (* Invariant *)
  Have: x_6 <= x_7.
  (* Invariant *)
  Have: x_1 <= x_5.
  (* Invariant *)
  Have: 0 <= p.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
}
Prove: (x * y * (x_7 / x_6)) = x_3.
Prover Z3 4.8.12 returns Timeout (Qed:6ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:6ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/29_0001/29_merged.c, line 16):
Let x_1 = 0 / (x * y).
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 <= x.
  (* Pre-condition *)
  Have: 0 <= y.
  (* Pre-condition *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (x * x * x_1) = 0.
  (* Invariant *)
  Have: (y * y * x_1) = 0.
}
Prove: (x * y * (0 / (x * x))) = 0.
Prover Z3 4.8.12 returns Valid (Qed:1ms) (20ms) (41028)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (8ms) (231)

------------------------------------------------------------

Goal Preservation of Invariant (file out/29_0001/29_merged.c, line 17):
Let x_1 = x * x.
Let x_2 = z + x_1.
Let x_3 = x_2 / x_1.
Let x_4 = x * y * x_3.
Let x_5 = x * y.
Let x_6 = x_4 / x_5.
Let x_7 = y * y.
Let x_8 = y * y * x_6.
Let x_9 = x_4 - x_5.
Let x_10 = x_8 - x_7.
Let x_11 = x_9 / x_5.
Let x_12 = 0 / x_5.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(x_2) /\ is_sint32(x_4) /\ is_sint32(x_9) /\
      is_sint32(x_8) /\ is_sint32(x_10).
  (* Pre-condition *)
  Have: 0 <= x.
  (* Pre-condition *)
  Have: 0 <= y.
  (* Pre-condition *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (x * x * x_12) = 0.
  (* Invariant *)
  Have: (y * y * x_12) = 0.
  (* Invariant *)
  Have: (x * y * (0 / x_1)) = 0.
  (* Invariant *)
  Have: n_1 != 0.
  (* Invariant *)
  Have: (x * x * x_11) = z.
  (* Invariant *)
  Have: x_8 = (x_7 + (y * y * x_11)).
  (* Invariant *)
  Have: x_4 = (x_5 + (x * y * (z / x_1))).
  (* Invariant *)
  Have: (x_9 * x_9) <= (z * x_10).
  (* Invariant *)
  Have: n != 0.
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: x_7 <= x_8.
  (* Invariant *)
  Have: x_5 <= x_4.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x * x * x_6) = x_2.
}
Prove: (x * x * y * y * x_3 * x_3) <= (y * y * x_2 * x_6).
Prover Z3 4.8.12 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/29_0001/29_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.92ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/29_0001/29_merged.c, line 18):
Let x_1 = x * x.
Let x_2 = z + x_1.
Let x_3 = x_2 / x_1.
Let x_4 = x * y * x_3.
Let x_5 = x * y.
Let x_6 = x_4 / x_5.
Let x_7 = y * y.
Let x_8 = y * y * x_6.
Let x_9 = x_4 - x_5.
Let x_10 = x_8 - x_7.
Let x_11 = x_9 / x_5.
Let x_12 = 0 / x_5.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(n - 1) /\ is_sint32(x_2) /\ is_sint32(x_4) /\
      is_sint32(x_9) /\ is_sint32(x_8) /\ is_sint32(x_10).
  (* Pre-condition *)
  Have: 0 <= x.
  (* Pre-condition *)
  Have: 0 <= y.
  (* Pre-condition *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (x * x * x_12) = 0.
  (* Invariant *)
  Have: (y * y * x_12) = 0.
  (* Invariant *)
  Have: (x * y * (0 / x_1)) = 0.
  (* Invariant *)
  Have: n_1 != 0.
  (* Invariant *)
  Have: (x * x * x_11) = z.
  (* Invariant *)
  Have: x_8 = (x_7 + (y * y * x_11)).
  (* Invariant *)
  Have: x_4 = (x_5 + (x * y * (z / x_1))).
  (* Invariant *)
  Have: (x_9 * x_9) <= (z * x_10).
  (* Invariant *)
  Have: n != 0.
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: x_7 <= x_8.
  (* Invariant *)
  Have: x_5 <= x_4.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x * x * x_6) = x_2.
  (* Invariant *)
  Have: (x * x * y * y * x_3 * x_3) <= (y * y * x_2 * x_6).
}
Prove: n != 1.
Prover Z3 4.8.12 returns Timeout (Qed:6ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:6ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/29_0001/29_merged.c, line 18):
Let x_1 = 0 / (x * y).
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 <= x.
  (* Pre-condition *)
  Have: 0 <= y.
  (* Pre-condition *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (x * x * x_1) = 0.
  (* Invariant *)
  Have: (y * y * x_1) = 0.
  (* Invariant *)
  Have: (x * y * (0 / (x * x))) = 0.
}
Prove: n != 0.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/29_0001/29_merged.c, line 19):
Let x_1 = x * x.
Let x_2 = z + x_1.
Let x_3 = x_2 / x_1.
Let x_4 = x * y * x_3.
Let x_5 = x * y.
Let x_6 = x_4 / x_5.
Let x_7 = y * y.
Let x_8 = y * y * x_6.
Let x_9 = x_4 - x_5.
Let x_10 = x_8 - x_7.
Let x_11 = x_9 / x_5.
Let x_12 = 0 / x_5.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(n - 1) /\ is_sint32(x_2) /\ is_sint32(x_4) /\
      is_sint32(x_9) /\ is_sint32(x_8) /\ is_sint32(x_10).
  (* Pre-condition *)
  Have: 0 <= x.
  (* Pre-condition *)
  Have: 0 <= y.
  (* Pre-condition *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (x * x * x_12) = 0.
  (* Invariant *)
  Have: (y * y * x_12) = 0.
  (* Invariant *)
  Have: (x * y * (0 / x_1)) = 0.
  (* Invariant *)
  Have: n_1 != 0.
  (* Invariant *)
  Have: (x * x * x_11) = z.
  (* Invariant *)
  Have: x_8 = (x_7 + (y * y * x_11)).
  (* Invariant *)
  Have: x_4 = (x_5 + (x * y * (z / x_1))).
  (* Invariant *)
  Have: (x_9 * x_9) <= (z * x_10).
  (* Invariant *)
  Have: n != 0.
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: x_7 <= x_8.
  (* Invariant *)
  Have: x_5 <= x_4.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x * x * x_6) = x_2.
  (* Invariant *)
  Have: (x * x * y * y * x_3 * x_3) <= (y * y * x_2 * x_6).
  (* Invariant *)
  Have: n != 1.
}
Prove: 0 <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (20ms) (59523)

------------------------------------------------------------

Goal Establishment of Invariant (file out/29_0001/29_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/29_0001/29_merged.c, line 20):
Let x_1 = x * x.
Let x_2 = z + x_1.
Let x_3 = x_2 / x_1.
Let x_4 = x * y * x_3.
Let x_5 = x * y.
Let x_6 = x_4 / x_5.
Let x_7 = y * y.
Let x_8 = y * y * x_6.
Let x_9 = x_4 - x_5.
Let x_10 = x_8 - x_7.
Let x_11 = x_9 / x_5.
Let x_12 = 0 / x_5.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(n - 1) /\ is_sint32(x_2) /\ is_sint32(x_4) /\
      is_sint32(x_9) /\ is_sint32(x_8) /\ is_sint32(x_10).
  (* Pre-condition *)
  Have: 0 <= x.
  (* Pre-condition *)
  Have: 0 <= y.
  (* Pre-condition *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (x * x * x_12) = 0.
  (* Invariant *)
  Have: (y * y * x_12) = 0.
  (* Invariant *)
  Have: (x * y * (0 / x_1)) = 0.
  (* Invariant *)
  Have: n_1 != 0.
  (* Invariant *)
  Have: (x * x * x_11) = z.
  (* Invariant *)
  Have: x_8 = (x_7 + (y * y * x_11)).
  (* Invariant *)
  Have: x_4 = (x_5 + (x * y * (z / x_1))).
  (* Invariant *)
  Have: (x_9 * x_9) <= (z * x_10).
  (* Invariant *)
  Have: n != 0.
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: x_7 <= x_8.
  (* Invariant *)
  Have: x_5 <= x_4.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x * x * x_6) = x_2.
  (* Invariant *)
  Have: (x * x * y * y * x_3 * x_3) <= (y * y * x_2 * x_6).
  (* Invariant *)
  Have: n != 1.
  (* Invariant *)
  Have: 0 <= x_2.
}
Prove: 0 <= x_8.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (70ms) (326296)

------------------------------------------------------------

Goal Establishment of Invariant (file out/29_0001/29_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.88ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/29_0001/29_merged.c, line 21):
Let x_1 = x * x.
Let x_2 = z + x_1.
Let x_3 = x_2 / x_1.
Let x_4 = x * y * x_3.
Let x_5 = x * y.
Let x_6 = x_4 / x_5.
Let x_7 = y * y * x_6.
Let x_8 = y * y.
Let x_9 = x_4 - x_5.
Let x_10 = x_7 - x_8.
Let x_11 = x_9 / x_5.
Let x_12 = 0 / x_5.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(n - 1) /\ is_sint32(x_2) /\ is_sint32(x_4) /\
      is_sint32(x_9) /\ is_sint32(x_7) /\ is_sint32(x_10).
  (* Pre-condition *)
  Have: 0 <= x.
  (* Pre-condition *)
  Have: 0 <= y.
  (* Pre-condition *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (x * x * x_12) = 0.
  (* Invariant *)
  Have: (y * y * x_12) = 0.
  (* Invariant *)
  Have: (x * y * (0 / x_1)) = 0.
  (* Invariant *)
  Have: n_1 != 0.
  (* Invariant *)
  Have: (x * x * x_11) = z.
  (* Invariant *)
  Have: x_7 = (x_8 + (y * y * x_11)).
  (* Invariant *)
  Have: x_4 = (x_5 + (x * y * (z / x_1))).
  (* Invariant *)
  Have: (x_9 * x_9) <= (z * x_10).
  (* Invariant *)
  Have: n != 0.
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: x_8 <= x_7.
  (* Invariant *)
  Have: x_5 <= x_4.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x * x * x_6) = x_2.
  (* Invariant *)
  Have: (x * x * y * y * x_3 * x_3) <= (y * y * x_2 * x_6).
  (* Invariant *)
  Have: n != 1.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 <= x_7.
}
Prove: 0 <= x_4.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (50ms) (175893)

------------------------------------------------------------

Goal Establishment of Invariant (file out/29_0001/29_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/29_0001/29_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/29_0001/29_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/29_0001/29_merged.c, line 36):
Let x_1 = x * x.
Let x_2 = z / x_1.
Let x_3 = x * y * x_2.
Let x_4 = x * y.
Let x_5 = x_3 / x_4.
Let x_6 = y * y * x_5.
Let x_7 = 0 / x_4.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(x_3) /\ is_sint32(x_6).
  (* Pre-condition *)
  Have: 0 <= x.
  (* Pre-condition *)
  Have: 0 <= y.
  (* Pre-condition *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (x * x * x_7) = 0.
  (* Invariant *)
  Have: (y * y * x_7) = 0.
  (* Invariant *)
  Have: (x * y * (0 / x_1)) = 0.
  (* Invariant *)
  Have: n_1 != 0.
  (* Invariant *)
  Have: (x * x * x_5) = z.
  (* Invariant *)
  Have: (x * x * y * y * x_2 * x_2) <= (y * y * z * x_5).
  (* Invariant *)
  Have: n != 0.
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: 0 <= x_6.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: 0 <= n.
  (* Else *)
  Have: n <= 0.
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (33863)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (37ms) (994)

------------------------------------------------------------

Goal Loop assigns (file out/29_0001/29_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/29_0001/29_merged.c:6: Warning: 
  No 'assigns' specification for function 'main29'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/11_0003/11_merged.c (with preprocessing)
[kernel:CERT:MSC:37] out/11_0003/11_merged.c:28: Warning: 
  Body of function main11 falls-through. Adding a return statement
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 26 goals scheduled
[wp] [Timeout] typed_main11_loop_invariant_3_established (Qed 0.97ms) (Z3)
[wp] [Timeout] typed_main11_loop_invariant_5_preserved (Qed 7ms) (Alt-Ergo)
[wp] [Timeout] typed_main11_loop_invariant_6_preserved (Qed 7ms) (Alt-Ergo)
[wp] [Timeout] typed_main11_loop_invariant_6_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_main11_loop_invariant_8_preserved (Qed 7ms) (Alt-Ergo)
[wp] [Timeout] typed_main11_loop_invariant_8_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_main11_loop_invariant_9_preserved (Qed 7ms) (Alt-Ergo)
[wp] [Timeout] typed_main11_loop_invariant_9_established (Qed 3ms) (Z3)
[wp] [Timeout] typed_main11_assert_missing_return (Qed 5ms) (Alt-Ergo)
[wp] Proved goals:   17 / 26
  Qed:              14
  Alt-Ergo 2.5.4:    3 (16ms-20ms-27ms)
  Timeout:           9
------------------------------------------------------------
  Function main11
------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0003/11_merged.c, line 12):
Let x_2 = c - 1.
Let x_3 = x_1 * z.
Let x_4 = x - x_3.
Let x_5 = z - 1.
Let x_6 = y * x_4.
Let x_7 = lxor(z, c - 2).
Let x_8 = lxor(-1, z).
Let x_9 = z * x_4.
Let x_10 = x_9 / x_5.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y) /\ is_sint32(z) /\ is_sint32(y * z) /\ is_sint32(x_4) /\
      is_sint32(x_10).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: (x_3 + x_10) = x.
  (* Invariant *)
  Have: 0 < z.
  (* Invariant *)
  Have: (x + (z * x_10)) = (x_3 + x_9 + x_10).
  (* Invariant *)
  Have: ((z * x_8 * x_4) / x_5) = 0.
  (* Invariant *)
  Have: ((x_8 * x_4) / x_5) = 0.
  (* Invariant *)
  Have: (0 / x_5) = 0.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (x_1 + (y * z * x_4)) = x.
  (* Invariant *)
  Have: pow(real_of_int(z), real_of_int(x_2)) = real_of_int(y).
  (* Invariant *)
  Have: (x_6 + ((z * x_7 * x_4) / x_5)) = x_1.
  (* Invariant *)
  Have: (x_6 + ((x_7 * x_4) / x_5)) = x_1.
  (* Invariant *)
  Have: (x_6 + ((z * (y - 1) * x_4) / x_5)) = x_1.
  (* Invariant *)
  Have: ((lxor(z, x_2) * x_4) / x_5) = x_1.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
}
Prove: (x * z) = (x_3 + (y * z * z * x_4)).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (16ms) (362)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0003/11_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0003/11_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0003/11_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.78ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0003/11_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0003/11_merged.c, line 14):
Assume {
  Type: is_sint32(k) /\ is_sint32(z).
  (* Pre-condition *)
  Have: (0 < k) /\ (0 <= z) /\ (k <= 10) /\ (z <= 10).
}
Prove: 0 < z.
Prover Z3 4.8.12 returns Timeout (Qed:0.97ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.97ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0003/11_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0003/11_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0003/11_merged.c, line 16):
Let x_2 = x_1 * z.
Let x_3 = x - x_2.
Let x_4 = c - 1.
Let x_5 = z - 1.
Let x_6 = y * x_3.
Let x_7 = lxor(z, c - 2).
Let r = real_of_int(z).
Let x_8 = lxor(-1, z).
Let x_9 = z * x_3.
Let x_10 = x_9 / x_5.
Let x_11 = y * z.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y) /\ is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x_11) /\
      is_sint32(x_3) /\ is_sint32(x_10).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: (x_2 + x_10) = x.
  (* Invariant *)
  Have: 0 < z.
  (* Invariant *)
  Have: (x + (z * x_10)) = (x_2 + x_9 + x_10).
  (* Invariant *)
  Have: ((z * x_8 * x_3) / x_5) = 0.
  (* Invariant *)
  Have: ((x_8 * x_3) / x_5) = 0.
  (* Invariant *)
  Have: (0 / x_5) = 0.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (x_1 + (y * z * x_3)) = x.
  (* Invariant *)
  Have: pow(r, real_of_int(x_4)) = real_of_int(y).
  (* Invariant *)
  Have: (x_6 + ((z * x_7 * x_3) / x_5)) = x_1.
  (* Invariant *)
  Have: (x_6 + ((x_7 * x_3) / x_5)) = x_1.
  (* Invariant *)
  Have: (x_6 + ((z * (y - 1) * x_3) / x_5)) = x_1.
  (* Invariant *)
  Have: ((lxor(z, x_4) * x_3) / x_5) = x_1.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: (x * z) = (x_2 + (y * z * z * x_3)).
}
Prove: pow(r, real_of_int(c)) = real_of_int(x_11).
Prover Z3 4.8.12 returns Failed
out of memory
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0003/11_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0003/11_merged.c, line 17):
Let r = real_of_int(z).
Let x_2 = y * z.
Let x_3 = x_1 * z.
Let x_4 = x - x_3.
Let x_5 = c - 1.
Let x_6 = lxor(z, x_5).
Let x_7 = z - 1.
Let x_8 = y * x_4.
Let x_9 = lxor(z, c - 2).
Let x_10 = y * z * x_4.
Let x_11 = lxor(-1, z).
Let x_12 = z * x_4.
Let x_13 = x_12 / x_7.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y) /\ is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x_2) /\
      is_sint32(x_4) /\ is_sint32(x_13).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: (x_3 + x_13) = x.
  (* Invariant *)
  Have: 0 < z.
  (* Invariant *)
  Have: (x + (z * x_13)) = (x_3 + x_12 + x_13).
  (* Invariant *)
  Have: ((z * x_11 * x_4) / x_7) = 0.
  (* Invariant *)
  Have: ((x_11 * x_4) / x_7) = 0.
  (* Invariant *)
  Have: (0 / x_7) = 0.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (x_1 + x_10) = x.
  (* Invariant *)
  Have: pow(r, real_of_int(x_5)) = real_of_int(y).
  (* Invariant *)
  Have: (x_8 + ((z * x_9 * x_4) / x_7)) = x_1.
  (* Invariant *)
  Have: (x_8 + ((x_9 * x_4) / x_7)) = x_1.
  (* Invariant *)
  Have: (x_8 + ((z * (y - 1) * x_4) / x_7)) = x_1.
  (* Invariant *)
  Have: ((x_6 * x_4) / x_7) = x_1.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: (x * z) = (x_3 + (y * z * z * x_4)).
  (* Invariant *)
  Have: pow(r, real_of_int(c)) = real_of_int(x_2).
}
Prove: (x_10 + ((z * x_6 * x_4) / x_7)) = x.
Prover Z3 4.8.12 returns Failed
out of memory
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0003/11_merged.c, line 17):
Assume {
  Type: is_sint32(a) /\ is_sint32(k) /\ is_sint32(z).
  (* Pre-condition *)
  Have: (0 < k) /\ (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Invariant *)
  Have: 0 < z.
}
Prove: ((a * z * lxor(-1, z)) / (z - 1)) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0003/11_merged.c, line 18):
Let r = real_of_int(z).
Let x = y * z.
Let x_1 = a * y * z.
Let x_2 = c - 1.
Let x_3 = lxor(z, x_2).
Let x_4 = z - 1.
Let x_5 = (a * z * x_3) / x_4.
Let x_6 = x_1 + x_5.
Let x_7 = (a * x_3) / x_4.
Let x_8 = a + (z * x_7).
Let x_9 = a * y.
Let x_10 = lxor(z, c - 2).
Let x_11 = lxor(-1, z).
Assume {
  Type: is_sint32(a) /\ is_sint32(c) /\ is_sint32(k) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x) /\ is_sint32(x_7) /\
      is_sint32(x_6).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: ((a * z) / x_4) = a.
  (* Invariant *)
  Have: 0 < z.
  (* Invariant *)
  Have: ((a * z * x_11) / x_4) = 0.
  (* Invariant *)
  Have: ((a * x_11) / x_4) = 0.
  (* Invariant *)
  Have: (0 / x_4) = 0.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: x_8 = (x_1 + x_7).
  (* Invariant *)
  Have: pow(r, real_of_int(x_2)) = real_of_int(y).
  (* Invariant *)
  Have: x_7 = (x_9 + ((a * z * x_10) / x_4)).
  (* Invariant *)
  Have: x_7 = (x_9 + ((a * x_10) / x_4)).
  (* Invariant *)
  Have: x_7 = (x_9 + ((a * z * (y - 1)) / x_4)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  Have: x_8 = x_6.
  (* Invariant *)
  Have: (a + (z * x_6)) = (x_1 + (a * y * z * z) + x_5).
  (* Invariant *)
  Have: pow(r, real_of_int(c)) = real_of_int(x).
}
Prove: x_5 = x_7.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (17ms) (528)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0003/11_merged.c, line 18):
Let x = lxor(-1, z).
Let x_1 = z - 1.
Assume {
  Type: is_sint32(a) /\ is_sint32(k) /\ is_sint32(z).
  (* Pre-condition *)
  Have: (0 < k) /\ (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: ((a * z * x) / x_1) = 0.
  (* Invariant *)
  Have: 0 < z.
}
Prove: ((a * x) / x_1) = 0.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (27ms) (787)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0003/11_merged.c, line 19):
Let x = c - 1.
Let x_1 = lxor(z, x).
Let x_2 = z - 1.
Let x_3 = (a * x_1) / x_2.
Let r = real_of_int(z).
Let x_4 = y * z.
Let x_5 = a * y * z.
Let x_6 = x_5 + x_3.
Let x_7 = a * y.
Let x_8 = lxor(z, c - 2).
Let x_9 = lxor(-1, z).
Assume {
  Type: is_sint32(a) /\ is_sint32(c) /\ is_sint32(k) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x_4) /\ is_sint32(x_3) /\
      is_sint32(x_6).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: ((a * z) / x_2) = a.
  (* Invariant *)
  Have: 0 < z.
  (* Invariant *)
  Have: ((a * z * x_9) / x_2) = 0.
  (* Invariant *)
  Have: ((a * x_9) / x_2) = 0.
  (* Invariant *)
  Have: (0 / x_2) = 0.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (a + (z * x_3)) = x_6.
  (* Invariant *)
  Have: pow(r, real_of_int(x)) = real_of_int(y).
  (* Invariant *)
  Have: x_3 = (x_7 + ((a * z * x_8) / x_2)).
  (* Invariant *)
  Have: x_3 = (x_7 + ((a * x_8) / x_2)).
  (* Invariant *)
  Have: x_3 = (x_7 + ((a * z * (y - 1)) / x_2)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: (a + (z * x_6)) = (x_5 + (a * y * z * z) + x_3).
  (* Invariant *)
  Have: pow(r, real_of_int(c)) = real_of_int(x_4).
  (* Invariant *)
  Have: ((a * z * x_1) / x_2) = x_3.
}
Prove: ((a * z * (x_4 - 1)) / x_2) = x_3.
Prover Z3 4.8.12 returns Failed
out of memory
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0003/11_merged.c, line 19):
Let x = lxor(-1, z).
Let x_1 = z - 1.
Assume {
  Type: is_sint32(a) /\ is_sint32(k) /\ is_sint32(z).
  (* Pre-condition *)
  Have: (0 < k) /\ (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: ((a * x) / x_1) = 0.
  (* Invariant *)
  Have: 0 < z.
  (* Invariant *)
  Have: ((a * z * x) / x_1) = 0.
}
Prove: (0 / x_1) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0003/11_merged.c, line 20):
Let x = y * z.
Let x_1 = z - 1.
Let x_2 = (a * z * (x - 1)) / x_1.
Let x_3 = c - 1.
Let x_4 = lxor(z, x_3).
Let x_5 = (a * x_4) / x_1.
Let r = real_of_int(z).
Let x_6 = a * y * z.
Let x_7 = x_6 + x_2.
Let x_8 = a + (z * x_5).
Let x_9 = a * y.
Let x_10 = lxor(z, c - 2).
Let x_11 = lxor(-1, z).
Assume {
  Type: is_sint32(a) /\ is_sint32(c) /\ is_sint32(k) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x) /\ is_sint32(x_5) /\
      is_sint32(x_7).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: ((a * z) / x_1) = a.
  (* Invariant *)
  Have: 0 < z.
  (* Invariant *)
  Have: ((a * z * x_11) / x_1) = 0.
  (* Invariant *)
  Have: ((a * x_11) / x_1) = 0.
  (* Invariant *)
  Have: (0 / x_1) = 0.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: x_8 = (x_6 + x_5).
  (* Invariant *)
  Have: pow(r, real_of_int(x_3)) = real_of_int(y).
  (* Invariant *)
  Have: x_5 = (x_9 + ((a * z * x_10) / x_1)).
  (* Invariant *)
  Have: x_5 = (x_9 + ((a * x_10) / x_1)).
  (* Invariant *)
  Have: x_5 = (x_9 + ((a * z * (y - 1)) / x_1)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  Have: x_8 = x_7.
  (* Invariant *)
  Have: (a + (z * x_7)) = (x_6 + (a * y * z * z) + x_2).
  (* Invariant *)
  Have: pow(r, real_of_int(c)) = real_of_int(x).
  (* Invariant *)
  Have: x_2 = ((a * z * x_4) / x_1).
  (* Invariant *)
  Have: x_2 = x_5.
}
Prove: ((a * lxor(c, z)) / x_1) = x_7.
Prover Z3 4.8.12 returns Failed
out of memory
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0003/11_merged.c, line 20):
Let x_1 = lxor(-1, z).
Let x_2 = z - 1.
Assume {
  Type: is_sint32(k) /\ is_sint32(x) /\ is_sint32(z).
  (* Pre-condition *)
  Have: (0 < k) /\ (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: (0 / x_2) = 0.
  (* Invariant *)
  Have: 0 < z.
  (* Invariant *)
  Have: ((x * z * x_1) / x_2) = 0.
  (* Invariant *)
  Have: ((x * x_1) / x_2) = 0.
}
Prove: ((x * z) / x_2) = x.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0003/11_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0003/11_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0003/11_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0003/11_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0003/11_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0003/11_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/11_0003/11_merged.c, line 35):
Let x = c - 1.
Let x_1 = z - 1.
Let x_2 = (a * lxor(z, x)) / x_1.
Let x_3 = a * y.
Let x_4 = lxor(z, c - 2).
Let x_5 = lxor(-1, z).
Assume {
  Type: is_sint32(a) /\ is_sint32(c) /\ is_sint32(k) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(x_2).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Initializer *)
  Init: ((a * z) / x_1) = a.
  (* Invariant *)
  Have: 0 < z.
  (* Invariant *)
  Have: ((a * z * x_5) / x_1) = 0.
  (* Invariant *)
  Have: ((a * x_5) / x_1) = 0.
  (* Invariant *)
  Have: (0 / x_1) = 0.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (a + (z * x_2)) = ((a * y * z) + x_2).
  (* Invariant *)
  Have: pow(real_of_int(z), real_of_int(x)) = real_of_int(y).
  (* Invariant *)
  Have: x_2 = (x_3 + ((a * z * x_4) / x_1)).
  (* Invariant *)
  Have: x_2 = (x_3 + ((a * x_4) / x_1)).
  (* Invariant *)
  Have: x_2 = (x_3 + ((a * z * (y - 1)) / x_1)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Else *)
  Have: k <= c.
}
Prove: false.
Prover Z3 4.8.12 returns Failed
out of memory
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/11_0003/11_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/11_0003/11_merged.c:4: Warning: 
  No 'assigns' specification for function 'main11'.
  Callers assumptions might be imprecise.

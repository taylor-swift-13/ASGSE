[kernel] Parsing out/3_0003/3_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 4 goals scheduled
[wp] [Timeout] typed_main3_assert_2 (Qed 1ms) (Z3)
[wp] [Timeout] typed_main3_assert (Qed 1ms) (Z3)
[wp] [Timeout] typed_main3_assert_3 (Qed 2ms) (Z3)
[wp] [Timeout] typed_main3_call_TripleAbsMaxFun_requires (Qed 0.99ms) (Alt-Ergo)
[wp] Proved goals:    0 / 4
  Qed:             0 (0.99ms-2ms)
  Timeout:         4
------------------------------------------------------------
  Function main3
------------------------------------------------------------

Goal Assertion (file out/3_0003/3_merged.c, line 64):
Let a = shiftfield_F1___TripleAbsMax_abs(pIp_0).
Let a_1 = shift_sint32(a, 0).
Let x = Mint_1[a_1].
Let a_2 = shift_sint32(a, 1).
Let a_3 = shift_sint32(a, 2).
Let x_1 = Mint_0[a_1].
Assume {
  Type: is_sint32(x) /\ is_sint32(Mint_1[a_2]) /\ is_sint32(Mint_1[a_3]) /\
      is_sint32(x_1) /\ is_sint32(Mint_0[a_2]) /\ is_sint32(Mint_0[a_3]).
  (* Heap *)
  Type: region(pIp_0.base) <= 0.
}
Prove: x_1 = x.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Assertion (file out/3_0003/3_merged.c, line 65):
Let a = shiftfield_F1___TripleAbsMax_abs(pIp_0).
Let a_1 = shift_sint32(a, 0).
Let x = Mint_0[a_1].
Let x_1 = Mint_1[a_1].
Let a_2 = shift_sint32(a, 1).
Let x_2 = Mint_1[a_2].
Let a_3 = shift_sint32(a, 2).
Let x_3 = Mint_0[a_2].
Assume {
  Type: is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(Mint_1[a_3]) /\
      is_sint32(x) /\ is_sint32(x_3) /\ is_sint32(Mint_0[a_3]).
  (* Heap *)
  Type: region(pIp_0.base) <= 0.
  (* Assertion *)
  Have: x = x_1.
}
Prove: x_3 = x_2.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Assertion (file out/3_0003/3_merged.c, line 66):
Let a = shiftfield_F1___TripleAbsMax_abs(pIp_0).
Let a_1 = shift_sint32(a, 1).
Let x = Mint_0[a_1].
Let x_1 = Mint_1[a_1].
Let a_2 = shift_sint32(a, 0).
Let x_2 = Mint_0[a_2].
Let x_3 = Mint_1[a_2].
Let a_3 = shift_sint32(a, 2).
Let x_4 = Mint_1[a_3].
Let x_5 = Mint_0[a_3].
Assume {
  Type: is_sint32(x_3) /\ is_sint32(x_1) /\ is_sint32(x_4) /\
      is_sint32(x_2) /\ is_sint32(x) /\ is_sint32(x_5).
  (* Heap *)
  Type: region(pIp_0.base) <= 0.
  (* Assertion *)
  Have: x_2 = x_3.
  (* Assertion *)
  Have: x = x_1.
}
Prove: x_5 = x_4.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/3_0003/3_merged.c, line 11) in 'TripleAbsMaxFun'' in 'main3' at call 'TripleAbsMaxFun' (file out/3_0003/3_merged.c, line 62)
:
Assume { (* Heap *) Type: (region(pIp_0.base) <= 0) /\ linked(Malloc_0). }
Prove: valid_rw(Malloc_0, pIp_0, 5).
Prover Z3 4.8.12 returns Unknown (Qed:0.99ms)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.99ms) (8s)

------------------------------------------------------------
[wp:pedantic-assigns] out/3_0003/3_merged.c:13: Warning: 
  No 'assigns' specification for function 'TripleAbsMaxFun'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/3_0003/3_merged.c:55: Warning: 
  No 'assigns' specification for function 'main3'.
  Callers assumptions might be imprecise.

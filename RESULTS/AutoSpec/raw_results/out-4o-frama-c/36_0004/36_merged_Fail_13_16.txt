[kernel] Parsing out/36_0004/36_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 16 goals scheduled
[wp] [Timeout] typed_moo18_assert (Qed 2ms) (Z3)
[wp] [Timeout] typed_moo18_assert_3 (Qed 3ms) (Z3)
[wp] [Timeout] typed_moo18_assert_4 (Qed 4ms) (Z3)
[wp] Proved goals:   13 / 16
  Qed:              11
  Alt-Ergo 2.5.4:    1 (7ms)
  Z3 4.8.12:         1 (40ms)
  Timeout:           3
------------------------------------------------------------
  Function moo18
------------------------------------------------------------

Goal Assertion (file out/36_0004/36_merged.c, line 29):
Let x = Ig.max(3, Ig.max(4, 5)).
Assume { Type: is_sint32(a1_0) /\ is_sint32(b1_0) /\ is_sint32(x). }
Prove: (a1_0 = 3) /\ (b1_0 = 4) /\ (x = 5).
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Assertion (file out/36_0004/36_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Assertion (file out/36_0004/36_merged.c, line 37):
Let x = Ig.max(3, 4).
Assume {
  Type: is_sint32(a3_0) /\ is_sint32(b3_0) /\ is_sint32(x).
  (* Call 'order_3' *)
  Have: Ig.max(3, Ig.max(4, 5)) = 5.
}
Prove: (a3_0 = 3) /\ (b3_0 = 4) /\ (x = 4).
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Assertion (file out/36_0004/36_merged.c, line 41):
Assume {
  Type: is_sint32(a4_0) /\ is_sint32(b4_0).
  (* Call 'order_3' *)
  Have: Ig.max(3, Ig.max(4, 5)) = 5.
  (* Call 'order_3' *)
  Have: Ig.max(3, 4) = 4.
}
Prove: (a4_0 = 4) /\ (b4_0 = 4).
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/36_0004/36_merged.c, line 2) in 'order_3'' in 'moo18' at call 'order_3' (file out/36_0004/36_merged.c, line 28)
:
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/36_0004/36_merged.c, line 2) in 'order_3'' in 'moo18' at call 'order_3' (file out/36_0004/36_merged.c, line 32)
:
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/36_0004/36_merged.c, line 2) in 'order_3'' in 'moo18' at call 'order_3' (file out/36_0004/36_merged.c, line 36)
:
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/36_0004/36_merged.c, line 2) in 'order_3'' in 'moo18' at call 'order_3' (file out/36_0004/36_merged.c, line 40)
:
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
------------------------------------------------------------
  Function order_3
------------------------------------------------------------

Goal Post-condition (file out/36_0004/36_merged.c, line 3) in 'order_3':
Let x = Mint_1[a].
Let x_1 = Mint_1[c].
Let x_2 = Mint_1[a <- x_1][c <- x][b].
Let x_3 = Mint_1[b].
Let x_4 = Mint_0[a].
Let x_5 = Mint_0[b].
Let x_6 = Mint_0[c].
Assume {
  Type: is_sint32(x) /\ is_sint32(x_3) /\ is_sint32(x_1) /\ is_sint32(x_4) /\
      is_sint32(x_5) /\ is_sint32(x_6) /\ is_sint32(x_2).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ (region(b.base) <= 0) /\
      (region(c.base) <= 0) /\ linked(Malloc_0).
  (* Residual *)
  When: x_1 < x.
  (* Goal *)
  When: (x <= x_3) /\ (x_3 <= x_1).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a, 1) /\ valid_rw(Malloc_0, b, 1) /\
      valid_rw(Malloc_0, c, 1).
  If x < x_2
  Then { Have: Mint_1[a <- x_1][c <- x][b <- x][c <- x_2] = Mint_0. }
  Else { Have: Mint_1[a <- x_1][c <- x] = Mint_0. }
}
Prove: (x_4 = x) /\ (x_5 = x_3) /\ (x_6 = x_1).
Prover Z3 4.8.12 returns Valid (Qed:15ms) (20ms) (74054)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:15ms) (7ms) (38)

------------------------------------------------------------

Goal Post-condition (file out/36_0004/36_merged.c, line 4) in 'order_3':
Let x = Mint_3[c].
Let x_1 = Mint_3[b].
Let x_2 = Mint_5[c].
Let x_3 = Mint_5[a].
Let x_4 = Mint_1[b].
Let x_5 = Mint_1[a].
Let x_6 = Mint_1[c].
Let x_7 = Mint_0[c].
Assume {
  Type: is_sint32(x_5) /\ is_sint32(x_4) /\ is_sint32(x_6) /\
      is_sint32(Mint_0[a]) /\ is_sint32(Mint_0[b]) /\ is_sint32(x_7) /\
      is_sint32(Mint_2[b]) /\ is_sint32(x_1) /\ is_sint32(x) /\
      is_sint32(Mint_4[a]) /\ is_sint32(x_3) /\ is_sint32(x_2).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ (region(b.base) <= 0) /\
      (region(c.base) <= 0) /\ linked(Malloc_0).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a, 1) /\ valid_rw(Malloc_0, b, 1) /\
      valid_rw(Malloc_0, c, 1).
  If x_4 < x_5
  Then { Have: Mint_1[a <- x_4][b <- x_5] = Mint_5. }
  Else { Have: Mint_5 = Mint_1. }
  If x_2 < x_3
  Then {
    Have: Mint_5 = Mint_4.
    Have: Mint_4[a <- Mint_4[c]][c <- Mint_4[a]] = Mint_3.
  }
  Else { Have: Mint_5 = Mint_3. }
  If x < x_1
  Then {
    Have: Mint_3 = Mint_2.
    Have: Mint_2[b <- Mint_2[c]][c <- Mint_2[b]] = Mint_0.
  }
  Else { Have: Mint_3 = Mint_0. }
}
Prove: x_7 = Ig.max(x_5, Ig.max(x_4, x_6)).
Prover Z3 4.8.12 returns Valid (Qed:30ms) (40ms) (194855)

------------------------------------------------------------

Goal Assigns (file out/36_0004/36_merged.c, line 5) in 'order_3' (1/6):
Effect at line 10
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Assigns (file out/36_0004/36_merged.c, line 5) in 'order_3' (2/6):
Effect at line 11
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Assigns (file out/36_0004/36_merged.c, line 5) in 'order_3' (3/6):
Effect at line 15
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Assigns (file out/36_0004/36_merged.c, line 5) in 'order_3' (4/6):
Effect at line 16
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Assigns (file out/36_0004/36_merged.c, line 5) in 'order_3' (5/6):
Effect at line 20
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Assigns (file out/36_0004/36_merged.c, line 5) in 'order_3' (6/6):
Effect at line 21
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/36_0004/36_merged.c:25: Warning: 
  No 'assigns' specification for function 'moo18'.
  Callers assumptions might be imprecise.

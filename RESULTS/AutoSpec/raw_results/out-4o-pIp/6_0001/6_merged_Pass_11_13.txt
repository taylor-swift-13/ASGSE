[kernel] Parsing out/6_0001/6_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 13 goals scheduled
[wp] [Timeout] typed_main6_call_ThrABAutoChooseFun_requires (Alt-Ergo)
[wp] [Timeout] typed_main6_call_ThrABAutoChooseFun_requires_2 (Qed 0.54ms) (Alt-Ergo)
[wp] Proved goals:   11 / 13
  Qed:               3
  Alt-Ergo 2.5.4:    8 (2ms-11ms-16ms)
  Timeout:           2
------------------------------------------------------------
  Function ThrABAutoChooseFun
------------------------------------------------------------

Goal Post-condition (file out/6_0001/6_merged.c, line 21) in 'ThrABAutoChooseFun':
Let a = shiftfield_F2___ThrABAutoChoose_mThrDistribute(pIp_0).
Let a_1 = shiftfield_F1_TAG_UPS_2MS_stateFlag(a).
Let a_2 = shift_sint32(a_1, 0).
Let x = Mint_1[a_2].
Let x_1 = Mint_0[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a)].
Assume {
  Type: is_sint32(x_1) /\ is_sint32(x).
  (* Heap *)
  Type: (region(pIp_0.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: (Mint_0[a_2] = 1) /\ (Mint_0[shift_sint32(a_1, 1)] = 1).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, pIp_0, 4).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a_2, 2).
  If x = 1
  Then {
    Have: Mint_1 = Mint_2.
    If Mint_2[shift_sint32(a_1, 1)] = 1
    Then {
      Have: Mint_2 = Mint_3.
      Have: Mint_3[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 204] = Mint_0.
    }
    Else {
      Have: Mint_2 = Mint_4.
      If Mint_4[a_2] = 0
      Then {
        Have: Mint_4 = Mint_5.
        If Mint_5[shift_sint32(a_1, 1)] = 1
        Then {
          Have: Mint_5 = Mint_6.
          Have: Mint_6[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 51] =
              Mint_0.
        }
        Else {
          Have: Mint_5 = Mint_7.
          Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] =
              Mint_0.
        }
      }
      Else {
        Have: Mint_4 = Mint_7.
        Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] = Mint_0.
      }
    }
  }
  Else {
    Have: Mint_1 = Mint_4.
    If Mint_4[a_2] = 0
    Then {
      Have: Mint_4 = Mint_5.
      If Mint_5[shift_sint32(a_1, 1)] = 1
      Then {
        Have: Mint_5 = Mint_6.
        Have: Mint_6[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 51] =
            Mint_0.
      }
      Else {
        Have: Mint_5 = Mint_7.
        Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] = Mint_0.
      }
    }
    Else {
      Have: Mint_4 = Mint_7.
      Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] = Mint_0.
    }
  }
}
Prove: x_1 = 204.
Prover Z3 4.8.12 returns Valid (Qed:46ms) (20ms) (100856)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:46ms) (8ms) (110)

------------------------------------------------------------

Goal Post-condition (file out/6_0001/6_merged.c, line 22) in 'ThrABAutoChooseFun':
Let a = shiftfield_F2___ThrABAutoChoose_mThrDistribute(pIp_0).
Let a_1 = shiftfield_F1_TAG_UPS_2MS_stateFlag(a).
Let a_2 = shift_sint32(a_1, 0).
Let x = Mint_1[a_2].
Let x_1 = Mint_0[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a)].
Assume {
  Type: is_sint32(x_1) /\ is_sint32(x).
  (* Heap *)
  Type: (region(pIp_0.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: (Mint_0[a_2] = 1) /\ (Mint_0[shift_sint32(a_1, 1)] = 1).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, pIp_0, 4).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a_2, 2).
  If x = 1
  Then {
    Have: Mint_1 = Mint_2.
    If Mint_2[shift_sint32(a_1, 1)] = 1
    Then {
      Have: Mint_2 = Mint_3.
      Have: Mint_3[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 204] = Mint_0.
    }
    Else {
      Have: Mint_2 = Mint_4.
      If Mint_4[a_2] = 0
      Then {
        Have: Mint_4 = Mint_5.
        If Mint_5[shift_sint32(a_1, 1)] = 1
        Then {
          Have: Mint_5 = Mint_6.
          Have: Mint_6[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 51] =
              Mint_0.
        }
        Else {
          Have: Mint_5 = Mint_7.
          Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] =
              Mint_0.
        }
      }
      Else {
        Have: Mint_4 = Mint_7.
        Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] = Mint_0.
      }
    }
  }
  Else {
    Have: Mint_1 = Mint_4.
    If Mint_4[a_2] = 0
    Then {
      Have: Mint_4 = Mint_5.
      If Mint_5[shift_sint32(a_1, 1)] = 1
      Then {
        Have: Mint_5 = Mint_6.
        Have: Mint_6[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 51] =
            Mint_0.
      }
      Else {
        Have: Mint_5 = Mint_7.
        Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] = Mint_0.
      }
    }
    Else {
      Have: Mint_4 = Mint_7.
      Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] = Mint_0.
    }
  }
}
Prove: x_1 = 204.
Prover Z3 4.8.12 returns Valid (Qed:42ms) (20ms) (100856)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:42ms) (2ms) (110)

------------------------------------------------------------

Goal Post-condition (file out/6_0001/6_merged.c, line 23) in 'ThrABAutoChooseFun':
Let a = shiftfield_F2___ThrABAutoChoose_mThrDistribute(pIp_0).
Let a_1 = shiftfield_F1_TAG_UPS_2MS_stateFlag(a).
Let a_2 = shift_sint32(a_1, 0).
Let x = Mint_1[a_2].
Let x_1 = Mint_0[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a)].
Assume {
  Type: is_sint32(x_1) /\ is_sint32(x).
  (* Heap *)
  Type: (region(pIp_0.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: (Mint_0[a_2] = 0) /\ (Mint_0[shift_sint32(a_1, 1)] = 1).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, pIp_0, 4).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a_2, 2).
  If x = 1
  Then {
    Have: Mint_1 = Mint_2.
    If Mint_2[shift_sint32(a_1, 1)] = 1
    Then {
      Have: Mint_2 = Mint_3.
      Have: Mint_3[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 204] = Mint_0.
    }
    Else {
      Have: Mint_2 = Mint_4.
      If Mint_4[a_2] = 0
      Then {
        Have: Mint_4 = Mint_5.
        If Mint_5[shift_sint32(a_1, 1)] = 1
        Then {
          Have: Mint_5 = Mint_6.
          Have: Mint_6[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 51] =
              Mint_0.
        }
        Else {
          Have: Mint_5 = Mint_7.
          Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] =
              Mint_0.
        }
      }
      Else {
        Have: Mint_4 = Mint_7.
        Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] = Mint_0.
      }
    }
  }
  Else {
    Have: Mint_1 = Mint_4.
    If Mint_4[a_2] = 0
    Then {
      Have: Mint_4 = Mint_5.
      If Mint_5[shift_sint32(a_1, 1)] = 1
      Then {
        Have: Mint_5 = Mint_6.
        Have: Mint_6[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 51] =
            Mint_0.
      }
      Else {
        Have: Mint_5 = Mint_7.
        Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] = Mint_0.
      }
    }
    Else {
      Have: Mint_4 = Mint_7.
      Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] = Mint_0.
    }
  }
}
Prove: x_1 = 51.
Prover Z3 4.8.12 returns Valid (Qed:44ms) (30ms) (101371)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:44ms) (9ms) (204)

------------------------------------------------------------

Goal Post-condition (file out/6_0001/6_merged.c, line 24) in 'ThrABAutoChooseFun':
Let a = shiftfield_F2___ThrABAutoChoose_mThrDistribute(pIp_0).
Let a_1 = shiftfield_F1_TAG_UPS_2MS_stateFlag(a).
Let a_2 = shift_sint32(a_1, 0).
Let x = Mint_1[a_2].
Let x_1 = Mint_0[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a)].
Assume {
  Type: is_sint32(x_1) /\ is_sint32(x).
  (* Heap *)
  Type: (region(pIp_0.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: (Mint_0[a_2] = 0) /\ (Mint_0[shift_sint32(a_1, 1)] = 1).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, pIp_0, 4).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a_2, 2).
  If x = 1
  Then {
    Have: Mint_1 = Mint_2.
    If Mint_2[shift_sint32(a_1, 1)] = 1
    Then {
      Have: Mint_2 = Mint_3.
      Have: Mint_3[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 204] = Mint_0.
    }
    Else {
      Have: Mint_2 = Mint_4.
      If Mint_4[a_2] = 0
      Then {
        Have: Mint_4 = Mint_5.
        If Mint_5[shift_sint32(a_1, 1)] = 1
        Then {
          Have: Mint_5 = Mint_6.
          Have: Mint_6[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 51] =
              Mint_0.
        }
        Else {
          Have: Mint_5 = Mint_7.
          Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] =
              Mint_0.
        }
      }
      Else {
        Have: Mint_4 = Mint_7.
        Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] = Mint_0.
      }
    }
  }
  Else {
    Have: Mint_1 = Mint_4.
    If Mint_4[a_2] = 0
    Then {
      Have: Mint_4 = Mint_5.
      If Mint_5[shift_sint32(a_1, 1)] = 1
      Then {
        Have: Mint_5 = Mint_6.
        Have: Mint_6[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 51] =
            Mint_0.
      }
      Else {
        Have: Mint_5 = Mint_7.
        Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] = Mint_0.
      }
    }
    Else {
      Have: Mint_4 = Mint_7.
      Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] = Mint_0.
    }
  }
}
Prove: x_1 = 51.
Prover Z3 4.8.12 returns Valid (Qed:42ms) (20ms) (101371)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:42ms) (14ms) (204)

------------------------------------------------------------

Goal Post-condition (file out/6_0001/6_merged.c, line 25) in 'ThrABAutoChooseFun':
Let a = shiftfield_F2___ThrABAutoChoose_mThrDistribute(pIp_0).
Let a_1 = shiftfield_F1_TAG_UPS_2MS_stateFlag(a).
Let a_2 = shift_sint32(a_1, 0).
Let x = Mint_1[a_2].
Let x_1 = Mint_0[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a)].
Assume {
  Type: is_sint32(x_1) /\ is_sint32(x).
  (* Heap *)
  Type: (region(pIp_0.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: (Mint_0[a_2] = 1) /\ (Mint_0[shift_sint32(a_1, 1)] = 1).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, pIp_0, 4).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a_2, 2).
  If x = 1
  Then {
    Have: Mint_1 = Mint_2.
    If Mint_2[shift_sint32(a_1, 1)] = 1
    Then {
      Have: Mint_2 = Mint_3.
      Have: Mint_3[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 204] = Mint_0.
    }
    Else {
      Have: Mint_2 = Mint_4.
      If Mint_4[a_2] = 0
      Then {
        Have: Mint_4 = Mint_5.
        If Mint_5[shift_sint32(a_1, 1)] = 1
        Then {
          Have: Mint_5 = Mint_6.
          Have: Mint_6[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 51] =
              Mint_0.
        }
        Else {
          Have: Mint_5 = Mint_7.
          Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] =
              Mint_0.
        }
      }
      Else {
        Have: Mint_4 = Mint_7.
        Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] = Mint_0.
      }
    }
  }
  Else {
    Have: Mint_1 = Mint_4.
    If Mint_4[a_2] = 0
    Then {
      Have: Mint_4 = Mint_5.
      If Mint_5[shift_sint32(a_1, 1)] = 1
      Then {
        Have: Mint_5 = Mint_6.
        Have: Mint_6[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 51] =
            Mint_0.
      }
      Else {
        Have: Mint_5 = Mint_7.
        Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] = Mint_0.
      }
    }
    Else {
      Have: Mint_4 = Mint_7.
      Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] = Mint_0.
    }
  }
}
Prove: x_1 = 204.
Prover Z3 4.8.12 returns Valid (Qed:43ms) (20ms) (100856)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:43ms) (8ms) (110)

------------------------------------------------------------

Goal Post-condition (file out/6_0001/6_merged.c, line 26) in 'ThrABAutoChooseFun':
Let a = shiftfield_F2___ThrABAutoChoose_mThrDistribute(pIp_0).
Let a_1 = shiftfield_F1_TAG_UPS_2MS_stateFlag(a).
Let a_2 = shift_sint32(a_1, 0).
Let x = Mint_1[a_2].
Let x_1 = Mint_0[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a)].
Assume {
  Type: is_sint32(x_1) /\ is_sint32(x).
  (* Heap *)
  Type: (region(pIp_0.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: (Mint_0[a_2] = 0) /\ (Mint_0[shift_sint32(a_1, 1)] = 1).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, pIp_0, 4).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a_2, 2).
  If x = 1
  Then {
    Have: Mint_1 = Mint_2.
    If Mint_2[shift_sint32(a_1, 1)] = 1
    Then {
      Have: Mint_2 = Mint_3.
      Have: Mint_3[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 204] = Mint_0.
    }
    Else {
      Have: Mint_2 = Mint_4.
      If Mint_4[a_2] = 0
      Then {
        Have: Mint_4 = Mint_5.
        If Mint_5[shift_sint32(a_1, 1)] = 1
        Then {
          Have: Mint_5 = Mint_6.
          Have: Mint_6[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 51] =
              Mint_0.
        }
        Else {
          Have: Mint_5 = Mint_7.
          Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] =
              Mint_0.
        }
      }
      Else {
        Have: Mint_4 = Mint_7.
        Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] = Mint_0.
      }
    }
  }
  Else {
    Have: Mint_1 = Mint_4.
    If Mint_4[a_2] = 0
    Then {
      Have: Mint_4 = Mint_5.
      If Mint_5[shift_sint32(a_1, 1)] = 1
      Then {
        Have: Mint_5 = Mint_6.
        Have: Mint_6[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 51] =
            Mint_0.
      }
      Else {
        Have: Mint_5 = Mint_7.
        Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] = Mint_0.
      }
    }
    Else {
      Have: Mint_4 = Mint_7.
      Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] = Mint_0.
    }
  }
}
Prove: x_1 = 51.
Prover Z3 4.8.12 returns Valid (Qed:42ms) (20ms) (101371)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:42ms) (13ms) (204)

------------------------------------------------------------

Goal Post-condition (file out/6_0001/6_merged.c, line 27) in 'ThrABAutoChooseFun':
Let a = shiftfield_F2___ThrABAutoChoose_mThrDistribute(pIp_0).
Let a_1 = shiftfield_F1_TAG_UPS_2MS_stateFlag(a).
Let a_2 = shift_sint32(a_1, 0).
Let x = Mint_1[a_2].
Let x_1 = Mint_0[a_2].
Let x_2 = Mint_0[shift_sint32(a_1, 1)].
Let x_3 = Mint_0[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a)].
Assume {
  Type: is_sint32(x_3) /\ is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x).
  (* Heap *)
  Type: (region(pIp_0.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: ((x_1 != 0) \/ (x_2 != 1)) /\ ((x_1 != 1) \/ (x_2 != 1)).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, pIp_0, 4).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a_2, 2).
  If x = 1
  Then {
    Have: Mint_1 = Mint_2.
    If Mint_2[shift_sint32(a_1, 1)] = 1
    Then {
      Have: Mint_2 = Mint_3.
      Have: Mint_3[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 204] = Mint_0.
    }
    Else {
      Have: Mint_2 = Mint_4.
      If Mint_4[a_2] = 0
      Then {
        Have: Mint_4 = Mint_5.
        If Mint_5[shift_sint32(a_1, 1)] = 1
        Then {
          Have: Mint_5 = Mint_6.
          Have: Mint_6[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 51] =
              Mint_0.
        }
        Else {
          Have: Mint_5 = Mint_7.
          Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] =
              Mint_0.
        }
      }
      Else {
        Have: Mint_4 = Mint_7.
        Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] = Mint_0.
      }
    }
  }
  Else {
    Have: Mint_1 = Mint_4.
    If Mint_4[a_2] = 0
    Then {
      Have: Mint_4 = Mint_5.
      If Mint_5[shift_sint32(a_1, 1)] = 1
      Then {
        Have: Mint_5 = Mint_6.
        Have: Mint_6[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 51] =
            Mint_0.
      }
      Else {
        Have: Mint_5 = Mint_7.
        Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] = Mint_0.
      }
    }
    Else {
      Have: Mint_4 = Mint_7.
      Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] = Mint_0.
    }
  }
}
Prove: x_3 = 0.
Prover Z3 4.8.12 returns Valid (Qed:48ms) (20ms) (102778)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:48ms) (16ms) (342)

------------------------------------------------------------

Goal Post-condition (file out/6_0001/6_merged.c, line 28) in 'ThrABAutoChooseFun':
Let a = shiftfield_F2___ThrABAutoChoose_mThrDistribute(pIp_0).
Let a_1 = shiftfield_F1_TAG_UPS_2MS_stateFlag(a).
Let a_2 = shift_sint32(a_1, 0).
Let x = Mint_1[a_2].
Let x_1 = Mint_0[a_2].
Let x_2 = Mint_0[shift_sint32(a_1, 1)].
Let x_3 = Mint_0[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a)].
Assume {
  Type: is_sint32(x_3) /\ is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x).
  (* Heap *)
  Type: (region(pIp_0.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: ((x_1 != 0) \/ (x_2 != 1)) /\ ((x_1 != 1) \/ (x_2 != 1)).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, pIp_0, 4).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a_2, 2).
  If x = 1
  Then {
    Have: Mint_1 = Mint_2.
    If Mint_2[shift_sint32(a_1, 1)] = 1
    Then {
      Have: Mint_2 = Mint_3.
      Have: Mint_3[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 204] = Mint_0.
    }
    Else {
      Have: Mint_2 = Mint_4.
      If Mint_4[a_2] = 0
      Then {
        Have: Mint_4 = Mint_5.
        If Mint_5[shift_sint32(a_1, 1)] = 1
        Then {
          Have: Mint_5 = Mint_6.
          Have: Mint_6[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 51] =
              Mint_0.
        }
        Else {
          Have: Mint_5 = Mint_7.
          Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] =
              Mint_0.
        }
      }
      Else {
        Have: Mint_4 = Mint_7.
        Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] = Mint_0.
      }
    }
  }
  Else {
    Have: Mint_1 = Mint_4.
    If Mint_4[a_2] = 0
    Then {
      Have: Mint_4 = Mint_5.
      If Mint_5[shift_sint32(a_1, 1)] = 1
      Then {
        Have: Mint_5 = Mint_6.
        Have: Mint_6[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 51] =
            Mint_0.
      }
      Else {
        Have: Mint_5 = Mint_7.
        Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] = Mint_0.
      }
    }
    Else {
      Have: Mint_4 = Mint_7.
      Have: Mint_7[shiftfield_F1_TAG_UPS_2MS_flgABChoose(a) <- 0] = Mint_0.
    }
  }
}
Prove: x_3 = 0.
Prover Z3 4.8.12 returns Valid (Qed:48ms) (20ms) (102778)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:48ms) (15ms) (342)

------------------------------------------------------------

Goal Assigns (file out/6_0001/6_merged.c, line 29) in 'ThrABAutoChooseFun' (1/3):
Effect at line 38
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Assigns (file out/6_0001/6_merged.c, line 29) in 'ThrABAutoChooseFun' (2/3):
Effect at line 43
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Assigns (file out/6_0001/6_merged.c, line 29) in 'ThrABAutoChooseFun' (3/3):
Effect at line 47
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
------------------------------------------------------------
  Function main6
------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/6_0001/6_merged.c, line 19) in 'ThrABAutoChooseFun'' in 'main6' at call 'ThrABAutoChooseFun' (file out/6_0001/6_merged.c, line 60)
:
Assume { (* Heap *) Type: (region(pIp_0.base) <= 0) /\ linked(Malloc_0). }
Prove: valid_rw(Malloc_0, pIp_0, 4).
Prover Z3 4.8.12 returns Unknown
Prover Alt-Ergo 2.5.4 returns Timeout (8s)

------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/6_0001/6_merged.c, line 20) in 'ThrABAutoChooseFun'' in 'main6' at call 'ThrABAutoChooseFun' (file out/6_0001/6_merged.c, line 60)
:
Assume { (* Heap *) Type: (region(pIp_0.base) <= 0) /\ linked(Malloc_0). }
Prove: valid_rw(Malloc_0,
         shift_sint32(shiftfield_F1_TAG_UPS_2MS_stateFlag(shiftfield_F2___ThrABAutoChoose_mThrDistribute(pIp_0)),
           0), 2).
Prover Z3 4.8.12 returns Unknown (Qed:0.54ms)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.54ms) (8s)

------------------------------------------------------------
[wp:pedantic-assigns] out/6_0001/6_merged.c:54: Warning: 
  No 'assigns' specification for function 'main6'.
  Callers assumptions might be imprecise.

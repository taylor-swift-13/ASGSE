[kernel] Parsing out/038_0001/038_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 27 goals scheduled
[wp] [Timeout] typed_foo038_loop_invariant_6_established (Qed 0.73ms) (Z3)
[wp] Proved goals:   26 / 27
  Qed:              20
  Alt-Ergo 2.5.4:    6 (5ms-12ms-23ms)
  Timeout:           1
------------------------------------------------------------
  Function foo038
------------------------------------------------------------

Goal Preservation of Invariant (file out/038_0001/038_merged.c, line 10):
Let x = 1 + i.
Let x_1 = i / 2.
Let x_2 = 2 * x_1.
Let x_3 = i % 2.
Let x_4 = 1 + x_2.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(y) /\ is_sint32(x_1) /\
      is_sint32(x).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (x_2 = i) \/ (x_4 = i).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: ((x_3 = 1) -> (x_4 = i)).
  (* Invariant *)
  Have: ((x_3 = 0) -> (x_2 = i)).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((0 <= i_1) -> ((i_1 < i) ->
      ((i_1 / 2) <= x_1)))).
  (* Invariant *)
  Have: x_2 <= i.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
  If (x % 2) = 0
  Then { Have: (1 + x_1) = y. }
  Else { Have: x_1 = y. }
}
Prove: (x / 2) = y.
Prover Z3 4.8.12 returns Valid (Qed:10ms) (10ms) (38206)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (16ms) (271)

------------------------------------------------------------

Goal Establishment of Invariant (file out/038_0001/038_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/038_0001/038_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/038_0001/038_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/038_0001/038_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/038_0001/038_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/038_0001/038_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/038_0001/038_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/038_0001/038_merged.c, line 14):
Let x_1 = 1 + x.
Let x_2 = x / 2.
Let x_3 = 2 * x_2.
Let x_4 = x % 2.
Let x_5 = 1 + x_3.
Let x_6 = x_1 / 2.
Let x_7 = 2 * x_6.
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_2) /\
      is_sint32(x_1) /\ is_sint32(x_6).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (x_3 = x) \/ (x_5 = x).
  (* Invariant *)
  Have: x <= n.
  (* Invariant *)
  Have: ((x_4 = 1) -> (x_5 = x)).
  (* Invariant *)
  Have: ((x_4 = 0) -> (x_3 = x)).
  (* Invariant *)
  Have: forall i : Z. (((i % 2) = 0) -> ((0 <= i) -> ((i < x) ->
      ((i / 2) <= x_2)))).
  (* Invariant *)
  Have: x_3 <= x.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: x < n.
  If (x_1 % 2) = 0
  Then { Have: (x_6 = (1 + y)) /\ (x_6 = (1 + x_2)). }
  Else { Have: x_6 = x_2. }
}
Prove: (x_7 = x) \/ (x_1 = x_7).
Prover Z3 4.8.12 returns Valid (Qed:8ms) (35439)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (14ms) (264)

------------------------------------------------------------

Goal Establishment of Invariant (file out/038_0001/038_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/038_0001/038_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/038_0001/038_merged.c, line 15):
Assume { Type: is_sint32(n). }
Prove: 0 <= n.
Prover Z3 4.8.12 returns Timeout (Qed:0.73ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.73ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/038_0001/038_merged.c, line 16):
Let x_1 = 1 + x.
Let x_2 = x_1 / 2.
Let x_3 = 2 * x_2.
Let x_4 = x / 2.
Let x_5 = 2 * x_4.
Let x_6 = x % 2.
Let x_7 = 1 + x_5.
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(x_4) /\ is_sint32(x_1) /\
      is_sint32(x_2).
  (* Goal *)
  When: (x_1 % 2) = 1.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (x_5 = x) \/ (x_7 = x).
  (* Invariant *)
  Have: x <= n.
  (* Invariant *)
  Have: ((x_6 = 1) -> (x_7 = x)).
  (* Invariant *)
  Have: ((x_6 = 0) -> (x_5 = x)).
  (* Invariant *)
  Have: forall i : Z. (((i % 2) = 0) -> ((0 <= i) -> ((i < x) ->
      ((i / 2) <= x_4)))).
  (* Invariant *)
  Have: x_5 <= x.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: x < n.
  Have: x_2 = x_4.
  (* Invariant *)
  Have: (x_3 = x) \/ (x_1 = x_3).
}
Prove: x_3 = x.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (33946)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (5ms) (27)

------------------------------------------------------------

Goal Establishment of Invariant (file out/038_0001/038_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/038_0001/038_merged.c, line 17):
Let x_1 = 1 + x.
Let x_2 = x_1 / 2.
Let x_3 = 2 * x_2.
Let x_4 = x / 2.
Let x_5 = 2 * x_4.
Let x_6 = x % 2.
Let x_7 = 1 + x_5.
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(x_4) /\ is_sint32(x_1) /\
      is_sint32(x_2) /\ is_sint32(x_2 - 1).
  (* Goal *)
  When: (x_1 % 2) = 0.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (x_5 = x) \/ (x_7 = x).
  (* Invariant *)
  Have: x <= n.
  (* Invariant *)
  Have: ((x_6 = 1) -> (x_7 = x)).
  (* Invariant *)
  Have: ((x_6 = 0) -> (x_5 = x)).
  (* Invariant *)
  Have: forall i : Z. (((i % 2) = 0) -> ((0 <= i) -> ((i < x) ->
      ((i / 2) <= x_4)))).
  (* Invariant *)
  Have: x_5 <= x.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: x < n.
  Have: x_2 = (1 + x_4).
  (* Invariant *)
  Have: (x_3 = x) \/ (x_1 = x_3).
}
Prove: x_1 = x_3.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (35187)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (8ms) (55)

------------------------------------------------------------

Goal Establishment of Invariant (file out/038_0001/038_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/038_0001/038_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/038_0001/038_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/038_0001/038_merged.c, line 19):
Let x = 1 + i_1.
Let x_1 = x % 2.
Let x_2 = x / 2.
Let x_3 = 2 * x_2.
Let x_4 = i_1 / 2.
Let x_5 = 2 * x_4.
Let x_6 = i_1 % 2.
Let x_7 = 1 + x_5.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(n) /\ is_sint32(y) /\ is_sint32(x_4) /\
      is_sint32(x) /\ is_sint32(x_2).
  (* Goal *)
  When: ((i % 2) = 0) /\ (0 <= i) /\ (i <= i_1).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (x_5 = i_1) \/ (x_7 = i_1).
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: ((x_6 = 1) -> (x_7 = i_1)).
  (* Invariant *)
  Have: ((x_6 = 0) -> (x_5 = i_1)).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((0 <= i_2) -> ((i_2 < i_1) ->
      ((i_2 / 2) <= x_4)))).
  (* Invariant *)
  Have: x_5 <= i_1.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: i_1 < n.
  If x_1 = 0
  Then { Have: (x_2 = (1 + y)) /\ (x_2 = (1 + x_4)). }
  Else { Have: x_2 = x_4. }
  (* Invariant *)
  Have: (x_3 = i_1) \/ (x = x_3).
  (* Invariant *)
  Have: ((x_1 = 1) -> (x_3 = i_1)).
  (* Invariant *)
  Have: ((x_1 = 0) -> (x = x_3)).
}
Prove: (i / 2) <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (37616)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (23ms) (354)

------------------------------------------------------------

Goal Establishment of Invariant (file out/038_0001/038_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/038_0001/038_merged.c, line 20):
Let x = 1 + i.
Let x_1 = x / 2.
Let x_2 = x % 2.
Let x_3 = 2 * x_1.
Let x_4 = i / 2.
Let x_5 = 2 * x_4.
Let x_6 = i % 2.
Let x_7 = 1 + x_5.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(x_4) /\ is_sint32(x) /\
      is_sint32(x_1).
  (* Residual *)
  When: x_2 != 0.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (x_5 = i) \/ (x_7 = i).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: ((x_6 = 1) -> (x_7 = i)).
  (* Invariant *)
  Have: ((x_6 = 0) -> (x_5 = i)).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((0 <= i_1) -> ((i_1 < i) ->
      ((i_1 / 2) <= x_4)))).
  (* Invariant *)
  Have: x_5 <= i.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
  Have: x_1 = x_4.
  (* Invariant *)
  Have: (x_3 = i) \/ (x = x_3).
  (* Invariant *)
  Have: ((x_2 = 1) -> (x_3 = i)).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((i_1 <= i) -> ((0 <= i_1) ->
      ((i_1 / 2) <= x_1)))).
}
Prove: x_3 <= x.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (35138)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (5ms) (28)

------------------------------------------------------------

Goal Establishment of Invariant (file out/038_0001/038_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/038_0001/038_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/038_0001/038_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/038_0001/038_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/038_0001/038_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/038_0001/038_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/038_0001/038_merged.c:3: Warning: 
  No 'assigns' specification for function 'foo038'.
  Callers assumptions might be imprecise.

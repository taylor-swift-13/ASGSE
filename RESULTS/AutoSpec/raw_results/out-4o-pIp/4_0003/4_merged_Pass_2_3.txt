[kernel] Parsing out/4_0003/4_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 3 goals scheduled
[wp] [Timeout] typed_main4_call_TripleAbsMaxFun_requires (Qed 1ms) (Alt-Ergo)
[wp] Proved goals:    2 / 3
  Qed:               0 (1ms-54ms-82ms)
  Alt-Ergo 2.5.4:    1 (15ms)
  Z3 4.8.12:         1 (170ms)
  Timeout:           1
------------------------------------------------------------
  Function TripleAbsMaxFun
------------------------------------------------------------

Goal Post-condition (file out/4_0003/4_merged.c, line 12) in 'TripleAbsMaxFun':
Let a = shiftfield_F1___TripleAbsMax_tmax(pIp_0).
Let x = Mint_1[a].
Let a_1 = shiftfield_F1___TripleAbsMax_abs(pIp_0).
Let a_2 = shift_sint32(a_1, 2).
Let x_1 = Mint_2[a_2].
Let a_3 = shift_sint32(a_1, 1).
Let x_2 = Mint_2[a_3].
Let a_4 = shift_sint32(a_1, 0).
Let x_3 = Mint_2[a_4].
Let m = Mint_0[Mptr_0[shiftfield_F1___TripleAbsMax_ret(pIp_0)] <- Mint_0[a]].
Let x_4 = m[a].
Let x_5 = m[a_4].
Let x_6 = m[a_3].
Let x_7 = m[a_2].
Assume {
  Type: is_sint32(absfx1_0) /\ is_sint32(absfy2_0) /\ is_sint32(absfz3_0) /\
      is_sint32(x) /\ is_sint32(x_4) /\ is_sint32(x_3) /\ is_sint32(x_2) /\
      is_sint32(x_1) /\ is_sint32(x_5) /\ is_sint32(x_6) /\ is_sint32(x_7).
  (* Heap *)
  Type: (region(pIp_0.base) <= 0) /\ framed(Mptr_0) /\ linked(Malloc_0).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, pIp_0, 5).
  If x_3 < 0
  Then { Have: (absfx1_0 + x_3) = 0. }
  Else { Have: x_3 = absfx1_0. }
  If x_2 < 0
  Then { Have: (absfy2_0 + x_2) = 0. }
  Else { Have: x_2 = absfy2_0. }
  If x_1 < 0
  Then { Have: (absfz3_0 + x_1) = 0. }
  Else { Have: x_1 = absfz3_0. }
  If absfy2_0 < absfx1_0
  Then { Have: Mint_2 = Mint_3. Have: Mint_3[a <- absfx1_0] = Mint_1. }
  Else { Have: Mint_2 = Mint_4. Have: Mint_4[a <- absfy2_0] = Mint_1. }
  If x < absfz3_0
  Then { Have: Mint_1 = Mint_5. Have: Mint_5[a <- absfz3_0] = Mint_0. }
  Else { Have: Mint_1 = Mint_0. }
}
Prove: (IAbs.abs(x_5) <= x_4) /\ (IAbs.abs(x_6) <= x_4) /\
    (IAbs.abs(x_7) <= x_4).
Prover Z3 4.8.12 returns Valid (Qed:82ms) (170ms) (1940084)

------------------------------------------------------------

Goal Post-condition (file out/4_0003/4_merged.c, line 13) in 'TripleAbsMaxFun':
Let a = shiftfield_F1___TripleAbsMax_tmax(pIp_0).
Let x = Mint_1[a].
Let a_1 = shiftfield_F1___TripleAbsMax_abs(pIp_0).
Let a_2 = shift_sint32(a_1, 2).
Let x_1 = Mint_2[a_2].
Let a_3 = shift_sint32(a_1, 1).
Let x_2 = Mint_2[a_3].
Let a_4 = shift_sint32(a_1, 0).
Let x_3 = Mint_2[a_4].
Let m = Mint_0[Mptr_0[shiftfield_F1___TripleAbsMax_ret(pIp_0)] <- Mint_0[a]].
Let x_4 = m[a].
Assume {
  Type: is_sint32(absfx1_0) /\ is_sint32(absfy2_0) /\ is_sint32(absfz3_0) /\
      is_sint32(x) /\ is_sint32(x_4) /\ is_sint32(x_3) /\ is_sint32(x_2) /\
      is_sint32(x_1) /\ is_sint32(m[a_4]) /\ is_sint32(m[a_3]) /\
      is_sint32(m[a_2]).
  (* Heap *)
  Type: (region(pIp_0.base) <= 0) /\ framed(Mptr_0) /\ linked(Malloc_0).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, pIp_0, 5).
  If x_3 < 0
  Then { Have: (absfx1_0 + x_3) = 0. }
  Else { Have: x_3 = absfx1_0. }
  If x_2 < 0
  Then { Have: (absfy2_0 + x_2) = 0. }
  Else { Have: x_2 = absfy2_0. }
  If x_1 < 0
  Then { Have: (absfz3_0 + x_1) = 0. }
  Else { Have: x_1 = absfz3_0. }
  If absfy2_0 < absfx1_0
  Then { Have: Mint_2 = Mint_3. Have: Mint_3[a <- absfx1_0] = Mint_1. }
  Else { Have: Mint_2 = Mint_4. Have: Mint_4[a <- absfy2_0] = Mint_1. }
  If x < absfz3_0
  Then { Have: Mint_1 = Mint_5. Have: Mint_5[a <- absfz3_0] = Mint_0. }
  Else { Have: Mint_1 = Mint_0. }
}
Prove: 0 <= x_4.
Prover Z3 4.8.12 returns Valid (Qed:80ms) (40ms) (222482)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:80ms) (15ms) (248)

------------------------------------------------------------
------------------------------------------------------------
  Function main4
------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/4_0003/4_merged.c, line 11) in 'TripleAbsMaxFun'' in 'main4' at call 'TripleAbsMaxFun' (file out/4_0003/4_merged.c, line 64)
:
Assume { (* Heap *) Type: (region(pIp_0.base) <= 0) /\ linked(Malloc_0). }
Prove: valid_rw(Malloc_0, pIp_0, 5).
Prover Z3 4.8.12 returns Unknown (Qed:1ms)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------
[wp:pedantic-assigns] out/4_0003/4_merged.c:15: Warning: 
  No 'assigns' specification for function 'TripleAbsMaxFun'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/4_0003/4_merged.c:57: Warning: 
  No 'assigns' specification for function 'main4'.
  Callers assumptions might be imprecise.

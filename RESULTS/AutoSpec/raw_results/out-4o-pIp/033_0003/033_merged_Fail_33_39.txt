[kernel] Parsing out/033_0003/033_merged.c (with preprocessing)
[kernel:typing:no-proto] out/033_0003/033_merged.c:35: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/033_0003/033_merged.c:60: Warning: 
  Calling function unknown3 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/033_0003/033_merged.c:22: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/033_0003/033_merged.c:5: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[kernel:annot:missing-spec] out/033_0003/033_merged.c:5: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[kernel:annot:missing-spec] out/033_0003/033_merged.c:5: Warning: 
  Neither code nor specification for function unknown3, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 39 goals scheduled
[wp] [Timeout] typed_foo033_loop_invariant_2_preserved (Qed 7ms) (Z3)
[wp] [Timeout] typed_foo033_loop_invariant_3_preserved (Qed 8ms) (Z3)
[wp] [Timeout] typed_foo033_loop_invariant_8_preserved (Qed 7ms) (Z3)
[wp] [Timeout] typed_foo033_loop_invariant_11_established (Qed 4ms) (Z3)
[wp] [Timeout] typed_foo033_loop_invariant_12_established (Qed 4ms) (Z3)
[wp] [Timeout] typed_foo033_loop_invariant_14_established (Qed 5ms) (Z3)
[wp] Proved goals:   33 / 39
  Qed:              28
  Alt-Ergo 2.5.4:    4
  Z3 4.8.12:         1 (800ms)
  Timeout:           6
------------------------------------------------------------
  Function foo033
------------------------------------------------------------

Goal Preservation of Invariant (file out/033_0003/033_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/033_0003/033_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/033_0003/033_merged.c, line 13):
Let x_2 = k + x.
Let x_3 = y + z_1.
Let x_4 = -k.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(tmp_1_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(z_1) /\
      is_sint32(k + x_1) /\ is_sint32(z - k) /\ is_sint32(x + (2 * k) - z) /\
      is_sint32(y + z_1 - k).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: k <= z_1.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: k <= x_3.
  (* Invariant *)
  Have: 0 <= c.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> (((k + i) <= x_3) -> (i <= y))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      ((z_1 = k) \/ ((2 + k) = z_1)))).
  (* Invariant *)
  Have: z <= x_2.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= x) -> ((k + i) <= z))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> (((k + i) < z) ->
      ((x_2 = z) \/ (x_2 = (2 + z))))).
}
Prove: x_2 = z.
Prover Z3 4.8.12 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/033_0003/033_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/033_0003/033_merged.c, line 14):
Let x_2 = x + z_1.
Let x_3 = x + y + z_1.
Let x_4 = -x.
Assume {
  Type: is_sint32(c) /\ is_sint32(tmp_1_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(z_1) /\
      is_sint32(z - x) /\ is_sint32(x_1 + z - x) /\
      is_sint32(x + y + z_1 - z).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: z <= x_2.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: z <= x_3.
  (* Invariant *)
  Have: 0 <= c.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> (((z + i) <= x_3) -> (i <= y))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < y) ->
      ((x_2 = z) \/ (x_2 = (2 + z))))).
}
Prove: 0 <= x.
Prover Z3 4.8.12 returns Timeout (Qed:8ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:8ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/033_0003/033_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/033_0003/033_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/033_0003/033_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.79ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/033_0003/033_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/033_0003/033_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/033_0003/033_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/033_0003/033_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/033_0003/033_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/033_0003/033_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/033_0003/033_merged.c, line 27):
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(tmp_0) /\
      is_sint32(tmp_1_0) /\ is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(y) /\
      is_sint32(y_1) /\ is_sint32(y_2) /\ is_sint32(y_3) /\ is_sint32(z) /\
      is_sint32(k + x_1).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: k <= z.
  (* Invariant *)
  Have: 0 <= y_3.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: tmp_0 != 0.
  If (k + y_3) = (c + z)
  Then { Have: y_3 = y_1. Have: (1 + y_1) = y. }
  Else { Have: y_3 = y_2. Have: (1 + y) = y_2. }
}
Prove: 0 <= y.
Prover Z3 4.8.12 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/033_0003/033_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/033_0003/033_merged.c, line 28):
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(tmp_0) /\
      is_sint32(tmp_1_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_2) /\ is_sint32(x_3) /\ is_sint32(x_4) /\ is_sint32(y) /\
      is_sint32(y_1) /\ is_sint32(y_2) /\ is_sint32(y_3) /\ is_sint32(z) /\
      is_sint32(k + x_4).
  (* Invariant *)
  Have: 0 <= x_4.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: k <= z.
  (* Invariant *)
  Have: 0 <= y_3.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: tmp_0 != 0.
  If (k + y_3) = (c + z)
  Then {
    Have: (x_3 = x_1) /\ (y_3 = y_1).
    Have: (1 + x_1) = x.
    Have: (1 + y_1) = y.
  }
  Else {
    Have: (x_3 = x_2) /\ (y_3 = y_2).
    Have: (1 + x_2) = x.
    Have: (1 + y) = y_2.
  }
  (* Invariant *)
  Have: 0 <= y.
}
Prove: 0 <= x.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (20ms) (35143)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (6ms) (56)

------------------------------------------------------------

Goal Establishment of Invariant (file out/033_0003/033_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/033_0003/033_merged.c, line 29):
Assume {
  Type: is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(c_2) /\ is_sint32(c_3) /\
      is_sint32(k) /\ is_sint32(tmp_0) /\ is_sint32(tmp_1_0) /\
      is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_3) /\
      is_sint32(x_4) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(y_2) /\
      is_sint32(y_3) /\ is_sint32(z) /\ is_sint32(k + x_4).
  (* Invariant *)
  Have: 0 <= x_4.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: k <= z.
  (* Invariant *)
  Have: 0 <= y_3.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: 0 <= c_3.
  (* Then *)
  Have: tmp_0 != 0.
  If (k + y_3) = (c_3 + z)
  Then {
    Have: (c_3 = c_1) /\ (x_3 = x_1) /\ (y_3 = y_1).
    Have: (1 + x_1) = x.
    Have: (1 + y_1) = y.
    Have: (1 + c_1) = c.
  }
  Else {
    Have: (c_3 = c_2) /\ (x_3 = x_2) /\ (y_3 = y_2).
    Have: (1 + x_2) = x.
    Have: (1 + y) = y_2.
    Have: (1 + c_2) = c.
  }
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x.
}
Prove: 0 <= c.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (36672)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (64)

------------------------------------------------------------

Goal Establishment of Invariant (file out/033_0003/033_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/033_0003/033_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/033_0003/033_merged.c, line 51):
Assume {
  Type: is_sint32(c) /\ is_sint32(tmp_1_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(z_1) /\
      is_sint32(z_1 - x_1).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: z_1 <= (x_1 + z).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= c.
}
Prove: y <= x.
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/033_0003/033_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/033_0003/033_merged.c, line 52):
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(tmp_1_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(k + x_1).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: k <= z.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= c.
  (* Invariant *)
  Have: y <= x.
}
Prove: (y + z) = (k + x).
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/033_0003/033_merged.c, line 53):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/033_0003/033_merged.c, line 53):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/033_0003/033_merged.c, line 54):
Let x_2 = k + x.
Let x_3 = 2 + k.
Let x_4 = y + z_1.
Let x_5 = -z.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(tmp_0_0) /\
      is_sint32(tmp_1_0) /\ is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(z_1) /\ is_sint32(x - 1) /\
      is_sint32(k + x_1) /\ is_sint32(k + x - z) /\ is_sint32(y + z_1 - k) /\
      is_sint32(k + x - 1 - z).
  (* Goal *)
  When: (0 <= i) /\ (i < x).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: k <= z_1.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: k <= x_4.
  (* Invariant *)
  Have: 0 <= c.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (((k + i_1) <= x_4) -> (i_1 <= y))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y) ->
      ((z_1 = k) \/ (x_3 = z_1)))).
  (* Invariant *)
  Have: k <= z.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= x) -> ((z + i_1) <= x_2))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (((z + i_1) < x_2) ->
      ((z = k) \/ (x_3 = z)))).
  (* Then *)
  Have: tmp_0_0 != 0.
}
Prove: (i + z) < x_2.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (800ms) (432926)

------------------------------------------------------------

Goal Establishment of Invariant (file out/033_0003/033_merged.c, line 54):
Let x_2 = k + x.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(tmp_1_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(z) /\ is_sint32(k + x_1) /\
      is_sint32(k + x - z).
  (* Goal *)
  When: (0 <= i) /\ (i <= x).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: k <= z.
  (* Invariant *)
  Have: z <= x_2.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= c.
}
Prove: (i + z) <= x_2.
Prover Z3 4.8.12 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/033_0003/033_merged.c, line 55):
Let x_1 = y + z.
Let x_2 = 2 + k.
Let x_3 = y_1 + z_1.
Let x_4 = -k.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(tmp_0_0) /\
      is_sint32(tmp_1_0) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\
      is_sint32(z) /\ is_sint32(z_1) /\ is_sint32(y - 1) /\
      is_sint32(k + x) /\ is_sint32(y + z - k) /\ is_sint32(y_1 + z_1 - k) /\
      is_sint32(y + z - 1 - k).
  (* Goal *)
  When: (0 <= i) /\ ((2 + i) <= y).
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: k <= z_1.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: k <= x_3.
  (* Invariant *)
  Have: 0 <= c.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (((k + i_1) <= x_3) -> (i_1 <= y_1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y_1) ->
      ((z_1 = k) \/ (x_2 = z_1)))).
  (* Invariant *)
  Have: k <= z.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (((k + i_1) <= x_1) -> (i_1 <= y))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y) ->
      ((z = k) \/ (x_2 = z)))).
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (((k + i_1) < x_1) -> (i_1 < y))).
}
Prove: (z = k) \/ (x_2 = z).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (630ms) (8598)

------------------------------------------------------------

Goal Establishment of Invariant (file out/033_0003/033_merged.c, line 55):
Let x_1 = y + z.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(tmp_1_0) /\ is_sint32(x) /\
      is_sint32(y) /\ is_sint32(z) /\ is_sint32(k + x) /\
      is_sint32(y + z - k).
  (* Goal *)
  When: (0 <= i) /\ (i < y).
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_1_0 != 0.
  (* Invariant *)
  Have: k <= z.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: k <= x_1.
  (* Invariant *)
  Have: 0 <= c.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (((k + i_1) <= x_1) -> (i_1 <= y))).
}
Prove: (z = k) \/ ((2 + k) = z).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (307ms) (4844)

------------------------------------------------------------

Goal Loop assigns (file out/033_0003/033_merged.c, line 18) (1/5):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/033_0003/033_merged.c, line 18) (2/5):
Call Result at line 22
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Loop assigns (file out/033_0003/033_merged.c, line 18) (3/5):
Effect at line 35
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Loop assigns (file out/033_0003/033_merged.c, line 18) (4/5):
Call Result at line 35
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Loop assigns (file out/033_0003/033_merged.c, line 18) (5/5):
Call Result at line 60
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Loop assigns (file out/033_0003/033_merged.c, line 30) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/033_0003/033_merged.c, line 30) (2/2):
Call Result at line 35
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Loop assigns (file out/033_0003/033_merged.c, line 56) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/033_0003/033_merged.c, line 56) (2/2):
Call Result at line 60
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/033_0003/033_merged.c:1: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/033_0003/033_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/033_0003/033_merged.c:3: Warning: 
  No 'assigns' specification for function 'unknown3'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/033_0003/033_merged.c:5: Warning: 
  No 'assigns' specification for function 'foo033'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/38_0005/38_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 21 goals scheduled
[wp] [Timeout] typed_main38_assert (Qed 2ms) (Z3)
[wp] [Timeout] typed_main38_assert_2 (Qed 2ms) (Z3)
[wp] [Timeout] typed_main38_assert_3 (Qed 2ms) (Z3)
[wp] [Timeout] typed_main38_assert_4 (Qed 2ms) (Z3)
[wp] [Timeout] typed_main38_assert_5 (Qed 3ms) (Z3)
[wp] [Timeout] typed_main38_call_InitVarFun_requires (Qed 1ms) (Alt-Ergo)
[wp] Proved goals:   15 / 21
  Qed:            15
  Timeout:         6
------------------------------------------------------------
  Function InitVarFun
------------------------------------------------------------

Goal Assigns (file out/38_0005/38_merged.c, line 60) in 'InitVarFun' (1/15):
Effect at line 65
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assigns (file out/38_0005/38_merged.c, line 60) in 'InitVarFun' (2/15):
Effect at line 66
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Assigns (file out/38_0005/38_merged.c, line 60) in 'InitVarFun' (3/15):
Effect at line 68
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assigns (file out/38_0005/38_merged.c, line 60) in 'InitVarFun' (4/15):
Effect at line 69
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assigns (file out/38_0005/38_merged.c, line 60) in 'InitVarFun' (5/15):
Effect at line 71
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Assigns (file out/38_0005/38_merged.c, line 60) in 'InitVarFun' (6/15):
Effect at line 72
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assigns (file out/38_0005/38_merged.c, line 60) in 'InitVarFun' (7/15):
Effect at line 73
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Assigns (file out/38_0005/38_merged.c, line 60) in 'InitVarFun' (8/15):
Effect at line 74
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assigns (file out/38_0005/38_merged.c, line 60) in 'InitVarFun' (9/15):
Effect at line 76
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assigns (file out/38_0005/38_merged.c, line 60) in 'InitVarFun' (10/15):
Effect at line 77
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assigns (file out/38_0005/38_merged.c, line 60) in 'InitVarFun' (11/15):
Effect at line 78
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Assigns (file out/38_0005/38_merged.c, line 60) in 'InitVarFun' (12/15):
Effect at line 79
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assigns (file out/38_0005/38_merged.c, line 60) in 'InitVarFun' (13/15):
Effect at line 81
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Assigns (file out/38_0005/38_merged.c, line 60) in 'InitVarFun' (14/15):
Effect at line 83
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assigns (file out/38_0005/38_merged.c, line 60) in 'InitVarFun' (15/15):
Effect at line 85
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------
------------------------------------------------------------
  Function main38
------------------------------------------------------------

Goal Assertion (file out/38_0005/38_merged.c, line 93):
Let a = shiftfield_F5___InitVar_mModulator(pIp_0).
Let a_1 = shiftfield_F2_TAG_FALSE_RATE_MODULATOR_Yn(a).
Let a_2 = shiftfield_F2_TAG_FALSE_RATE_MODULATOR_Yp(a).
Let a_3 = shiftfield_F2_TAG_FALSE_RATE_MODULATOR_r(a).
Let a_4 = shiftfield_F2_TAG_FALSE_RATE_MODULATOR_u(a).
Let a_5 = shiftfield_F4_TAG_UPS_2MS_flgABChoose(shiftfield_F5___InitVar_mThrDistribute(pIp_0)).
Let x = Mint_0[a_5].
Let x_1 = Mint_undef_0[a_5].
Assume {
  Type: is_sint32(Mint_0[a_1]) /\ is_sint32(Mint_0[a_2]) /\
      is_sint32(Mint_0[a_3]) /\ is_sint32(Mint_0[a_4]) /\ is_sint32(x) /\
      is_sint32(Mint_undef_0[a_1]) /\ is_sint32(Mint_undef_0[a_2]) /\
      is_sint32(Mint_undef_0[a_3]) /\ is_sint32(Mint_undef_0[a_4]) /\
      is_sint32(x_1).
  (* Heap *)
  Type: region(pIp_0.base) <= 0.
}
Prove: x_1 = x.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Assertion (file out/38_0005/38_merged.c, line 94):
Let a = shiftfield_F4_TAG_UPS_2MS_flgABChoose(shiftfield_F5___InitVar_mThrDistribute(pIp_0)).
Let x = Mint_undef_0[a].
Let x_1 = Mint_0[a].
Let a_1 = shiftfield_F5___InitVar_mModulator(pIp_0).
Let a_2 = shiftfield_F2_TAG_FALSE_RATE_MODULATOR_Yn(a_1).
Let a_3 = shiftfield_F2_TAG_FALSE_RATE_MODULATOR_Yp(a_1).
Let a_4 = shiftfield_F2_TAG_FALSE_RATE_MODULATOR_r(a_1).
Let x_2 = Mint_0[a_4].
Let a_5 = shiftfield_F2_TAG_FALSE_RATE_MODULATOR_u(a_1).
Let x_3 = Mint_undef_0[a_4].
Assume {
  Type: is_sint32(Mint_0[a_2]) /\ is_sint32(Mint_0[a_3]) /\ is_sint32(x_2) /\
      is_sint32(Mint_0[a_5]) /\ is_sint32(x_1) /\
      is_sint32(Mint_undef_0[a_2]) /\ is_sint32(Mint_undef_0[a_3]) /\
      is_sint32(x_3) /\ is_sint32(Mint_undef_0[a_5]) /\ is_sint32(x).
  (* Heap *)
  Type: region(pIp_0.base) <= 0.
  (* Assertion *)
  Have: x = x_1.
}
Prove: x_3 = x_2.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Assertion (file out/38_0005/38_merged.c, line 95):
Let a = shiftfield_F5___InitVar_mModulator(pIp_0).
Let a_1 = shiftfield_F2_TAG_FALSE_RATE_MODULATOR_r(a).
Let x = Mint_undef_0[a_1].
Let x_1 = Mint_0[a_1].
Let a_2 = shiftfield_F4_TAG_UPS_2MS_flgABChoose(shiftfield_F5___InitVar_mThrDistribute(pIp_0)).
Let x_2 = Mint_undef_0[a_2].
Let x_3 = Mint_0[a_2].
Let a_3 = shiftfield_F2_TAG_FALSE_RATE_MODULATOR_Yn(a).
Let a_4 = shiftfield_F2_TAG_FALSE_RATE_MODULATOR_Yp(a).
Let a_5 = shiftfield_F2_TAG_FALSE_RATE_MODULATOR_u(a).
Let x_4 = Mint_0[a_5].
Let x_5 = Mint_undef_0[a_5].
Assume {
  Type: is_sint32(Mint_0[a_3]) /\ is_sint32(Mint_0[a_4]) /\ is_sint32(x_1) /\
      is_sint32(x_4) /\ is_sint32(x_3) /\ is_sint32(Mint_undef_0[a_3]) /\
      is_sint32(Mint_undef_0[a_4]) /\ is_sint32(x) /\ is_sint32(x_5) /\
      is_sint32(x_2).
  (* Heap *)
  Type: region(pIp_0.base) <= 0.
  (* Assertion *)
  Have: x_2 = x_3.
  (* Assertion *)
  Have: x = x_1.
}
Prove: x_5 = x_4.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Assertion (file out/38_0005/38_merged.c, line 96):
Let a = shiftfield_F5___InitVar_mModulator(pIp_0).
Let a_1 = shiftfield_F2_TAG_FALSE_RATE_MODULATOR_u(a).
Let x = Mint_undef_0[a_1].
Let x_1 = Mint_0[a_1].
Let a_2 = shiftfield_F2_TAG_FALSE_RATE_MODULATOR_r(a).
Let x_2 = Mint_undef_0[a_2].
Let x_3 = Mint_0[a_2].
Let a_3 = shiftfield_F4_TAG_UPS_2MS_flgABChoose(shiftfield_F5___InitVar_mThrDistribute(pIp_0)).
Let x_4 = Mint_undef_0[a_3].
Let x_5 = Mint_0[a_3].
Let a_4 = shiftfield_F2_TAG_FALSE_RATE_MODULATOR_Yn(a).
Let a_5 = shiftfield_F2_TAG_FALSE_RATE_MODULATOR_Yp(a).
Let x_6 = Mint_0[a_5].
Let x_7 = Mint_undef_0[a_5].
Assume {
  Type: is_sint32(Mint_0[a_4]) /\ is_sint32(x_6) /\ is_sint32(x_3) /\
      is_sint32(x_1) /\ is_sint32(x_5) /\ is_sint32(Mint_undef_0[a_4]) /\
      is_sint32(x_7) /\ is_sint32(x_2) /\ is_sint32(x) /\ is_sint32(x_4).
  (* Heap *)
  Type: region(pIp_0.base) <= 0.
  (* Assertion *)
  Have: x_4 = x_5.
  (* Assertion *)
  Have: x_2 = x_3.
  (* Assertion *)
  Have: x = x_1.
}
Prove: x_7 = x_6.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Assertion (file out/38_0005/38_merged.c, line 97):
Let a = shiftfield_F5___InitVar_mModulator(pIp_0).
Let a_1 = shiftfield_F2_TAG_FALSE_RATE_MODULATOR_Yp(a).
Let x = Mint_undef_0[a_1].
Let x_1 = Mint_0[a_1].
Let a_2 = shiftfield_F2_TAG_FALSE_RATE_MODULATOR_u(a).
Let x_2 = Mint_undef_0[a_2].
Let x_3 = Mint_0[a_2].
Let a_3 = shiftfield_F2_TAG_FALSE_RATE_MODULATOR_r(a).
Let x_4 = Mint_undef_0[a_3].
Let x_5 = Mint_0[a_3].
Let a_4 = shiftfield_F4_TAG_UPS_2MS_flgABChoose(shiftfield_F5___InitVar_mThrDistribute(pIp_0)).
Let x_6 = Mint_undef_0[a_4].
Let x_7 = Mint_0[a_4].
Let a_5 = shiftfield_F2_TAG_FALSE_RATE_MODULATOR_Yn(a).
Let x_8 = Mint_0[a_5].
Let x_9 = Mint_undef_0[a_5].
Assume {
  Type: is_sint32(x_8) /\ is_sint32(x_1) /\ is_sint32(x_5) /\
      is_sint32(x_3) /\ is_sint32(x_7) /\ is_sint32(x_9) /\ is_sint32(x) /\
      is_sint32(x_4) /\ is_sint32(x_2) /\ is_sint32(x_6).
  (* Heap *)
  Type: region(pIp_0.base) <= 0.
  (* Assertion *)
  Have: x_6 = x_7.
  (* Assertion *)
  Have: x_4 = x_5.
  (* Assertion *)
  Have: x_2 = x_3.
  (* Assertion *)
  Have: x = x_1.
}
Prove: x_9 = x_8.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/38_0005/38_merged.c, line 59) in 'InitVarFun'' in 'main38' at call 'InitVarFun' (file out/38_0005/38_merged.c, line 92)
:
Assume { (* Heap *) Type: (region(pIp_0.base) <= 0) /\ linked(Malloc_0). }
Prove: valid_rw(Malloc_0, pIp_0, 21).
Prover Z3 4.8.12 returns Unknown (Qed:1ms)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------
[wp:pedantic-assigns] out/38_0005/38_merged.c:90: Warning: 
  No 'assigns' specification for function 'main38'.
  Callers assumptions might be imprecise.

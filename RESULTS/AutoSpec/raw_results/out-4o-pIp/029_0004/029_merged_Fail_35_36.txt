[kernel] Parsing out/029_0004/029_merged.c (with preprocessing)
[kernel:typing:no-proto] out/029_0004/029_merged.c:55: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/029_0004/029_merged.c:29: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/029_0004/029_merged.c:4: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[kernel:annot:missing-spec] out/029_0004/029_merged.c:4: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 36 goals scheduled
[wp] [Timeout] typed_foo029_loop_invariant_8_preserved (Qed 11ms) (Z3)
[wp] Proved goals:   35 / 36
  Qed:              32
  Alt-Ergo 2.5.4:    3 (5ms-5ms)
  Timeout:           1
------------------------------------------------------------
  Function foo029
------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 19):
Let x_1 = a + c.
Let x_2 = a + (2 * c).
Let x_3 = -c_1.
Assume {
  Type: is_sint32(a) /\ is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(d) /\
      is_sint32(d_1) /\ is_sint32(tmp_0_0) /\ is_sint32(x) /\
      is_sint32(1 + d_1) /\ is_sint32(x - c_1) /\ is_sint32(x - d_1) /\
      is_sint32(1 + x - c_1) /\ is_sint32(a + c - d).
  (* Goal *)
  When: (0 <= i) /\ ((d + i) <= x_1).
  (* Invariant *)
  Have: c_1 <= 2.
  (* Invariant *)
  Have: x <= (c_1 + d_1).
  (* Invariant *)
  Have: x <= (2 + d_1).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (((d_1 + i_1) <= x) ->
      (d_1 <= (c_1 + x)))).
  (* Invariant *)
  Have: c_1 <= x.
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: c <= 2.
  (* Invariant *)
  Have: a <= d.
  (* Invariant *)
  Have: x_1 <= (2 + d).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (((d + i_1) <= x_1) -> (d <= x_2))).
}
Prove: d <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:10ms) (10ms) (34354)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (5ms) (29)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 20):
Let x_1 = -c_1.
Assume {
  Type: is_sint32(b) /\ is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(d) /\
      is_sint32(d_1) /\ is_sint32(tmp_0_0) /\ is_sint32(x) /\
      is_sint32(1 + d_1) /\ is_sint32(x - c_1) /\ is_sint32(x - d_1) /\
      is_sint32(1 + x - c_1) /\ is_sint32(b + d - c).
  (* Invariant *)
  Have: c_1 <= 2.
  (* Invariant *)
  Have: x <= (c_1 + d_1).
  (* Invariant *)
  Have: x <= (2 + d_1).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> (((d_1 + i) <= x) -> (d_1 <= (c_1 + x)))).
  (* Invariant *)
  Have: c_1 <= x.
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: c <= 2.
  (* Invariant *)
  Have: b <= c.
  (* Invariant *)
  Have: b <= 2.
  (* Invariant *)
  Have: forall i : Z. ((i <= b) -> ((0 <= i) -> (0 <= (b + c)))).
}
Prove: c <= (b + d).
Prover Z3 4.8.12 returns Timeout (Qed:11ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:11ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.78ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (11ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (13ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 47):
Let x_1 = a + c.
Let x_2 = a + (2 * c).
Let x_3 = 2 + d.
Let x_4 = -c_1.
Let x_5 = -d.
Assume {
  Type: is_sint32(a) /\ is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(d) /\
      is_sint32(d_1) /\ is_sint32(tmp_0) /\ is_sint32(tmp_0_0) /\
      is_sint32(x) /\ is_sint32(c - 1) /\ is_sint32(1 + d_1) /\
      is_sint32(x - c_1) /\ is_sint32(x - d_1) /\ is_sint32(1 + x - c_1) /\
      is_sint32(a + c - d) /\ is_sint32(a + c - 1 - d).
  (* Goal *)
  When: (0 <= i) /\ ((d + i) < x_1).
  (* Invariant *)
  Have: c_1 <= 2.
  (* Invariant *)
  Have: x <= (c_1 + d_1).
  (* Invariant *)
  Have: x <= (2 + d_1).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (((d_1 + i_1) <= x) ->
      (d_1 <= (c_1 + x)))).
  (* Invariant *)
  Have: c_1 <= x.
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: c <= 2.
  (* Invariant *)
  Have: a <= d.
  (* Invariant *)
  Have: x_1 <= x_3.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (((d + i_1) <= x_1) -> (d <= x_2))).
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: c <= 3.
  (* Invariant *)
  Have: x_1 <= (3 + d).
}
Prove: x_3 <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:12ms) (35332)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:12ms) (5ms) (36)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 47):
Let x_1 = a + d.
Let x_2 = 2 * x.
Assume {
  Type: is_sint32(a) /\ is_sint32(d) /\ is_sint32(tmp_0_0) /\ is_sint32(x) /\
      is_sint32(1 + a) /\ is_sint32(1 + d) /\ is_sint32(x - a) /\
      is_sint32(x - d).
  (* Goal *)
  When: (0 <= i) /\ ((d + i) <= x).
  (* Invariant *)
  Have: x <= (2 + a).
  (* Invariant *)
  Have: a <= d.
  (* Invariant *)
  Have: x <= (2 + d).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (((d + i_1) <= x) -> (x_1 <= x_2))).
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: tmp_0_0 != 0.
}
Prove: x_1 <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (32413)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (5ms) (23)

------------------------------------------------------------

Goal Assertion (file out/029_0004/029_merged.c, line 60):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/029_0004/029_merged.c, line 22) (1/3):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/029_0004/029_merged.c, line 22) (2/3):
Call Result at line 29
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Loop assigns (file out/029_0004/029_merged.c, line 22) (3/3):
Call Result at line 55
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Loop assigns (file out/029_0004/029_merged.c, line 48) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/029_0004/029_merged.c, line 48) (2/2):
Call Result at line 55
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/029_0004/029_merged.c:1: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/029_0004/029_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/029_0004/029_merged.c:4: Warning: 
  No 'assigns' specification for function 'foo029'.
  Callers assumptions might be imprecise.

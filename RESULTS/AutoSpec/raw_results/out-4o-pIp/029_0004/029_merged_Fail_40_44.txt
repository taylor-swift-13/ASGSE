[kernel] Parsing out/029_0004/029_merged.c (with preprocessing)
[kernel:typing:no-proto] out/029_0004/029_merged.c:59: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/029_0004/029_merged.c:32: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/029_0004/029_merged.c:4: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[kernel:annot:missing-spec] out/029_0004/029_merged.c:4: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 44 goals scheduled
[wp] [Timeout] typed_foo029_loop_invariant_8_preserved (Qed 12ms) (Z3)
[wp] [Timeout] typed_foo029_loop_invariant_9_preserved (Qed 13ms) (Z3)
[wp] [Timeout] typed_foo029_loop_invariant_10_preserved (Qed 12ms) (Z3)
[wp] [Timeout] typed_foo029_loop_invariant_17_established (Qed 4ms) (Z3)
[wp] Proved goals:   40 / 44
  Qed:              37
  Alt-Ergo 2.5.4:    3
  Timeout:           4
------------------------------------------------------------
  Function foo029
------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.50ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 19):
Let x_2 = a + c.
Let x_3 = a + (2 * c).
Let x_4 = 1 + d_1.
Let x_5 = -c_1.
Assume {
  Type: is_sint32(a) /\ is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(d) /\
      is_sint32(d_1) /\ is_sint32(tmp_0_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_4) /\ is_sint32(x - c_1) /\
      is_sint32(x - d_1) /\ is_sint32(1 + x - c_1) /\ is_sint32(a + c - d).
  (* Goal *)
  When: (0 <= i) /\ ((d + i) <= x_2).
  (* Invariant *)
  Have: c_1 <= 2.
  (* Invariant *)
  Have: x <= (c_1 + d_1).
  (* Invariant *)
  Have: x <= (2 + d_1).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (((d_1 + i_1) <= x) ->
      (d_1 <= (c_1 + x)))).
  (* Invariant *)
  Have: 3 <= x_1.
  (* Invariant *)
  Have: 2 <= d_1.
  (* Invariant *)
  Have: c_1 < x.
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: x <= x_4.
  (* Invariant *)
  Have: c <= 2.
  (* Invariant *)
  Have: a <= d.
  (* Invariant *)
  Have: x_2 <= (2 + d).
  (* Invariant *)
  Have: x_2 <= (1 + d).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (((d + i_1) <= x_2) -> (d <= x_3))).
}
Prove: d <= x_3.
Prover Z3 4.8.12 returns Valid (Qed:12ms) (10ms) (34972)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:12ms) (5ms) (34)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 20):
Let x_3 = 1 + d.
Let x_4 = -c_1.
Assume {
  Type: is_sint32(b) /\ is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(d) /\
      is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_2) /\ is_sint32(x_3) /\ is_sint32(x_1 - c_1) /\
      is_sint32(x_1 - d) /\ is_sint32(1 + x_1 - c_1).
  (* Invariant *)
  Have: c_1 <= 2.
  (* Invariant *)
  Have: x_1 <= (c_1 + d).
  (* Invariant *)
  Have: x_1 <= (2 + d).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> (((d + i) <= x_1) -> (d <= (c_1 + x_1)))).
  (* Invariant *)
  Have: 3 <= x_2.
  (* Invariant *)
  Have: 2 <= d.
  (* Invariant *)
  Have: c_1 < x_1.
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: x_1 <= x_3.
  (* Invariant *)
  Have: c <= 2.
  (* Invariant *)
  Have: b <= c.
  (* Invariant *)
  Have: b <= 2.
  (* Invariant *)
  Have: b <= 1.
  (* Invariant *)
  Have: forall i : Z. ((i <= b) -> ((0 <= i) -> (0 <= (b + c)))).
}
Prove: 3 <= x.
Prover Z3 4.8.12 returns Timeout (Qed:12ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:12ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 21):
Let x_3 = 1 + d.
Let x_4 = -c_1.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(c) /\ is_sint32(c_1) /\
      is_sint32(d) /\ is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_2) /\ is_sint32(x_3) /\ is_sint32(x_1 - c_1) /\
      is_sint32(x_1 - d) /\ is_sint32(1 + x_1 - c_1) /\ is_sint32(a + c - b).
  (* Invariant *)
  Have: c_1 <= 2.
  (* Invariant *)
  Have: x_1 <= (c_1 + d).
  (* Invariant *)
  Have: x_1 <= (2 + d).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> (((d + i) <= x_1) -> (d <= (c_1 + x_1)))).
  (* Invariant *)
  Have: 3 <= x_2.
  (* Invariant *)
  Have: 2 <= d.
  (* Invariant *)
  Have: c_1 < x_1.
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: x_1 <= x_3.
  (* Invariant *)
  Have: c <= 2.
  (* Invariant *)
  Have: b <= c.
  (* Invariant *)
  Have: b <= 2.
  (* Invariant *)
  Have: b <= 1.
  (* Invariant *)
  Have: forall i : Z. ((i <= b) -> ((0 <= i) -> (0 <= (b + c)))).
  (* Invariant *)
  Have: 3 <= x.
}
Prove: (2 + b) <= (a + c).
Prover Z3 4.8.12 returns Timeout (Qed:13ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:13ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.78ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 22):
Let x_3 = 1 + d_1.
Let x_4 = -c_1.
Assume {
  Type: is_sint32(b) /\ is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(d) /\
      is_sint32(d_1) /\ is_sint32(tmp_0_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_3) /\
      is_sint32(x_1 - c_1) /\ is_sint32(x_1 - d_1) /\
      is_sint32(1 + x_1 - c_1) /\ is_sint32(b + d - c).
  (* Invariant *)
  Have: c_1 <= 2.
  (* Invariant *)
  Have: x_1 <= (c_1 + d_1).
  (* Invariant *)
  Have: x_1 <= (2 + d_1).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> (((d_1 + i) <= x_1) ->
      (d_1 <= (c_1 + x_1)))).
  (* Invariant *)
  Have: 3 <= x_2.
  (* Invariant *)
  Have: 2 <= d_1.
  (* Invariant *)
  Have: c_1 < x_1.
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: x_1 <= x_3.
  (* Invariant *)
  Have: c <= 2.
  (* Invariant *)
  Have: b <= c.
  (* Invariant *)
  Have: b <= 2.
  (* Invariant *)
  Have: b <= 1.
  (* Invariant *)
  Have: forall i : Z. ((i <= b) -> ((0 <= i) -> (0 <= (b + c)))).
  (* Invariant *)
  Have: 3 <= x.
  (* Invariant *)
  Have: 2 <= d.
}
Prove: c < (b + d).
Prover Z3 4.8.12 returns Timeout (Qed:12ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:12ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (10ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (10ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 49):
Assume {
  Type: is_sint32(c) /\ is_sint32(d) /\ is_sint32(tmp_0_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x - c) /\ is_sint32(x - d).
  (* Invariant *)
  Have: c <= 2.
  (* Invariant *)
  Have: x <= (c + d).
  (* Invariant *)
  Have: x <= (2 + d).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> (((d + i) <= x) -> (d <= (c + x)))).
  (* Invariant *)
  Have: 3 <= x_1.
  (* Invariant *)
  Have: 2 <= d.
  (* Invariant *)
  Have: c < x.
  (* Then *)
  Have: tmp_0_0 != 0.
}
Prove: x <= (1 + d).
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/029_0004/029_merged.c, line 51):
Let x_2 = a + c.
Let x_3 = a + (2 * c).
Let x_4 = 2 + d.
Let x_5 = 1 + d_1.
Let x_6 = -c_1.
Let x_7 = -d.
Assume {
  Type: is_sint32(a) /\ is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(d) /\
      is_sint32(d_1) /\ is_sint32(tmp_0) /\ is_sint32(tmp_0_0) /\
      is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(c - 1) /\ is_sint32(x_5) /\
      is_sint32(x - c_1) /\ is_sint32(x - d_1) /\ is_sint32(1 + x - c_1) /\
      is_sint32(a + c - d) /\ is_sint32(a + c - 1 - d).
  (* Goal *)
  When: (0 <= i) /\ ((d + i) < x_2).
  (* Invariant *)
  Have: c_1 <= 2.
  (* Invariant *)
  Have: x <= (c_1 + d_1).
  (* Invariant *)
  Have: x <= (2 + d_1).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (((d_1 + i_1) <= x) ->
      (d_1 <= (c_1 + x)))).
  (* Invariant *)
  Have: 3 <= x_1.
  (* Invariant *)
  Have: 2 <= d_1.
  (* Invariant *)
  Have: c_1 < x.
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: x <= x_5.
  (* Invariant *)
  Have: c <= 2.
  (* Invariant *)
  Have: a <= d.
  (* Invariant *)
  Have: x_2 <= x_4.
  (* Invariant *)
  Have: x_2 <= (1 + d).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (((d + i_1) <= x_2) -> (d <= x_3))).
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: c <= 3.
  (* Invariant *)
  Have: x_2 <= (3 + d).
}
Prove: x_4 <= x_3.
Prover Z3 4.8.12 returns Valid (Qed:12ms) (10ms) (35966)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:12ms) (42)

------------------------------------------------------------

Goal Establishment of Invariant (file out/029_0004/029_merged.c, line 51):
Let x_2 = 1 + d.
Let x_3 = a + d.
Let x_4 = 2 * x.
Assume {
  Type: is_sint32(a) /\ is_sint32(d) /\ is_sint32(tmp_0_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(1 + a) /\ is_sint32(x_2) /\
      is_sint32(x - a) /\ is_sint32(x - d).
  (* Goal *)
  When: (0 <= i) /\ ((d + i) <= x).
  (* Invariant *)
  Have: x <= (2 + a).
  (* Invariant *)
  Have: a <= d.
  (* Invariant *)
  Have: x <= (2 + d).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (((d + i_1) <= x) -> (x_3 <= x_4))).
  (* Invariant *)
  Have: 3 <= x_1.
  (* Invariant *)
  Have: 2 <= d.
  (* Invariant *)
  Have: 0 < a.
  (* Then *)
  Have: tmp_0_0 != 0.
  (* Invariant *)
  Have: x <= x_2.
}
Prove: x_3 <= x_4.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (20ms) (32926)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (5ms) (26)

------------------------------------------------------------

Goal Assertion (file out/029_0004/029_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/029_0004/029_merged.c, line 25) (1/3):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/029_0004/029_merged.c, line 25) (2/3):
Call Result at line 32
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Loop assigns (file out/029_0004/029_merged.c, line 25) (3/3):
Call Result at line 59
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Loop assigns (file out/029_0004/029_merged.c, line 52) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/029_0004/029_merged.c, line 52) (2/2):
Call Result at line 59
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/029_0004/029_merged.c:1: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/029_0004/029_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/029_0004/029_merged.c:4: Warning: 
  No 'assigns' specification for function 'foo029'.
  Callers assumptions might be imprecise.

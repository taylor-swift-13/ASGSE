[kernel] Parsing out/23_0009/23_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] out/23_0009/23_merged.c:19: Warning: Lambda-functions not yet implemented
[wp] out/23_0009/23_merged.c:19: Warning: array type non-supported({ ℤ}ℤ)
[wp] 10 goals scheduled
[wp] [Timeout] typed_main23_loop_invariant_preserved (Qed 6ms) (Z3) (Stronger, 2 warnings)
[wp] [Timeout] typed_main23_loop_invariant_2_preserved (Qed 5ms) (Z3) (Stronger, 2 warnings)
[wp] [Timeout] typed_main23_loop_invariant_3_preserved (Qed 7ms) (Z3) (Stronger, 2 warnings)
[wp] Proved goals:    7 / 10
  Qed:             7
  Timeout:         3
------------------------------------------------------------
  Function main23
------------------------------------------------------------

Goal Preservation of Invariant (file out/23_0009/23_merged.c, line 18):
out/23_0009/23_merged.c:19: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/23_0009/23_merged.c:19: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Let x = Mint_1[shiftfield_F1___CheckCal_len(pIp_0)].
Let a = Mptr_0[shiftfield_F1___CheckCal_pkv(pIp_0)].
Let a_1 = shift_sint32(a, i).
Assume {
  Type: is_sint32(i_1) /\ is_sint32(1 + i_1) /\ is_sint32(x) /\
      is_sint32(Mint_1[shift_sint32(a, i_1)]).
  (* Heap *)
  Type: (region(pIp_0.base) <= 0) /\ framed(Mptr_0) /\ linked(Malloc_0).
  (* Goal *)
  When: (0 <= i) /\ (i <= i_1).
  (* Loop assigns ... *)
  Have: havoc(Mint_undef_0, Mint_0, shift_sint32(a, 0), x) = Mint_1.
  (* Invariant *)
  Have: forall i_2 : Z. let a_2 = shift_sint32(a, i_2) in ((0 <= i_2) ->
      ((i_2 < i_1) -> (Mint_0[a_2] = Mint_1[a_2]))).
  Warning[wp]: array type non-supported({ ℤ}ℤ)
  (Hide sub-term definition).
  Warning[wp]: Lambda-functions not yet implemented
  (Hide sub-term definition).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) -> (w = chksum_0))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      valid_rw(Malloc_0, shift_sint32(a, i_2), 1))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: i_1 < x.
}
Prove: Mint_0[a_1] = Mint_1[a_1].
Prover Z3 4.8.12 returns Timeout (Qed:6ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:6ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/23_0009/23_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/23_0009/23_merged.c, line 19):
out/23_0009/23_merged.c:19: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/23_0009/23_merged.c:19: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Let a = Mptr_0[shiftfield_F1___CheckCal_pkv(pIp_0)].
Let x = Mint_0[shiftfield_F1___CheckCal_len(pIp_0)].
Let x_1 = Mint_0[shift_sint32(a, i)].
Assume {
  Type: is_sint32(chksum_0) /\ is_sint32(i) /\ is_sint32(1 + i) /\
      is_sint32(x) /\ is_sint32(x_1).
  (* Heap *)
  Type: (region(pIp_0.base) <= 0) /\ framed(Mptr_0) /\ linked(Malloc_0).
  (* Goal *)
  When: (0 <= i_1) /\ (i_1 <= i).
  (* Loop assigns ... *)
  Have: havoc(Mint_undef_0, Mint_1, shift_sint32(a, 0), x) = Mint_0.
  (* Invariant *)
  Have: forall i_2 : Z. let a_1 = shift_sint32(a, i_2) in ((0 <= i_2) ->
      ((i_2 < i) -> (Mint_1[a_1] = Mint_0[a_1]))).
  Warning[wp]: array type non-supported({ ℤ}ℤ)
  (Hide sub-term definition).
  Warning[wp]: Lambda-functions not yet implemented
  (Hide sub-term definition).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i) -> (w_1 = chksum_0))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i) ->
      valid_rw(Malloc_0, shift_sint32(a, i_2), 1))).
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < x.
  (* Invariant *)
  Have: forall i_2 : Z. let a_1 = shift_sint32(a, i_2) in ((i_2 <= i) ->
      ((0 <= i_2) -> (Mint_1[a_1] = Mint_0[a_1]))).
}
Prove: (chksum_0 + x_1) = w.
Prover Z3 4.8.12 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/23_0009/23_merged.c, line 19):
out/23_0009/23_merged.c:19: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/23_0009/23_merged.c:19: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Prove: true.
Prover Qed returns Valid (0.89ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/23_0009/23_merged.c, line 20):
out/23_0009/23_merged.c:19: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/23_0009/23_merged.c:19: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Let a = Mptr_0[shiftfield_F1___CheckCal_pkv(pIp_0)].
Let x = Mint_0[shift_sint32(a, i_1)].
Let x_1 = Mint_0[shiftfield_F1___CheckCal_len(pIp_0)].
Assume {
  Type: is_sint32(chksum_0) /\ is_sint32(i_1) /\ is_sint32(1 + i_1) /\
      is_sint32(x_1) /\ is_sint32(x).
  (* Heap *)
  Type: (region(pIp_0.base) <= 0) /\ framed(Mptr_0) /\ linked(Malloc_0).
  (* Goal *)
  When: (0 <= i) /\ (i <= i_1).
  (* Loop assigns ... *)
  Have: havoc(Mint_undef_0, Mint_1, shift_sint32(a, 0), x_1) = Mint_0.
  (* Invariant *)
  Have: forall i_2 : Z. let a_1 = shift_sint32(a, i_2) in ((0 <= i_2) ->
      ((i_2 < i_1) -> (Mint_1[a_1] = Mint_0[a_1]))).
  Warning[wp]: array type non-supported({ ℤ}ℤ)
  (Hide sub-term definition).
  Warning[wp]: Lambda-functions not yet implemented
  (Hide sub-term definition).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) -> (w = chksum_0))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      valid_rw(Malloc_0, shift_sint32(a, i_2), 1))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: i_1 < x_1.
  (* Invariant *)
  Have: forall i_2 : Z. let a_1 = shift_sint32(a, i_2) in ((i_2 <= i_1) ->
      ((0 <= i_2) -> (Mint_1[a_1] = Mint_0[a_1]))).
  Warning[wp]: array type non-supported({ ℤ}ℤ)
  (Hide sub-term definition).
  Warning[wp]: Lambda-functions not yet implemented
  (Hide sub-term definition).
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= i_1) -> ((0 <= i_2) ->
      ((chksum_0 + x) = w_1))).
}
Prove: valid_rw(Malloc_0, shift_sint32(a, i), 1).
Prover Z3 4.8.12 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/23_0009/23_merged.c, line 20):
out/23_0009/23_merged.c:19: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/23_0009/23_merged.c:19: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/23_0009/23_merged.c, line 21):
out/23_0009/23_merged.c:19: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/23_0009/23_merged.c:19: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/23_0009/23_merged.c, line 21):
out/23_0009/23_merged.c:19: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/23_0009/23_merged.c:19: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Prove: true.
Prover Qed returns Valid (0.98ms)

------------------------------------------------------------

Goal Loop assigns (file out/23_0009/23_merged.c, line 22) (1/2):
out/23_0009/23_merged.c:19: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/23_0009/23_merged.c:19: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/23_0009/23_merged.c, line 22) (2/2):
Effect at line 26
out/23_0009/23_merged.c:19: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/23_0009/23_merged.c:19: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/23_0009/23_merged.c:11: Warning: 
  No 'assigns' specification for function 'main23'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/23_0004/23_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 5 goals scheduled
[wp] [Timeout] typed_main23_loop_invariant_preserved (Qed 2ms) (Z3)
[wp] Proved goals:    4 / 5
  Qed:             4
  Timeout:         1
------------------------------------------------------------
  Function main23
------------------------------------------------------------

Goal Preservation of Invariant (file out/23_0004/23_merged.c, line 18):
Let x = Mint_0[shiftfield_F1___CheckCal_len(pIp_0)].
Let a = Mptr_0[shiftfield_F1___CheckCal_pkv(pIp_0)].
Assume {
  Type: is_sint32(i_1) /\ is_sint32(1 + i_1) /\ is_sint32(x) /\
      is_sint32(Mint_0[shift_sint32(a, i_1)]).
  (* Heap *)
  Type: (region(pIp_0.base) <= 0) /\ framed(Mptr_0).
  (* Goal *)
  When: (0 <= i) /\ (i <= i_1).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      (Mint_0[shift_sint32(a, i_2)] = 0))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: i_1 < x.
}
Prove: Mint_0[shift_sint32(a, i)] = 0.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/23_0004/23_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/23_0004/23_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/23_0004/23_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.92ms)

------------------------------------------------------------

Goal Loop assigns (file out/23_0004/23_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/23_0004/23_merged.c:11: Warning: 
  No 'assigns' specification for function 'main23'.
  Callers assumptions might be imprecise.

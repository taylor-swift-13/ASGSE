Fail
{'CurTaskID': 1, 'Round': 3, 'Iteration': 3, 'Status': 0, 'llms_query_times': datetime.timedelta(seconds=6, microseconds=808551), 'total_solve_time': datetime.timedelta(seconds=11, microseconds=763884), 'simplified_time': datetime.timedelta(0), 'tokens_usage': 4358, 'spec_num_original': 0, 'spec_num_simplified': 0, 'TaskList': [3, 1], '1': ['loop invariant m == a || m >= a;', 'loop invariant k > 0 ==> m >= a;', 'loop invariant k == 1 ==> m >= a;', 'loop invariant k == 0 || m >= a;', 'loop invariant k == 0 || k == 1;', 'loop invariant k <= 1;', 'loop invariant k <= 1 && m >= a;', 'loop invariant k <= 1 && 0 <= k;', 'loop invariant a <= m;', 'loop invariant 0 <= k;', 'loop assigns m;', 'loop assigns k;'], '2': [], 'MSLines': ['/*@\n', 'requires a <= m;\n', 'requires j < 1;\n', '*/\n', '/* 2. FUNC CONTRACT */\nvoid foo(int a, int j, int m) {\n', '    int k = 0;\n', '\n', '    /* 1. LOOP INVARIANT */\n    while (k < 1) {\n', '        if(m < a) {\n', '            m = a;\n', '        }\n', '        k = k + 1;\n', '    }\n', '    //post-condition\n', '    //@ assert a >= m;\n', '}\n']}
                  __  __
      _ _        /_@>_@> \          /^^\ /^\ /^^\_ 
    _/oo \____/~''. . .  '~\       /'''  ~ ''~~' -'\_ 
   / '.'. ~.~.~.       .'    ~ |     /'\~~..''''.'' ''  ~\_ 
  <'_'_'_'_'_'_'_'_  ' :   '     \_/' '.''  . '.   .''  '.  ~\_ 
             ~V~V~V~V  \   ~\  '' '~  '   '' ~   `   ~  ''   ~\_ 
    /\~/\~/\~/\~/|/  '   ''  _   ' ~ ''  '    ~  '' __  '  ..  \_ 
 <-- --- ---.---.--/'   ''   /'  '\_ '' ': ~ ;;''    ' /''; \ ;'''''' '' ~\ _ 
    \~ '. . : .:: ~. :.  /_'''_'' \_' :'''_ : _ ''/''_' '_ \:_ '''' #''..\/\/\/~/\~ ''~~~~~O
 ~~ \-~ `---~~~---- \<_><_><_>/ ~ ~~' ~\<_><_><_>\_~_~_~_~_~/˜¤¹

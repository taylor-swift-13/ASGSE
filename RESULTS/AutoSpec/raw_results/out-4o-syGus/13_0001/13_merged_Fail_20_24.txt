[kernel] Parsing out/13_0001/13_merged.c (with preprocessing)
[kernel:typing:implicit-function-declaration] out/13_0001/13_merged.c:22: Warning: 
  Calling undeclared function unknown. Old style K&R code?
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/13_0001/13_merged.c:5: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 24 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_preserved (Qed 3ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_2_established (Qed 0.95ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_6_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_8_established (Qed 1ms) (Z3)
[wp] Proved goals:   20 / 24
  Qed:              14
  Alt-Ergo 2.5.4:    6 (5ms-19ms)
  Timeout:           4
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/13_0001/13_merged.c, line 8):
Let x_1 = 2 * (y / 2).
Let x_2 = 2 + x_1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(2 + x).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 2).
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: y <= 4.
  (* Invariant *)
  Have: (-2) <= y.
  (* Invariant *)
  Have: (y % 2) = 0.
  (* Invariant *)
  Have: x <= x_2.
  (* Invariant *)
  Have: x <= 4.
  (* Invariant *)
  Have: x <= (2 + (2 * y)).
  (* Invariant *)
  Have: (x % 2) = 0.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: x <= x_1.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/13_0001/13_merged.c, line 8):
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 2).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 2).
}
Prove: y <= (2 + (2 * (y / 2))).
Prover Z3 4.8.12 returns Valid (Qed:0.62ms) (10ms) (30162)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:0.62ms) (7ms) (62)

------------------------------------------------------------

Goal Preservation of Invariant (file out/13_0001/13_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/13_0001/13_merged.c, line 9):
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 2).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 2).
  (* Invariant *)
  Have: y <= (2 + (2 * (y / 2))).
}
Prove: x <= y.
Prover Z3 4.8.12 returns Timeout (Qed:0.95ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.95ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/13_0001/13_merged.c, line 10):
Let x_1 = 2 * (y / 2).
Let x_2 = 2 + x_1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(2 + x).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 2).
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: y <= 4.
  (* Invariant *)
  Have: (-2) <= y.
  (* Invariant *)
  Have: (y % 2) = 0.
  (* Invariant *)
  Have: x <= x_2.
  (* Invariant *)
  Have: x <= 4.
  (* Invariant *)
  Have: x <= (2 + (2 * y)).
  (* Invariant *)
  Have: (x % 2) = 0.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: x <= x_1.
}
Prove: x <= 2.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (20ms) (33259)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (17ms) (248)

------------------------------------------------------------

Goal Establishment of Invariant (file out/13_0001/13_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/13_0001/13_merged.c, line 11):
Let x_1 = 2 * (y / 2).
Let x_2 = 2 * y.
Let x_3 = 2 + x_1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(2 + x).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 2).
  (* Invariant *)
  Have: y <= x_3.
  (* Invariant *)
  Have: y <= 4.
  (* Invariant *)
  Have: (-2) <= y.
  (* Invariant *)
  Have: (y % 2) = 0.
  (* Invariant *)
  Have: x <= x_3.
  (* Invariant *)
  Have: x <= 4.
  (* Invariant *)
  Have: x <= (2 + x_2).
  (* Invariant *)
  Have: (x % 2) = 0.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: x <= x_1.
  (* Invariant *)
  Have: x <= 2.
}
Prove: x <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (32836)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (13ms) (239)

------------------------------------------------------------

Goal Establishment of Invariant (file out/13_0001/13_merged.c, line 11):
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 2).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 2).
  (* Invariant *)
  Have: y <= (2 + (2 * (y / 2))).
  (* Invariant *)
  Have: x <= y.
  (* Invariant *)
  Have: x <= 4.
}
Prove: x <= (2 + (2 * y)).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:0.70ms) (5ms) (24)

------------------------------------------------------------

Goal Preservation of Invariant (file out/13_0001/13_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/13_0001/13_merged.c, line 12):
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 2).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 2).
  (* Invariant *)
  Have: y <= (2 + (2 * (y / 2))).
  (* Invariant *)
  Have: x <= y.
  (* Invariant *)
  Have: x <= 4.
  (* Invariant *)
  Have: x <= (2 + (2 * y)).
}
Prove: x <= (2 + (2 * (x / 2))).
Prover Z3 4.8.12 returns Valid (Qed:1ms) (10ms) (31268)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (11ms) (122)

------------------------------------------------------------

Goal Preservation of Invariant (file out/13_0001/13_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/13_0001/13_merged.c, line 13):
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 2).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 2).
  (* Invariant *)
  Have: y <= (2 + (2 * (y / 2))).
  (* Invariant *)
  Have: x <= y.
  (* Invariant *)
  Have: x <= 4.
  (* Invariant *)
  Have: x <= (2 + (2 * y)).
  (* Invariant *)
  Have: x <= (2 + (2 * (x / 2))).
}
Prove: y = x.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/13_0001/13_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/13_0001/13_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/13_0001/13_merged.c, line 15):
Let x_1 = 2 * y.
Let x_2 = 2 * (y / 2).
Let x_3 = 2 + x_2.
Let x_4 = 2 + x.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_4).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 2).
  (* Invariant *)
  Have: y <= x_3.
  (* Invariant *)
  Have: y <= 4.
  (* Invariant *)
  Have: (-2) <= y.
  (* Invariant *)
  Have: (y % 2) = 0.
  (* Invariant *)
  Have: x <= x_3.
  (* Invariant *)
  Have: x <= 4.
  (* Invariant *)
  Have: x <= (2 + x_1).
  (* Invariant *)
  Have: (x % 2) = 0.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: x <= x_2.
  (* Invariant *)
  Have: x <= 2.
  (* Invariant *)
  Have: x <= x_1.
}
Prove: (x_4 % 2) = 0.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (39192)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (19ms) (260)

------------------------------------------------------------

Goal Establishment of Invariant (file out/13_0001/13_merged.c, line 15):
Assume {
  Type: is_sint32(x).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 2).
  (* Invariant *)
  Have: x <= (2 + (2 * (x / 2))).
  (* Invariant *)
  Have: x <= 4.
  (* Invariant *)
  Have: (-2) <= x.
}
Prove: (x % 2) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/13_0001/13_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/13_0001/13_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/13_0001/13_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/13_0001/13_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.82ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/13_0001/13_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/13_0001/13_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.92ms)

------------------------------------------------------------

Goal Loop assigns (file out/13_0001/13_merged.c, line 19) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/13_0001/13_merged.c, line 19) (2/2):
Call Result at line 22
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/13_0001/13_merged.c:5: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/13_0001/13_merged.c:22: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/9_0001/9_merged.c (with preprocessing)
[kernel:typing:implicit-function-declaration] out/9_0001/9_merged.c:16: Warning: 
  Calling undeclared function unknown. Old style K&R code?
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/9_0001/9_merged.c:5: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 12 goals scheduled
[wp] Proved goals:   12 / 12
  Qed:              10
  Alt-Ergo 2.5.4:    2 (4ms-4ms)
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/9_0001/9_merged.c, line 8):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/9_0001/9_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/9_0001/9_merged.c, line 9):
Let x_2 = x_1 + y.
Let x_3 = -x.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(y) /\
      is_sint32(2 + x_1) /\ is_sint32(x_1 + y - x) /\
      is_sint32(2 + x_1 + y - x).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 2).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 2).
  (* Invariant *)
  Have: ((x = 4) -> (y != 0)).
  (* Invariant *)
  Have: x <= x_2.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: ((x_1 = 4) -> (x_2 != x)).
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: x <= (2 + x_1 + y).
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (31899)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (4ms) (20)

------------------------------------------------------------

Goal Establishment of Invariant (file out/9_0001/9_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/9_0001/9_merged.c, line 10):
Let x_1 = x + y_1.
Let x_2 = -y.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\
      is_sint32(2 + y_1) /\ is_sint32(x + y_1 - y) /\
      is_sint32(2 + x + y_1 - y).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 2).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 2).
  (* Invariant *)
  Have: ((x = 4) -> (y != 0)).
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: y <= x_1.
  (* Invariant *)
  Have: ((x_1 = (4 + y)) -> (y_1 != 0)).
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (-2) <= y_1.
}
Prove: y <= (2 + x + y_1).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (31983)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (4ms) (20)

------------------------------------------------------------

Goal Establishment of Invariant (file out/9_0001/9_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/9_0001/9_merged.c, line 11):
Let x_1 = 4 + y.
Let x_2 = -x.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(2 + y - x) /\ is_sint32(4 + y - x).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 2).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 2).
  (* Invariant *)
  Have: ((x = 4) -> (y != 0)).
  (* Invariant *)
  Have: x <= (2 + y).
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: x <= x_1.
}
Prove: x_1 != x.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/9_0001/9_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/9_0001/9_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/9_0001/9_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Loop assigns (file out/9_0001/9_merged.c, line 13) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/9_0001/9_merged.c, line 13) (2/2):
Call Result at line 16
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/9_0001/9_merged.c:5: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/9_0001/9_merged.c:16: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.

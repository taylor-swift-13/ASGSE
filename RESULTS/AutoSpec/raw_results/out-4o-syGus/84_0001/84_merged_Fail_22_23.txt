[kernel] Parsing out/84_0001/84_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 23 goals scheduled
[wp] [Timeout] typed_main_loop_invariant_3_preserved (Qed 2ms) (Z3)
[wp] Proved goals:   22 / 23
  Qed:              18
  Alt-Ergo 2.5.4:    3 (2ms-3ms-5ms)
  Z3 4.8.12:         1 (20ms)
  Timeout:           1
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0001/84_merged.c, line 6):
Let x_1 = (y * (y - 1)) / 2.
Let x_2 = x + y.
Let x_3 = 1 + y.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_3) /\ is_sint32(x_2).
  (* Invariant *)
  Have: (50 + x) <= x_1.
  (* Invariant *)
  Have: x < 0.
  (* Invariant *)
  Have: y <= 50.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: (-50) <= x.
  (* Invariant *)
  Have: (-50) <= x_2.
  (* Invariant *)
  Have: (-50) <= (x + x_1).
}
Prove: (50 + x + y) <= ((y * x_3) / 2).
Prover Z3 4.8.12 returns Valid (Qed:2ms) (20ms) (38821)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0001/84_merged.c, line 6):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0001/84_merged.c, line 7):
Prove: true.
Prover Qed returns Valid (0.98ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0001/84_merged.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0001/84_merged.c, line 8):
Let x_1 = 1 + y.
Let x_2 = (y * (y - 1)) / 2.
Let x_3 = x + y.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_1) /\ is_sint32(x_3).
  (* Invariant *)
  Have: (50 + x) <= x_2.
  (* Invariant *)
  Have: x < 0.
  (* Invariant *)
  Have: y <= 50.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: (-50) <= x.
  (* Invariant *)
  Have: (-50) <= x_3.
  (* Invariant *)
  Have: (-50) <= (x + x_2).
  (* Invariant *)
  Have: (50 + x + y) <= ((y * x_1) / 2).
}
Prove: x_3 < 0.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0001/84_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0001/84_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (0.97ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0001/84_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0001/84_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0001/84_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0001/84_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0001/84_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0001/84_merged.c, line 12):
Let x_1 = 1 + y.
Let x_2 = (y * (y - 1)) / 2.
Let x_3 = x + y.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_1) /\ is_sint32(x_3).
  (* Goal *)
  When: x_3 < 0.
  (* Invariant *)
  Have: (50 + x) <= x_2.
  (* Invariant *)
  Have: x < 0.
  (* Invariant *)
  Have: y <= 50.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: (-50) <= x.
  (* Invariant *)
  Have: (-50) <= x_3.
  (* Invariant *)
  Have: (-50) <= (x + x_2).
  (* Invariant *)
  Have: (50 + x + y) <= ((y * x_1) / 2).
}
Prove: y <= 49.
Prover Z3 4.8.12 returns Valid (Qed:2ms) (10ms) (31298)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (2ms) (19)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0001/84_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0001/84_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0001/84_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0001/84_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0001/84_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0001/84_merged.c, line 15):
Let x_1 = x + y.
Let x_2 = 1 + y.
Let x_3 = (y * (y - 1)) / 2.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_2) /\ is_sint32(x_1).
  (* Invariant *)
  Have: (50 + x) <= x_3.
  (* Invariant *)
  Have: x < 0.
  (* Invariant *)
  Have: y <= 50.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: (-50) <= x.
  (* Invariant *)
  Have: (-50) <= x_1.
  (* Invariant *)
  Have: (-50) <= (x + x_3).
  (* Invariant *)
  Have: (50 + x + y) <= ((y * x_2) / 2).
  (* Invariant *)
  Have: x_1 < 0.
  (* Invariant *)
  Have: y <= 49.
  (* Invariant *)
  Have: (-1) <= y.
}
Prove: (-51) <= (x + (2 * y)).
Prover Z3 4.8.12 returns Valid (Qed:3ms) (20ms) (31624)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (3ms) (23)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0001/84_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0001/84_merged.c, line 16):
Let x_1 = x + y.
Let x_2 = 1 + y.
Let x_3 = (y * x_2) / 2.
Let x_4 = (y * (y - 1)) / 2.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_2) /\ is_sint32(x_1).
  (* Invariant *)
  Have: (50 + x) <= x_4.
  (* Invariant *)
  Have: x < 0.
  (* Invariant *)
  Have: y <= 50.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: (-50) <= x.
  (* Invariant *)
  Have: (-50) <= x_1.
  (* Invariant *)
  Have: (-50) <= (x + x_4).
  (* Invariant *)
  Have: (50 + x + y) <= x_3.
  (* Invariant *)
  Have: x_1 < 0.
  (* Invariant *)
  Have: y <= 49.
  (* Invariant *)
  Have: (-1) <= y.
  (* Invariant *)
  Have: (-51) <= (x + (2 * y)).
}
Prove: (-50) <= (x + y + x_3).
Prover Z3 4.8.12 returns Valid (Qed:3ms) (20ms) (31785)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (5ms) (26)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0001/84_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/84_0001/84_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/84_0001/84_merged.c:1: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

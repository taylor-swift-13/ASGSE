[kernel] Parsing out/84_0001/84_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 25 goals scheduled
[wp] [Timeout] typed_main_loop_invariant_8_preserved (Qed 3ms) (Z3)
[wp] Proved goals:   24 / 25
  Qed:              20
  Alt-Ergo 2.5.4:    4 (4ms-12ms-28ms)
  Timeout:           1
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0001/84_merged.c, line 6):
Let x = y * (y - 1).
Let x_1 = x / 2.
Let x_2 = 1 + y.
Let x_3 = -x_1.
Assume {
  Type: is_sint32(y) /\ is_sint32(x_2) /\ is_sint32(-50 - x_1) /\
      is_sint32(y - 50 - x_1).
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: (-99) <= x.
  (* Invariant *)
  Have: y <= 50.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: x <= 1.
  (* Invariant *)
  Have: x_1 <= y.
}
Prove: y <= (x_1 + ((y * x_2) / 2)).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (54689)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (28ms) (441)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0001/84_merged.c, line 6):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0001/84_merged.c, line 7):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0001/84_merged.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0001/84_merged.c, line 8):
Let x = y * (y - 1).
Let x_1 = x / 2.
Let x_2 = 1 + y.
Let x_3 = -x_1.
Assume {
  Type: is_sint32(y) /\ is_sint32(x_2) /\ is_sint32(-50 - x_1) /\
      is_sint32(y - 50 - x_1).
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: (-99) <= x.
  (* Invariant *)
  Have: y <= 50.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: x <= 1.
  (* Invariant *)
  Have: x_1 <= y.
  (* Invariant *)
  Have: y <= (x_1 + ((y * x_2) / 2)).
}
Prove: y <= (49 + x_1).
Prover Z3 4.8.12 returns Valid (Qed:2ms) (20ms) (42867)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (12ms) (268)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0001/84_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0001/84_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0001/84_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0001/84_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0001/84_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0001/84_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0001/84_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0001/84_merged.c, line 12):
Let x = y * (y - 1).
Let x_1 = x / 2.
Let x_2 = 1 + y.
Let x_3 = -x_1.
Assume {
  Type: is_sint32(y) /\ is_sint32(x_2) /\ is_sint32(-50 - x_1) /\
      is_sint32(y - 50 - x_1).
  (* Goal *)
  When: y <= (49 + x_1).
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: (-99) <= x.
  (* Invariant *)
  Have: y <= 50.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: x <= 1.
  (* Invariant *)
  Have: x_1 <= y.
  (* Invariant *)
  Have: y <= (x_1 + ((y * x_2) / 2)).
}
Prove: y <= 49.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (33397)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (4ms) (33)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0001/84_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0001/84_merged.c, line 13):
Let x = y * (y - 1).
Let x_1 = x / 2.
Let x_2 = 1 + y.
Let x_3 = (y * x_2) / 2.
Let x_4 = -x_1.
Assume {
  Type: is_sint32(y) /\ is_sint32(x_2) /\ is_sint32(-50 - x_1) /\
      is_sint32(y - 50 - x_1).
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: (-99) <= x.
  (* Invariant *)
  Have: y <= 50.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: x <= 1.
  (* Invariant *)
  Have: x_1 <= y.
  (* Invariant *)
  Have: y <= (x_1 + x_3).
  (* Invariant *)
  Have: y <= (49 + x_1).
  (* Invariant *)
  Have: y <= 49.
}
Prove: x_1 = (y + x_3).
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0001/84_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0001/84_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0001/84_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0001/84_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0001/84_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0001/84_merged.c, line 16):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = x_1 / 2.
Let x_3 = y + x_2.
Let x_4 = (y * (y - 1)) / 2.
Let x_5 = -x_2.
Assume {
  Type: is_sint32(y) /\ is_sint32(x) /\ is_sint32(-50 - x_2) /\
      is_sint32(-50 - y - x_2).
  (* Invariant *)
  Have: 0 <= (y + x_4 + x_2).
  (* Invariant *)
  Have: (-49) <= x_3.
  (* Invariant *)
  Have: y <= 50.
  (* Invariant *)
  Have: x_4 = x_3.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: x_3 <= 0.
  (* Invariant *)
  Have: x_1 <= 1.
  (* Invariant *)
  Have: (-1) <= x_1.
  (* Invariant *)
  Have: (-99) <= x_1.
  (* Invariant *)
  Have: y <= 49.
  (* Invariant *)
  Have: (-1) <= y.
}
Prove: x_2 <= x.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (31620)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (5ms) (41)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0001/84_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0001/84_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0001/84_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Loop assigns (file out/84_0001/84_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/84_0001/84_merged.c:1: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

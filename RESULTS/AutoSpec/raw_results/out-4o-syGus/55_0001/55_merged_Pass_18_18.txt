[kernel] Parsing out/55_0001/55_merged.c (with preprocessing)
[kernel:typing:implicit-function-declaration] out/55_0001/55_merged.c:18: Warning: 
  Calling undeclared function unknown. Old style K&R code?
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/55_0001/55_merged.c:4: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 18 goals scheduled
[wp] Proved goals:   18 / 18
  Qed:              13
  Alt-Ergo 2.5.4:    5
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/55_0001/55_merged.c, line 8):
Assume {
  Type: is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(n) /\ is_sint32(tmp_0_0).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: c_1 <= n.
  (* Invariant *)
  Have: c_1 <= (1 + n).
  (* Invariant *)
  Have: (n = c_1) \/ (c_1 < n).
  (* Invariant *)
  Have: 0 <= c_1.
  (* Then *)
  Have: tmp_0_0 != 0.
  If n = c_1
  Then { Have: c = 1. }
  Else { Have: c_1 = c. }
}
Prove: c <= n.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (31117)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (4ms) (27)

------------------------------------------------------------

Goal Establishment of Invariant (file out/55_0001/55_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/55_0001/55_merged.c, line 9):
Let x = 1 + n.
Assume {
  Type: is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(n) /\ is_sint32(tmp_0_0).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: c_1 <= n.
  (* Invariant *)
  Have: c_1 <= x.
  (* Invariant *)
  Have: (n = c_1) \/ (c_1 < n).
  (* Invariant *)
  Have: 0 <= c_1.
  (* Then *)
  Have: tmp_0_0 != 0.
  If n = c_1
  Then { Have: c = 1. }
  Else { Have: c_1 = c. }
  (* Invariant *)
  Have: c <= n.
}
Prove: c <= x.
Prover Z3 4.8.12 returns Valid (Qed:12ms) (10ms) (30999)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:12ms) (17)

------------------------------------------------------------

Goal Establishment of Invariant (file out/55_0001/55_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/55_0001/55_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/55_0001/55_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/55_0001/55_merged.c, line 11):
Let x = 1 + n.
Assume {
  Type: is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(n) /\ is_sint32(tmp_0_0).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: c_1 <= n.
  (* Invariant *)
  Have: c_1 <= x.
  (* Invariant *)
  Have: (n = c_1) \/ (c_1 < n).
  (* Invariant *)
  Have: 0 <= c_1.
  (* Then *)
  Have: tmp_0_0 != 0.
  If n = c_1
  Then { Have: c = 1. }
  Else { Have: c_1 = c. }
  (* Invariant *)
  Have: c <= n.
  (* Invariant *)
  Have: c <= x.
}
Prove: (n = c) \/ (c < n).
Prover Z3 4.8.12 returns Valid (Qed:10ms) (10ms) (31217)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (4ms) (19)

------------------------------------------------------------

Goal Establishment of Invariant (file out/55_0001/55_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/55_0001/55_merged.c, line 12):
Let x = 1 + n.
Assume {
  Type: is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(n) /\ is_sint32(tmp_0_0).
  (* Goal *)
  When: (0 <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: c_1 <= n.
  (* Invariant *)
  Have: c_1 <= x.
  (* Invariant *)
  Have: (n = c_1) \/ (c_1 < n).
  (* Invariant *)
  Have: 0 <= c_1.
  (* Then *)
  Have: tmp_0_0 != 0.
  If n = c_1
  Then { Have: c = 1. }
  Else { Have: c_1 = c. }
  (* Invariant *)
  Have: c <= n.
  (* Invariant *)
  Have: c <= x.
  (* Invariant *)
  Have: (n = c) \/ (c < n).
}
Prove: 0 <= c.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (20ms) (31946)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (4ms) (38)

------------------------------------------------------------

Goal Establishment of Invariant (file out/55_0001/55_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/55_0001/55_merged.c, line 13):
Let x = 1 + n.
Assume {
  Type: is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(n) /\ is_sint32(tmp_0_0).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: c_1 <= n.
  (* Invariant *)
  Have: c_1 <= x.
  (* Invariant *)
  Have: (n = c_1) \/ (c_1 < n).
  (* Invariant *)
  Have: 0 <= c_1.
  (* Then *)
  Have: tmp_0_0 != 0.
  If n = c_1
  Then { Have: c = 1. }
  Else { Have: c_1 = c. }
  (* Invariant *)
  Have: c <= n.
  (* Invariant *)
  Have: c <= x.
  (* Invariant *)
  Have: (n = c) \/ (c < n).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < n) -> (0 <= c))).
}
Prove: 0 <= c.
Prover Z3 4.8.12 returns Valid (Qed:13ms) (10ms) (31994)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (5ms) (36)

------------------------------------------------------------

Goal Establishment of Invariant (file out/55_0001/55_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/55_0001/55_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/55_0001/55_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assertion (file out/55_0001/55_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/55_0001/55_merged.c, line 15) (1/3):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/55_0001/55_merged.c, line 15) (2/3):
Call Result at line 17
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/55_0001/55_merged.c, line 15) (3/3):
Call Result at line 18
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/55_0001/55_merged.c:4: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/55_0001/55_merged.c:18: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/14_0001/14_merged.c (with preprocessing)
[kernel:typing:implicit-function-declaration] out/14_0001/14_merged.c:18: Warning: 
  Calling undeclared function unknown. Old style K&R code?
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/14_0001/14_merged.c:5: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 16 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_2_preserved (Qed 4ms) (Z3)
[wp] Proved goals:   15 / 16
  Qed:               9
  Alt-Ergo 2.5.4:    6 (4ms-5ms)
  Timeout:           1
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/14_0001/14_merged.c, line 8):
Let x_1 = 2 * y.
Let x_2 = 2 * x.
Let x_3 = x + y_1.
Let x_4 = 2 + y.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(y_1) /\ is_sint32(y) /\
      is_sint32(2 + x) /\ is_sint32(x_4) /\ is_sint32(x + y_1 - y).
  (* Pre-condition *)
  Have: (y <= x_3) /\ (x_3 <= x_4).
  (* Pre-condition *)
  Have: (0 <= y_1) /\ (y_1 <= 2).
  (* Invariant *)
  Have: x_1 <= (2 + y_1 + x_2).
  (* Invariant *)
  Have: y <= (2 + x + y_1).
  (* Invariant *)
  Have: x <= (2 + y_1 + y).
  (* Invariant *)
  Have: y <= (2 + x_2).
  (* Invariant *)
  Have: x_1 <= (2 + x + (2 * y_1)).
  (* Invariant *)
  Have: x <= (2 + x_1).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: y <= (4 + x_2).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (32343)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (4ms) (22)

------------------------------------------------------------

Goal Establishment of Invariant (file out/14_0001/14_merged.c, line 8):
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 2).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 2).
}
Prove: y <= (2 + (2 * x)).
Prover Z3 4.8.12 returns Valid (10ms) (29811)
Prover Alt-Ergo 2.5.4 returns Valid (4ms) (20)

------------------------------------------------------------

Goal Preservation of Invariant (file out/14_0001/14_merged.c, line 9):
Let x_1 = 2 * x.
Let x_2 = 2 * y.
Let x_3 = 2 * y_1.
Let x_4 = x + y_1.
Let x_5 = 2 + y.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(y_1) /\ is_sint32(y) /\
      is_sint32(2 + x) /\ is_sint32(x_5) /\ is_sint32(x + y_1 - y).
  (* Pre-condition *)
  Have: (y <= x_4) /\ (x_4 <= x_5).
  (* Pre-condition *)
  Have: (0 <= y_1) /\ (y_1 <= 2).
  (* Invariant *)
  Have: x_2 <= (2 + y_1 + x_1).
  (* Invariant *)
  Have: y <= (2 + x + y_1).
  (* Invariant *)
  Have: x <= (2 + y_1 + y).
  (* Invariant *)
  Have: y <= (2 + x_1).
  (* Invariant *)
  Have: x_2 <= (2 + x + x_3).
  (* Invariant *)
  Have: x <= (2 + x_2).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: y <= (4 + x_1).
}
Prove: x_2 <= (x + x_3).
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/14_0001/14_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/14_0001/14_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/14_0001/14_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/14_0001/14_merged.c, line 11):
Let x_1 = 2 * y.
Let x_2 = 2 * y_1.
Let x_3 = 2 * x.
Let x_4 = x + y_1.
Let x_5 = 2 + y.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(y_1) /\ is_sint32(y) /\
      is_sint32(2 + x) /\ is_sint32(x_5) /\ is_sint32(x + y_1 - y).
  (* Pre-condition *)
  Have: (y <= x_4) /\ (x_4 <= x_5).
  (* Pre-condition *)
  Have: (0 <= y_1) /\ (y_1 <= 2).
  (* Invariant *)
  Have: x_1 <= (2 + y_1 + x_3).
  (* Invariant *)
  Have: y <= (2 + x + y_1).
  (* Invariant *)
  Have: x <= (2 + y_1 + y).
  (* Invariant *)
  Have: y <= (2 + x_3).
  (* Invariant *)
  Have: x_1 <= (2 + x + x_2).
  (* Invariant *)
  Have: x <= (2 + x_1).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: y <= (4 + x_3).
  (* Invariant *)
  Have: x_1 <= (x + x_2).
}
Prove: x <= (4 + x_1).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (32581)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (4ms) (25)

------------------------------------------------------------

Goal Establishment of Invariant (file out/14_0001/14_merged.c, line 11):
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 2).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 2).
  (* Invariant *)
  Have: y <= (2 + (2 * x)).
  (* Invariant *)
  Have: (-2) <= x.
}
Prove: x <= (2 + (2 * y)).
Prover Z3 4.8.12 returns Valid (Qed:1ms) (10ms) (30159)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (4ms) (22)

------------------------------------------------------------

Goal Preservation of Invariant (file out/14_0001/14_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/14_0001/14_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/14_0001/14_merged.c, line 13):
Let x_2 = 2 * x.
Let x_3 = 2 * y.
Let x_4 = 2 + x_2.
Let x_5 = -x.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(2 + x_1) /\ is_sint32(x_1 + y - x) /\
      is_sint32(2 + x_1 + y - x).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 2).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 2).
  (* Invariant *)
  Have: y <= x_4.
  (* Invariant *)
  Have: (-2) <= x.
  (* Invariant *)
  Have: x <= (2 + x_3).
  (* Invariant *)
  Have: y <= (2 + x_1 + x).
  (* Invariant *)
  Have: x_1 <= x_4.
  (* Invariant *)
  Have: x_2 <= (2 + x_1 + x_3).
  (* Invariant *)
  Have: x <= (x_1 + y).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: y <= (4 + x_1 + x).
  (* Invariant *)
  Have: x_1 <= x_2.
  (* Invariant *)
  Have: x_2 <= (4 + x_1 + x_3).
}
Prove: x <= (2 + x_1 + y).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (32655)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (26)

------------------------------------------------------------

Goal Establishment of Invariant (file out/14_0001/14_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/14_0001/14_merged.c, line 14):
Let x_1 = 2 * y.
Let x_2 = 2 * x.
Let x_3 = -y.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\
      is_sint32(2 + y_1) /\ is_sint32(x + y_1 - y) /\
      is_sint32(2 + x + y_1 - y).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 2).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 2).
  (* Invariant *)
  Have: y <= (2 + x_2).
  (* Invariant *)
  Have: (-2) <= x.
  (* Invariant *)
  Have: x <= (2 + x_1).
  (* Invariant *)
  Have: x_1 <= (2 + y_1 + x_2).
  (* Invariant *)
  Have: y_1 <= (2 + x + y).
  (* Invariant *)
  Have: x <= (2 + y + y_1).
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: y <= (x + y_1).
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: x_1 <= (4 + y_1 + x_2).
  (* Invariant *)
  Have: y_1 <= (x + y).
  (* Invariant *)
  Have: x <= (4 + y + y_1).
  (* Invariant *)
  Have: (-2) <= y_1.
}
Prove: y <= (2 + x + y_1).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (32783)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (26)

------------------------------------------------------------

Goal Establishment of Invariant (file out/14_0001/14_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Loop assigns (file out/14_0001/14_merged.c, line 15) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/14_0001/14_merged.c, line 15) (2/2):
Call Result at line 18
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/14_0001/14_merged.c:5: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/14_0001/14_merged.c:18: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.

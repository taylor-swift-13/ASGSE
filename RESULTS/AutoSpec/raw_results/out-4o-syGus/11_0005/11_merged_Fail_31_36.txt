[kernel] Parsing out/11_0005/11_merged.c (with preprocessing)
[kernel:typing:implicit-function-declaration] out/11_0005/11_merged.c:28: Warning: 
  Calling undeclared function unknown. Old style K&R code?
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/11_0005/11_merged.c:5: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 36 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_preserved (Qed 5ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_2_preserved (Qed 4ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_3_preserved (Qed 5ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_7_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_8_established (Qed 1ms) (Z3)
[wp] Proved goals:   31 / 36
  Qed:              20
  Alt-Ergo 2.5.4:   10 (3ms-7ms-12ms)
  Z3 4.8.12:         1 (10ms)
  Timeout:           5
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 8):
Let x_2 = x_1 % 10.
Let x_3 = x % 10.
Let x_4 = y % 10.
Let x_5 = 10 * (x / 10).
Let x_6 = 20 + x_5.
Let x_7 = 10 + x_5.
Let x_8 = 10 + y.
Let x_9 = y_1 % 10.
Let x_10 = 10 * (y_1 / 10).
Let x_11 = 20 + x_10.
Let x_12 = 10 + x_10.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y_1) /\ is_sint32(y) /\ is_sint32(x_8).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 10).
  (* Pre-condition *)
  Have: (0 <= y_1) /\ (y_1 <= 10).
  (* Invariant *)
  Have: y_1 <= 20.
  (* Invariant *)
  Have: (-1) <= y_1.
  (* Invariant *)
  Have: y_1 <= x_12.
  (* Invariant *)
  Have: y_1 <= x_11.
  (* Invariant *)
  Have: (y_1 = x) \/ ((10 + y_1) = x).
  (* Invariant *)
  Have: x <= y_1.
  (* Invariant *)
  Have: x <= 20.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: x <= x_7.
  (* Invariant *)
  Have: x <= x_6.
  (* Invariant *)
  Have: x_9 = x_3.
  (* Invariant *)
  Have: y <= 20.
  (* Invariant *)
  Have: y <= (10 + (10 * y_1)).
  (* Invariant *)
  Have: y <= x_12.
  (* Invariant *)
  Have: y <= x_11.
  (* Invariant *)
  Have: x_4 = x_9.
  (* Invariant *)
  Have: (y = x_1) \/ (x_8 = x_1).
  (* Invariant *)
  Have: x_1 <= y.
  (* Invariant *)
  Have: x_1 <= 20.
  (* Invariant *)
  Have: x_1 <= (10 + (10 * x)).
  (* Invariant *)
  Have: x_1 <= x_7.
  (* Invariant *)
  Have: x_1 <= x_6.
  (* Invariant *)
  Have: x_4 = x_2.
  (* Invariant *)
  Have: x_2 = x_3.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: y <= 10.
Prover Z3 4.8.12 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 9):
Let x_2 = x_1 % 10.
Let x_3 = x % 10.
Let x_4 = y % 10.
Let x_5 = 10 * (x / 10).
Let x_6 = 20 + x_5.
Let x_7 = 10 + x_5.
Let x_8 = 10 + y.
Let x_9 = y_1 % 10.
Let x_10 = 10 * (y_1 / 10).
Let x_11 = 20 + x_10.
Let x_12 = 10 + x_10.
Let x_13 = 10 * y_1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y_1) /\ is_sint32(y) /\ is_sint32(x_8).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 10).
  (* Pre-condition *)
  Have: (0 <= y_1) /\ (y_1 <= 10).
  (* Invariant *)
  Have: y_1 <= 20.
  (* Invariant *)
  Have: (-1) <= y_1.
  (* Invariant *)
  Have: y_1 <= x_12.
  (* Invariant *)
  Have: y_1 <= x_11.
  (* Invariant *)
  Have: (y_1 = x) \/ ((10 + y_1) = x).
  (* Invariant *)
  Have: x <= y_1.
  (* Invariant *)
  Have: x <= 20.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: x <= x_7.
  (* Invariant *)
  Have: x <= x_6.
  (* Invariant *)
  Have: x_9 = x_3.
  (* Invariant *)
  Have: y <= 20.
  (* Invariant *)
  Have: y <= (10 + x_13).
  (* Invariant *)
  Have: y <= x_12.
  (* Invariant *)
  Have: y <= x_11.
  (* Invariant *)
  Have: x_4 = x_9.
  (* Invariant *)
  Have: (y = x_1) \/ (x_8 = x_1).
  (* Invariant *)
  Have: x_1 <= y.
  (* Invariant *)
  Have: x_1 <= 20.
  (* Invariant *)
  Have: x_1 <= (10 + (10 * x)).
  (* Invariant *)
  Have: x_1 <= x_7.
  (* Invariant *)
  Have: x_1 <= x_6.
  (* Invariant *)
  Have: x_4 = x_2.
  (* Invariant *)
  Have: x_2 = x_3.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: y <= 10.
}
Prove: y <= x_13.
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 10):
Let x_2 = 10 * y_1.
Let x_3 = x_1 % 10.
Let x_4 = x % 10.
Let x_5 = y % 10.
Let x_6 = 10 * (x / 10).
Let x_7 = 20 + x_6.
Let x_8 = 10 + x_6.
Let x_9 = 10 + y.
Let x_10 = y_1 % 10.
Let x_11 = 10 * (y_1 / 10).
Let x_12 = 20 + x_11.
Let x_13 = 10 + x_11.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y_1) /\ is_sint32(y) /\ is_sint32(x_9).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 10).
  (* Pre-condition *)
  Have: (0 <= y_1) /\ (y_1 <= 10).
  (* Invariant *)
  Have: y_1 <= 20.
  (* Invariant *)
  Have: (-1) <= y_1.
  (* Invariant *)
  Have: y_1 <= x_13.
  (* Invariant *)
  Have: y_1 <= x_12.
  (* Invariant *)
  Have: (y_1 = x) \/ ((10 + y_1) = x).
  (* Invariant *)
  Have: x <= y_1.
  (* Invariant *)
  Have: x <= 20.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: x <= x_8.
  (* Invariant *)
  Have: x <= x_7.
  (* Invariant *)
  Have: x_10 = x_4.
  (* Invariant *)
  Have: y <= 20.
  (* Invariant *)
  Have: y <= (10 + x_2).
  (* Invariant *)
  Have: y <= x_13.
  (* Invariant *)
  Have: y <= x_12.
  (* Invariant *)
  Have: x_5 = x_10.
  (* Invariant *)
  Have: (y = x_1) \/ (x_9 = x_1).
  (* Invariant *)
  Have: x_1 <= y.
  (* Invariant *)
  Have: x_1 <= 20.
  (* Invariant *)
  Have: x_1 <= (10 + (10 * x)).
  (* Invariant *)
  Have: x_1 <= x_8.
  (* Invariant *)
  Have: x_1 <= x_7.
  (* Invariant *)
  Have: x_5 = x_3.
  (* Invariant *)
  Have: x_3 = x_4.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: y <= 10.
  (* Invariant *)
  Have: y <= x_2.
}
Prove: y <= x_11.
Prover Z3 4.8.12 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 10):
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 10).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 10).
  (* Invariant *)
  Have: y <= 20.
  (* Invariant *)
  Have: (-1) <= y.
}
Prove: y <= (10 + (10 * (y / 10))).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:0.85ms) (6ms) (66)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 11):
Let x_1 = 10 * (y / 10).
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 10).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 10).
  (* Invariant *)
  Have: y <= 20.
  (* Invariant *)
  Have: (-1) <= y.
  (* Invariant *)
  Have: y <= (10 + x_1).
}
Prove: y <= (20 + x_1).
Prover Z3 4.8.12 returns Valid (Qed:2ms) (10ms) (30159)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (4ms) (14)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 12):
Let x_2 = 10 * (y_1 / 10).
Let x_3 = 10 * y_1.
Let x_4 = x_1 % 10.
Let x_5 = x % 10.
Let x_6 = y % 10.
Let x_7 = 10 * (x / 10).
Let x_8 = 20 + x_7.
Let x_9 = 10 + x_7.
Let x_10 = 10 + y.
Let x_11 = y_1 % 10.
Let x_12 = 20 + x_2.
Let x_13 = 10 + x_2.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y_1) /\ is_sint32(y) /\ is_sint32(x_10).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 10).
  (* Pre-condition *)
  Have: (0 <= y_1) /\ (y_1 <= 10).
  (* Invariant *)
  Have: y_1 <= 20.
  (* Invariant *)
  Have: (-1) <= y_1.
  (* Invariant *)
  Have: y_1 <= x_13.
  (* Invariant *)
  Have: y_1 <= x_12.
  (* Invariant *)
  Have: (y_1 = x) \/ ((10 + y_1) = x).
  (* Invariant *)
  Have: x <= y_1.
  (* Invariant *)
  Have: x <= 20.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: x <= x_9.
  (* Invariant *)
  Have: x <= x_8.
  (* Invariant *)
  Have: x_11 = x_5.
  (* Invariant *)
  Have: y <= 20.
  (* Invariant *)
  Have: y <= (10 + x_3).
  (* Invariant *)
  Have: y <= x_13.
  (* Invariant *)
  Have: y <= x_12.
  (* Invariant *)
  Have: x_6 = x_11.
  (* Invariant *)
  Have: (y = x_1) \/ (x_10 = x_1).
  (* Invariant *)
  Have: x_1 <= y.
  (* Invariant *)
  Have: x_1 <= 20.
  (* Invariant *)
  Have: x_1 <= (10 + (10 * x)).
  (* Invariant *)
  Have: x_1 <= x_9.
  (* Invariant *)
  Have: x_1 <= x_8.
  (* Invariant *)
  Have: x_6 = x_4.
  (* Invariant *)
  Have: x_4 = x_5.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: y <= 10.
  (* Invariant *)
  Have: y <= x_3.
  (* Invariant *)
  Have: y <= x_2.
}
Prove: (x_10 % 10) = x_11.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (43889)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 14):
Let x_1 = 10 * (y / 10).
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 10).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 10).
  (* Invariant *)
  Have: y <= 20.
  (* Invariant *)
  Have: (-1) <= y.
  (* Invariant *)
  Have: y <= (10 + x_1).
  (* Invariant *)
  Have: y <= (20 + x_1).
}
Prove: (y = x) \/ ((10 + y) = x).
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 15):
Let x_1 = 10 * (y / 10).
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 10).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 10).
  (* Invariant *)
  Have: y <= 20.
  (* Invariant *)
  Have: (-1) <= y.
  (* Invariant *)
  Have: y <= (10 + x_1).
  (* Invariant *)
  Have: y <= (20 + x_1).
  (* Invariant *)
  Have: (y = x) \/ ((10 + y) = x).
}
Prove: x <= y.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 16):
Let x_2 = 10 + y_1.
Let x_3 = y % 10.
Let x_4 = 10 * (y / 10).
Let x_5 = 10 * y.
Let x_6 = x % 10.
Let x_7 = x_1 % 10.
Let x_8 = y_1 % 10.
Let x_9 = 10 * (x_1 / 10).
Let x_10 = 20 + x_9.
Let x_11 = 10 + x_9.
Let x_12 = 20 + x_4.
Let x_13 = 10 + x_4.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(y_1) /\ is_sint32(10 + x) /\ is_sint32(x_2).
  (* Pre-condition *)
  Have: (0 <= x_1) /\ (x_1 <= 10).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 10).
  (* Invariant *)
  Have: y <= 20.
  (* Invariant *)
  Have: (-1) <= y.
  (* Invariant *)
  Have: y <= x_13.
  (* Invariant *)
  Have: y <= x_12.
  (* Invariant *)
  Have: (y = x_1) \/ ((10 + y) = x_1).
  (* Invariant *)
  Have: x_1 <= y.
  (* Invariant *)
  Have: x_1 <= 20.
  (* Invariant *)
  Have: (-1) <= x_1.
  (* Invariant *)
  Have: x_1 <= x_11.
  (* Invariant *)
  Have: x_1 <= x_10.
  (* Invariant *)
  Have: x_3 = x_7.
  (* Invariant *)
  Have: y_1 <= 20.
  (* Invariant *)
  Have: y_1 <= (10 + x_5).
  (* Invariant *)
  Have: y_1 <= x_13.
  (* Invariant *)
  Have: y_1 <= x_12.
  (* Invariant *)
  Have: x_8 = x_3.
  (* Invariant *)
  Have: (y_1 = x) \/ (x_2 = x).
  (* Invariant *)
  Have: x <= y_1.
  (* Invariant *)
  Have: x <= 20.
  (* Invariant *)
  Have: x <= (10 + (10 * x_1)).
  (* Invariant *)
  Have: x <= x_11.
  (* Invariant *)
  Have: x <= x_10.
  (* Invariant *)
  Have: x_8 = x_6.
  (* Invariant *)
  Have: x_6 = x_7.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: y_1 <= 10.
  (* Invariant *)
  Have: y_1 <= x_5.
  (* Invariant *)
  Have: y_1 <= x_4.
  (* Invariant *)
  Have: (x_2 % 10) = x_3.
}
Prove: x <= 10.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (35787)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (6ms) (50)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 17):
Let x_2 = 10 + y_1.
Let x_3 = y % 10.
Let x_4 = 10 * (y / 10).
Let x_5 = 10 * y.
Let x_6 = x % 10.
Let x_7 = x_1 % 10.
Let x_8 = y_1 % 10.
Let x_9 = 10 * (x_1 / 10).
Let x_10 = 20 + x_9.
Let x_11 = 10 + x_9.
Let x_12 = 10 * x_1.
Let x_13 = 20 + x_4.
Let x_14 = 10 + x_4.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(y_1) /\ is_sint32(10 + x) /\ is_sint32(x_2).
  (* Pre-condition *)
  Have: (0 <= x_1) /\ (x_1 <= 10).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 10).
  (* Invariant *)
  Have: y <= 20.
  (* Invariant *)
  Have: (-1) <= y.
  (* Invariant *)
  Have: y <= x_14.
  (* Invariant *)
  Have: y <= x_13.
  (* Invariant *)
  Have: (y = x_1) \/ ((10 + y) = x_1).
  (* Invariant *)
  Have: x_1 <= y.
  (* Invariant *)
  Have: x_1 <= 20.
  (* Invariant *)
  Have: (-1) <= x_1.
  (* Invariant *)
  Have: x_1 <= x_11.
  (* Invariant *)
  Have: x_1 <= x_10.
  (* Invariant *)
  Have: x_3 = x_7.
  (* Invariant *)
  Have: y_1 <= 20.
  (* Invariant *)
  Have: y_1 <= (10 + x_5).
  (* Invariant *)
  Have: y_1 <= x_14.
  (* Invariant *)
  Have: y_1 <= x_13.
  (* Invariant *)
  Have: x_8 = x_3.
  (* Invariant *)
  Have: (y_1 = x) \/ (x_2 = x).
  (* Invariant *)
  Have: x <= y_1.
  (* Invariant *)
  Have: x <= 20.
  (* Invariant *)
  Have: x <= (10 + x_12).
  (* Invariant *)
  Have: x <= x_11.
  (* Invariant *)
  Have: x <= x_10.
  (* Invariant *)
  Have: x_8 = x_6.
  (* Invariant *)
  Have: x_6 = x_7.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: y_1 <= 10.
  (* Invariant *)
  Have: y_1 <= x_5.
  (* Invariant *)
  Have: y_1 <= x_4.
  (* Invariant *)
  Have: (x_2 % 10) = x_3.
  (* Invariant *)
  Have: x <= 10.
}
Prove: x <= x_12.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (40871)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (10ms) (141)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 18):
Let x_2 = 10 * x_1.
Let x_3 = 10 + y_1.
Let x_4 = y % 10.
Let x_5 = 10 * (y / 10).
Let x_6 = 10 * y.
Let x_7 = x % 10.
Let x_8 = x_1 % 10.
Let x_9 = y_1 % 10.
Let x_10 = 10 * (x_1 / 10).
Let x_11 = 20 + x_10.
Let x_12 = 10 + x_10.
Let x_13 = 20 + x_5.
Let x_14 = 10 + x_5.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(y_1) /\ is_sint32(10 + x) /\ is_sint32(x_3).
  (* Pre-condition *)
  Have: (0 <= x_1) /\ (x_1 <= 10).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 10).
  (* Invariant *)
  Have: y <= 20.
  (* Invariant *)
  Have: (-1) <= y.
  (* Invariant *)
  Have: y <= x_14.
  (* Invariant *)
  Have: y <= x_13.
  (* Invariant *)
  Have: (y = x_1) \/ ((10 + y) = x_1).
  (* Invariant *)
  Have: x_1 <= y.
  (* Invariant *)
  Have: x_1 <= 20.
  (* Invariant *)
  Have: (-1) <= x_1.
  (* Invariant *)
  Have: x_1 <= x_12.
  (* Invariant *)
  Have: x_1 <= x_11.
  (* Invariant *)
  Have: x_4 = x_8.
  (* Invariant *)
  Have: y_1 <= 20.
  (* Invariant *)
  Have: y_1 <= (10 + x_6).
  (* Invariant *)
  Have: y_1 <= x_14.
  (* Invariant *)
  Have: y_1 <= x_13.
  (* Invariant *)
  Have: x_9 = x_4.
  (* Invariant *)
  Have: (y_1 = x) \/ (x_3 = x).
  (* Invariant *)
  Have: x <= y_1.
  (* Invariant *)
  Have: x <= 20.
  (* Invariant *)
  Have: x <= (10 + x_2).
  (* Invariant *)
  Have: x <= x_12.
  (* Invariant *)
  Have: x <= x_11.
  (* Invariant *)
  Have: x_9 = x_7.
  (* Invariant *)
  Have: x_7 = x_8.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: y_1 <= 10.
  (* Invariant *)
  Have: y_1 <= x_6.
  (* Invariant *)
  Have: y_1 <= x_5.
  (* Invariant *)
  Have: (x_3 % 10) = x_4.
  (* Invariant *)
  Have: x <= 10.
  (* Invariant *)
  Have: x <= x_2.
}
Prove: x <= x_10.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (42141)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (12ms) (182)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 18):
Let x_1 = 10 * (y / 10).
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 10).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 10).
  (* Invariant *)
  Have: y <= 20.
  (* Invariant *)
  Have: (-1) <= y.
  (* Invariant *)
  Have: y <= (10 + x_1).
  (* Invariant *)
  Have: y <= (20 + x_1).
  (* Invariant *)
  Have: (y = x) \/ ((10 + y) = x).
  (* Invariant *)
  Have: x <= y.
  (* Invariant *)
  Have: x <= 20.
  (* Invariant *)
  Have: (-1) <= x.
}
Prove: x <= (10 + (10 * (x / 10))).
Prover Z3 4.8.12 returns Valid (Qed:2ms) (20ms) (31680)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (9ms) (45)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 19):
Let x_1 = 10 * (x / 10).
Let x_2 = 10 * (y / 10).
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 10).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 10).
  (* Invariant *)
  Have: y <= 20.
  (* Invariant *)
  Have: (-1) <= y.
  (* Invariant *)
  Have: y <= (10 + x_2).
  (* Invariant *)
  Have: y <= (20 + x_2).
  (* Invariant *)
  Have: (y = x) \/ ((10 + y) = x).
  (* Invariant *)
  Have: x <= y.
  (* Invariant *)
  Have: x <= 20.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: x <= (10 + x_1).
}
Prove: x <= (20 + x_1).
Prover Z3 4.8.12 returns Valid (Qed:2ms) (10ms) (31169)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (3ms) (19)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 20):
Let x_2 = 10 * (x_1 / 10).
Let x_3 = 10 * x_1.
Let x_4 = 10 + y.
Let x_5 = x_4 % 10.
Let x_6 = y_1 % 10.
Let x_7 = 10 * (y_1 / 10).
Let x_8 = 10 * y_1.
Let x_9 = x % 10.
Let x_10 = x_1 % 10.
Let x_11 = y % 10.
Let x_12 = 20 + x_2.
Let x_13 = 10 + x_2.
Let x_14 = 20 + x_7.
Let x_15 = 10 + x_7.
Let x_16 = 10 + x.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x) /\
      is_sint32(y_1) /\ is_sint32(y) /\ is_sint32(x_16) /\ is_sint32(x_4).
  (* Pre-condition *)
  Have: (0 <= x_1) /\ (x_1 <= 10).
  (* Pre-condition *)
  Have: (0 <= y_1) /\ (y_1 <= 10).
  (* Invariant *)
  Have: y_1 <= 20.
  (* Invariant *)
  Have: (-1) <= y_1.
  (* Invariant *)
  Have: y_1 <= x_15.
  (* Invariant *)
  Have: y_1 <= x_14.
  (* Invariant *)
  Have: (y_1 = x_1) \/ ((10 + y_1) = x_1).
  (* Invariant *)
  Have: x_1 <= y_1.
  (* Invariant *)
  Have: x_1 <= 20.
  (* Invariant *)
  Have: (-1) <= x_1.
  (* Invariant *)
  Have: x_1 <= x_13.
  (* Invariant *)
  Have: x_1 <= x_12.
  (* Invariant *)
  Have: x_6 = x_10.
  (* Invariant *)
  Have: y <= 20.
  (* Invariant *)
  Have: y <= (10 + x_8).
  (* Invariant *)
  Have: y <= x_15.
  (* Invariant *)
  Have: y <= x_14.
  (* Invariant *)
  Have: x_11 = x_6.
  (* Invariant *)
  Have: (y = x) \/ (x_4 = x).
  (* Invariant *)
  Have: x <= y.
  (* Invariant *)
  Have: x <= 20.
  (* Invariant *)
  Have: x <= (10 + x_3).
  (* Invariant *)
  Have: x <= x_13.
  (* Invariant *)
  Have: x <= x_12.
  (* Invariant *)
  Have: x_11 = x_9.
  (* Invariant *)
  Have: x_9 = x_10.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: y <= 10.
  (* Invariant *)
  Have: y <= x_8.
  (* Invariant *)
  Have: y <= x_7.
  (* Invariant *)
  Have: x_5 = x_6.
  (* Invariant *)
  Have: x <= 10.
  (* Invariant *)
  Have: x <= x_3.
  (* Invariant *)
  Have: x <= x_2.
}
Prove: x_5 = (x_16 % 10).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (44450)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (9ms) (134)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 20):
Let x_1 = 10 * (x / 10).
Let x_2 = 10 * (y / 10).
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 10).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 10).
  (* Invariant *)
  Have: y <= 20.
  (* Invariant *)
  Have: (-1) <= y.
  (* Invariant *)
  Have: y <= (10 + x_2).
  (* Invariant *)
  Have: y <= (20 + x_2).
  (* Invariant *)
  Have: (y = x) \/ ((10 + y) = x).
  (* Invariant *)
  Have: x <= y.
  (* Invariant *)
  Have: x <= 20.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: x <= (10 + x_1).
  (* Invariant *)
  Have: x <= (20 + x_1).
}
Prove: (y % 10) = (x % 10).
Prover Z3 4.8.12 returns Valid (Qed:1ms) (20ms) (33644)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (8ms) (44)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 21):
Let x_2 = 10 + y_1.
Let x_3 = x_2 % 10.
Let x_4 = 10 + x.
Let x_5 = x_4 % 10.
Let x_6 = 10 * (x_1 / 10).
Let x_7 = 10 * x_1.
Let x_8 = y % 10.
Let x_9 = 10 * (y / 10).
Let x_10 = 10 * y.
Let x_11 = x % 10.
Let x_12 = x_1 % 10.
Let x_13 = y_1 % 10.
Let x_14 = 20 + x_6.
Let x_15 = 10 + x_6.
Let x_16 = 20 + x_9.
Let x_17 = 10 + x_9.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(y_1) /\ is_sint32(x_4) /\ is_sint32(x_2).
  (* Pre-condition *)
  Have: (0 <= x_1) /\ (x_1 <= 10).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 10).
  (* Invariant *)
  Have: y <= 20.
  (* Invariant *)
  Have: (-1) <= y.
  (* Invariant *)
  Have: y <= x_17.
  (* Invariant *)
  Have: y <= x_16.
  (* Invariant *)
  Have: (y = x_1) \/ ((10 + y) = x_1).
  (* Invariant *)
  Have: x_1 <= y.
  (* Invariant *)
  Have: x_1 <= 20.
  (* Invariant *)
  Have: (-1) <= x_1.
  (* Invariant *)
  Have: x_1 <= x_15.
  (* Invariant *)
  Have: x_1 <= x_14.
  (* Invariant *)
  Have: x_8 = x_12.
  (* Invariant *)
  Have: y_1 <= 20.
  (* Invariant *)
  Have: y_1 <= (10 + x_10).
  (* Invariant *)
  Have: y_1 <= x_17.
  (* Invariant *)
  Have: y_1 <= x_16.
  (* Invariant *)
  Have: x_13 = x_8.
  (* Invariant *)
  Have: (y_1 = x) \/ (x_2 = x).
  (* Invariant *)
  Have: x <= y_1.
  (* Invariant *)
  Have: x <= 20.
  (* Invariant *)
  Have: x <= (10 + x_7).
  (* Invariant *)
  Have: x <= x_15.
  (* Invariant *)
  Have: x <= x_14.
  (* Invariant *)
  Have: x_13 = x_11.
  (* Invariant *)
  Have: x_11 = x_12.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: y_1 <= 10.
  (* Invariant *)
  Have: y_1 <= x_10.
  (* Invariant *)
  Have: y_1 <= x_9.
  (* Invariant *)
  Have: x_3 = x_8.
  (* Invariant *)
  Have: x <= 10.
  (* Invariant *)
  Have: x <= x_7.
  (* Invariant *)
  Have: x <= x_6.
  (* Invariant *)
  Have: x_3 = x_5.
}
Prove: x_5 = x_12.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (42563)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (4ms) (52)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0005/11_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0005/11_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.96ms)

------------------------------------------------------------

Goal Loop assigns (file out/11_0005/11_merged.c, line 25) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/11_0005/11_merged.c, line 25) (2/2):
Call Result at line 28
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/11_0005/11_merged.c:5: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/11_0005/11_merged.c:28: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/125_0001/125_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 23 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_8_established (Qed 0.62ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_8_preserved (Qed 3ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_9_established (Qed 0.99ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_11_preserved (Qed 3ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_11_established (Qed 1ms) (Z3)
[wp] Proved goals:   18 / 23
  Qed:              16
  Alt-Ergo 2.5.4:    2 (5ms-5ms)
  Timeout:           5
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/125_0001/125_merged.c, line 6):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/125_0001/125_merged.c, line 6):
Prove: true.
Prover Qed returns Valid (0.50ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/125_0001/125_merged.c, line 7):
Assume {
  Type: is_sint32(i) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(x - 1) /\
      is_sint32(y - 1) /\ is_sint32(i + y - x).
  (* Invariant *)
  Have: x <= (i + y).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: ((i = 0) -> ((i + (2 * y)) = (2 * x))).
  (* Invariant *)
  Have: x <= i.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: x != 0.
}
Prove: x <= (1 + i).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (31382)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (31)

------------------------------------------------------------

Goal Establishment of Invariant (file out/125_0001/125_merged.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/125_0001/125_merged.c, line 8):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/125_0001/125_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/125_0001/125_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/125_0001/125_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/125_0001/125_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/125_0001/125_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/125_0001/125_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/125_0001/125_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/125_0001/125_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/125_0001/125_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/125_0001/125_merged.c, line 13):
Let x_2 = j + x_1.
Let x_3 = -x.
Assume {
  Type: is_sint32(j) /\ is_sint32(x_1) /\ is_sint32(x) /\
      is_sint32(x_1 - 1) /\ is_sint32(j + x_1 - x) /\
      is_sint32(j + x_1 - 1 - x).
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: ((x = 0) -> ((2 * j) = x)).
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: x <= x_2.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: x_1 != 0.
  (* Invariant *)
  Have: x_1 <= (1 + x).
}
Prove: x < x_2.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/125_0001/125_merged.c, line 13):
Assume { Type: is_sint32(j). }
Prove: 0 <= j.
Prover Z3 4.8.12 returns Timeout (Qed:0.62ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.62ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/125_0001/125_merged.c, line 14):
Let x_1 = x + y.
Let x_2 = -j.
Assume {
  Type: is_sint32(j) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(y - 1) /\
      is_sint32(x + y - j) /\ is_sint32(x + y - 1 - j).
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: ((x = 0) -> ((2 * j) = x)).
  (* Invariant *)
  Have: y <= j.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: j <= x_1.
  (* Then *)
  Have: x_1 != j.
  (* Invariant *)
  Have: y <= (1 + j).
  (* Invariant *)
  Have: 0 < y.
}
Prove: j < x_1.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (31585)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (5ms) (19)

------------------------------------------------------------

Goal Establishment of Invariant (file out/125_0001/125_merged.c, line 14):
Assume { Type: is_sint32(i) /\ is_sint32(j). (* Invariant *) Have: 0 <= j. }
Prove: 0 <= i.
Prover Z3 4.8.12 returns Timeout (Qed:0.99ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.99ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/125_0001/125_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/125_0001/125_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/125_0001/125_merged.c, line 16):
Let x = 1 + j.
Assume {
  Type: is_sint32(j) /\ is_sint32(y) /\ is_sint32(y - 1) /\
      is_sint32(1 + j - y).
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: ((x = y) -> ((j + y) = 1)).
  (* Invariant *)
  Have: y <= j.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 < y.
}
Prove: y = 1.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/125_0001/125_merged.c, line 16):
Assume { Type: is_sint32(j). (* Invariant *) Have: 0 <= j. }
Prove: j = 0.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/125_0001/125_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/125_0001/125_merged.c:1: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

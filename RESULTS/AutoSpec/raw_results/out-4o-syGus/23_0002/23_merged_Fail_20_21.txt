[kernel] Parsing out/23_0002/23_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 21 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_5_preserved (Qed 3ms) (Z3)
[wp] Proved goals:   20 / 21
  Qed:              14
  Alt-Ergo 2.5.4:    6 (5ms-21ms)
  Timeout:           1
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/23_0002/23_merged.c, line 8):
Let x = 2 * i.
Let x_1 = (i - 1) / 2.
Let x_2 = -i.
Assume {
  Type: is_sint32(i) /\ is_sint32(2 + i) /\ is_sint32(20 + x_1 - i) /\
      is_sint32(21 + x_1 - i).
  (* Invariant *)
  Have: x_1 < i.
  (* Invariant *)
  Have: x <= (24 + x_1).
  (* Invariant *)
  Have: x <= (23 + x_1).
  (* Invariant *)
  Have: x <= (22 + x_1).
  (* Invariant *)
  Have: x <= (31 + x_1).
  (* Invariant *)
  Have: (i % 2) = 1.
  (* Invariant *)
  Have: i <= (8 + x_1).
  (* Invariant *)
  Have: i <= (9 + x_1).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: x <= (21 + x_1).
}
Prove: ((1 + i) / 2) = (1 + x_1).
Prover Z3 4.8.12 returns Valid (Qed:3ms) (20ms) (34871)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (16ms) (226)

------------------------------------------------------------

Goal Establishment of Invariant (file out/23_0002/23_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/23_0002/23_merged.c, line 9):
Let x = 2 * i.
Let x_1 = 1 + i.
Let x_2 = x_1 / 2.
Let x_3 = -i.
Assume {
  Type: is_sint32(i) /\ is_sint32(2 + i) /\ is_sint32(19 + x_2 - i) /\
      is_sint32(20 + x_2 - i).
  (* Invariant *)
  Have: x_2 = (1 + ((i - 1) / 2)).
  (* Invariant *)
  Have: x_2 <= i.
  (* Invariant *)
  Have: x <= (23 + x_2).
  (* Invariant *)
  Have: x <= (22 + x_2).
  (* Invariant *)
  Have: x <= (21 + x_2).
  (* Invariant *)
  Have: x <= (30 + x_2).
  (* Invariant *)
  Have: (i % 2) = 1.
  (* Invariant *)
  Have: i <= (7 + x_2).
  (* Invariant *)
  Have: i <= (8 + x_2).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: x <= (20 + x_2).
}
Prove: x_2 <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (20ms) (31663)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (5ms) (23)

------------------------------------------------------------

Goal Establishment of Invariant (file out/23_0002/23_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/23_0002/23_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/23_0002/23_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/23_0002/23_merged.c, line 11):
Let x = 1 + i.
Let x_1 = x / 2.
Let x_2 = 2 * i.
Let x_3 = -i.
Assume {
  Type: is_sint32(i) /\ is_sint32(2 + i) /\ is_sint32(19 + x_1 - i) /\
      is_sint32(20 + x_1 - i).
  (* Invariant *)
  Have: x_1 = (1 + ((i - 1) / 2)).
  (* Invariant *)
  Have: x_1 <= i.
  (* Invariant *)
  Have: x_2 <= (23 + x_1).
  (* Invariant *)
  Have: x_2 <= (22 + x_1).
  (* Invariant *)
  Have: x_2 <= (21 + x_1).
  (* Invariant *)
  Have: x_2 <= (30 + x_1).
  (* Invariant *)
  Have: (i % 2) = 1.
  (* Invariant *)
  Have: i <= (7 + x_1).
  (* Invariant *)
  Have: i <= (8 + x_1).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: x_2 <= (20 + x_1).
  (* Invariant *)
  Have: x_1 <= x.
}
Prove: x_2 <= (19 + x_1).
Prover Z3 4.8.12 returns Valid (Qed:3ms) (20ms) (35264)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (15ms) (198)

------------------------------------------------------------

Goal Establishment of Invariant (file out/23_0002/23_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/23_0002/23_merged.c, line 12):
Let x = 2 * i.
Let x_1 = 1 + i.
Let x_2 = x_1 / 2.
Let x_3 = -i.
Assume {
  Type: is_sint32(i) /\ is_sint32(2 + i) /\ is_sint32(19 + x_2 - i) /\
      is_sint32(20 + x_2 - i).
  (* Invariant *)
  Have: x_2 = (1 + ((i - 1) / 2)).
  (* Invariant *)
  Have: x_2 <= i.
  (* Invariant *)
  Have: x <= (23 + x_2).
  (* Invariant *)
  Have: x <= (22 + x_2).
  (* Invariant *)
  Have: x <= (21 + x_2).
  (* Invariant *)
  Have: x <= (30 + x_2).
  (* Invariant *)
  Have: (i % 2) = 1.
  (* Invariant *)
  Have: i <= (7 + x_2).
  (* Invariant *)
  Have: i <= (8 + x_2).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: x <= (20 + x_2).
  (* Invariant *)
  Have: x_2 <= x_1.
  (* Invariant *)
  Have: x <= (19 + x_2).
}
Prove: x <= (18 + x_2).
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/23_0002/23_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/23_0002/23_merged.c, line 13):
Let x = 2 * i.
Let x_1 = 1 + i.
Let x_2 = x_1 / 2.
Let x_3 = -i.
Assume {
  Type: is_sint32(i) /\ is_sint32(2 + i) /\ is_sint32(19 + x_2 - i) /\
      is_sint32(20 + x_2 - i).
  (* Invariant *)
  Have: x_2 = (1 + ((i - 1) / 2)).
  (* Invariant *)
  Have: x_2 <= i.
  (* Invariant *)
  Have: x <= (23 + x_2).
  (* Invariant *)
  Have: x <= (22 + x_2).
  (* Invariant *)
  Have: x <= (21 + x_2).
  (* Invariant *)
  Have: x <= (30 + x_2).
  (* Invariant *)
  Have: (i % 2) = 1.
  (* Invariant *)
  Have: i <= (7 + x_2).
  (* Invariant *)
  Have: i <= (8 + x_2).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: x <= (20 + x_2).
  (* Invariant *)
  Have: x_2 <= x_1.
  (* Invariant *)
  Have: x <= (19 + x_2).
  (* Invariant *)
  Have: x <= (18 + x_2).
}
Prove: x <= (27 + x_2).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (32047)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (23)

------------------------------------------------------------

Goal Establishment of Invariant (file out/23_0002/23_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/23_0002/23_merged.c, line 14):
Let x = 2 * i.
Let x_1 = 1 + i.
Let x_2 = x_1 / 2.
Let x_3 = 2 + i.
Let x_4 = -i.
Assume {
  Type: is_sint32(i) /\ is_sint32(x_3) /\ is_sint32(19 + x_2 - i) /\
      is_sint32(20 + x_2 - i).
  (* Invariant *)
  Have: x_2 = (1 + ((i - 1) / 2)).
  (* Invariant *)
  Have: x_2 <= i.
  (* Invariant *)
  Have: x <= (23 + x_2).
  (* Invariant *)
  Have: x <= (22 + x_2).
  (* Invariant *)
  Have: x <= (21 + x_2).
  (* Invariant *)
  Have: x <= (30 + x_2).
  (* Invariant *)
  Have: (i % 2) = 1.
  (* Invariant *)
  Have: i <= (7 + x_2).
  (* Invariant *)
  Have: i <= (8 + x_2).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: x <= (20 + x_2).
  (* Invariant *)
  Have: x_2 <= x_1.
  (* Invariant *)
  Have: x <= (19 + x_2).
  (* Invariant *)
  Have: x <= (18 + x_2).
  (* Invariant *)
  Have: x <= (27 + x_2).
}
Prove: (x_3 % 2) = 1.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (36816)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (21ms) (311)

------------------------------------------------------------

Goal Establishment of Invariant (file out/23_0002/23_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/23_0002/23_merged.c, line 15):
Let x = 2 + i.
Let x_1 = 2 * i.
Let x_2 = 1 + i.
Let x_3 = x_2 / 2.
Let x_4 = -i.
Assume {
  Type: is_sint32(i) /\ is_sint32(x) /\ is_sint32(19 + x_3 - i) /\
      is_sint32(20 + x_3 - i).
  (* Invariant *)
  Have: x_3 = (1 + ((i - 1) / 2)).
  (* Invariant *)
  Have: x_3 <= i.
  (* Invariant *)
  Have: x_1 <= (23 + x_3).
  (* Invariant *)
  Have: x_1 <= (22 + x_3).
  (* Invariant *)
  Have: x_1 <= (21 + x_3).
  (* Invariant *)
  Have: x_1 <= (30 + x_3).
  (* Invariant *)
  Have: (i % 2) = 1.
  (* Invariant *)
  Have: i <= (7 + x_3).
  (* Invariant *)
  Have: i <= (8 + x_3).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: x_1 <= (20 + x_3).
  (* Invariant *)
  Have: x_3 <= x_2.
  (* Invariant *)
  Have: x_1 <= (19 + x_3).
  (* Invariant *)
  Have: x_1 <= (18 + x_3).
  (* Invariant *)
  Have: x_1 <= (27 + x_3).
  (* Invariant *)
  Have: (x % 2) = 1.
}
Prove: i <= (6 + x_3).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (36086)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (18ms) (289)

------------------------------------------------------------

Goal Establishment of Invariant (file out/23_0002/23_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/23_0002/23_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/23_0002/23_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/23_0002/23_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/23_0002/23_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/23_0002/23_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/23_0002/23_merged.c:5: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

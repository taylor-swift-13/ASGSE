[kernel] Parsing out/130_0001/130_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 35 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_3_established (Qed 0.67ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_4_established (Qed 1ms) (Z3)
[wp] Proved goals:   33 / 35
  Qed:              29
  Alt-Ergo 2.5.4:    4 (5ms-6ms-10ms)
  Timeout:           2
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/130_0001/130_merged.c, line 9):
Assume {
  Type: is_sint32(x1_0) /\ is_sint32(x2_0) /\ is_sint32(x2_1) /\
      is_sint32(x3_0) /\ is_sint32(x3_1) /\ is_sint32(x1_0 - 1).
  (* Residual *)
  When: 0 < x3_0.
  (* Residual *)
  When: 0 < x2_0.
  (* Invariant *)
  Have: 0 < x3_1.
  (* Invariant *)
  Have: 0 < x2_1.
  (* Invariant *)
  Have: (x1_0 = 0) \/ (x1_0 = 1).
  (* Invariant *)
  Have: x1_0 <= 1.
  (* Invariant *)
  Have: x1_0 <= x3_0.
  (* Invariant *)
  Have: x1_0 <= x2_0.
  (* Invariant *)
  Have: 0 <= x1_0.
  (* Then *)
  Have: 0 < x1_0.
}
Prove: (x1_0 = 1) \/ (x1_0 = 2).
Prover Z3 4.8.12 returns Valid (Qed:11ms) (10ms) (31386)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (5ms) (38)

------------------------------------------------------------

Goal Establishment of Invariant (file out/130_0001/130_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/130_0001/130_merged.c, line 10):
Assume {
  Type: is_sint32(x1_0) /\ is_sint32(x2_0) /\ is_sint32(x2_1) /\
      is_sint32(x3_0) /\ is_sint32(x3_1) /\ is_sint32(x1_0 - 1).
  (* Residual *)
  When: 0 < x3_0.
  (* Residual *)
  When: 0 < x2_0.
  (* Invariant *)
  Have: 0 < x3_1.
  (* Invariant *)
  Have: 0 < x2_1.
  (* Invariant *)
  Have: (x1_0 = 0) \/ (x1_0 = 1).
  (* Invariant *)
  Have: x1_0 <= 1.
  (* Invariant *)
  Have: x1_0 <= x3_0.
  (* Invariant *)
  Have: x1_0 <= x2_0.
  (* Invariant *)
  Have: 0 <= x1_0.
  (* Then *)
  Have: 0 < x1_0.
  (* Invariant *)
  Have: (x1_0 = 1) \/ (x1_0 = 2).
}
Prove: x1_0 <= 2.
Prover Z3 4.8.12 returns Valid (Qed:12ms) (31552)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:12ms) (7ms) (38)

------------------------------------------------------------

Goal Establishment of Invariant (file out/130_0001/130_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/130_0001/130_merged.c, line 11):
Assume {
  Type: is_sint32(x1_0) /\ is_sint32(x2_0) /\ is_sint32(x2_1) /\
      is_sint32(x3_0) /\ is_sint32(x3_1).
  (* Residual *)
  When: x3_0 <= 0.
  (* Residual *)
  When: 0 < x2_0.
  (* Invariant *)
  Have: 0 < x3_1.
  (* Invariant *)
  Have: 0 < x2_1.
  (* Invariant *)
  Have: (x1_0 = 0) \/ (x1_0 = 1).
  (* Invariant *)
  Have: x1_0 <= 1.
  (* Invariant *)
  Have: x1_0 <= x3_0.
  (* Invariant *)
  Have: x1_0 <= x2_0.
  (* Invariant *)
  Have: 0 <= x3_0.
  (* Invariant *)
  Have: 0 <= x1_0.
  (* Then *)
  Have: 0 < x1_0.
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:13ms) (20ms) (31192)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (5ms) (20)

------------------------------------------------------------

Goal Establishment of Invariant (file out/130_0001/130_merged.c, line 11):
Assume { Type: is_sint32(x3_0). }
Prove: 0 < x3_0.
Prover Z3 4.8.12 returns Timeout (Qed:0.67ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.67ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/130_0001/130_merged.c, line 12):
Assume {
  Type: is_sint32(x1_0) /\ is_sint32(x1_1) /\ is_sint32(x1_2) /\
      is_sint32(x2_0) /\ is_sint32(x2_1) /\ is_sint32(x2_2) /\
      is_sint32(x2_3) /\ is_sint32(x3_0) /\ is_sint32(x3_1) /\
      is_sint32(x3_2) /\ is_sint32(x3_3) /\ is_sint32(x3_4).
  (* Invariant *)
  Have: 0 < x3_4.
  (* Invariant *)
  Have: 0 < x2_3.
  (* Invariant *)
  Have: (x1_2 = 0) \/ (x1_2 = 1).
  (* Invariant *)
  Have: x1_2 <= 1.
  (* Invariant *)
  Have: x1_2 <= x3_3.
  (* Invariant *)
  Have: x1_2 <= x2_2.
  (* Invariant *)
  Have: 0 <= x3_3.
  (* Invariant *)
  Have: 0 <= x2_2.
  (* Invariant *)
  Have: 0 <= x1_2.
  (* Then *)
  Have: 0 < x1_2.
  If 0 < x2_2
  Then {
    Have: (x1_2 = x1_3) /\ (x2_2 = x2_4) /\ (x3_3 = x3_2).
    If 0 < x3_2
    Then {
      Have: (x1_3 = x1_1) /\ (x2_4 = x2_1) /\ (x3_2 = x3_1).
      Have: (1 + x1_0) = x1_1.
      Have: (1 + x2_0) = x2_1.
      Have: (1 + x3_0) = x3_1.
    }
    Else { Have: (x1_3 = x1_0) /\ (x2_4 = x2_0) /\ (x3_2 = x3_0). }
  }
  Else { Have: (x1_2 = x1_0) /\ (x2_0 = 0) /\ (x3_3 = x3_0). }
  (* Invariant *)
  Have: (x1_0 = 0) \/ (x1_0 = 1).
  (* Invariant *)
  Have: x1_0 <= 1.
  (* Invariant *)
  Have: x1_0 <= x3_0.
}
Prove: x1_0 <= x2_0.
Prover Z3 4.8.12 returns Valid (Qed:20ms) (20ms) (36673)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:20ms) (10ms) (71)

------------------------------------------------------------

Goal Establishment of Invariant (file out/130_0001/130_merged.c, line 12):
Assume {
  Type: is_sint32(x2_0) /\ is_sint32(x3_0).
  (* Invariant *)
  Have: 0 < x3_0.
}
Prove: 0 < x2_0.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/130_0001/130_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/130_0001/130_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/130_0001/130_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/130_0001/130_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.96ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/130_0001/130_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/130_0001/130_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/130_0001/130_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/130_0001/130_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/130_0001/130_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/130_0001/130_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.92ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/130_0001/130_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (14ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/130_0001/130_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/130_0001/130_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (15ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/130_0001/130_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/130_0001/130_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (14ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/130_0001/130_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/130_0001/130_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/130_0001/130_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/130_0001/130_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/130_0001/130_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/130_0001/130_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/130_0001/130_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/130_0001/130_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/130_0001/130_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/130_0001/130_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/130_0001/130_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/130_0001/130_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/130_0001/130_merged.c:2: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/7_0001/7_merged.c (with preprocessing)
[kernel:typing:implicit-function-declaration] out/7_0001/7_merged.c:16: Warning: 
  Calling undeclared function unknown. Old style K&R code?
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/7_0001/7_merged.c:5: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 13 goals scheduled
[wp] Proved goals:   13 / 13
  Qed:              10
  Alt-Ergo 2.5.4:    3 (4ms-24ms-39ms)
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 8):
Let x_1 = x + y_1 - y.
Let x_2 = y_1 % 10.
Let x_3 = x + y_1.
Let x_4 = 10 + y.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\
      is_sint32(x_4) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: (y <= x_3) /\ (x_3 <= x_4).
  (* Pre-condition *)
  Have: (0 <= y_1) /\ (y_1 <= 10).
  (* Invariant *)
  Have: x_2 = (y % 10).
  (* Invariant *)
  Have: (x_1 % 10) = (x % 10).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: (x_4 % 10) = x_2.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (90ms) (222448)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (28ms) (497)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 9):
Let x_1 = 10 + y_1.
Let x_2 = y % 10.
Let x_3 = x + y - y_1.
Let x_4 = x_3 % 10.
Let x_5 = x + y.
Let x_6 = 10 + x.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\
      is_sint32(x_6) /\ is_sint32(x_1) /\ is_sint32(x_3).
  (* Pre-condition *)
  Have: (y_1 <= x_5) /\ (x_5 <= x_1).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 10).
  (* Invariant *)
  Have: (y_1 % 10) = x_2.
  (* Invariant *)
  Have: x_4 = (x % 10).
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x_1 % 10) = x_2.
}
Prove: x_4 = (x_6 % 10).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (39ms) (588)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Assertion (file out/7_0001/7_merged.c, line 22):
Let x = 20 + y_1 - y.
Assume {
  Type: is_sint32(y_1) /\ is_sint32(y) /\ is_sint32(x).
  (* Pre-condition *)
  Have: ((10 + y_1) <= y) /\ (y <= (20 + y_1)).
  (* Pre-condition *)
  Have: (0 <= y_1) /\ (y_1 <= 10).
  (* Invariant *)
  Have: (x % 10) = 0.
  (* Invariant *)
  Have: (y % 10) = (y_1 % 10).
  (* Invariant *)
  Have: 0 <= y.
}
Prove: y != 0.
Prover Z3 4.8.12 returns Valid (Qed:2ms) (10ms) (29959)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (4ms) (14)

------------------------------------------------------------

Goal Loop assigns (file out/7_0001/7_merged.c, line 13) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/7_0001/7_merged.c, line 13) (2/2):
Call Result at line 16
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/7_0001/7_merged.c:5: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/7_0001/7_merged.c:16: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/75_0006/75_merged.c (with preprocessing)
[kernel:typing:implicit-function-declaration] out/75_0006/75_merged.c:30: Warning: 
  Calling undeclared function unknown. Old style K&R code?
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/75_0006/75_merged.c:4: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 38 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_4_preserved (Qed 15ms) (Z3)
[wp] Proved goals:   37 / 38
  Qed:              32
  Alt-Ergo 2.5.4:    5 (4ms-6ms)
  Timeout:           1
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/75_0006/75_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (14ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/75_0006/75_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/75_0006/75_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (14ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/75_0006/75_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/75_0006/75_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (16ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/75_0006/75_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/75_0006/75_merged.c, line 12):
Let x = 36 * y.
Let x_1 = c + x.
Let x_2 = 1 + c.
Let x_3 = 1 + c + x.
Assume {
  Type: is_sint32(c) /\ is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\
      is_sint32(x_2) /\ is_sint32(x_1) /\ is_sint32(x_3).
  (* Residual *)
  When: c <= 35.
  (* Pre-condition *)
  Have: 127 <= y.
  (* Invariant *)
  Have: c <= 36.
  (* Invariant *)
  Have: (x_1 % 36) = c.
  (* Invariant *)
  Have: 0 <= c.
  (* Invariant *)
  Have: (c = 0) \/ (0 < c).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < c) -> (i <= c))).
  (* Invariant *)
  Have: 4572 <= x_1.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: (x_3 % 36) = x_2.
Prover Z3 4.8.12 returns Timeout (Qed:15ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:15ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/75_0006/75_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/75_0006/75_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/75_0006/75_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/75_0006/75_merged.c, line 14):
Let x = 36 * y.
Let x_1 = 1 + z.
Let x_2 = x_1 % 36.
Let x_3 = x + x_2 - 1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_2 - 1) /\
      is_sint32(x_3).
  (* Residual *)
  When: x_2 <= 36.
  (* Goal *)
  When: 0 < x_2.
  (* Pre-condition *)
  Have: 127 <= y.
  (* Invariant *)
  Have: x_2 <= 37.
  (* Invariant *)
  Have: x_2 = (1 + (x_3 % 36)).
  (* Invariant *)
  Have: (x_2 = 1) \/ (2 <= x_2).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> (((2 + i) <= x_2) -> (i < x_2))).
  (* Invariant *)
  Have: 4572 <= z.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (x + x_2) = x_1.
  (* Invariant *)
  Have: z <= (35 + x).
}
Prove: x <= z.
Prover Z3 4.8.12 returns Valid (Qed:11ms) (20ms) (34039)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (5ms) (24)

------------------------------------------------------------

Goal Establishment of Invariant (file out/75_0006/75_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/75_0006/75_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (10ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/75_0006/75_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/75_0006/75_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/75_0006/75_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.86ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/75_0006/75_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/75_0006/75_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/75_0006/75_merged.c, line 18):
Let x = 36 * y.
Let x_1 = 1 + z.
Let x_2 = x_1 % 36.
Let x_3 = x + x_2 - 1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_2 - 1) /\
      is_sint32(x_3).
  (* Residual *)
  When: x_2 <= 36.
  (* Goal *)
  When: x_2 <= 35.
  (* Pre-condition *)
  Have: 127 <= y.
  (* Invariant *)
  Have: x_2 <= 37.
  (* Invariant *)
  Have: x_2 = (1 + (x_3 % 36)).
  (* Invariant *)
  Have: 0 < x_2.
  (* Invariant *)
  Have: (x_2 = 1) \/ (2 <= x_2).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> (((2 + i) <= x_2) -> (i < x_2))).
  (* Invariant *)
  Have: 4572 <= z.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (x + x_2) = x_1.
  (* Invariant *)
  Have: z <= (35 + x).
  (* Invariant *)
  Have: x <= z.
}
Prove: z <= (34 + x).
Prover Z3 4.8.12 returns Valid (Qed:13ms) (10ms) (34268)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (4ms) (24)

------------------------------------------------------------

Goal Establishment of Invariant (file out/75_0006/75_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/75_0006/75_merged.c, line 19):
Let x = z % 36.
Let x_1 = 36 * y.
Let x_2 = c_1 + x_1.
Assume {
  Type: is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(tmp_0) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(z_1) /\ is_sint32(x_1) /\ is_sint32(x) /\
      is_sint32(x_2).
  (* Goal *)
  When: (0 <= i) /\ (i < x).
  (* Pre-condition *)
  Have: 127 <= y.
  (* Invariant *)
  Have: c_1 <= 36.
  (* Invariant *)
  Have: (x_2 % 36) = c_1.
  (* Invariant *)
  Have: 0 <= c_1.
  (* Invariant *)
  Have: (c_1 = 0) \/ (0 < c_1).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < c_1) -> (i_1 <= c_1))).
  (* Invariant *)
  Have: 4572 <= x_2.
  (* Then *)
  Have: tmp_0 != 0.
  If c_1 <= 35
  Then {
    Let x_3 = 1 + z_1.
    Let x_4 = x_3 % 36.
    Have: (x_4 = (1 + c)) /\ (x_4 = (1 + c_1)) /\ ((x_1 + x_4) = x_3).
    Have: x_3 = z.
  }
  Else { Have: (36 + x_1) = z. }
  (* Invariant *)
  Have: z <= (36 + x_1).
  (* Invariant *)
  Have: (x_1 + x) = z.
  (* Invariant *)
  Have: (0 <= x) /\ (x <= 36).
  (* Invariant *)
  Have: ((0 < x) -> (x_1 < z)).
  (* Invariant *)
  Have: (x = 0) \/ (x_1 < z).
  (* Invariant *)
  Have: ((x = 0) -> (x_1 = z)).
  (* Invariant *)
  Have: ((x <= 35) -> (z <= (35 + x_1))).
}
Prove: (i + x_1) <= z.
Prover Z3 4.8.12 returns Valid (Qed:22ms) (20ms) (36289)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:22ms) (5ms) (34)

------------------------------------------------------------

Goal Establishment of Invariant (file out/75_0006/75_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/75_0006/75_merged.c, line 20):
Let x = 1 + z.
Let x_1 = x % 36.
Let x_2 = 36 * y.
Let x_3 = x_2 + x_1 - 1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(x_2) /\
      is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_1 - 1) /\ is_sint32(x_3).
  (* Residual *)
  When: x_1 <= 36.
  (* Pre-condition *)
  Have: 127 <= y.
  (* Invariant *)
  Have: x_1 <= 37.
  (* Invariant *)
  Have: x_1 = (1 + (x_3 % 36)).
  (* Invariant *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: (x_1 = 1) \/ (2 <= x_1).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> (((2 + i) <= x_1) -> (i < x_1))).
  (* Invariant *)
  Have: 4572 <= z.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (x_2 + x_1) = x.
  (* Invariant *)
  Have: z <= (35 + x_2).
  (* Invariant *)
  Have: x_2 <= z.
  (* Invariant *)
  Have: ((x_1 <= 35) -> (z <= (34 + x_2))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < x_1) -> ((i + x_2) <= x))).
}
Prove: x_2 <= x.
Prover Z3 4.8.12 returns Valid (Qed:13ms) (10ms) (34013)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (6ms) (25)

------------------------------------------------------------

Goal Establishment of Invariant (file out/75_0006/75_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/75_0006/75_merged.c, line 21):
Let x = 36 * y.
Let x_1 = 1 + z.
Let x_2 = x_1 % 36.
Let x_3 = x + x_2 - 1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_2 - 1) /\
      is_sint32(x_3).
  (* Residual *)
  When: x_2 <= 36.
  (* Pre-condition *)
  Have: 127 <= y.
  (* Invariant *)
  Have: x_2 <= 37.
  (* Invariant *)
  Have: x_2 = (1 + (x_3 % 36)).
  (* Invariant *)
  Have: 0 < x_2.
  (* Invariant *)
  Have: (x_2 = 1) \/ (2 <= x_2).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> (((2 + i) <= x_2) -> (i < x_2))).
  (* Invariant *)
  Have: 4572 <= z.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (x + x_2) = x_1.
  (* Invariant *)
  Have: z <= (35 + x).
  (* Invariant *)
  Have: x <= z.
  (* Invariant *)
  Have: ((x_2 <= 35) -> (z <= (34 + x))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < x_2) -> ((i + x) <= x_1))).
  (* Invariant *)
  Have: x <= x_1.
}
Prove: 4571 <= z.
Prover Z3 4.8.12 returns Valid (Qed:12ms) (10ms) (34115)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:12ms) (5ms) (25)

------------------------------------------------------------

Goal Establishment of Invariant (file out/75_0006/75_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/75_0006/75_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/75_0006/75_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/75_0006/75_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/75_0006/75_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/75_0006/75_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/75_0006/75_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.82ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/75_0006/75_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/75_0006/75_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.84ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/75_0006/75_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/75_0006/75_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.81ms)

------------------------------------------------------------

Goal Loop assigns (file out/75_0006/75_merged.c, line 27) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/75_0006/75_merged.c, line 27) (2/2):
Call Result at line 30
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/75_0006/75_merged.c:4: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/75_0006/75_merged.c:30: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.

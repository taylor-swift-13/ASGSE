[kernel] Parsing out/84_0004/84_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 21 goals scheduled
[wp] [Timeout] typed_main_loop_invariant_8_preserved (Qed 3ms) (Z3)
[wp] Proved goals:   20 / 21
  Qed:              16
  Alt-Ergo 2.5.4:    4 (8ms-12ms-20ms)
  Timeout:           1
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0004/84_merged.c, line 6):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0004/84_merged.c, line 6):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0004/84_merged.c, line 7):
Let x = y * (y - 1).
Let x_1 = 1 + y.
Assume {
  Type: is_sint32(y) /\ is_sint32(y - 50) /\ is_sint32(x_1).
  (* Goal *)
  When: 50 <= y.
  (* Invariant *)
  Have: (x / 2) = 0.
  (* Invariant *)
  Have: (-101) <= x.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: x <= 1.
  (* Then *)
  Have: (-99) <= x.
}
Prove: (y + ((y * x_1) / 2)) = 50.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (20ms) (47100)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (20ms) (371)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0004/84_merged.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0004/84_merged.c, line 8):
Let x = 1 + y.
Let x_1 = (y * x) / 2.
Let x_2 = y * (y - 1).
Assume {
  Type: is_sint32(y) /\ is_sint32(y - 50) /\ is_sint32(x).
  (* Invariant *)
  Have: (x_2 / 2) = 0.
  (* Invariant *)
  Have: (-101) <= x_2.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: x_2 <= 1.
  (* Then *)
  Have: (-99) <= x_2.
  (* Invariant *)
  Have: ((50 <= y) -> ((y + x_1) = 50)).
}
Prove: x_1 = y.
Prover Z3 4.8.12 returns Valid (Qed:2ms) (20ms) (68801)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (12ms) (263)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0004/84_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0004/84_merged.c, line 9):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = x_1 / 2.
Let x_3 = (y * (y - 1)) / 2.
Assume {
  Type: is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_2 - 50) /\
      is_sint32(x_2 - 50 - y).
  (* Invariant *)
  Have: x_2 = (y + x_3).
  (* Invariant *)
  Have: x_2 <= (50 + y).
  (* Invariant *)
  Have: (x_3 + x_2) = y.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: y <= x_2.
  (* Then *)
  Have: x_2 <= (49 + y).
  (* Invariant *)
  Have: ((100 <= x_1) -> (x_2 = 25)).
}
Prove: x_1 <= 101.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (33162)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (8ms) (186)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0004/84_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0004/84_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0004/84_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0004/84_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0004/84_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0004/84_merged.c, line 12):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = x_1 / 2.
Let x_3 = (y * (y - 1)) / 2.
Assume {
  Type: is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_2 - 50) /\
      is_sint32(x_2 - 50 - y).
  (* Goal *)
  When: x_1 <= 99.
  (* Invariant *)
  Have: x_2 = (y + x_3).
  (* Invariant *)
  Have: x_2 <= (50 + y).
  (* Invariant *)
  Have: (x_3 + x_2) = y.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: y <= x_2.
  (* Then *)
  Have: x_2 <= (49 + y).
}
Prove: x_1 <= 49.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (20ms) (43174)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (9ms) (270)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0004/84_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0004/84_merged.c, line 13):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = x_1 / 2.
Let x_3 = (y * (y - 1)) / 2.
Assume {
  Type: is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_2 - 50) /\
      is_sint32(x_2 - 50 - y).
  (* Invariant *)
  Have: x_2 = (y + x_3).
  (* Invariant *)
  Have: x_2 <= (50 + y).
  (* Invariant *)
  Have: (x_3 + x_2) = y.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: y <= x_2.
  (* Then *)
  Have: x_2 <= (49 + y).
  (* Invariant *)
  Have: ((100 <= x_1) -> (x_2 = 25)).
  (* Invariant *)
  Have: x_1 <= 101.
  (* Invariant *)
  Have: ((x_1 <= 99) -> (x_1 <= 49)).
}
Prove: x_2 = 0.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0004/84_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0004/84_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0004/84_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/84_0004/84_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/84_0004/84_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/84_0004/84_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/84_0004/84_merged.c:1: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

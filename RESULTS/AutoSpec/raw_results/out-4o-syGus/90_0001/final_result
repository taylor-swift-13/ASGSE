Pass
{'CurTaskID': 2, 'Round': 1, 'Iteration': 1, 'Status': 1, 'llms_query_times': datetime.timedelta(seconds=3, microseconds=249662), 'total_solve_time': datetime.timedelta(seconds=9, microseconds=573202), 'simplified_time': datetime.timedelta(0), 'tokens_usage': 2156, 'spec_num_original': 0, 'spec_num_simplified': 0, 'TaskList': [3, 1], '1': ['loop invariant x == y ==> lock == 1;', 'loop invariant x <= y;', 'loop invariant x != y ==> lock == 0;', 'loop invariant lock == 1 ==> x == y;', 'loop invariant lock == 0 || lock == 1;', 'loop invariant lock == 0 ==> x < y;', 'loop invariant (lock == 1) ==> (x == y);', 'loop invariant (lock == 1 ==> x == y);', 'loop invariant (lock == 0) ==> (x < y);', 'loop invariant (lock == 0) ==> (x != y);', 'loop assigns y;', 'loop assigns x;', 'loop assigns lock;'], '2': [], 'MSLines': ['/* 2. FUNC CONTRACT */\nvoid foo(int x) {\n', '  int lock = 0;\n', '  int y = x + 1;\n', '  \n', '  /* 1. LOOP INVARIANT */\n  while (x != y) {\n', '    if (unknown()) {\n', '      lock = 1;\n', '      x  = y;\n', '    } else {\n', '      lock = 0;\n', '      x  = y;\n', '      y  = y + 1;\n', '    }\n', '  }\n', '  // post-condition\n', '  //@ assert lock == 1;\n', '}\n']}
    へ　　　　　／|
　　/＼7　　　 ∠＿/
　 /　│　　 ／　／
　│　Z ＿,＜　／　　 /`ヽ
　│　　　　　ヽ　　 /　　〉
　 Y　　　　　`　 /　　/
　ｲ●　､　●　　⊂⊃〈　　/
　()　 へ　　　　|　＼〈
　　>ｰ ､_　 ィ　 │ ／／
　 / へ　　 /　ﾉ＜| ＼＼
　 ヽ_ﾉ　　(_／　 │／／
　　7　　　　　　　|／
　　＞―r￣￣`ｰ―＿

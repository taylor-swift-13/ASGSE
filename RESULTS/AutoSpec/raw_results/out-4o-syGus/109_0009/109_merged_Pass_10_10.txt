[kernel] Parsing out/109_0009/109_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 10 goals scheduled
[wp] Proved goals:   10 / 10
  Qed:               9
  Alt-Ergo 2.5.4:    1 (114ms)
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/109_0009/109_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/109_0009/109_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/109_0009/109_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/109_0009/109_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/109_0009/109_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/109_0009/109_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/109_0009/109_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/109_0009/109_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assertion (file out/109_0009/109_merged.c, line 25):
Assume {
  Type: is_sint32(a) /\ is_sint32(c) /\ is_sint32(k) /\ is_sint32(m).
  (* Pre-condition *)
  Have: 0 < c.
  (* Invariant *)
  Have: k <= c.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < k) -> (a <= m))).
  (* Invariant *)
  Have: 0 <= k.
  (* Else *)
  Have: c <= k.
}
Prove: a <= m.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (114ms) (2246)

------------------------------------------------------------

Goal Loop assigns (file out/109_0009/109_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/109_0009/109_merged.c:4: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

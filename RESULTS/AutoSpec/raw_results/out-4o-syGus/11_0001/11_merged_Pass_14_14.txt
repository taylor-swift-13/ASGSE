[kernel] Parsing out/11_0001/11_merged.c (with preprocessing)
[kernel:typing:implicit-function-declaration] out/11_0001/11_merged.c:17: Warning: 
  Calling undeclared function unknown. Old style K&R code?
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/11_0001/11_merged.c:5: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 14 goals scheduled
[wp] Proved goals:   14 / 14
  Qed:              10
  Alt-Ergo 2.5.4:    4 (26ms-38ms)
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 8):
Let x_2 = y_1 % 10.
Let x_3 = 10 + y.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y_1) /\ is_sint32(y) /\ is_sint32(x_3).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 10).
  (* Pre-condition *)
  Have: (0 <= y_1) /\ (y_1 <= 10).
  (* Invariant *)
  Have: (y % 10) = x_2.
  (* Invariant *)
  Have: (x_1 % 10) = (x % 10).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: ((y - y_1) % 10) = 0.
  (* Invariant *)
  Have: ((x_1 - x) % 10) = 0.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: (x_3 % 10) = x_2.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (35ms) (529)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 9):
Let x_2 = 10 + y_1.
Let x_3 = y % 10.
Let x_4 = x_1 % 10.
Let x_5 = 10 + x.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(y_1) /\ is_sint32(x_5) /\ is_sint32(x_2).
  (* Pre-condition *)
  Have: (0 <= x_1) /\ (x_1 <= 10).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 10).
  (* Invariant *)
  Have: (y_1 % 10) = x_3.
  (* Invariant *)
  Have: (x % 10) = x_4.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: ((y_1 - y) % 10) = 0.
  (* Invariant *)
  Have: ((x - x_1) % 10) = 0.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x_2 % 10) = x_3.
}
Prove: (x_5 % 10) = x_4.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (38ms) (601)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (0.78ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 12):
Let x_2 = 10 + x_1.
Let x_3 = x % 10.
Let x_4 = 10 + y.
Let x_5 = y_1 % 10.
Let x_6 = -y_1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y_1) /\ is_sint32(y) /\ is_sint32(x_2) /\ is_sint32(x_4).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 10).
  (* Pre-condition *)
  Have: (0 <= y_1) /\ (y_1 <= 10).
  (* Invariant *)
  Have: (y % 10) = x_5.
  (* Invariant *)
  Have: (x_1 % 10) = x_3.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: ((y - y_1) % 10) = 0.
  (* Invariant *)
  Have: ((x_1 - x) % 10) = 0.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x_4 % 10) = x_5.
  (* Invariant *)
  Have: (x_2 % 10) = x_3.
  (* Invariant *)
  Have: (-10) <= y.
  (* Invariant *)
  Have: (-10) <= x_1.
}
Prove: ((10 + y - y_1) % 10) = 0.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (26ms) (521)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 13):
Let x_2 = -y.
Let x_3 = 10 + x.
Let x_4 = x_1 % 10.
Let x_5 = 10 + y_1.
Let x_6 = y % 10.
Let x_7 = -x_1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(y_1) /\ is_sint32(x_3) /\ is_sint32(x_5).
  (* Pre-condition *)
  Have: (0 <= x_1) /\ (x_1 <= 10).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 10).
  (* Invariant *)
  Have: (y_1 % 10) = x_6.
  (* Invariant *)
  Have: (x % 10) = x_4.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: ((y_1 - y) % 10) = 0.
  (* Invariant *)
  Have: ((x - x_1) % 10) = 0.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x_5 % 10) = x_6.
  (* Invariant *)
  Have: (x_3 % 10) = x_4.
  (* Invariant *)
  Have: (-10) <= y_1.
  (* Invariant *)
  Have: (-10) <= x.
  (* Invariant *)
  Have: ((10 + y_1 - y) % 10) = 0.
}
Prove: ((10 + x - x_1) % 10) = 0.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (36ms) (588)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/11_0001/11_merged.c, line 14) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/11_0001/11_merged.c, line 14) (2/2):
Call Result at line 17
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/11_0001/11_merged.c:5: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/11_0001/11_merged.c:17: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.

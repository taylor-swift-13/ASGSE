[kernel] Parsing out/11_0001/11_merged.c (with preprocessing)
[kernel:typing:implicit-function-declaration] out/11_0001/11_merged.c:23: Warning: 
  Calling undeclared function unknown. Old style K&R code?
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/11_0001/11_merged.c:5: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 26 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_preserved (Qed 5ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_4_established (Qed 0.95ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_5_preserved (Qed 4ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_8_established (Qed 1ms) (Z3)
[wp] Proved goals:   22 / 26
  Qed:              14
  Alt-Ergo 2.5.4:    5 (4ms-11ms-32ms)
  Z3 4.8.12:         3 (10ms-17ms-20ms)
  Timeout:           4
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 8):
Let x_2 = 10 * (x / 10).
Let x_3 = 20 + x_2.
Let x_4 = 10 + x_2.
Let x_5 = 10 * (y_1 / 10).
Let x_6 = 20 + x_5.
Let x_7 = 10 + x_5.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y_1) /\ is_sint32(y) /\ is_sint32(10 + y).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 10).
  (* Pre-condition *)
  Have: (0 <= y_1) /\ (y_1 <= 10).
  (* Invariant *)
  Have: y_1 <= x_7.
  (* Invariant *)
  Have: y_1 <= x_6.
  (* Invariant *)
  Have: (y_1 % 10) = 0.
  (* Invariant *)
  Have: x <= x_4.
  (* Invariant *)
  Have: x <= x_3.
  (* Invariant *)
  Have: (x % 10) = 0.
  (* Invariant *)
  Have: y <= x_7.
  (* Invariant *)
  Have: y <= x_6.
  (* Invariant *)
  Have: (y % 10) = 0.
  (* Invariant *)
  Have: x_1 <= x_4.
  (* Invariant *)
  Have: x_1 <= x_3.
  (* Invariant *)
  Have: (x_1 % 10) = 0.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: ((y - y_1) % 10) = 0.
  (* Invariant *)
  Have: ((x_1 - x) % 10) = 0.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: y <= x_5.
Prover Z3 4.8.12 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 8):
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 10).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 10).
}
Prove: y <= (10 + (10 * (y / 10))).
Prover Z3 4.8.12 returns Valid (Qed:0.73ms) (10ms) (30162)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:0.73ms) (7ms) (62)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 9):
Let x_1 = 10 * (y / 10).
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 10).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 10).
  (* Invariant *)
  Have: y <= (10 + x_1).
}
Prove: y <= (20 + x_1).
Prover Z3 4.8.12 returns Valid (Qed:2ms) (10ms) (29947)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (4ms) (13)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 10):
Let x_2 = 10 * (y_1 / 10).
Let x_3 = 10 * (x / 10).
Let x_4 = 20 + x_3.
Let x_5 = 10 + x_3.
Let x_6 = 20 + x_2.
Let x_7 = 10 + x_2.
Let x_8 = 10 + y.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y_1) /\ is_sint32(y) /\ is_sint32(x_8).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 10).
  (* Pre-condition *)
  Have: (0 <= y_1) /\ (y_1 <= 10).
  (* Invariant *)
  Have: y_1 <= x_7.
  (* Invariant *)
  Have: y_1 <= x_6.
  (* Invariant *)
  Have: (y_1 % 10) = 0.
  (* Invariant *)
  Have: x <= x_5.
  (* Invariant *)
  Have: x <= x_4.
  (* Invariant *)
  Have: (x % 10) = 0.
  (* Invariant *)
  Have: y <= x_7.
  (* Invariant *)
  Have: y <= x_6.
  (* Invariant *)
  Have: (y % 10) = 0.
  (* Invariant *)
  Have: x_1 <= x_5.
  (* Invariant *)
  Have: x_1 <= x_4.
  (* Invariant *)
  Have: (x_1 % 10) = 0.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: ((y - y_1) % 10) = 0.
  (* Invariant *)
  Have: ((x_1 - x) % 10) = 0.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: y <= x_2.
}
Prove: (x_8 % 10) = 0.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (54222)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 11):
Let x_1 = 10 * (y / 10).
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 10).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 10).
  (* Invariant *)
  Have: y <= (10 + x_1).
  (* Invariant *)
  Have: y <= (20 + x_1).
}
Prove: (y % 10) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:0.95ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.95ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 12):
Let x_2 = 10 + y_1.
Let x_3 = 10 * (y / 10).
Let x_4 = 10 * (x_1 / 10).
Let x_5 = 20 + x_4.
Let x_6 = 10 + x_4.
Let x_7 = 20 + x_3.
Let x_8 = 10 + x_3.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(y_1) /\ is_sint32(10 + x) /\ is_sint32(x_2).
  (* Pre-condition *)
  Have: (0 <= x_1) /\ (x_1 <= 10).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 10).
  (* Invariant *)
  Have: y <= x_8.
  (* Invariant *)
  Have: y <= x_7.
  (* Invariant *)
  Have: (y % 10) = 0.
  (* Invariant *)
  Have: x_1 <= x_6.
  (* Invariant *)
  Have: x_1 <= x_5.
  (* Invariant *)
  Have: (x_1 % 10) = 0.
  (* Invariant *)
  Have: y_1 <= x_8.
  (* Invariant *)
  Have: y_1 <= x_7.
  (* Invariant *)
  Have: (y_1 % 10) = 0.
  (* Invariant *)
  Have: x <= x_6.
  (* Invariant *)
  Have: x <= x_5.
  (* Invariant *)
  Have: (x % 10) = 0.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: ((y_1 - y) % 10) = 0.
  (* Invariant *)
  Have: ((x - x_1) % 10) = 0.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: y_1 <= x_3.
  (* Invariant *)
  Have: (x_2 % 10) = 0.
}
Prove: x <= x_4.
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 12):
Let x_1 = 10 * (y / 10).
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 10).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 10).
  (* Invariant *)
  Have: y <= (10 + x_1).
  (* Invariant *)
  Have: y <= (20 + x_1).
  (* Invariant *)
  Have: (y % 10) = 0.
}
Prove: x <= (10 + (10 * (x / 10))).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (10ms) (141)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 13):
Let x_1 = 10 * (x / 10).
Let x_2 = 10 * (y / 10).
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 10).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 10).
  (* Invariant *)
  Have: y <= (10 + x_2).
  (* Invariant *)
  Have: y <= (20 + x_2).
  (* Invariant *)
  Have: (y % 10) = 0.
  (* Invariant *)
  Have: x <= (10 + x_1).
}
Prove: x <= (20 + x_1).
Prover Z3 4.8.12 returns Valid (Qed:1ms) (20ms) (30491)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (4ms) (16)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 14):
Let x_2 = 10 * (x_1 / 10).
Let x_3 = 10 + y_1.
Let x_4 = 10 * (y / 10).
Let x_5 = 20 + x_2.
Let x_6 = 10 + x_2.
Let x_7 = 20 + x_4.
Let x_8 = 10 + x_4.
Let x_9 = 10 + x.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(y_1) /\ is_sint32(x_9) /\ is_sint32(x_3).
  (* Pre-condition *)
  Have: (0 <= x_1) /\ (x_1 <= 10).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 10).
  (* Invariant *)
  Have: y <= x_8.
  (* Invariant *)
  Have: y <= x_7.
  (* Invariant *)
  Have: (y % 10) = 0.
  (* Invariant *)
  Have: x_1 <= x_6.
  (* Invariant *)
  Have: x_1 <= x_5.
  (* Invariant *)
  Have: (x_1 % 10) = 0.
  (* Invariant *)
  Have: y_1 <= x_8.
  (* Invariant *)
  Have: y_1 <= x_7.
  (* Invariant *)
  Have: (y_1 % 10) = 0.
  (* Invariant *)
  Have: x <= x_6.
  (* Invariant *)
  Have: x <= x_5.
  (* Invariant *)
  Have: (x % 10) = 0.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: ((y_1 - y) % 10) = 0.
  (* Invariant *)
  Have: ((x - x_1) % 10) = 0.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: y_1 <= x_4.
  (* Invariant *)
  Have: (x_3 % 10) = 0.
  (* Invariant *)
  Have: x <= x_2.
}
Prove: (x_9 % 10) = 0.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (61410)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (32ms) (575)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 15):
Let x_1 = 10 * (x / 10).
Let x_2 = 10 * (y / 10).
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 10).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 10).
  (* Invariant *)
  Have: y <= (10 + x_2).
  (* Invariant *)
  Have: y <= (20 + x_2).
  (* Invariant *)
  Have: (y % 10) = 0.
  (* Invariant *)
  Have: x <= (10 + x_1).
  (* Invariant *)
  Have: x <= (20 + x_1).
}
Prove: (x % 10) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 18):
Let x_2 = 10 + x_1.
Let x_3 = 10 * (x / 10).
Let x_4 = 10 + y.
Let x_5 = 10 * (y_1 / 10).
Let x_6 = -y_1.
Let x_7 = 20 + x_3.
Let x_8 = 10 + x_3.
Let x_9 = 20 + x_5.
Let x_10 = 10 + x_5.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y_1) /\ is_sint32(y) /\ is_sint32(x_2) /\ is_sint32(x_4).
  (* Pre-condition *)
  Have: (0 <= x) /\ (x <= 10).
  (* Pre-condition *)
  Have: (0 <= y_1) /\ (y_1 <= 10).
  (* Invariant *)
  Have: y_1 <= x_10.
  (* Invariant *)
  Have: y_1 <= x_9.
  (* Invariant *)
  Have: (y_1 % 10) = 0.
  (* Invariant *)
  Have: x <= x_8.
  (* Invariant *)
  Have: x <= x_7.
  (* Invariant *)
  Have: (x % 10) = 0.
  (* Invariant *)
  Have: y <= x_10.
  (* Invariant *)
  Have: y <= x_9.
  (* Invariant *)
  Have: (y % 10) = 0.
  (* Invariant *)
  Have: x_1 <= x_8.
  (* Invariant *)
  Have: x_1 <= x_7.
  (* Invariant *)
  Have: (x_1 % 10) = 0.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: ((y - y_1) % 10) = 0.
  (* Invariant *)
  Have: ((x_1 - x) % 10) = 0.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: y <= x_5.
  (* Invariant *)
  Have: (x_4 % 10) = 0.
  (* Invariant *)
  Have: x_1 <= x_3.
  (* Invariant *)
  Have: (x_2 % 10) = 0.
  (* Invariant *)
  Have: (-10) <= y.
  (* Invariant *)
  Have: (-10) <= x_1.
}
Prove: ((10 + y - y_1) % 10) = 0.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (50030)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.86ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 19):
Let x_2 = -y.
Let x_3 = 10 + x.
Let x_4 = 10 * (x_1 / 10).
Let x_5 = 10 + y_1.
Let x_6 = 10 * (y / 10).
Let x_7 = -x_1.
Let x_8 = 20 + x_4.
Let x_9 = 10 + x_4.
Let x_10 = 20 + x_6.
Let x_11 = 10 + x_6.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(y_1) /\ is_sint32(x_3) /\ is_sint32(x_5).
  (* Pre-condition *)
  Have: (0 <= x_1) /\ (x_1 <= 10).
  (* Pre-condition *)
  Have: (0 <= y) /\ (y <= 10).
  (* Invariant *)
  Have: y <= x_11.
  (* Invariant *)
  Have: y <= x_10.
  (* Invariant *)
  Have: (y % 10) = 0.
  (* Invariant *)
  Have: x_1 <= x_9.
  (* Invariant *)
  Have: x_1 <= x_8.
  (* Invariant *)
  Have: (x_1 % 10) = 0.
  (* Invariant *)
  Have: y_1 <= x_11.
  (* Invariant *)
  Have: y_1 <= x_10.
  (* Invariant *)
  Have: (y_1 % 10) = 0.
  (* Invariant *)
  Have: x <= x_9.
  (* Invariant *)
  Have: x <= x_8.
  (* Invariant *)
  Have: (x % 10) = 0.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: ((y_1 - y) % 10) = 0.
  (* Invariant *)
  Have: ((x - x_1) % 10) = 0.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: y_1 <= x_6.
  (* Invariant *)
  Have: (x_5 % 10) = 0.
  (* Invariant *)
  Have: x <= x_4.
  (* Invariant *)
  Have: (x_3 % 10) = 0.
  (* Invariant *)
  Have: (-10) <= y_1.
  (* Invariant *)
  Have: (-10) <= x.
  (* Invariant *)
  Have: ((10 + y_1 - y) % 10) = 0.
}
Prove: ((10 + x - x_1) % 10) = 0.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (53132)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Loop assigns (file out/11_0001/11_merged.c, line 20) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/11_0001/11_merged.c, line 20) (2/2):
Call Result at line 23
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/11_0001/11_merged.c:5: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/11_0001/11_merged.c:23: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/93_0001/93_merged.c (with preprocessing)
[kernel:typing:implicit-function-declaration] out/93_0001/93_merged.c:25: Warning: 
  Calling undeclared function unknown. Old style K&R code?
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/93_0001/93_merged.c:4: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 20 goals scheduled
[wp] Proved goals:   20 / 20
  Qed:              18
  Alt-Ergo 2.5.4:    2
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/93_0001/93_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/93_0001/93_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/93_0001/93_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/93_0001/93_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/93_0001/93_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/93_0001/93_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/93_0001/93_merged.c, line 13):
Let x_3 = 3 * i.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(tmp_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(y) /\ is_sint32(y_1) /\
      is_sint32(y_2) /\ is_sint32(1 + i) /\ is_sint32(x_3 - y_2) /\
      is_sint32(3 + x_3 - x).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= y_2.
  (* Invariant *)
  Have: y_2 <= x_3.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
  If tmp_0 != 0
  Then { Have: (y_2 = y) /\ ((x_1 + y) = x_3). Have: (1 + x_3) = (x + y). }
  Else {
    Have: (y_2 = y_1) /\ ((x_2 + y_1) = x_3).
    Have: (2 + x_3) = (x + y_1).
  }
}
Prove: x <= (3 + x_3).
Prover Z3 4.8.12 returns Valid (Qed:11ms) (20ms) (34093)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (48)

------------------------------------------------------------

Goal Establishment of Invariant (file out/93_0001/93_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/93_0001/93_merged.c, line 14):
Let x_2 = 3 * i.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(tmp_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(y_2) /\
      is_sint32(y_3) /\ is_sint32(1 + i) /\ is_sint32(x_2 - y_3) /\
      is_sint32(3 + x_2 - y).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= y_3.
  (* Invariant *)
  Have: y_3 <= x_2.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
  If tmp_0 != 0
  Then { Have: (y_3 = y_1) /\ ((x + y_1) = x_2). Have: (2 + y_1) = y. }
  Else { Have: (y_3 = y_2) /\ ((x_1 + y_2) = x_2). Have: (1 + y_2) = y. }
  (* Invariant *)
  Have: 0 <= y.
}
Prove: y <= (3 + x_2).
Prover Z3 4.8.12 returns Valid (Qed:12ms) (10ms) (34063)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:12ms) (5ms) (50)

------------------------------------------------------------

Goal Establishment of Invariant (file out/93_0001/93_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/93_0001/93_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/93_0001/93_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/93_0001/93_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/93_0001/93_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/93_0001/93_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/93_0001/93_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/93_0001/93_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/93_0001/93_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/93_0001/93_merged.c, line 19) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/93_0001/93_merged.c, line 19) (2/2):
Call Result at line 25
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/93_0001/93_merged.c:4: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/93_0001/93_merged.c:25: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.

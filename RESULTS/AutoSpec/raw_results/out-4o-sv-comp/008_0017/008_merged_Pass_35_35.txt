[kernel] Parsing out/008_0017/008_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 35 goals scheduled
[wp] Proved goals:   35 / 35
  Qed:              29
  Alt-Ergo 2.5.4:    5 (5ms-135ms-370ms)
  Z3 4.8.12:         1 (220ms)
------------------------------------------------------------
  Function foo008
------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0017/008_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0017/008_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0017/008_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0017/008_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0017/008_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0017/008_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0017/008_merged.c, line 17):
Let x = i_4 + res_0.
Let x_1 = cnt_0 + res_1.
Let x_2 = i_3 + res_0.
Let x_3 = 1 + res_1.
Assume {
  Type: is_sint32(cnt_0) /\ is_sint32(res_1) /\ is_sint32(res_0) /\
      is_sint32(cnt_0 - 1) /\ is_sint32(x_3) /\
      is_sint32(cnt_0 + res_1 - res_0).
  (* Goal *)
  When: (0 <= i) /\ ((i + res_0) <= x_1).
  (* Pre-condition *)
  Have: res_0 <= 999999.
  (* Pre-condition *)
  Have: (res_0 <= x_1) /\ (x_1 <= (1000000 + res_0)).
  (* Invariant *)
  Have: ((i_1 <= 0) -> ((0 <= i_1) -> (i_1 = 0))).
  (* Invariant *)
  Have: ((0 <= i_2) -> (((i_2 + res_0) <= x_1) -> (i_2 = 0))).
  (* Invariant *)
  Have: ((0 <= i_3) -> ((x_2 <= res_1) -> (x_2 = res_1))).
  (* Invariant *)
  Have: 0 <= cnt_0.
  (* Invariant *)
  Have: res_0 <= res_1.
  (* Invariant *)
  Have: ((0 <= i_4) -> ((x <= x_1) -> (x = res_1))).
  (* Then *)
  Have: 0 < cnt_0.
}
Prove: res_0 <= x_3.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (33032)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (25)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0017/008_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0017/008_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0017/008_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0017/008_merged.c, line 19):
Let x = cnt_0 + res_1.
Let x_1 = 1 + res_1.
Let x_2 = i_3 + res_0.
Let x_3 = i_2 + res_0.
Assume {
  Type: is_sint32(cnt_0) /\ is_sint32(res_1) /\ is_sint32(res_0) /\
      is_sint32(cnt_0 - 1) /\ is_sint32(x_1) /\
      is_sint32(cnt_0 + res_1 - res_0).
  (* Pre-condition *)
  Have: res_0 <= 999999.
  (* Pre-condition *)
  Have: (res_0 <= x) /\ (x <= (1000000 + res_0)).
  (* Invariant *)
  Have: ((i <= 0) -> ((0 <= i) -> (i = 0))).
  (* Invariant *)
  Have: ((0 <= i_1) -> (((i_1 + res_0) <= x) -> (i_1 = 0))).
  (* Invariant *)
  Have: ((0 <= i_2) -> ((x_3 <= res_1) -> (x_3 = res_1))).
  (* Invariant *)
  Have: 0 <= cnt_0.
  (* Invariant *)
  Have: res_0 <= res_1.
  (* Invariant *)
  Have: ((0 <= i_3) -> ((x_2 <= x) -> (x_2 = res_1))).
  (* Then *)
  Have: 0 < cnt_0.
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> (((res_0 + i_4) <= x) ->
      (res_0 <= x_1))).
}
Prove: exists i_4 : Z. let x_4 = res_0 + i_4 in ((0 <= i_4) ->
    ((x_4 <= x_1) -> (x_4 = x_1))).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (370ms) (5105)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0017/008_merged.c, line 19):
Assume {
  Type: is_sint32(b) /\ is_sint32(res_0).
  (* Pre-condition *)
  Have: res_0 <= 999999.
  (* Pre-condition *)
  Have: (0 <= b) /\ (b <= 1000000).
}
Prove: exists i : Z. ((i <= 0) -> ((0 <= i) -> (i = 0))).
Prover Z3 4.8.12 returns Valid (Qed:1ms) (210ms) (194758)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (151ms) (1999)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0017/008_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0017/008_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.84ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0017/008_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0017/008_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0017/008_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0017/008_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0017/008_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0017/008_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0017/008_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0017/008_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0017/008_merged.c, line 25):
Let x = a + i_4.
Let x_1 = 1 + res_0.
Let x_2 = cnt_0 + res_0.
Let x_3 = a + i_3.
Let x_4 = a + i_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(cnt_0) /\ is_sint32(res_0) /\
      is_sint32(cnt_0 - 1) /\ is_sint32(x_1) /\ is_sint32(cnt_0 + res_0 - a).
  (* Pre-condition *)
  Have: a <= 999999.
  (* Pre-condition *)
  Have: (a <= x_2) /\ (x_2 <= (1000000 + a)).
  (* Invariant *)
  Have: ((i <= 0) -> ((0 <= i) -> (i = 0))).
  (* Invariant *)
  Have: ((0 <= i_1) -> (((a + i_1) <= x_2) -> (i_1 = 0))).
  (* Invariant *)
  Have: ((0 <= i_2) -> ((x_4 <= res_0) -> (x_4 = res_0))).
  (* Invariant *)
  Have: 0 <= cnt_0.
  (* Invariant *)
  Have: a <= res_0.
  (* Invariant *)
  Have: ((0 <= i_3) -> ((x_3 <= x_2) -> (x_3 = res_0))).
  (* Then *)
  Have: 0 < cnt_0.
  (* Invariant *)
  Have: forall i_5 : Z. ((0 <= i_5) -> (((a + i_5) <= x_2) -> (a <= x_1))).
  (* Invariant *)
  Have: ((0 <= i_4) -> ((x <= x_1) -> (x = x_1))).
}
Prove: a <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (33784)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (6ms) (27)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0017/008_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0017/008_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0017/008_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0017/008_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0017/008_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0017/008_merged.c, line 28):
Let x = 1 + res_1.
Let x_1 = i_4 + res_0.
Let x_2 = i_3 + res_0.
Let x_3 = cnt_0 + res_1.
Let x_4 = i_2 + res_0.
Assume {
  Type: is_sint32(cnt_0) /\ is_sint32(res_1) /\ is_sint32(res_0) /\
      is_sint32(cnt_0 - 1) /\ is_sint32(x) /\
      is_sint32(cnt_0 + res_1 - res_0).
  (* Pre-condition *)
  Have: res_0 <= 999999.
  (* Pre-condition *)
  Have: (res_0 <= x_3) /\ (x_3 <= (1000000 + res_0)).
  (* Invariant *)
  Have: ((i <= 0) -> ((0 <= i) -> (i = 0))).
  (* Invariant *)
  Have: ((0 <= i_1) -> (((i_1 + res_0) <= x_3) -> (i_1 = 0))).
  (* Invariant *)
  Have: ((0 <= i_2) -> ((x_4 <= res_1) -> (x_4 = res_1))).
  (* Invariant *)
  Have: 0 <= cnt_0.
  (* Invariant *)
  Have: res_0 <= res_1.
  (* Invariant *)
  Have: ((0 <= i_3) -> ((x_2 <= x_3) -> (x_2 = res_1))).
  (* Then *)
  Have: 0 < cnt_0.
  (* Invariant *)
  Have: ((0 <= i_4) -> ((x_1 <= x) -> (x_1 = x))).
  (* Invariant *)
  Have: res_0 <= x.
}
Prove: exists i_5 : Z. let x_5 = res_0 + i_5 in ((0 <= i_5) ->
    ((x_5 <= x_3) -> (x_5 = x))).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (220ms) (269435)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0017/008_merged.c, line 28):
Assume {
  Type: is_sint32(b) /\ is_sint32(res_0).
  (* Pre-condition *)
  Have: res_0 <= 999999.
  (* Pre-condition *)
  Have: (0 <= b) /\ (b <= 1000000).
  (* Invariant *)
  Have: ((i <= 0) -> ((0 <= i) -> (i = 0))).
}
Prove: exists i_1 : Z. ((i_1 <= b) -> ((0 <= i_1) -> (i_1 = 0))).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (144ms) (2184)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0017/008_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0017/008_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0017/008_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0017/008_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Loop assigns (file out/008_0017/008_merged.c, line 31):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/008_0017/008_merged.c:6: Warning: 
  No 'assigns' specification for function 'foo008'.
  Callers assumptions might be imprecise.

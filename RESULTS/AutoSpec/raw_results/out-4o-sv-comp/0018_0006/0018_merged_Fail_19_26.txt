[kernel] Parsing out/0018_0006/0018_merged.c (with preprocessing)
[kernel:typing:no-proto] out/0018_0006/0018_merged.c:34: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/0018_0006/0018_merged.c:4: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 26 goals scheduled
[wp] [Timeout] typed_foo0018_loop_invariant_preserved (Qed 19ms) (Z3)
[wp] [Timeout] typed_foo0018_loop_invariant_2_preserved (Qed 27ms) (Z3)
[wp] [Timeout] typed_foo0018_loop_invariant_3_preserved (Qed 24ms) (Z3)
[wp] [Timeout] typed_foo0018_loop_invariant_6_preserved (Qed 15ms) (Z3)
[wp] [Timeout] typed_foo0018_loop_invariant_6_established (Qed 3ms) (Z3)
[wp] [Timeout] typed_foo0018_loop_invariant_7_preserved (Qed 12ms) (Z3)
[wp] [Timeout] typed_foo0018_loop_invariant_9_preserved (Qed 18ms) (Z3)
[wp] Proved goals:   19 / 26
  Qed:            17
  Z3 4.8.12:       2 (10ms)
  Timeout:         7
------------------------------------------------------------
  Function foo0018
------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0006/0018_merged.c, line 17):
Let x = to_uint32(2 + i) % 2.
Let x_1 = i % 2.
Let x_2 = j_3 % 2.
Let x_3 = 1 + a.
Assume {
  Type: is_uint32(a) /\ is_uint32(i) /\ is_uint32(j) /\ is_uint32(j_1) /\
      is_uint32(j_2) /\ is_uint32(j_3) /\ is_sint32(tmp_0) /\
      is_uint32(a * (j_3 - i)).
  (* Goal *)
  When: x != 0.
  (* Invariant *)
  Have: ((x_1 != 0) -> (x_3 = j_3)).
  (* Invariant *)
  Have: 0 < j_3.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: ((x_1 = 0) -> (x_2 = 0)).
  (* Invariant *)
  Have: ((x_1 = 0) -> ((1 + (2 * (i / 2))) = j_3)).
  (* Invariant *)
  Have: ((x_1 = 1) -> (x_2 = 1)).
  (* Invariant *)
  Have: ((x_1 != 0) -> (x_2 != 0)).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: tmp_0 != 0.
  If to_uint32(x) = 0
  Then { Have: j_3 = j_1. Have: to_uint32(2 + j_1) = j. }
  Else { Have: j_3 = j_2. Have: to_uint32(1 + j_2) = j. }
}
Prove: (1 + to_uint32(x_3)) = j.
Prover Z3 4.8.12 returns Timeout (Qed:19ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:19ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0006/0018_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0006/0018_merged.c, line 18):
Let x = to_uint32(2 + i).
Let x_1 = x % 2.
Let x_2 = 1 + a.
Let x_3 = to_uint32(x_2).
Let x_4 = i % 2.
Let x_5 = j_1 % 2.
Let x_6 = j_1 - i.
Let x_7 = a * x_6.
Assume {
  Type: is_uint32(a) /\ is_uint32(i) /\ is_uint32(j) /\ is_uint32(j_1) /\
      is_sint32(tmp_0) /\ is_uint32(x_7).
  (* Invariant *)
  Have: ((x_4 != 0) -> (x_2 = j_1)).
  (* Invariant *)
  Have: 0 < j_1.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: ((x_4 = 0) -> (x_5 = 0)).
  (* Invariant *)
  Have: ((x_4 = 0) -> ((1 + (2 * (i / 2))) = j_1)).
  (* Invariant *)
  Have: ((x_4 = 1) -> (x_5 = 1)).
  (* Invariant *)
  Have: ((x_4 != 0) -> (x_5 != 0)).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: tmp_0 != 0.
  If to_uint32(x_1) = 0
  Then { Have: to_uint32(2 + j_1) = j. }
  Else { Have: to_uint32(1 + j_1) = j. }
  (* Invariant *)
  Have: ((x_1 != 0) -> ((1 + x_3) = j)).
}
Prove: (x_3 * (j - x)) = to_uint32(to_uint32(x_6) + x_7).
Prover Z3 4.8.12 returns Timeout (Qed:27ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:27ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0006/0018_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0006/0018_merged.c, line 19):
Let x = to_uint32(2 + i).
Let x_1 = x % 2.
Let x_2 = 1 + a.
Let x_3 = to_uint32(x_2).
Let x_4 = x_3 * (j - x).
Let x_5 = j_3 - i.
Let x_6 = a * x_5.
Let x_7 = i % 2.
Let x_8 = j_3 % 2.
Assume {
  Type: is_uint32(a) /\ is_uint32(i) /\ is_uint32(j) /\ is_uint32(j_1) /\
      is_uint32(j_2) /\ is_uint32(j_3) /\ is_sint32(tmp_0) /\
      is_uint32(x_6) /\ is_uint32(x_4).
  (* Invariant *)
  Have: ((x_7 != 0) -> (x_2 = j_3)).
  (* Invariant *)
  Have: 0 < j_3.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: ((x_7 = 0) -> (x_8 = 0)).
  (* Invariant *)
  Have: ((x_7 = 0) -> ((1 + (2 * (i / 2))) = j_3)).
  (* Invariant *)
  Have: ((x_7 = 1) -> (x_8 = 1)).
  (* Invariant *)
  Have: ((x_7 != 0) -> (x_8 != 0)).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_4 = to_uint32(to_uint32(x_5) + x_6).
  If to_uint32(x_1) = 0
  Then { Have: j_3 = j_1. Have: to_uint32(2 + j_1) = j. }
  Else { Have: j_3 = j_2. Have: to_uint32(1 + j_2) = j. }
  (* Invariant *)
  Have: ((x_1 != 0) -> ((1 + x_3) = j)).
}
Prove: 0 < j.
Prover Z3 4.8.12 returns Timeout (Qed:24ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:24ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0006/0018_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0006/0018_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0006/0018_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0006/0018_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0006/0018_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0006/0018_merged.c, line 22):
Let x = to_uint32(2 + j).
Let x_1 = 1 + a.
Let x_2 = to_uint32(2 + i).
Let x_3 = to_uint32(x_1) * (x - x_2).
Let x_4 = j - i.
Let x_5 = a * x_4.
Let x_6 = i % 2.
Let x_7 = j % 2.
Assume {
  Type: is_uint32(a) /\ is_uint32(i) /\ is_uint32(j) /\ is_sint32(tmp_0) /\
      is_uint32(x_5) /\ is_uint32(x_3).
  (* Goal *)
  When: (x_2 % 2) = 0.
  (* Invariant *)
  Have: ((x_6 != 0) -> (x_1 = j)).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: ((x_6 = 0) -> (x_7 = 0)).
  (* Invariant *)
  Have: ((x_6 = 0) -> ((1 + (2 * (i / 2))) = j)).
  (* Invariant *)
  Have: ((x_6 = 1) -> (x_7 = 1)).
  (* Invariant *)
  Have: ((x_6 != 0) -> (x_7 != 0)).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_3 = to_uint32(to_uint32(x_4) + x_5).
  (* Invariant *)
  Have: 0 < x.
}
Prove: (x % 2) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:15ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:15ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0006/0018_merged.c, line 22):
Assume { Type: is_sint32(flag_0). (* Residual *) When: flag_0 != 0. }
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0006/0018_merged.c, line 23):
Let x = to_uint32(2 + j).
Let x_1 = 1 + a.
Let x_2 = to_uint32(2 + i).
Let x_3 = to_uint32(x_1) * (x - x_2).
Let x_4 = j - i.
Let x_5 = a * x_4.
Let x_6 = i % 2.
Let x_7 = j % 2.
Assume {
  Type: is_uint32(a) /\ is_uint32(i) /\ is_uint32(j) /\ is_sint32(tmp_0) /\
      is_uint32(x_5) /\ is_uint32(x_3).
  (* Goal *)
  When: (x_2 % 2) = 0.
  (* Invariant *)
  Have: ((x_6 != 0) -> (x_1 = j)).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: ((x_6 = 0) -> (x_7 = 0)).
  (* Invariant *)
  Have: ((x_6 = 0) -> ((1 + (2 * (i / 2))) = j)).
  (* Invariant *)
  Have: ((x_6 = 1) -> (x_7 = 1)).
  (* Invariant *)
  Have: ((x_6 != 0) -> (x_7 != 0)).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_3 = to_uint32(to_uint32(x_4) + x_5).
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: (x % 2) = 0.
}
Prove: (1 + (2 * (x_2 / 2))) = x.
Prover Z3 4.8.12 returns Timeout (Qed:12ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:12ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0006/0018_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0006/0018_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0006/0018_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0006/0018_merged.c, line 25):
Let x = 1 + a.
Let x_1 = to_uint32(x).
Let x_2 = 1 + x_1.
Let x_3 = to_uint32(2 + i).
Let x_4 = x_1 * (1 + x_1 - x_3).
Let x_5 = j - i.
Let x_6 = a * x_5.
Let x_7 = i % 2.
Let x_8 = j % 2.
Assume {
  Have: (x_3 % 2) = 1.
  Type: is_uint32(a) /\ is_uint32(i) /\ is_uint32(j) /\ is_sint32(tmp_0) /\
      is_uint32(x_6) /\ is_uint32(x_2) /\ is_uint32(x_4).
  (* Invariant *)
  Have: ((x_7 != 0) -> (x = j)).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: ((x_7 = 0) -> (x_8 = 0)).
  (* Invariant *)
  Have: ((x_7 = 0) -> ((1 + (2 * (i / 2))) = j)).
  (* Invariant *)
  Have: ((x_7 = 1) -> (x_8 = 1)).
  (* Invariant *)
  Have: ((x_7 != 0) -> (x_8 != 0)).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_4 = to_uint32(to_uint32(x_5) + x_6).
  Have: x_2 = to_uint32(1 + j).
}
Prove: (x_2 % 2) = 1.
Prover Z3 4.8.12 returns Timeout (Qed:18ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:18ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0006/0018_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0006/0018_merged.c, line 26):
Let x = to_uint32(2 + i).
Let x_1 = x % 2.
Let x_2 = 1 + a.
Let x_3 = to_uint32(x_2).
Let x_4 = 1 + x_3.
Let x_5 = x_4 % 2.
Let x_6 = x_3 * (1 + x_3 - x).
Let x_7 = j_2 - i.
Let x_8 = a * x_7.
Let x_9 = i % 2.
Let x_10 = j_2 % 2.
Assume {
  Type: is_uint32(a) /\ is_uint32(i) /\ is_uint32(j) /\ is_uint32(j_1) /\
      is_uint32(j_2) /\ is_sint32(tmp_0) /\ is_uint32(x_8) /\
      is_uint32(x_4) /\ is_uint32(x_6).
  (* Goal *)
  When: x_1 != 0.
  (* Invariant *)
  Have: ((x_9 != 0) -> (x_2 = j_2)).
  (* Invariant *)
  Have: 0 < j_2.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: ((x_9 = 0) -> (x_10 = 0)).
  (* Invariant *)
  Have: ((x_9 = 0) -> ((1 + (2 * (i / 2))) = j_2)).
  (* Invariant *)
  Have: ((x_9 = 1) -> (x_10 = 1)).
  (* Invariant *)
  Have: ((x_9 != 0) -> (x_10 != 0)).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_6 = to_uint32(to_uint32(x_7) + x_8).
  If to_uint32(x_1) = 0
  Then { Have: j_2 = j. Have: x_4 = to_uint32(2 + j). }
  Else { Have: j_2 = j_1. Have: x_4 = to_uint32(1 + j_1). }
  (* Invariant *)
  Have: ((x_1 = 1) -> (x_5 = 1)).
}
Prove: x_5 != 0.
Prover Z3 4.8.12 returns Valid (Qed:20ms) (10ms) (38422)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0006/0018_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0006/0018_merged.c, line 27):
Let x = to_uint32(2 + i).
Let x_1 = x % 2.
Let x_2 = j % 2.
Let x_3 = 1 + a.
Let x_4 = to_uint32(x_3).
Let x_5 = x_4 * (j - x).
Let x_6 = j_3 - i.
Let x_7 = a * x_6.
Let x_8 = i % 2.
Let x_9 = j_3 % 2.
Assume {
  Type: is_uint32(a) /\ is_uint32(i) /\ is_uint32(j) /\ is_uint32(j_1) /\
      is_uint32(j_2) /\ is_uint32(j_3) /\ is_sint32(tmp_0) /\
      is_uint32(x_7) /\ is_uint32(x_5).
  (* Invariant *)
  Have: ((x_8 != 0) -> (x_3 = j_3)).
  (* Invariant *)
  Have: 0 < j_3.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: ((x_8 = 0) -> (x_9 = 0)).
  (* Invariant *)
  Have: ((x_8 = 0) -> ((1 + (2 * (i / 2))) = j_3)).
  (* Invariant *)
  Have: ((x_8 = 1) -> (x_9 = 1)).
  (* Invariant *)
  Have: ((x_8 != 0) -> (x_9 != 0)).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_5 = to_uint32(to_uint32(x_6) + x_7).
  If to_uint32(x_1) = 0
  Then { Have: j_3 = j_1. Have: to_uint32(2 + j_1) = j. }
  Else { Have: j_3 = j_2. Have: to_uint32(1 + j_2) = j. }
  (* Invariant *)
  Have: ((x_1 != 0) -> ((1 + x_4) = j)).
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: ((x_1 = 0) -> (x_2 = 0)).
  (* Invariant *)
  Have: ((x_1 = 0) -> ((1 + (2 * (x / 2))) = j)).
  (* Invariant *)
  Have: ((x_1 = 1) -> (x_2 = 1)).
  (* Invariant *)
  Have: ((x_1 != 0) -> (x_2 != 0)).
}
Prove: 0 < x.
Prover Z3 4.8.12 returns Valid (Qed:30ms) (10ms) (41281)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0006/0018_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0006/0018_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0006/0018_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.87ms)

------------------------------------------------------------

Goal Loop assigns (file out/0018_0006/0018_merged.c, line 29) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/0018_0006/0018_merged.c, line 29) (2/2):
Call Result at line 34
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/0018_0006/0018_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/0018_0006/0018_merged.c:4: Warning: 
  No 'assigns' specification for function 'foo0018'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/0018_0002/0018_merged.c (with preprocessing)
[kernel:typing:no-proto] out/0018_0002/0018_merged.c:37: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/0018_0002/0018_merged.c:4: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 32 goals scheduled
[wp] [Timeout] typed_foo0018_loop_invariant_4_preserved (Qed 28ms) (Z3)
[wp] [Timeout] typed_foo0018_loop_invariant_3_preserved (Qed 27ms) (Z3)
[wp] [Timeout] typed_foo0018_loop_invariant_5_preserved (Qed 26ms) (Z3)
[wp] [Timeout] typed_foo0018_loop_invariant_9_preserved (Qed 27ms) (Z3)
[wp] [Timeout] typed_foo0018_loop_invariant_9_established (Qed 3ms) (Z3)
[wp] [Timeout] typed_foo0018_loop_invariant_15_preserved (Qed 23ms) (Z3)
[wp] Proved goals:   26 / 32
  Qed:              24
  Alt-Ergo 2.5.4:    1 (28ms)
  Z3 4.8.12:         1 (20ms)
  Timeout:           6
------------------------------------------------------------
  Function foo0018
------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0002/0018_merged.c, line 17):
Let x = (a * (j - i)) / (1 + i).
Let x_1 = i % 2.
Let x_2 = j % 2.
Let x_3 = to_uint32(2 + i) % 2.
Assume {
  Type: is_uint32(a) /\ is_uint32(i) /\ is_uint32(j) /\ is_sint32(tmp_0) /\
      is_uint32(x).
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_1 = 1).
  (* Invariant *)
  Have: x <= a.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (x_2 = 0) <-> (x_1 = 0).
  (* Invariant *)
  Have: ((x_1 = 0) /\ (x_2 = 0)) \/ ((x_1 = 1) /\ (x_2 = 1)).
  (* Invariant *)
  Have: (((x_1 = 0) -> (x_2 = 0))) \/ (((x_1 = 1) -> (x_2 = 1))).
  (* Invariant *)
  Have: (i + x) = (a + j).
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: (x_3 = 0) \/ (x_3 = 1).
Prover Z3 4.8.12 returns Valid (Qed:8ms) (20ms) (36685)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0002/0018_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0002/0018_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0002/0018_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.89ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0002/0018_merged.c, line 19):
Let x = to_uint32(2 + i).
Let x_1 = x % 2.
Let x_2 = j_1 - i.
Let x_3 = (a * x_2) / (1 + i).
Let x_4 = i % 2.
Let x_5 = j_1 % 2.
Assume {
  Type: is_uint32(a) /\ is_uint32(i) /\ is_uint32(j) /\ is_uint32(j_1) /\
      is_sint32(tmp_0) /\ is_uint32(x_3).
  (* Invariant *)
  Have: (x_4 = 0) \/ (x_4 = 1).
  (* Invariant *)
  Have: x_3 <= a.
  (* Invariant *)
  Have: 0 < j_1.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (x_5 = 0) <-> (x_4 = 0).
  (* Invariant *)
  Have: ((x_4 = 0) /\ (x_5 = 0)) \/ ((x_4 = 1) /\ (x_5 = 1)).
  (* Invariant *)
  Have: (((x_4 = 0) -> (x_5 = 0))) \/ (((x_4 = 1) -> (x_5 = 1))).
  (* Invariant *)
  Have: (i + x_3) = (a + j_1).
  (* Then *)
  Have: tmp_0 != 0.
  If to_uint32(x_1) = 0
  Then { Have: to_uint32(2 + j_1) = j. }
  Else { Have: to_uint32(1 + j_1) = j. }
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_1 = 1).
}
Prove: ((to_uint32(1 + a) * (j - x)) / (1 + x))
         = to_uint32(to_uint32(x_2) + x_3).
Prover Z3 4.8.12 returns Timeout (Qed:27ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:27ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0002/0018_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0002/0018_merged.c, line 20):
Let x = to_uint32(2 + i).
Let x_1 = x % 2.
Let x_2 = to_uint32(1 + a).
Let x_3 = (x_2 * (j - x)) / (1 + x).
Let x_4 = j_3 - i.
Let x_5 = (a * x_4) / (1 + i).
Let x_6 = i % 2.
Let x_7 = j_3 % 2.
Assume {
  Type: is_uint32(a) /\ is_uint32(i) /\ is_uint32(j) /\ is_uint32(j_1) /\
      is_uint32(j_2) /\ is_uint32(j_3) /\ is_sint32(tmp_0) /\
      is_uint32(x_5) /\ is_uint32(x_3).
  (* Invariant *)
  Have: (x_6 = 0) \/ (x_6 = 1).
  (* Invariant *)
  Have: x_5 <= a.
  (* Invariant *)
  Have: 0 < j_3.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= x_5.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (x_7 = 0) <-> (x_6 = 0).
  (* Invariant *)
  Have: ((x_6 = 0) /\ (x_7 = 0)) \/ ((x_6 = 1) /\ (x_7 = 1)).
  (* Invariant *)
  Have: (((x_6 = 0) -> (x_7 = 0))) \/ (((x_6 = 1) -> (x_7 = 1))).
  (* Invariant *)
  Have: (i + x_5) = (a + j_3).
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_3 = to_uint32(to_uint32(x_4) + x_5).
  If to_uint32(x_1) = 0
  Then { Have: j_3 = j_1. Have: to_uint32(2 + j_1) = j. }
  Else { Have: j_3 = j_2. Have: to_uint32(1 + j_2) = j. }
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_1 = 1).
}
Prove: x_3 <= x_2.
Prover Z3 4.8.12 returns Timeout (Qed:28ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:28ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0002/0018_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0002/0018_merged.c, line 21):
Let x = to_uint32(1 + a).
Let x_1 = to_uint32(2 + i).
Let x_2 = (x * (j - x_1)) / (1 + x_1).
Let x_3 = x_1 % 2.
Let x_4 = j_3 - i.
Let x_5 = (a * x_4) / (1 + i).
Let x_6 = i % 2.
Let x_7 = j_3 % 2.
Assume {
  Type: is_uint32(a) /\ is_uint32(i) /\ is_uint32(j) /\ is_uint32(j_1) /\
      is_uint32(j_2) /\ is_uint32(j_3) /\ is_sint32(tmp_0) /\
      is_uint32(x_5) /\ is_uint32(x_2).
  (* Invariant *)
  Have: (x_6 = 0) \/ (x_6 = 1).
  (* Invariant *)
  Have: x_5 <= a.
  (* Invariant *)
  Have: 0 < j_3.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= x_5.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (x_7 = 0) <-> (x_6 = 0).
  (* Invariant *)
  Have: ((x_6 = 0) /\ (x_7 = 0)) \/ ((x_6 = 1) /\ (x_7 = 1)).
  (* Invariant *)
  Have: (((x_6 = 0) -> (x_7 = 0))) \/ (((x_6 = 1) -> (x_7 = 1))).
  (* Invariant *)
  Have: (i + x_5) = (a + j_3).
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_2 = to_uint32(to_uint32(x_4) + x_5).
  If to_uint32(x_3) = 0
  Then { Have: j_3 = j_1. Have: to_uint32(2 + j_1) = j. }
  Else { Have: j_3 = j_2. Have: to_uint32(1 + j_2) = j. }
  (* Invariant *)
  Have: (x_3 = 0) \/ (x_3 = 1).
  (* Invariant *)
  Have: x_2 <= x.
}
Prove: 0 < j.
Prover Z3 4.8.12 returns Timeout (Qed:26ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:26ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0002/0018_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1.00ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0002/0018_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0002/0018_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0002/0018_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0002/0018_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0002/0018_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0002/0018_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0002/0018_merged.c, line 25):
Let x = to_uint32(1 + a).
Let x_1 = to_uint32(2 + i).
Let x_2 = (x * (j - x_1)) / (1 + x_1).
Let x_3 = x_1 % 2.
Let x_4 = j_3 - i.
Let x_5 = (a * x_4) / (1 + i).
Let x_6 = i % 2.
Let x_7 = j_3 % 2.
Assume {
  Type: is_uint32(a) /\ is_uint32(i) /\ is_uint32(j) /\ is_uint32(j_1) /\
      is_uint32(j_2) /\ is_uint32(j_3) /\ is_sint32(tmp_0) /\
      is_uint32(x_5) /\ is_uint32(x_2).
  (* Invariant *)
  Have: (x_6 = 0) \/ (x_6 = 1).
  (* Invariant *)
  Have: x_5 <= a.
  (* Invariant *)
  Have: 0 < j_3.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= x_5.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (x_7 = 0) <-> (x_6 = 0).
  (* Invariant *)
  Have: ((x_6 = 0) /\ (x_7 = 0)) \/ ((x_6 = 1) /\ (x_7 = 1)).
  (* Invariant *)
  Have: (((x_6 = 0) -> (x_7 = 0))) \/ (((x_6 = 1) -> (x_7 = 1))).
  (* Invariant *)
  Have: (i + x_5) = (a + j_3).
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_2 = to_uint32(to_uint32(x_4) + x_5).
  If to_uint32(x_3) = 0
  Then { Have: j_3 = j_1. Have: to_uint32(2 + j_1) = j. }
  Else { Have: j_3 = j_2. Have: to_uint32(1 + j_2) = j. }
  (* Invariant *)
  Have: (x_3 = 0) \/ (x_3 = 1).
  (* Invariant *)
  Have: x_2 <= x.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= x_2.
}
Prove: (x_3 = 0) <-> ((j % 2) = 0).
Prover Z3 4.8.12 returns Timeout (Qed:27ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:27ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0002/0018_merged.c, line 25):
Assume { Type: is_sint32(flag_0). (* Residual *) When: flag_0 != 0. }
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0002/0018_merged.c, line 26):
Let x = to_uint32(2 + i).
Let x_1 = x % 2.
Let x_2 = j % 2.
Let x_3 = to_uint32(1 + a).
Let x_4 = (x_3 * (j - x)) / (1 + x).
Let x_5 = j_3 - i.
Let x_6 = (a * x_5) / (1 + i).
Let x_7 = i % 2.
Let x_8 = j_3 % 2.
Assume {
  Type: is_uint32(a) /\ is_uint32(i) /\ is_uint32(j) /\ is_uint32(j_1) /\
      is_uint32(j_2) /\ is_uint32(j_3) /\ is_sint32(tmp_0) /\
      is_uint32(x_6) /\ is_uint32(x_4).
  (* Invariant *)
  Have: (x_7 = 0) \/ (x_7 = 1).
  (* Invariant *)
  Have: x_6 <= a.
  (* Invariant *)
  Have: 0 < j_3.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= x_6.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (x_8 = 0) <-> (x_7 = 0).
  (* Invariant *)
  Have: ((x_7 = 0) /\ (x_8 = 0)) \/ ((x_7 = 1) /\ (x_8 = 1)).
  (* Invariant *)
  Have: (((x_7 = 0) -> (x_8 = 0))) \/ (((x_7 = 1) -> (x_8 = 1))).
  (* Invariant *)
  Have: (i + x_6) = (a + j_3).
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_4 = to_uint32(to_uint32(x_5) + x_6).
  If to_uint32(x_1) = 0
  Then { Have: j_3 = j_1. Have: to_uint32(2 + j_1) = j. }
  Else { Have: j_3 = j_2. Have: to_uint32(1 + j_2) = j. }
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_1 = 1).
  (* Invariant *)
  Have: x_4 <= x_3.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: (x_1 = 0) <-> (x_2 = 0).
}
Prove: ((x_2 = 0) /\ (x_1 = 0)) \/ ((x_2 = 1) /\ (x_1 = 1)).
Prover Z3 4.8.12 returns Valid (Qed:26ms) (20ms) (44464)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:26ms) (28ms) (356)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0002/0018_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0002/0018_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0002/0018_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0002/0018_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0002/0018_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.96ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0002/0018_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0002/0018_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0002/0018_merged.c, line 30):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0002/0018_merged.c, line 30):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0018_0002/0018_merged.c, line 31):
Let x = to_uint32(2 + i).
Let x_1 = x % 2.
Let x_2 = j_1 % 2.
Let x_3 = -j.
Let x_4 = to_uint32(1 + b + i - j).
Let x_5 = (x_4 * (j_1 - x)) / (1 + x).
Let x_6 = j - i.
Let x_7 = i % 2.
Let x_8 = j % 2.
Let x_9 = b + i - j.
Assume {
  Type: is_uint32(b) /\ is_uint32(i) /\ is_uint32(j_1) /\ is_uint32(j) /\
      is_sint32(tmp_0) /\ is_uint32(x_9) /\ is_uint32(x_5).
  (* Invariant *)
  Have: (x_7 = 0) \/ (x_7 = 1).
  (* Invariant *)
  Have: ((x_6 * x_9) / (1 + i)) = b.
  (* Invariant *)
  Have: j <= i.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= b.
  (* Invariant *)
  Have: j <= (b + i).
  (* Invariant *)
  Have: (x_8 = 0) <-> (x_7 = 0).
  (* Invariant *)
  Have: ((x_7 = 0) /\ (x_8 = 0)) \/ ((x_7 = 1) /\ (x_8 = 1)).
  (* Invariant *)
  Have: (((x_7 = 0) -> (x_8 = 0))) \/ (((x_7 = 1) -> (x_8 = 1))).
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_5 = to_uint32(b + to_uint32(x_6)).
  If to_uint32(x_1) = 0
  Then { Have: to_uint32(2 + j) = j_1. }
  Else { Have: to_uint32(1 + j) = j_1. }
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_1 = 1).
  (* Invariant *)
  Have: x_5 <= x_4.
  (* Invariant *)
  Have: 0 < j_1.
  (* Invariant *)
  Have: 0 <= x_5.
  (* Invariant *)
  Have: (x_1 = 0) <-> (x_2 = 0).
  (* Invariant *)
  Have: ((x_2 = 0) /\ (x_1 = 0)) \/ ((x_2 = 1) /\ (x_1 = 1)).
  (* Invariant *)
  Have: (((x_1 = 0) -> (x_2 = 0))) \/ (((x_1 = 1) -> (x_2 = 1))).
}
Prove: (x + x_5) = (j_1 + x_4).
Prover Z3 4.8.12 returns Timeout (Qed:23ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:23ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0018_0002/0018_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/0018_0002/0018_merged.c, line 32) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/0018_0002/0018_merged.c, line 32) (2/2):
Call Result at line 37
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/0018_0002/0018_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/0018_0002/0018_merged.c:4: Warning: 
  No 'assigns' specification for function 'foo0018'.
  Callers assumptions might be imprecise.

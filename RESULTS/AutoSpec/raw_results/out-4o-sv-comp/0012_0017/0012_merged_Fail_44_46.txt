[kernel] Parsing out/0012_0017/0012_merged.c (with preprocessing)
[kernel:typing:no-proto] out/0012_0017/0012_merged.c:50: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/0012_0017/0012_merged.c:11: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 46 goals scheduled
[wp] [Timeout] typed_foo0012_loop_invariant_7_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_foo0012_loop_invariant_9_established (Qed 2ms) (Z3)
[wp] Proved goals:   44 / 46
  Qed:              40
  Alt-Ergo 2.5.4:    4 (1ms-6ms)
  Timeout:           2
------------------------------------------------------------
  Function foo0012
------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0017/0012_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0017/0012_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0017/0012_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0017/0012_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0017/0012_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (11ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0017/0012_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0017/0012_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0017/0012_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0017/0012_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0017/0012_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0017/0012_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0017/0012_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0017/0012_merged.c, line 30):
Let x = 1 + i.
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(n) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: l_1 <= 2147483647.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: 0 < l.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: k <= l.
  (* Invariant *)
  Have: k <= 2147483647.
  (* Invariant *)
  Have: l <= n.
  (* Invariant *)
  Have: l <= 2147483646.
  (* Invariant *)
  Have: k <= i.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: i <= 2147483647.
  (* Invariant *)
  Have: i <= 2147483646.
  (* Invariant *)
  Have: 0 < i.
  (* Invariant *)
  Have: l <= i.
  (* Then *)
  Have: i < n.
}
Prove: k <= x.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (32447)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (4ms) (21)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0017/0012_merged.c, line 30):
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: i <= 2147483647.
  (* Invariant *)
  Have: 0 < i.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
}
Prove: k <= i.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0017/0012_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0017/0012_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0017/0012_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0017/0012_merged.c, line 32):
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: i <= 2147483647.
  (* Invariant *)
  Have: 0 < i.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: k <= i.
  (* Invariant *)
  Have: k <= 2147483647.
}
Prove: i <= n.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0017/0012_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0017/0012_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0017/0012_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0017/0012_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0017/0012_merged.c, line 35):
Let x = 1 + i_1.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(n) /\ is_sint32(x).
  (* Goal *)
  When: (k <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: l_1 <= 2147483647.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: 0 < l.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: k <= l.
  (* Invariant *)
  Have: k <= 2147483647.
  (* Invariant *)
  Have: l <= n.
  (* Invariant *)
  Have: l <= 2147483646.
  (* Invariant *)
  Have: k <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: i_1 <= 2147483647.
  (* Invariant *)
  Have: i_1 <= 2147483646.
  (* Invariant *)
  Have: 0 < i_1.
  (* Invariant *)
  Have: l <= i_1.
  (* Then *)
  Have: i_1 < n.
  (* Invariant *)
  Have: k <= x.
  (* Invariant *)
  Have: i_1 <= 2147483645.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (33026)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (6ms) (25)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0017/0012_merged.c, line 35):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (i < i_1) /\ (k <= i).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: i_1 <= 2147483647.
  (* Invariant *)
  Have: 0 < i_1.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: k <= i_1.
  (* Invariant *)
  Have: k <= 2147483647.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: i_1 <= 2147483646.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:2ms) (10ms) (31495)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (5ms) (40)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0017/0012_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0017/0012_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0017/0012_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0017/0012_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0017/0012_merged.c, line 38):
Let x = 1 + i.
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(n) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: l_1 <= 2147483647.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: 0 < l.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: k <= l.
  (* Invariant *)
  Have: k <= 2147483647.
  (* Invariant *)
  Have: l <= n.
  (* Invariant *)
  Have: l <= 2147483646.
  (* Invariant *)
  Have: k <= i.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: i <= 2147483647.
  (* Invariant *)
  Have: i <= 2147483646.
  (* Invariant *)
  Have: 0 < i.
  (* Invariant *)
  Have: l <= i.
  (* Then *)
  Have: i < n.
  (* Invariant *)
  Have: k <= x.
  (* Invariant *)
  Have: i <= 2147483645.
}
Prove: l <= x.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (32655)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (1ms) (23)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0017/0012_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0017/0012_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0017/0012_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0017/0012_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0017/0012_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0017/0012_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0017/0012_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0017/0012_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0017/0012_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0017/0012_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0017/0012_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0017/0012_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0017/0012_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/0012_0017/0012_merged.c, line 21) (1/3):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/0012_0017/0012_merged.c, line 21) (2/3):
Effect at line 47
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Loop assigns (file out/0012_0017/0012_merged.c, line 21) (3/3):
Call Result at line 50
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Loop assigns (file out/0012_0017/0012_merged.c, line 45):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/0012_0017/0012_merged.c:4: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/0012_0017/0012_merged.c:11: Warning: 
  No 'assigns' specification for function 'foo0012'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/002_0001/002_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 12 goals scheduled
[wp] Proved goals:   12 / 12
  Qed:               9
  Alt-Ergo 2.5.4:    3 (7ms-9ms)
------------------------------------------------------------
  Function foo002
------------------------------------------------------------

Goal Preservation of Invariant (file out/002_0001/002_merged.c, line 7):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/002_0001/002_merged.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/002_0001/002_merged.c, line 8):
Let a = havoc(Mint_undef_0, Mint_0, shift_sint32(A, 0), 1024).
Assume {
  Type: is_sint32(i) /\ is_sint32(1 + i).
  (* Heap *)
  Type: region(A.base) <= 0.
  (* Goal *)
  When: (0 <= i_1) /\ (i_1 <= i).
  (* Invariant *)
  Have: i <= 1024.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i) ->
      (a[shift_sint32(A, i_2)] = i_2))).
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i <= 1023.
}
Prove: a[shift_sint32(A, i) <- i][shift_sint32(A, i_1)] = i_1.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (85996)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (9ms) (95)

------------------------------------------------------------

Goal Establishment of Invariant (file out/002_0001/002_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/002_0001/002_merged.c, line 9):
Let a = havoc(Mint_undef_0, Mint_0, shift_sint32(A, 0), 1024).
Let a_1 = a[shift_sint32(A, i) <- i].
Assume {
  Type: is_sint32(i) /\ is_sint32(1 + i).
  (* Heap *)
  Type: region(A.base) <= 0.
  (* Goal *)
  When: (0 <= i_1) /\ (i_1 <= i).
  (* Invariant *)
  Have: i <= 1024.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i) ->
      (a[shift_sint32(A, i_2)] = i_2))).
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i <= 1023.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= i) -> ((0 <= i_2) ->
      (a_1[shift_sint32(A, i_2)] = i_2))).
}
Prove: a_1[shift_sint32(A, i_1)] = i_1.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (103265)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (8ms) (58)

------------------------------------------------------------

Goal Establishment of Invariant (file out/002_0001/002_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/002_0001/002_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/002_0001/002_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assertion (file out/002_0001/002_merged.c, line 18):
Let x = Mint_undef_0[shift_sint32(A, 1023)].
Assume {
  Type: is_sint32(i) /\ is_sint32(x).
  (* Heap *)
  Type: region(A.base) <= 0.
  (* Invariant *)
  Have: i <= 1024.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (havoc(Mint_undef_0, Mint_0, shift_sint32(A, 0), 1024)
         [shift_sint32(A, i_1)] = i_1))).
  (* Invariant *)
  Have: 0 <= i.
  (* Else *)
  Have: 1024 <= i.
}
Prove: x = 1023.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (20ms) (84084)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (7ms) (129)

------------------------------------------------------------

Goal Loop assigns (file out/002_0001/002_merged.c, line 11) (1/3):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/002_0001/002_merged.c, line 11) (2/3):
Effect at line 14
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/002_0001/002_merged.c, line 11) (3/3):
Effect at line 15
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/002_0001/002_merged.c:2: Warning: 
  No 'assigns' specification for function 'foo002'.
  Callers assumptions might be imprecise.

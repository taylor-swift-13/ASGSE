[kernel] Parsing out/0016_0023/0016_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 44 goals scheduled
[wp] [Timeout] typed_foo0016_loop_invariant_2_preserved (Qed 3ms) (Z3)
[wp] [Timeout] typed_foo0016_loop_invariant_5_preserved (Qed 3ms) (Z3)
[wp] Proved goals:   42 / 44
  Qed:              38
  Alt-Ergo 2.5.4:    3
  Z3 4.8.12:         1 (280ms)
  Timeout:           2
------------------------------------------------------------
  Function foo0016
------------------------------------------------------------

Goal Preservation of Invariant (file out/0016_0023/0016_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0016_0023/0016_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0016_0023/0016_merged.c, line 13):
Let x = 2 * k.
Assume {
  Type: is_sint32(k) /\ is_sint32(n) /\ is_sint32(1 + k).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: x <= n.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < k) -> (i = k))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < k) -> (i < n))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < k) -> ((1 + i) = k))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < k) -> (i = 0))).
  (* Invariant *)
  Have: 0 <= k.
  (* Then *)
  Have: k < n.
}
Prove: (2 + x) <= n.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0016_0023/0016_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0016_0023/0016_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0016_0023/0016_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0016_0023/0016_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0016_0023/0016_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0016_0023/0016_merged.c, line 16):
Let x = 2 * k.
Let x_1 = 1 + k.
Assume {
  Type: is_sint32(k) /\ is_sint32(n) /\ is_sint32(x_1).
  (* Goal *)
  When: (0 <= i) /\ (i <= k).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: x <= n.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < k) -> (i_1 = k))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < k) -> (i_1 < n))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < k) -> ((1 + i_1) = k))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < k) -> (i_1 = 0))).
  (* Invariant *)
  Have: 0 <= k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: (2 + x) <= n.
}
Prove: x_1 = i.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0016_0023/0016_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0016_0023/0016_merged.c, line 17):
Let x = 1 + k.
Let x_1 = 2 * k.
Assume {
  Type: is_sint32(k) /\ is_sint32(n) /\ is_sint32(x).
  (* Goal *)
  When: (0 <= i) /\ (i <= k).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: x_1 <= n.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < k) -> (i_1 = k))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < k) -> (i_1 < n))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < k) -> ((1 + i_1) = k))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < k) -> (i_1 = 0))).
  (* Invariant *)
  Have: 0 <= k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: (2 + x_1) <= n.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= k) -> (x = i_1))).
}
Prove: x = i.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (418ms) (14381)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0016_0023/0016_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0016_0023/0016_merged.c, line 18):
Let x = 1 + k.
Let x_1 = 2 * k.
Assume {
  Type: is_sint32(k) /\ is_sint32(n) /\ is_sint32(x).
  (* Goal *)
  When: (0 <= i) /\ (i <= k).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: x_1 <= n.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < k) -> (i_1 = k))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < k) -> (i_1 < n))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < k) -> ((1 + i_1) = k))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < k) -> (i_1 = 0))).
  (* Invariant *)
  Have: 0 <= k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: (2 + x_1) <= n.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= k) -> (x = i_1))).
}
Prove: i < n.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (33221)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (21)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0016_0023/0016_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0016_0023/0016_merged.c, line 19):
Let x = 1 + k.
Let x_1 = 2 * k.
Assume {
  Type: is_sint32(k) /\ is_sint32(n) /\ is_sint32(x).
  (* Goal *)
  When: (0 <= i) /\ (i <= k).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: x_1 <= n.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < k) -> (i_1 = k))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < k) -> (i_1 < n))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < k) -> ((1 + i_1) = k))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < k) -> (i_1 = 0))).
  (* Invariant *)
  Have: 0 <= k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: (2 + x_1) <= n.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= k) -> (x = i_1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= k) -> (i_1 < n))).
}
Prove: k = i.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (478ms) (14493)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0016_0023/0016_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0016_0023/0016_merged.c, line 20):
Let x = 1 + k.
Let x_1 = 2 * k.
Assume {
  Type: is_sint32(k) /\ is_sint32(n) /\ is_sint32(x).
  (* Goal *)
  When: (0 <= i) /\ (i <= k).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: x_1 <= n.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < k) -> (i_1 = k))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < k) -> (i_1 < n))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < k) -> ((1 + i_1) = k))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < k) -> (i_1 = 0))).
  (* Invariant *)
  Have: 0 <= k.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: (2 + x_1) <= n.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= k) -> (x = i_1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= k) -> (i_1 < n))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= k) -> (i_1 = k))).
}
Prove: i = 0.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (280ms) (255467)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0016_0023/0016_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0016_0023/0016_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0016_0023/0016_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0016_0023/0016_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0016_0023/0016_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0016_0023/0016_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0016_0023/0016_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0016_0023/0016_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0016_0023/0016_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0016_0023/0016_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0016_0023/0016_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0016_0023/0016_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0016_0023/0016_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0016_0023/0016_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0016_0023/0016_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0016_0023/0016_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0016_0023/0016_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0016_0023/0016_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0016_0023/0016_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0016_0023/0016_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0016_0023/0016_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0016_0023/0016_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0016_0023/0016_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0016_0023/0016_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0016_0023/0016_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/0016_0023/0016_merged.c, line 28):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/0016_0023/0016_merged.c, line 44):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/0016_0023/0016_merged.c:5: Warning: 
  No 'assigns' specification for function 'foo0016'.
  Callers assumptions might be imprecise.

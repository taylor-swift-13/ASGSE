[kernel] Parsing out/0012_0014/0012_merged.c (with preprocessing)
[kernel:typing:no-proto] out/0012_0014/0012_merged.c:80: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/0012_0014/0012_merged.c:11: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] Computing [100 goals...]
[wp] 106 goals scheduled
[wp] [Timeout] typed_foo0012_loop_invariant_2_established (Qed 0.72ms) (Z3)
[wp] [Timeout] typed_foo0012_loop_invariant_4_preserved (Qed 27ms) (Z3)
[wp] [Timeout] typed_foo0012_loop_invariant_4_established (Qed 0.94ms) (Z3)
[wp] Proved goals:  103 / 106
  Qed:              86
  Alt-Ergo 2.5.4:   17 (3ms-5ms-8ms)
  Timeout:           3
------------------------------------------------------------
  Function foo0012
------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 16):
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n) /\
      is_sint32(tmp_0) /\ is_sint32(1 + l).
  (* Residual *)
  When: tmp_0 != 0.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: (0 < l) /\ (l <= 2147483646).
  (* Invariant *)
  Have: l <= k.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: l < n.
  (* Invariant *)
  Have: (0 < k) /\ (k <= 2147483646).
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: k <= 2147483647.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 < k) -> (i_1 < n))).
  (* Invariant *)
  Have: forall i_1 : Z. let x = l + i_1 in ((0 < i_1) -> ((i_1 < k) ->
      ((x <= n) \/ (n <= x)))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 < k) -> (n <= 2147483647))).
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l <= i.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: i <= 2147483647.
  (* Invariant *)
  Have: i <= 2147483646.
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 < i) -> ((l <= i_1) -> (i_1 < n))).
  (* Invariant *)
  Have: 0 < i.
  (* Else *)
  Have: n <= i.
}
Prove: l <= 2147483645.
Prover Z3 4.8.12 returns Valid (Qed:23ms) (10ms) (34779)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:23ms) (3ms) (51)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 17):
Let x = 1 + k.
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n) /\
      is_sint32(x).
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: (0 < l) /\ (l <= 2147483646).
  (* Invariant *)
  Have: l <= k.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: l < n.
  (* Invariant *)
  Have: (0 < k) /\ (k <= 2147483646).
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: k <= 2147483647.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 < k) -> (i_1 < n))).
  (* Invariant *)
  Have: forall i_1 : Z. let x_1 = l + i_1 in ((0 < i_1) -> ((i_1 < k) ->
      ((x_1 <= n) \/ (n <= x_1)))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 < k) -> (n <= 2147483647))).
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l <= i.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: i <= 2147483647.
  (* Invariant *)
  Have: i <= 2147483646.
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 < i) -> ((l <= i_1) -> (i_1 < n))).
  (* Invariant *)
  Have: 0 < i.
  (* Else *)
  Have: n <= i.
}
Prove: l <= x.
Prover Z3 4.8.12 returns Valid (Qed:34ms) (20ms) (34414)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:34ms) (5ms) (22)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 17):
Assume {
  Type: is_sint32(l) /\ is_sint32(n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
}
Prove: l <= 1.
Prover Z3 4.8.12 returns Timeout (Qed:0.72ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.72ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (11ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 19):
Let x = 1 + k.
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(l_2) /\ is_sint32(n) /\ is_sint32(tmp_0) /\ is_sint32(x).
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: (0 < l_2) /\ (l_2 <= 2147483646).
  (* Invariant *)
  Have: l_2 <= k.
  (* Invariant *)
  Have: l_2 <= 2147483647.
  (* Invariant *)
  Have: l_2 < n.
  (* Invariant *)
  Have: (0 < k) /\ (k <= 2147483646).
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: k <= 2147483647.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 < k) -> (i_1 < n))).
  (* Invariant *)
  Have: forall i_1 : Z. let x_1 = l_2 + i_1 in ((0 < i_1) -> ((i_1 < k) ->
      ((x_1 <= n) \/ (n <= x_1)))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 < k) -> (n <= 2147483647))).
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l_2 <= i.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: i <= 2147483647.
  (* Invariant *)
  Have: i <= 2147483646.
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 < i) -> ((l_2 <= i_1) -> (i_1 < n))).
  (* Invariant *)
  Have: 0 < i.
  (* Else *)
  Have: n <= i.
  If tmp_0 != 0
  Then { Have: l_2 = l_1. Have: (1 + l_1) = l. }
  Else { Have: l_2 = l. }
  (* Invariant *)
  Have: (0 < l) /\ (l <= 2147483646).
  (* Invariant *)
  Have: l <= x.
  (* Invariant *)
  Have: l <= 2147483647.
}
Prove: l < i.
Prover Z3 4.8.12 returns Timeout (Qed:27ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:27ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 19):
Assume {
  Type: is_sint32(l) /\ is_sint32(n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: l <= 1.
}
Prove: 2 <= n.
Prover Z3 4.8.12 returns Timeout (Qed:0.94ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.94ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (16ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 24):
Let x = 1 + k.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(l_2) /\ is_sint32(n) /\ is_sint32(tmp_0) /\ is_sint32(x).
  (* Goal *)
  When: (l <= i) /\ (i <= n).
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: (0 < l_2) /\ (l_2 <= 2147483646).
  (* Invariant *)
  Have: l_2 <= k.
  (* Invariant *)
  Have: l_2 <= 2147483647.
  (* Invariant *)
  Have: l_2 < n.
  (* Invariant *)
  Have: (0 < k) /\ (k <= 2147483646).
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: k <= 2147483647.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < k) -> (i_2 < n))).
  (* Invariant *)
  Have: forall i_2 : Z. let x_1 = l_2 + i_2 in ((0 < i_2) -> ((i_2 < k) ->
      ((x_1 <= n) \/ (n <= x_1)))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < k) -> (n <= 2147483647))).
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l_2 <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: i_1 <= 2147483647.
  (* Invariant *)
  Have: i_1 <= 2147483646.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 < i_1) -> ((l_2 <= i_2) -> (i_2 < n))).
  (* Invariant *)
  Have: 0 < i_1.
  (* Else *)
  Have: n <= i_1.
  If tmp_0 != 0
  Then { Have: l_2 = l_1. Have: (1 + l_1) = l. }
  Else { Have: l_2 = l. }
  (* Invariant *)
  Have: (0 < l) /\ (l <= 2147483646).
  (* Invariant *)
  Have: l <= x.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: l < i_1.
  (* Invariant *)
  Have: k <= 2147483645.
}
Prove: i <= 2147483646.
Prover Z3 4.8.12 returns Valid (Qed:26ms) (10ms) (36753)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:26ms) (8ms) (30)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 24):
Assume {
  Type: is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (l <= i) /\ (i <= n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: l <= 1.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 < n.
}
Prove: i <= 2147483646.
Prover Z3 4.8.12 returns Valid (Qed:1ms) (10ms) (30245)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (5ms) (27)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 25):
Let x = 1 + k.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(l_2) /\ is_sint32(n) /\ is_sint32(tmp_0) /\ is_sint32(x).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: (0 < l_2) /\ (l_2 <= 2147483646).
  (* Invariant *)
  Have: l_2 <= k.
  (* Invariant *)
  Have: l_2 <= 2147483647.
  (* Invariant *)
  Have: l_2 < n.
  (* Invariant *)
  Have: (0 < k) /\ (k <= 2147483646).
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: k <= 2147483647.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < k) -> (i_2 < n))).
  (* Invariant *)
  Have: forall i_2 : Z. let x_1 = l_2 + i_2 in ((0 < i_2) -> ((i_2 < k) ->
      ((x_1 <= n) \/ (n <= x_1)))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < k) -> (n <= 2147483647))).
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l_2 <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: i_1 <= 2147483647.
  (* Invariant *)
  Have: i_1 <= 2147483646.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 < i_1) -> ((l_2 <= i_2) -> (i_2 < n))).
  (* Invariant *)
  Have: 0 < i_1.
  (* Else *)
  Have: n <= i_1.
  If tmp_0 != 0
  Then { Have: l_2 = l_1. Have: (1 + l_1) = l. }
  Else { Have: l_2 = l. }
  (* Invariant *)
  Have: (0 < l) /\ (l <= 2147483646).
  (* Invariant *)
  Have: l <= x.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: l < i_1.
  (* Invariant *)
  Have: k <= 2147483645.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:36ms) (10ms) (36767)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:36ms) (8ms) (31)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 25):
Assume {
  Type: is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: l <= 1.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 < n.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (30257)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (3ms) (27)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.98ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 28):
Let x = 1 + k.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(l_2) /\ is_sint32(n) /\ is_sint32(tmp_0) /\ is_sint32(x).
  (* Goal *)
  When: (l <= i) /\ (i <= k).
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: (0 < l_2) /\ (l_2 <= 2147483646).
  (* Invariant *)
  Have: l_2 <= k.
  (* Invariant *)
  Have: l_2 <= 2147483647.
  (* Invariant *)
  Have: l_2 < n.
  (* Invariant *)
  Have: (0 < k) /\ (k <= 2147483646).
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: k <= 2147483647.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < k) -> (i_2 < n))).
  (* Invariant *)
  Have: forall i_2 : Z. let x_1 = l_2 + i_2 in ((0 < i_2) -> ((i_2 < k) ->
      ((x_1 <= n) \/ (n <= x_1)))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < k) -> (n <= 2147483647))).
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l_2 <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: i_1 <= 2147483647.
  (* Invariant *)
  Have: i_1 <= 2147483646.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 < i_1) -> ((l_2 <= i_2) -> (i_2 < n))).
  (* Invariant *)
  Have: 0 < i_1.
  (* Else *)
  Have: n <= i_1.
  If tmp_0 != 0
  Then { Have: l_2 = l_1. Have: (1 + l_1) = l. }
  Else { Have: l_2 = l. }
  (* Invariant *)
  Have: (0 < l) /\ (l <= 2147483646).
  (* Invariant *)
  Have: l <= x.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: l < i_1.
  (* Invariant *)
  Have: k <= 2147483645.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:40ms) (20ms) (36749)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:40ms) (5ms) (31)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 29):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 30):
Let x = 1 + k.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(l_2) /\ is_sint32(n) /\ is_sint32(tmp_0) /\ is_sint32(x).
  (* Goal *)
  When: (0 < i) /\ (i <= k).
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: (0 < l_2) /\ (l_2 <= 2147483646).
  (* Invariant *)
  Have: l_2 <= k.
  (* Invariant *)
  Have: l_2 <= 2147483647.
  (* Invariant *)
  Have: l_2 < n.
  (* Invariant *)
  Have: (0 < k) /\ (k <= 2147483646).
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: k <= 2147483647.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < k) -> (i_2 < n))).
  (* Invariant *)
  Have: forall i_2 : Z. let x_1 = l_2 + i_2 in ((0 < i_2) -> ((i_2 < k) ->
      ((x_1 <= n) \/ (n <= x_1)))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < k) -> (n <= 2147483647))).
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l_2 <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: i_1 <= 2147483647.
  (* Invariant *)
  Have: i_1 <= 2147483646.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 < i_1) -> ((l_2 <= i_2) -> (i_2 < n))).
  (* Invariant *)
  Have: 0 < i_1.
  (* Else *)
  Have: n <= i_1.
  If tmp_0 != 0
  Then { Have: l_2 = l_1. Have: (1 + l_1) = l. }
  Else { Have: l_2 = l. }
  (* Invariant *)
  Have: (0 < l) /\ (l <= 2147483646).
  (* Invariant *)
  Have: l <= x.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: l < i_1.
  (* Invariant *)
  Have: k <= 2147483645.
}
Prove: i < i_1.
Prover Z3 4.8.12 returns Valid (Qed:34ms) (10ms) (36757)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:34ms) (7ms) (37)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 30):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 32):
Let x = 1 + k.
Let x_1 = i + l.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(l_2) /\ is_sint32(n) /\ is_sint32(tmp_0) /\ is_sint32(x).
  (* Goal *)
  When: (0 < i) /\ (i <= k).
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: (0 < l_2) /\ (l_2 <= 2147483646).
  (* Invariant *)
  Have: l_2 <= k.
  (* Invariant *)
  Have: l_2 <= 2147483647.
  (* Invariant *)
  Have: l_2 < n.
  (* Invariant *)
  Have: (0 < k) /\ (k <= 2147483646).
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: k <= 2147483647.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < k) -> (i_2 < n))).
  (* Invariant *)
  Have: forall i_2 : Z. let x_2 = l_2 + i_2 in ((0 < i_2) -> ((i_2 < k) ->
      ((x_2 <= n) \/ (n <= x_2)))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < k) -> (n <= 2147483647))).
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l_2 <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: i_1 <= 2147483647.
  (* Invariant *)
  Have: i_1 <= 2147483646.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 < i_1) -> ((l_2 <= i_2) -> (i_2 < n))).
  (* Invariant *)
  Have: 0 < i_1.
  (* Else *)
  Have: n <= i_1.
  If tmp_0 != 0
  Then { Have: l_2 = l_1. Have: (1 + l_1) = l. }
  Else { Have: l_2 = l. }
  (* Invariant *)
  Have: (0 < l) /\ (l <= 2147483646).
  (* Invariant *)
  Have: l <= x.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: l < i_1.
  (* Invariant *)
  Have: k <= 2147483645.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 <= k) -> (i_2 < i_1))).
}
Prove: (x_1 <= i_1) \/ (i_1 <= x_1).
Prover Z3 4.8.12 returns Valid (Qed:42ms) (20ms) (37428)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:42ms) (5ms) (28)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 32):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 33):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 33):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 34):
Let x = 1 + k.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(l_2) /\ is_sint32(n) /\ is_sint32(tmp_0) /\ is_sint32(x).
  (* Goal *)
  When: (0 < i) /\ (i <= k).
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: (0 < l_2) /\ (l_2 <= 2147483646).
  (* Invariant *)
  Have: l_2 <= k.
  (* Invariant *)
  Have: l_2 <= 2147483647.
  (* Invariant *)
  Have: l_2 < n.
  (* Invariant *)
  Have: (0 < k) /\ (k <= 2147483646).
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: k <= 2147483647.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < k) -> (i_2 < n))).
  (* Invariant *)
  Have: forall i_2 : Z. let x_1 = l_2 + i_2 in ((0 < i_2) -> ((i_2 < k) ->
      ((x_1 <= n) \/ (n <= x_1)))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < k) -> (n <= 2147483647))).
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l_2 <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: i_1 <= 2147483647.
  (* Invariant *)
  Have: i_1 <= 2147483646.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 < i_1) -> ((l_2 <= i_2) -> (i_2 < n))).
  (* Invariant *)
  Have: 0 < i_1.
  (* Else *)
  Have: n <= i_1.
  If tmp_0 != 0
  Then { Have: l_2 = l_1. Have: (1 + l_1) = l. }
  Else { Have: l_2 = l. }
  (* Invariant *)
  Have: (0 < l) /\ (l <= 2147483646).
  (* Invariant *)
  Have: l <= x.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: l < i_1.
  (* Invariant *)
  Have: k <= 2147483645.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 <= k) -> (i_2 < i_1))).
  (* Invariant *)
  Have: forall i_2 : Z. let x_1 = l + i_2 in ((0 < i_2) -> ((i_2 <= k) ->
      ((x_1 <= i_1) \/ (i_1 <= x_1)))).
}
Prove: i < i_1.
Prover Z3 4.8.12 returns Valid (Qed:36ms) (20ms) (38028)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:36ms) (5ms) (38)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 34):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 35):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 35):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 36):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (0.94ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (0.87ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 42):
Let x = 1 + k.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(l_2) /\ is_sint32(n) /\ is_sint32(tmp_0) /\ is_sint32(x).
  (* Goal *)
  When: (l <= i) /\ (i <= n).
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: (0 < l_2) /\ (l_2 <= 2147483646).
  (* Invariant *)
  Have: l_2 <= k.
  (* Invariant *)
  Have: l_2 <= 2147483647.
  (* Invariant *)
  Have: l_2 < n.
  (* Invariant *)
  Have: (0 < k) /\ (k <= 2147483646).
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: k <= 2147483647.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < k) -> (i_2 < n))).
  (* Invariant *)
  Have: forall i_2 : Z. let x_1 = l_2 + i_2 in ((0 < i_2) -> ((i_2 < k) ->
      ((x_1 <= n) \/ (n <= x_1)))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < k) -> (n <= 2147483647))).
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l_2 <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: i_1 <= 2147483647.
  (* Invariant *)
  Have: i_1 <= 2147483646.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 < i_1) -> ((l_2 <= i_2) -> (i_2 < n))).
  (* Invariant *)
  Have: 0 < i_1.
  (* Else *)
  Have: n <= i_1.
  If tmp_0 != 0
  Then { Have: l_2 = l_1. Have: (1 + l_1) = l. }
  Else { Have: l_2 = l. }
  (* Invariant *)
  Have: (0 < l) /\ (l <= 2147483646).
  (* Invariant *)
  Have: l <= x.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: l < i_1.
  (* Invariant *)
  Have: k <= 2147483645.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 <= k) -> (i_2 < i_1))).
  (* Invariant *)
  Have: forall i_2 : Z. let x_1 = l + i_2 in ((0 < i_2) -> ((i_2 <= k) ->
      ((x_1 <= i_1) \/ (i_1 <= x_1)))).
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:34ms) (20ms) (38036)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:34ms) (6ms) (31)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 42):
Assume {
  Type: is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (l <= i) /\ (i <= n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: l <= 1.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 < n.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (30259)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (5ms) (27)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 44):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 44):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 46):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 46):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (0.87ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 58):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 58):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 59):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 59):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 60):
Let x = 1 + i.
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n) /\
      is_sint32(x).
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: (0 < l) /\ (l <= 2147483646).
  (* Invariant *)
  Have: l <= k.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: l < n.
  (* Invariant *)
  Have: (0 < k) /\ (k <= 2147483646).
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: k <= 2147483647.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 < k) -> (i_1 < n))).
  (* Invariant *)
  Have: forall i_1 : Z. let x_1 = l + i_1 in ((0 < i_1) -> ((i_1 < k) ->
      ((x_1 <= n) \/ (n <= x_1)))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 < k) -> (n <= 2147483647))).
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l <= i.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: i <= 2147483647.
  (* Invariant *)
  Have: i <= 2147483646.
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 < i) -> ((l <= i_1) -> (i_1 < n))).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: i < n.
}
Prove: l <= x.
Prover Z3 4.8.12 returns Valid (Qed:17ms) (20ms) (34416)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:17ms) (5ms) (22)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 60):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 61):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 61):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 62):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 62):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 63):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 63):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 64):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 65):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 65):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (12ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 66):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 67):
Let x = 1 + i_1.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n) /\
      is_sint32(x).
  (* Goal *)
  When: (l <= i) /\ (i <= x).
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: (0 < l) /\ (l <= 2147483646).
  (* Invariant *)
  Have: l <= k.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: l < n.
  (* Invariant *)
  Have: (0 < k) /\ (k <= 2147483646).
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: k <= 2147483647.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < k) -> (i_2 < n))).
  (* Invariant *)
  Have: forall i_2 : Z. let x_1 = l + i_2 in ((0 < i_2) -> ((i_2 < k) ->
      ((x_1 <= n) \/ (n <= x_1)))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < k) -> (n <= 2147483647))).
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: i_1 <= 2147483647.
  (* Invariant *)
  Have: i_1 <= 2147483646.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 < i_1) -> ((l <= i_2) -> (i_2 < n))).
  (* Invariant *)
  Have: 0 < i_1.
  (* Then *)
  Have: i_1 < n.
  (* Invariant *)
  Have: l <= x.
  (* Invariant *)
  Have: i_1 <= 2147483645.
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:16ms) (10ms) (34993)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:16ms) (5ms) (26)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 67):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 68):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 68):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 69):
Let x = 1 + i_1.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n) /\
      is_sint32(x).
  (* Goal *)
  When: (l <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: (0 < l) /\ (l <= 2147483646).
  (* Invariant *)
  Have: l <= k.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: l < n.
  (* Invariant *)
  Have: (0 < k) /\ (k <= 2147483646).
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: k <= 2147483647.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < k) -> (i_2 < n))).
  (* Invariant *)
  Have: forall i_2 : Z. let x_1 = l + i_2 in ((0 < i_2) -> ((i_2 < k) ->
      ((x_1 <= n) \/ (n <= x_1)))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < k) -> (n <= 2147483647))).
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: i_1 <= 2147483647.
  (* Invariant *)
  Have: i_1 <= 2147483646.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 < i_1) -> ((l <= i_2) -> (i_2 < n))).
  (* Invariant *)
  Have: 0 < i_1.
  (* Then *)
  Have: i_1 < n.
  (* Invariant *)
  Have: l <= x.
  (* Invariant *)
  Have: i_1 <= 2147483645.
}
Prove: i < n.
Prover Z3 4.8.12 returns Valid (Qed:18ms) (10ms) (35039)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:18ms) (3ms) (30)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 69):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 70):
Let x = 1 + i_1.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n) /\
      is_sint32(x).
  (* Goal *)
  When: (l <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: (0 < l) /\ (l <= 2147483646).
  (* Invariant *)
  Have: l <= k.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: l < n.
  (* Invariant *)
  Have: (0 < k) /\ (k <= 2147483646).
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: k <= 2147483647.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < k) -> (i_2 < n))).
  (* Invariant *)
  Have: forall i_2 : Z. let x_1 = l + i_2 in ((0 < i_2) -> ((i_2 < k) ->
      ((x_1 <= n) \/ (n <= x_1)))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < k) -> (n <= 2147483647))).
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: i_1 <= 2147483647.
  (* Invariant *)
  Have: i_1 <= 2147483646.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 < i_1) -> ((l <= i_2) -> (i_2 < n))).
  (* Invariant *)
  Have: 0 < i_1.
  (* Then *)
  Have: i_1 < n.
  (* Invariant *)
  Have: l <= x.
  (* Invariant *)
  Have: i_1 <= 2147483645.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= i_1) -> ((l <= i_2) -> (i_2 < n))).
}
Prove: 0 < i.
Prover Z3 4.8.12 returns Valid (Qed:19ms) (20ms) (35727)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:19ms) (6ms) (26)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 70):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 71):
Let x = 1 + i_1.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n) /\
      is_sint32(x).
  (* Goal *)
  When: (l <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: (0 < l) /\ (l <= 2147483646).
  (* Invariant *)
  Have: l <= k.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: l < n.
  (* Invariant *)
  Have: (0 < k) /\ (k <= 2147483646).
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: k <= 2147483647.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < k) -> (i_2 < n))).
  (* Invariant *)
  Have: forall i_2 : Z. let x_1 = l + i_2 in ((0 < i_2) -> ((i_2 < k) ->
      ((x_1 <= n) \/ (n <= x_1)))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 < i_2) -> ((i_2 < k) -> (n <= 2147483647))).
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: i_1 <= 2147483647.
  (* Invariant *)
  Have: i_1 <= 2147483646.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 < i_1) -> ((l <= i_2) -> (i_2 < n))).
  (* Invariant *)
  Have: 0 < i_1.
  (* Then *)
  Have: i_1 < n.
  (* Invariant *)
  Have: l <= x.
  (* Invariant *)
  Have: i_1 <= 2147483645.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= i_1) -> ((l <= i_2) -> (i_2 < n))).
}
Prove: 0 <= i.
Prover Z3 4.8.12 returns Valid (Qed:21ms) (20ms) (35713)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:21ms) (4ms) (26)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 71):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 72):
Prove: true.
Prover Qed returns Valid (11ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 72):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 73):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 73):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0012_0014/0012_merged.c, line 74):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0012_0014/0012_merged.c, line 74):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Loop assigns (file out/0012_0014/0012_merged.c, line 50) (1/3):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/0012_0014/0012_merged.c, line 50) (2/3):
Effect at line 77
Prove: true.
Prover Qed returns Valid (8ms)

------------------------------------------------------------

Goal Loop assigns (file out/0012_0014/0012_merged.c, line 50) (3/3):
Call Result at line 80
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Loop assigns (file out/0012_0014/0012_merged.c, line 75):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/0012_0014/0012_merged.c:4: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/0012_0014/0012_merged.c:11: Warning: 
  No 'assigns' specification for function 'foo0012'.
  Callers assumptions might be imprecise.

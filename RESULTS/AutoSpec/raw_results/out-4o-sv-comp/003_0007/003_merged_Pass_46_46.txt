[kernel] Parsing out/003_0007/003_merged.c (with preprocessing)
[kernel:typing:no-proto] out/003_0007/003_merged.c:41: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/003_0007/003_merged.c:7: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 46 goals scheduled
[wp] Proved goals:   46 / 46
  Qed:              39
  Alt-Ergo 2.5.4:    7
------------------------------------------------------------
  Function foo003
------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0007/003_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (11ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0007/003_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0007/003_merged.c, line 15):
Let x = 3 * i.
Let x_1 = 2 * n.
Let x_2 = 2 * b.
Let x_3 = -b.
Assume {
  Type: is_sint32(b) /\ is_sint32(i) /\ is_sint32(n) /\ is_sint32(tmp_0) /\
      is_sint32(1 + i) /\ is_sint32(2 + b) /\ is_sint32(x - b) /\
      is_sint32(1 + x - b).
  (* Residual *)
  When: tmp_0 != 0.
  (* Pre-condition *)
  Have: n <= 999999.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: i <= b.
  (* Invariant *)
  Have: b <= (2 * i).
  (* Invariant *)
  Have: b <= x.
  (* Invariant *)
  Have: b <= x_1.
  (* Invariant *)
  Have: (x <= x_2) \/ (x_2 <= x).
  (* Invariant *)
  Have: 0 <= b.
  (* Invariant *)
  Have: x <= (b + x_1).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= i) -> ((0 <= i_1) ->
      ((i_1 <= b) /\ ((b + i_1) <= x)))).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: i <= n.
  (* Then *)
  Have: i < n.
}
Prove: i <= (1 + b).
Prover Z3 4.8.12 returns Valid (Qed:13ms) (33527)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (5ms) (23)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0007/003_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0007/003_merged.c, line 16):
Let x = 3 * i.
Let x_1 = 2 * n.
Let x_2 = 2 * b.
Let x_3 = 2 * i.
Let x_4 = -b.
Assume {
  Type: is_sint32(b) /\ is_sint32(i) /\ is_sint32(n) /\ is_sint32(1 + b) /\
      is_sint32(1 + i) /\ is_sint32(x - b) /\ is_sint32(2 + x - b).
  (* Pre-condition *)
  Have: n <= 999999.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: i <= b.
  (* Invariant *)
  Have: b <= x_3.
  (* Invariant *)
  Have: b <= x.
  (* Invariant *)
  Have: b <= x_1.
  (* Invariant *)
  Have: (x <= x_2) \/ (x_2 <= x).
  (* Invariant *)
  Have: 0 <= b.
  (* Invariant *)
  Have: x <= (b + x_1).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= i) -> ((0 <= i_1) ->
      ((i_1 <= b) /\ ((b + i_1) <= x)))).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: i <= n.
  (* Then *)
  Have: i < n.
}
Prove: b <= (1 + x_3).
Prover Z3 4.8.12 returns Valid (Qed:14ms) (20ms) (33255)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:14ms) (23)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0007/003_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0007/003_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (15ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0007/003_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0007/003_merged.c, line 18):
Let x = 1 + i.
Let x_1 = 3 * i.
Let x_2 = 2 * n.
Let x_3 = 2 * b_1.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(b) /\
      is_sint32(b_1) /\ is_sint32(i) /\ is_sint32(n) /\ is_sint32(tmp_0) /\
      is_sint32(x) /\ is_sint32(x_1 - b_1).
  (* Pre-condition *)
  Have: n <= 999999.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: i <= b_1.
  (* Invariant *)
  Have: b_1 <= (2 * i).
  (* Invariant *)
  Have: b_1 <= x_1.
  (* Invariant *)
  Have: b_1 <= x_2.
  (* Invariant *)
  Have: (x_1 <= x_3) \/ (x_3 <= x_1).
  (* Invariant *)
  Have: 0 <= b_1.
  (* Invariant *)
  Have: x_1 <= (b_1 + x_2).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= i) -> ((0 <= i_1) ->
      ((i_1 <= b_1) /\ ((b_1 + i_1) <= x_1)))).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: i <= n.
  (* Then *)
  Have: i < n.
  If tmp_0 != 0
  Then {
    Have: (a_1 + b_1) = x_1.
    Have: (1 + x_1) = (a + b_1).
    Have: (2 + b_1) = b.
  }
  Else {
    Have: (a_2 + b_1) = x_1.
    Have: (2 + x_1) = (a + b_1).
    Have: (1 + b_1) = b.
  }
  (* Invariant *)
  Have: ((x = n) -> ((a + b) = (3 * n))).
  (* Invariant *)
  Have: i < b.
  (* Invariant *)
  Have: i < a.
  (* Invariant *)
  Have: b <= (1 + a + i).
}
Prove: b <= (3 + x_1).
Prover Z3 4.8.12 returns Valid (Qed:17ms) (20ms) (36839)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:17ms) (7ms) (73)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0007/003_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0007/003_merged.c, line 19):
Let x = 3 * i.
Let x_1 = 1 + i.
Let x_2 = 2 * n.
Let x_3 = 2 * b_1.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(b) /\
      is_sint32(b_1) /\ is_sint32(i) /\ is_sint32(n) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x - b_1).
  (* Pre-condition *)
  Have: n <= 999999.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: i <= b_1.
  (* Invariant *)
  Have: b_1 <= (2 * i).
  (* Invariant *)
  Have: b_1 <= x.
  (* Invariant *)
  Have: b_1 <= x_2.
  (* Invariant *)
  Have: (x <= x_3) \/ (x_3 <= x).
  (* Invariant *)
  Have: 0 <= b_1.
  (* Invariant *)
  Have: x <= (b_1 + x_2).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= i) -> ((0 <= i_1) ->
      ((i_1 <= b_1) /\ ((b_1 + i_1) <= x)))).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: i <= n.
  (* Then *)
  Have: i < n.
  If tmp_0 != 0
  Then {
    Have: (a_1 + b_1) = x.
    Have: (1 + x) = (a + b_1).
    Have: (2 + b_1) = b.
  }
  Else {
    Have: (a_2 + b_1) = x.
    Have: (2 + x) = (a + b_1).
    Have: (1 + b_1) = b.
  }
  (* Invariant *)
  Have: ((x_1 = n) -> ((a + b) = (3 * n))).
  (* Invariant *)
  Have: i < b.
  (* Invariant *)
  Have: i < a.
  (* Invariant *)
  Have: b <= (1 + a + i).
  (* Invariant *)
  Have: b <= (3 + x).
}
Prove: b <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:17ms) (10ms) (36988)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:17ms) (8ms) (89)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0007/003_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0007/003_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (14ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0007/003_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0007/003_merged.c, line 21):
Let x = 2 * n.
Let x_1 = 3 * i.
Let x_2 = 3 + x_1.
Let x_3 = 2 * i.
Let x_4 = 2 * b_3.
Let x_5 = 2 * b.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b) /\ is_sint32(b_1) /\
      is_sint32(b_2) /\ is_sint32(b_3) /\ is_sint32(i) /\ is_sint32(n) /\
      is_sint32(tmp_0) /\ is_sint32(1 + i) /\ is_sint32(x_1 - b_3) /\
      is_sint32(3 + x_1 - b).
  (* Pre-condition *)
  Have: n <= 999999.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: i <= b_3.
  (* Invariant *)
  Have: b_3 <= x_3.
  (* Invariant *)
  Have: b_3 <= x_1.
  (* Invariant *)
  Have: b_3 <= x.
  (* Invariant *)
  Have: (x_1 <= x_4) \/ (x_4 <= x_1).
  (* Invariant *)
  Have: 0 <= b_3.
  (* Invariant *)
  Have: x_1 <= (b_3 + x).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= i) -> ((0 <= i_1) ->
      ((i_1 <= b_3) /\ ((b_3 + i_1) <= x_1)))).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: i <= n.
  (* Then *)
  Have: i < n.
  If tmp_0 != 0
  Then { Have: (b_3 = b_1) /\ ((a + b_1) = x_1). Have: (2 + b_1) = b. }
  Else { Have: (b_3 = b_2) /\ ((a_1 + b_2) = x_1). Have: (1 + b_2) = b. }
  (* Invariant *)
  Have: i < b.
  (* Invariant *)
  Have: b <= (2 + x_3).
  (* Invariant *)
  Have: b <= x_2.
  (* Invariant *)
  Have: b <= x.
}
Prove: (x_2 <= x_5) \/ (x_5 <= x_2).
Prover Z3 4.8.12 returns Valid (Qed:17ms) (10ms) (36239)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:17ms) (5ms) (31)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0007/003_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0007/003_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0007/003_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0007/003_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0007/003_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0007/003_merged.c, line 24):
Let x = 3 * i.
Let x_1 = 3 + x.
Let x_2 = 2 * b.
Let x_3 = 2 * n.
Let x_4 = 2 * i.
Let x_5 = 2 * b_3.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b) /\ is_sint32(b_1) /\
      is_sint32(b_2) /\ is_sint32(b_3) /\ is_sint32(i) /\ is_sint32(n) /\
      is_sint32(tmp_0) /\ is_sint32(1 + i) /\ is_sint32(x - b_3) /\
      is_sint32(3 + x - b).
  (* Pre-condition *)
  Have: n <= 999999.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: i <= b_3.
  (* Invariant *)
  Have: b_3 <= x_4.
  (* Invariant *)
  Have: b_3 <= x.
  (* Invariant *)
  Have: b_3 <= x_3.
  (* Invariant *)
  Have: (x <= x_5) \/ (x_5 <= x).
  (* Invariant *)
  Have: 0 <= b_3.
  (* Invariant *)
  Have: x <= (b_3 + x_3).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= i) -> ((0 <= i_1) ->
      ((i_1 <= b_3) /\ ((b_3 + i_1) <= x)))).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: i <= n.
  (* Then *)
  Have: i < n.
  If tmp_0 != 0
  Then { Have: (b_3 = b_1) /\ ((a + b_1) = x). Have: (2 + b_1) = b. }
  Else { Have: (b_3 = b_2) /\ ((a_1 + b_2) = x). Have: (1 + b_2) = b. }
  (* Invariant *)
  Have: i < b.
  (* Invariant *)
  Have: b <= (2 + x_4).
  (* Invariant *)
  Have: b <= x_1.
  (* Invariant *)
  Have: b <= x_3.
  (* Invariant *)
  Have: (x_1 <= x_2) \/ (x_2 <= x_1).
  (* Invariant *)
  Have: 0 <= b.
}
Prove: x_1 <= (b + x_3).
Prover Z3 4.8.12 returns Valid (Qed:18ms) (20ms) (36551)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:18ms) (6ms) (42)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0007/003_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0007/003_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0007/003_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0007/003_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0007/003_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0007/003_merged.c, line 27):
Let x = 3 * i_1.
Let x_1 = 3 + x.
Let x_2 = 2 * n.
Let x_3 = 2 * b.
Let x_4 = 2 * i_1.
Let x_5 = 2 * b_3.
Let x_6 = 1 + i_1.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b) /\ is_sint32(b_1) /\
      is_sint32(b_2) /\ is_sint32(b_3) /\ is_sint32(i_1) /\ is_sint32(n) /\
      is_sint32(tmp_0) /\ is_sint32(x_6) /\ is_sint32(x - b_3) /\
      is_sint32(3 + x - b).
  (* Goal *)
  When: (0 <= i) /\ (i <= x_6).
  (* Pre-condition *)
  Have: n <= 999999.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: i_1 <= b_3.
  (* Invariant *)
  Have: b_3 <= x_4.
  (* Invariant *)
  Have: b_3 <= x.
  (* Invariant *)
  Have: b_3 <= x_2.
  (* Invariant *)
  Have: (x <= x_5) \/ (x_5 <= x).
  (* Invariant *)
  Have: 0 <= b_3.
  (* Invariant *)
  Have: x <= (b_3 + x_2).
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= i_1) -> ((0 <= i_2) ->
      ((i_2 <= b_3) /\ ((b_3 + i_2) <= x)))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Then *)
  Have: i_1 < n.
  If tmp_0 != 0
  Then { Have: (b_3 = b_1) /\ ((a + b_1) = x). Have: (2 + b_1) = b. }
  Else { Have: (b_3 = b_2) /\ ((a_1 + b_2) = x). Have: (1 + b_2) = b. }
  (* Invariant *)
  Have: i_1 < b.
  (* Invariant *)
  Have: b <= (2 + x_4).
  (* Invariant *)
  Have: b <= x_1.
  (* Invariant *)
  Have: b <= x_2.
  (* Invariant *)
  Have: (x_1 <= x_3) \/ (x_3 <= x_1).
  (* Invariant *)
  Have: 0 <= b.
  (* Invariant *)
  Have: x_1 <= (b + x_2).
}
Prove: (i <= b) /\ ((b + i) <= x_1).
Prover Z3 4.8.12 returns Valid (Qed:18ms) (10ms) (38470)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:18ms) (13ms) (170)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0007/003_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0007/003_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0007/003_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0007/003_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0007/003_merged.c, line 29):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0007/003_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0007/003_merged.c, line 30):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0007/003_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0007/003_merged.c, line 31):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0007/003_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0007/003_merged.c, line 32):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0007/003_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0007/003_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (0.50ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0007/003_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0007/003_merged.c, line 34):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0007/003_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0007/003_merged.c, line 35):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/003_0007/003_merged.c, line 36) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/003_0007/003_merged.c, line 36) (2/2):
Call Result at line 41
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/003_0007/003_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/003_0007/003_merged.c:7: Warning: 
  No 'assigns' specification for function 'foo003'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/0013_0002/0013_loop_assigns.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] out/0013_0002/0013_loop_assigns.c:15: Warning: 
  Missing assigns clause (assigns 'everything' instead)
[wp] 45 goals scheduled
[wp] [Timeout] typed_foo0013_loop_invariant_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_foo0013_loop_invariant_15_established (Qed 3ms) (Z3)
[wp] [Timeout] typed_foo0013_loop_invariant_16_established (Qed 3ms) (Z3)
[wp] Proved goals:   42 / 45
  Qed:              35
  Alt-Ergo 2.5.4:    7 (5ms-5ms-7ms)
  Timeout:           3
------------------------------------------------------------
  Function foo0013
------------------------------------------------------------

Goal Preservation of Invariant (file out/0013_0002/0013_loop_assigns.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0013_0002/0013_loop_assigns.c, line 24):
Assume {
  Type: is_sint32(j) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(m) /\
      is_sint32(n) /\ is_sint32(n_1).
  (* Pre-condition *)
  Have: ((-2147483647) <= n_1) /\ (n_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= m) /\ (m <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= l) /\ (l <= 2147483646).
  (* Pre-condition *)
  Have: (3 * n_1) <= (l + m).
  (* Then *)
  Have: k < n.
  (* Then *)
  Have: j < (3 * k).
}
Prove: k <= j.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (3s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (3s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0013_0002/0013_loop_assigns.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0013_0002/0013_loop_assigns.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0013_0002/0013_loop_assigns.c, line 26):
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(k) /\ is_sint32(l) /\
      is_sint32(m) /\ is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(1 + k).
  (* Pre-condition *)
  Have: ((-2147483647) <= n_1) /\ (n_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= m) /\ (m <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= l) /\ (l <= 2147483646).
  (* Pre-condition *)
  Have: (3 * n_1) <= (l + m).
  (* Then *)
  Have: i < n.
  (* Then *)
  Have: j < (3 * i).
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (2 * i) <= j.
  (* Invariant *)
  Have: i <= 0.
  (* Invariant *)
  Have: k <= j.
  (* Invariant *)
  Have: k <= (2 * n).
  (* Invariant *)
  Have: k <= 0.
  (* Invariant *)
  Have: 0 <= k.
  (* Then *)
  Have: 0 < j.
}
Prove: 0 < n.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (33236)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (7ms) (25)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0013_0002/0013_loop_assigns.c, line 26):
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(l) /\ is_sint32(m) /\
      is_sint32(n) /\ is_sint32(n_1).
  (* Pre-condition *)
  Have: ((-2147483647) <= n_1) /\ (n_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= m) /\ (m <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= l) /\ (l <= 2147483646).
  (* Pre-condition *)
  Have: (3 * n_1) <= (l + m).
  (* Then *)
  Have: i < n.
  (* Then *)
  Have: j < (3 * i).
  (* Invariant *)
  Have: i <= j.
}
Prove: 0 <= n.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (31543)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (40)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0013_0002/0013_loop_assigns.c, line 27):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0013_0002/0013_loop_assigns.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0013_0002/0013_loop_assigns.c, line 28):
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(k) /\ is_sint32(l) /\
      is_sint32(m) /\ is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(1 + k).
  (* Pre-condition *)
  Have: ((-2147483647) <= n_1) /\ (n_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= m) /\ (m <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= l) /\ (l <= 2147483646).
  (* Pre-condition *)
  Have: (3 * n_1) <= (l + m).
  (* Then *)
  Have: i < n.
  (* Then *)
  Have: j < (3 * i).
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (2 * i) <= j.
  (* Invariant *)
  Have: i <= 0.
  (* Invariant *)
  Have: k <= j.
  (* Invariant *)
  Have: k <= (2 * n).
  (* Invariant *)
  Have: k <= 0.
  (* Invariant *)
  Have: 0 <= k.
  (* Then *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 < n.
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (33232)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (5ms) (25)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0013_0002/0013_loop_assigns.c, line 28):
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(l) /\ is_sint32(m) /\
      is_sint32(n) /\ is_sint32(n_1).
  (* Pre-condition *)
  Have: ((-2147483647) <= n_1) /\ (n_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= m) /\ (m <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= l) /\ (l <= 2147483646).
  (* Pre-condition *)
  Have: (3 * n_1) <= (l + m).
  (* Then *)
  Have: i < n.
  (* Then *)
  Have: j < (3 * i).
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: 0 <= n.
}
Prove: 0 <= i.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (31646)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (5ms) (42)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0013_0002/0013_loop_assigns.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0013_0002/0013_loop_assigns.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0013_0002/0013_loop_assigns.c, line 30):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0013_0002/0013_loop_assigns.c, line 30):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0013_0002/0013_loop_assigns.c, line 31):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0013_0002/0013_loop_assigns.c, line 31):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0013_0002/0013_loop_assigns.c, line 32):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0013_0002/0013_loop_assigns.c, line 32):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0013_0002/0013_loop_assigns.c, line 33):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0013_0002/0013_loop_assigns.c, line 33):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0013_0002/0013_loop_assigns.c, line 34):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0013_0002/0013_loop_assigns.c, line 34):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0013_0002/0013_loop_assigns.c, line 35):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0013_0002/0013_loop_assigns.c, line 35):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0013_0002/0013_loop_assigns.c, line 36):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0013_0002/0013_loop_assigns.c, line 36):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0013_0002/0013_loop_assigns.c, line 37):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0013_0002/0013_loop_assigns.c, line 37):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0013_0002/0013_loop_assigns.c, line 38):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0013_0002/0013_loop_assigns.c, line 38):
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(l) /\ is_sint32(m) /\
      is_sint32(n) /\ is_sint32(n_1).
  (* Pre-condition *)
  Have: ((-2147483647) <= n_1) /\ (n_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= m) /\ (m <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= l) /\ (l <= 2147483646).
  (* Pre-condition *)
  Have: (3 * n_1) <= (l + m).
  (* Then *)
  Have: i < n.
  (* Then *)
  Have: j < (3 * i).
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= i.
}
Prove: (2 * i) <= j.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (3s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (3s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0013_0002/0013_loop_assigns.c, line 39):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0013_0002/0013_loop_assigns.c, line 39):
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(l) /\ is_sint32(m) /\
      is_sint32(n) /\ is_sint32(n_1).
  (* Pre-condition *)
  Have: ((-2147483647) <= n_1) /\ (n_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= m) /\ (m <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= l) /\ (l <= 2147483646).
  (* Pre-condition *)
  Have: (3 * n_1) <= (l + m).
  (* Then *)
  Have: i < n.
  (* Then *)
  Have: j < (3 * i).
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (2 * i) <= j.
}
Prove: i <= 0.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (3s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (3s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0013_0002/0013_loop_assigns.c, line 40):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0013_0002/0013_loop_assigns.c, line 40):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0013_0002/0013_loop_assigns.c, line 41):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0013_0002/0013_loop_assigns.c, line 41):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0013_0002/0013_loop_assigns.c, line 42):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0013_0002/0013_loop_assigns.c, line 42):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0013_0002/0013_loop_assigns.c, line 43):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0013_0002/0013_loop_assigns.c, line 43):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/0013_0002/0013_loop_assigns.c, line 18) (1/4):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/0013_0002/0013_loop_assigns.c, line 18) (2/4):
Effect at line 21
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(k) /\ is_sint32(l) /\
      is_sint32(m) /\ is_sint32(n) /\ is_sint32(n_1).
  (* Pre-condition *)
  Have: ((-2147483647) <= n_1) /\ (n_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= m) /\ (m <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= l) /\ (l <= 2147483646).
  (* Pre-condition *)
  Have: (3 * n_1) <= (l + m).
  (* Then *)
  Have: i < n.
  (* Then *)
  Have: j < (3 * i).
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (2 * i) <= j.
  (* Invariant *)
  Have: i <= 0.
  (* Invariant *)
  Have: k <= j.
  (* Invariant *)
  Have: k <= (2 * n).
  (* Invariant *)
  Have: k <= 0.
  (* Invariant *)
  Have: 0 <= k.
  (* Else *)
  Have: j <= 0.
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (32901)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (5ms) (27)

------------------------------------------------------------

Goal Loop assigns (file out/0013_0002/0013_loop_assigns.c, line 18) (3/4):
Effect at line 46
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(k) /\ is_sint32(l) /\
      is_sint32(m) /\ is_sint32(n) /\ is_sint32(n_1).
  (* Pre-condition *)
  Have: ((-2147483647) <= n_1) /\ (n_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= m) /\ (m <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= l) /\ (l <= 2147483646).
  (* Pre-condition *)
  Have: (3 * n_1) <= (l + m).
  (* Then *)
  Have: i < n.
  (* Then *)
  Have: j < (3 * i).
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (2 * i) <= j.
  (* Invariant *)
  Have: i <= 0.
  (* Invariant *)
  Have: k <= j.
  (* Invariant *)
  Have: k <= (2 * n).
  (* Invariant *)
  Have: k <= 0.
  (* Invariant *)
  Have: 0 <= k.
  (* Else *)
  Have: j <= 0.
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (32901)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (5ms) (27)

------------------------------------------------------------

Goal Loop assigns (file out/0013_0002/0013_loop_assigns.c, line 18) (4/4):
Effect at line 46
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(k) /\ is_sint32(l) /\
      is_sint32(m) /\ is_sint32(n) /\ is_sint32(n_1).
  (* Pre-condition *)
  Have: ((-2147483647) <= n_1) /\ (n_1 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= m) /\ (m <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= l) /\ (l <= 2147483646).
  (* Pre-condition *)
  Have: (3 * n_1) <= (l + m).
  (* Then *)
  Have: i < n.
  (* Then *)
  Have: j < (3 * i).
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (2 * i) <= j.
  (* Invariant *)
  Have: i <= 0.
  (* Invariant *)
  Have: k <= j.
  (* Invariant *)
  Have: k <= (2 * n).
  (* Invariant *)
  Have: k <= 0.
  (* Invariant *)
  Have: 0 <= k.
  (* Else *)
  Have: j <= 0.
}
Prove: false.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (32901)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (5ms) (27)

------------------------------------------------------------

Goal Loop assigns (file out/0013_0002/0013_loop_assigns.c, line 44):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/0013_0002/0013_loop_assigns.c:11: Warning: 
  No 'assigns' specification for function 'foo0013'.
  Callers assumptions might be imprecise.

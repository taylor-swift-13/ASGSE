[kernel] Parsing out/008_0018/008_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 55 goals scheduled
[wp] [Timeout] typed_foo008_loop_invariant_5_established (Qed 2ms) (Z3)
[wp] Proved goals:   54 / 55
  Qed:              44
  Alt-Ergo 2.5.4:    5 (6ms-90ms-149ms)
  Z3 4.8.12:         5 (200ms-550ms)
  Timeout:           1
------------------------------------------------------------
  Function foo008
------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 17):
Let x = i_6 + res_0.
Let x_1 = i_5 + res_0.
Let x_2 = cnt_0 + res_1.
Let x_3 = i_4 + res_0.
Let x_4 = 1 + res_1.
Assume {
  Type: is_sint32(cnt_0) /\ is_sint32(res_1) /\ is_sint32(res_0) /\
      is_sint32(cnt_0 - 1) /\ is_sint32(x_4) /\
      is_sint32(cnt_0 + res_1 - res_0).
  (* Goal *)
  When: (0 <= i) /\ ((i + res_0) <= x_2).
  (* Pre-condition *)
  Have: res_0 <= 999999.
  (* Pre-condition *)
  Have: (res_0 <= x_2) /\ (x_2 <= (1000000 + res_0)).
  (* Invariant *)
  Have: forall i_7 : Z. ((0 <= i_7) -> (((res_0 + i_7) <= x_2) ->
      (i_7 = 0))).
  (* Invariant *)
  Have: ((i_1 <= 0) -> ((0 <= i_1) -> (i_1 = 0))).
  (* Invariant *)
  Have: ((0 <= i_2) -> (((i_2 + res_0) <= x_2) -> (i_2 = 0))).
  (* Invariant *)
  Have: ((i_3 <= 0) -> ((0 <= i_3) -> (i_3 = 0))).
  (* Invariant *)
  Have: forall i_7 : Z. ((0 <= i_7) -> (((res_0 + i_7) < res_1) ->
      ((1 + res_0 + i_7) = res_1))).
  (* Invariant *)
  Have: ((0 <= i_4) -> ((x_3 <= res_1) -> (x_3 = res_1))).
  (* Invariant *)
  Have: (0 <= cnt_0) /\ (res_0 <= res_1).
  (* Invariant *)
  Have: ((0 <= i_5) -> ((x_1 <= x_2) -> (x_1 = res_1))).
  (* Invariant *)
  Have: ((0 <= i_6) -> ((x <= res_1) -> (x = res_1))).
  (* Then *)
  Have: 0 < cnt_0.
}
Prove: res_0 <= x_4.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (34827)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (6ms) (30)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 18):
Let x = cnt_0 + res_0.
Let x_1 = 1 + res_0.
Let x_2 = i_6 + res_1.
Let x_3 = i_5 + res_1.
Let x_4 = i_4 + res_1.
Assume {
  Type: is_sint32(cnt_0) /\ is_sint32(res_0) /\ is_sint32(res_1) /\
      is_sint32(cnt_0 - 1) /\ is_sint32(x_1) /\
      is_sint32(cnt_0 + res_0 - res_1).
  (* Goal *)
  When: (0 <= i) /\ ((i + res_1) <= x).
  (* Pre-condition *)
  Have: res_1 <= 999999.
  (* Pre-condition *)
  Have: (res_1 <= x) /\ (x <= (1000000 + res_1)).
  (* Invariant *)
  Have: forall i_7 : Z. ((0 <= i_7) -> (((res_1 + i_7) <= x) -> (i_7 = 0))).
  (* Invariant *)
  Have: ((i_1 <= 0) -> ((0 <= i_1) -> (i_1 = 0))).
  (* Invariant *)
  Have: ((0 <= i_2) -> (((i_2 + res_1) <= x) -> (i_2 = 0))).
  (* Invariant *)
  Have: ((i_3 <= 0) -> ((0 <= i_3) -> (i_3 = 0))).
  (* Invariant *)
  Have: forall i_7 : Z. ((0 <= i_7) -> (((res_1 + i_7) < res_0) ->
      ((1 + res_1 + i_7) = res_0))).
  (* Invariant *)
  Have: ((0 <= i_4) -> ((x_4 <= res_0) -> (x_4 = res_0))).
  (* Invariant *)
  Have: (0 <= cnt_0) /\ (res_1 <= res_0).
  (* Invariant *)
  Have: ((0 <= i_5) -> ((x_3 <= x) -> (x_3 = res_0))).
  (* Invariant *)
  Have: ((0 <= i_6) -> ((x_2 <= res_0) -> (x_2 = res_0))).
  (* Then *)
  Have: 0 < cnt_0.
  (* Invariant *)
  Have: forall i_7 : Z. ((0 <= i_7) -> (((res_1 + i_7) <= x) ->
      (res_1 <= x_1))).
}
Prove: i = 0.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (200ms) (192599)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 18):
Assume {
  Type: is_sint32(b) /\ is_sint32(res_0).
  (* Goal *)
  When: (i <= b) /\ (0 <= i).
  (* Pre-condition *)
  Have: res_0 <= 999999.
  (* Pre-condition *)
  Have: (0 <= b) /\ (b <= 1000000).
}
Prove: i = 0.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 20):
Let x = cnt_0 + res_1.
Let x_1 = 1 + res_1.
Let x_2 = i_6 + res_0.
Let x_3 = i_5 + res_0.
Let x_4 = i_4 + res_0.
Let x_5 = i + res_0.
Assume {
  Type: is_sint32(cnt_0) /\ is_sint32(res_1) /\ is_sint32(res_0) /\
      is_sint32(cnt_0 - 1) /\ is_sint32(x_1) /\
      is_sint32(cnt_0 + res_1 - res_0).
  (* Goal *)
  When: (0 <= i) /\ (x_5 <= res_1).
  (* Pre-condition *)
  Have: res_0 <= 999999.
  (* Pre-condition *)
  Have: (res_0 <= x) /\ (x <= (1000000 + res_0)).
  (* Invariant *)
  Have: forall i_7 : Z. ((0 <= i_7) -> (((res_0 + i_7) <= x) -> (i_7 = 0))).
  (* Invariant *)
  Have: ((i_1 <= 0) -> ((0 <= i_1) -> (i_1 = 0))).
  (* Invariant *)
  Have: ((0 <= i_2) -> (((i_2 + res_0) <= x) -> (i_2 = 0))).
  (* Invariant *)
  Have: ((i_3 <= 0) -> ((0 <= i_3) -> (i_3 = 0))).
  (* Invariant *)
  Have: forall i_7 : Z. ((0 <= i_7) -> (((res_0 + i_7) < res_1) ->
      ((1 + res_0 + i_7) = res_1))).
  (* Invariant *)
  Have: ((0 <= i_4) -> ((x_4 <= res_1) -> (x_4 = res_1))).
  (* Invariant *)
  Have: (0 <= cnt_0) /\ (res_0 <= res_1).
  (* Invariant *)
  Have: ((0 <= i_5) -> ((x_3 <= x) -> (x_3 = res_1))).
  (* Invariant *)
  Have: ((0 <= i_6) -> ((x_2 <= res_1) -> (x_2 = res_1))).
  (* Then *)
  Have: 0 < cnt_0.
  (* Invariant *)
  Have: forall i_7 : Z. ((0 <= i_7) -> (((res_0 + i_7) <= x) ->
      (res_0 <= x_1))).
}
Prove: x_5 = res_1.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (410ms) (283369)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 21):
Let x = cnt_0 + res_1.
Let x_1 = 1 + res_1.
Let x_2 = i_5 + res_0.
Let x_3 = i_4 + res_0.
Let x_4 = i_3 + res_0.
Assume {
  Type: is_sint32(cnt_0) /\ is_sint32(res_1) /\ is_sint32(res_0) /\
      is_sint32(cnt_0 - 1) /\ is_sint32(x_1) /\
      is_sint32(cnt_0 + res_1 - res_0).
  (* Pre-condition *)
  Have: res_0 <= 999999.
  (* Pre-condition *)
  Have: (res_0 <= x) /\ (x <= (1000000 + res_0)).
  (* Invariant *)
  Have: forall i_6 : Z. ((0 <= i_6) -> (((res_0 + i_6) <= x) -> (i_6 = 0))).
  (* Invariant *)
  Have: ((i <= 0) -> ((0 <= i) -> (i = 0))).
  (* Invariant *)
  Have: ((0 <= i_1) -> (((i_1 + res_0) <= x) -> (i_1 = 0))).
  (* Invariant *)
  Have: ((i_2 <= 0) -> ((0 <= i_2) -> (i_2 = 0))).
  (* Invariant *)
  Have: forall i_6 : Z. ((0 <= i_6) -> (((res_0 + i_6) < res_1) ->
      ((1 + res_0 + i_6) = res_1))).
  (* Invariant *)
  Have: ((0 <= i_3) -> ((x_4 <= res_1) -> (x_4 = res_1))).
  (* Invariant *)
  Have: (0 <= cnt_0) /\ (res_0 <= res_1).
  (* Invariant *)
  Have: ((0 <= i_4) -> ((x_3 <= x) -> (x_3 = res_1))).
  (* Invariant *)
  Have: ((0 <= i_5) -> ((x_2 <= res_1) -> (x_2 = res_1))).
  (* Then *)
  Have: 0 < cnt_0.
  (* Invariant *)
  Have: forall i_6 : Z. ((0 <= i_6) -> (((res_0 + i_6) <= x) ->
      (res_0 <= x_1))).
  (* Invariant *)
  Have: forall i_6 : Z. let x_5 = res_0 + i_6 in ((0 <= i_6) ->
      ((x_5 <= res_1) -> (x_5 = res_1))).
}
Prove: exists i_6 : Z. let x_5 = res_0 + i_6 in ((0 <= i_6) ->
    ((x_5 <= x_1) -> (x_5 = x_1))).
Prover Z3 4.8.12 returns Valid (Qed:7ms) (230ms) (270546)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 21):
Assume {
  Type: is_sint32(b) /\ is_sint32(res_0).
  (* Pre-condition *)
  Have: res_0 <= 999999.
  (* Pre-condition *)
  Have: (0 <= b) /\ (b <= 1000000).
  (* Invariant *)
  Have: forall i : Z. ((i <= b) -> ((0 <= i) -> (i = 0))).
}
Prove: exists i : Z. ((i <= 0) -> ((0 <= i) -> (i = 0))).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (143ms) (2010)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 22):
Let x = i_6 + res_0.
Let x_1 = 1 + res_1.
Let x_2 = cnt_0 + res_1.
Let x_3 = i_5 + res_0.
Let x_4 = i_4 + res_0.
Let x_5 = i_3 + res_0.
Assume {
  Type: is_sint32(cnt_0) /\ is_sint32(res_1) /\ is_sint32(res_0) /\
      is_sint32(cnt_0 - 1) /\ is_sint32(x_1) /\
      is_sint32(cnt_0 + res_1 - res_0).
  (* Pre-condition *)
  Have: res_0 <= 999999.
  (* Pre-condition *)
  Have: (res_0 <= x_2) /\ (x_2 <= (1000000 + res_0)).
  (* Invariant *)
  Have: forall i_7 : Z. ((0 <= i_7) -> (((res_0 + i_7) <= x_2) ->
      (i_7 = 0))).
  (* Invariant *)
  Have: ((i <= 0) -> ((0 <= i) -> (i = 0))).
  (* Invariant *)
  Have: ((0 <= i_1) -> (((i_1 + res_0) <= x_2) -> (i_1 = 0))).
  (* Invariant *)
  Have: ((i_2 <= 0) -> ((0 <= i_2) -> (i_2 = 0))).
  (* Invariant *)
  Have: forall i_7 : Z. ((0 <= i_7) -> (((res_0 + i_7) < res_1) ->
      ((1 + res_0 + i_7) = res_1))).
  (* Invariant *)
  Have: ((0 <= i_3) -> ((x_5 <= res_1) -> (x_5 = res_1))).
  (* Invariant *)
  Have: (0 <= cnt_0) /\ (res_0 <= res_1).
  (* Invariant *)
  Have: ((0 <= i_4) -> ((x_4 <= x_2) -> (x_4 = res_1))).
  (* Invariant *)
  Have: ((0 <= i_5) -> ((x_3 <= res_1) -> (x_3 = res_1))).
  (* Then *)
  Have: 0 < cnt_0.
  (* Invariant *)
  Have: forall i_7 : Z. ((0 <= i_7) -> (((res_0 + i_7) <= x_2) ->
      (res_0 <= x_1))).
  (* Invariant *)
  Have: forall i_7 : Z. let x_6 = res_0 + i_7 in ((0 <= i_7) ->
      ((x_6 <= res_1) -> (x_6 = res_1))).
  (* Invariant *)
  Have: ((0 <= i_6) -> ((x <= x_1) -> (x = x_1))).
}
Prove: res_0 <= x_1.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (8ms) (32)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.99ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 37):
Let x = 1 + res_1.
Let x_1 = i_6 + res_0.
Let x_2 = i_5 + res_0.
Let x_3 = i_4 + res_0.
Let x_4 = cnt_0 + res_1.
Let x_5 = i_3 + res_0.
Assume {
  Type: is_sint32(cnt_0) /\ is_sint32(res_1) /\ is_sint32(res_0) /\
      is_sint32(cnt_0 - 1) /\ is_sint32(x) /\
      is_sint32(cnt_0 + res_1 - res_0).
  (* Pre-condition *)
  Have: res_0 <= 999999.
  (* Pre-condition *)
  Have: (res_0 <= x_4) /\ (x_4 <= (1000000 + res_0)).
  (* Invariant *)
  Have: forall i_7 : Z. ((0 <= i_7) -> (((res_0 + i_7) <= x_4) ->
      (i_7 = 0))).
  (* Invariant *)
  Have: ((i <= 0) -> ((0 <= i) -> (i = 0))).
  (* Invariant *)
  Have: ((0 <= i_1) -> (((i_1 + res_0) <= x_4) -> (i_1 = 0))).
  (* Invariant *)
  Have: ((i_2 <= 0) -> ((0 <= i_2) -> (i_2 = 0))).
  (* Invariant *)
  Have: forall i_7 : Z. ((0 <= i_7) -> (((res_0 + i_7) < res_1) ->
      ((1 + res_0 + i_7) = res_1))).
  (* Invariant *)
  Have: ((0 <= i_3) -> ((x_5 <= res_1) -> (x_5 = res_1))).
  (* Invariant *)
  Have: (0 <= cnt_0) /\ (res_0 <= res_1).
  (* Invariant *)
  Have: ((0 <= i_4) -> ((x_3 <= x_4) -> (x_3 = res_1))).
  (* Invariant *)
  Have: ((0 <= i_5) -> ((x_2 <= res_1) -> (x_2 = res_1))).
  (* Then *)
  Have: 0 < cnt_0.
  (* Invariant *)
  Have: forall i_7 : Z. let x_6 = res_0 + i_7 in ((0 <= i_7) ->
      ((x_6 <= res_1) -> (x_6 = res_1))).
  (* Invariant *)
  Have: ((0 <= i_6) -> ((x_1 <= x) -> (x_1 = x))).
  (* Invariant *)
  Have: res_0 <= x.
}
Prove: exists i_7 : Z. let x_6 = res_0 + i_7 in ((0 <= i_7) ->
    ((x_6 <= x_4) -> (x_6 = x))).
Prover Z3 4.8.12 returns Valid (Qed:9ms) (470ms) (406779)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 37):
Assume {
  Type: is_sint32(b) /\ is_sint32(res_0).
  (* Pre-condition *)
  Have: res_0 <= 999999.
  (* Pre-condition *)
  Have: (0 <= b) /\ (b <= 1000000).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= b) -> ((0 <= i_1) -> (i_1 = 0))).
  (* Invariant *)
  Have: ((i <= 0) -> ((0 <= i) -> (i = 0))).
}
Prove: exists i_1 : Z. ((i_1 <= b) -> ((0 <= i_1) -> (i_1 = 0))).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (147ms) (2184)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 38):
Let x = i_7 + res_0.
Let x_1 = cnt_0 + res_1.
Let x_2 = 1 + res_1.
Let x_3 = i_6 + res_0.
Let x_4 = i_5 + res_0.
Let x_5 = i_4 + res_0.
Let x_6 = i_3 + res_0.
Assume {
  Type: is_sint32(cnt_0) /\ is_sint32(res_1) /\ is_sint32(res_0) /\
      is_sint32(cnt_0 - 1) /\ is_sint32(x_2) /\
      is_sint32(cnt_0 + res_1 - res_0).
  (* Pre-condition *)
  Have: res_0 <= 999999.
  (* Pre-condition *)
  Have: (res_0 <= x_1) /\ (x_1 <= (1000000 + res_0)).
  (* Invariant *)
  Have: forall i_8 : Z. ((0 <= i_8) -> (((res_0 + i_8) <= x_1) ->
      (i_8 = 0))).
  (* Invariant *)
  Have: ((i <= 0) -> ((0 <= i) -> (i = 0))).
  (* Invariant *)
  Have: ((0 <= i_1) -> (((i_1 + res_0) <= x_1) -> (i_1 = 0))).
  (* Invariant *)
  Have: ((i_2 <= 0) -> ((0 <= i_2) -> (i_2 = 0))).
  (* Invariant *)
  Have: forall i_8 : Z. ((0 <= i_8) -> (((res_0 + i_8) < res_1) ->
      ((1 + res_0 + i_8) = res_1))).
  (* Invariant *)
  Have: ((0 <= i_3) -> ((x_6 <= res_1) -> (x_6 = res_1))).
  (* Invariant *)
  Have: (0 <= cnt_0) /\ (res_0 <= res_1).
  (* Invariant *)
  Have: ((0 <= i_4) -> ((x_5 <= x_1) -> (x_5 = res_1))).
  (* Invariant *)
  Have: ((0 <= i_5) -> ((x_4 <= res_1) -> (x_4 = res_1))).
  (* Then *)
  Have: 0 < cnt_0.
  (* Invariant *)
  Have: forall i_8 : Z. let x_7 = res_0 + i_8 in ((0 <= i_8) ->
      ((x_7 <= res_1) -> (x_7 = res_1))).
  (* Invariant *)
  Have: ((0 <= i_6) -> ((x_3 <= x_2) -> (x_3 = x_2))).
  (* Invariant *)
  Have: res_0 <= x_2.
  (* Invariant *)
  Have: ((0 <= i_7) -> ((x <= x_1) -> (x = x_2))).
}
Prove: exists i_8 : Z. let x_7 = res_0 + i_8 in ((0 <= i_8) ->
    ((x_7 <= x_2) -> (x_7 = x_2))).
Prover Z3 4.8.12 returns Valid (Qed:7ms) (550ms) (210085)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 38):
Assume {
  Type: is_sint32(b) /\ is_sint32(res_0).
  (* Pre-condition *)
  Have: res_0 <= 999999.
  (* Pre-condition *)
  Have: (0 <= b) /\ (b <= 1000000).
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= b) -> ((0 <= i_2) -> (i_2 = 0))).
  (* Invariant *)
  Have: ((i <= 0) -> ((0 <= i) -> (i = 0))).
  (* Invariant *)
  Have: ((i_1 <= b) -> ((0 <= i_1) -> (i_1 = 0))).
}
Prove: exists i_2 : Z. ((i_2 <= 0) -> ((0 <= i_2) -> (i_2 = 0))).
Prover Z3 4.8.12 returns Valid (Qed:2ms) (120ms) (187117)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (149ms) (2367)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0018/008_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0018/008_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/008_0018/008_merged.c, line 41):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/008_0018/008_merged.c:6: Warning: 
  No 'assigns' specification for function 'foo008'.
  Callers assumptions might be imprecise.

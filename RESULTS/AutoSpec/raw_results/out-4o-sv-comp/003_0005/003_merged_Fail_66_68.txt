[kernel] Parsing out/003_0005/003_merged.c (with preprocessing)
[kernel:typing:no-proto] out/003_0005/003_merged.c:52: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/003_0005/003_merged.c:7: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 68 goals scheduled
[wp] [Timeout] typed_foo003_loop_invariant_4_preserved (Qed 40ms) (Z3)
[wp] [Timeout] typed_foo003_loop_invariant_6_preserved (Qed 13ms) (Z3)
[wp] Proved goals:   66 / 68
  Qed:              63
  Alt-Ergo 2.5.4:    2 (12ms)
  Z3 4.8.12:         1
  Timeout:           2
------------------------------------------------------------
  Function foo003
------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (15ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 15):
Let x = a + b.
Let x_1 = x / 3.
Let x_2 = 3 * x_1.
Let x_3 = x_2 - 3.
Let x_4 = x_1 - 1.
Let x_5 = x_4 % 2.
Let x_6 = i + x_1.
Let x_7 = 2 * x_1.
Let x_8 = 2 * i.
Let x_9 = 3 * i.
Let x_10 = x_7 - 2 - i.
Let x_11 = i + x_1 - 1.
Let x_12 = 2 * n.
Let x_13 = 1 + x_8.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(b) /\
      is_sint32(b_1) /\ is_sint32(b_2) /\ is_sint32(n) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_4) /\ is_sint32(x_11) /\ is_sint32(x_10).
  (* Pre-condition *)
  Have: n <= 999999.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: x_1 = (1 + (x_3 / 3)).
  (* Invariant *)
  Have: x_6 <= (1 + x_12).
  (* Invariant *)
  Have: (i = 0) \/ (x_1 = (1 + i)).
  (* Invariant *)
  Have: (x_1 + x_5) = x_13.
  (* Invariant *)
  Have: x_1 = (1 + x_9).
  (* Invariant *)
  Have: x_1 <= x_13.
  (* Invariant *)
  Have: x_7 <= (2 + i + x_12).
  (* Invariant *)
  Have: x_1 = (1 + x_8 + (x_4 % 3)).
  (* Invariant *)
  Have: (x_10 % 3) = (x_11 % 3).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < x_1) ->
      ((x_9 = i_3) \/ ((3 + i_3 + x_9) = x_2)))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < x_1) -> (x_1 = (1 + i_3)))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> (((2 + i_3) <= x_1) -> (i_3 < x_1))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> (((2 + i_3) <= x_1) ->
      ((2 + i_3 + x_8) <= x_7))).
  (* Invariant *)
  Have: (0 <= i) /\ (i < x_1).
  (* Invariant *)
  Have: (0 < x_6) /\ (3 <= x) /\ ((2 + i) <= x_7).
  (* Invariant *)
  Have: (x_3 % 3) = 0.
  (* Invariant *)
  Have: (x_3 % 2) = x_5.
  (* Invariant *)
  Have: x_1 <= (1 + n).
  (* Invariant *)
  Have: 0 <= i_2.
  (* Then *)
  Have: x_1 <= n.
  If tmp_0 != 0
  Then {
    Let x_14 = 3 + a_1 + b_1.
    Let x_15 = x_14 / 3.
    Have: ((2 + b_1) = b) /\ (x_14 = (3 * x_15)) /\ ((i + x_15) = (1 + b_1)).
    Have: (1 + a_1) = a.
  }
  Else {
    Let x_16 = 1 + b_2.
    Let x_17 = 3 + a_2 + b_2.
    Let x_18 = x_17 / 3.
    Have: (x_16 = b) /\ (x_17 = (3 * x_18)) /\ ((i + x_18) = x_16).
    Have: (2 + a_2) = a.
  }
}
Prove: b <= x_12.
Prover Z3 4.8.12 returns Valid (Qed:41ms) (10ms) (50467)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:41ms) (12ms) (165)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 16):
Let x = 2 * n.
Let x_1 = a + b.
Let x_2 = x_1 / 3.
Let x_3 = 3 * x_2.
Let x_4 = x_3 - 3.
Let x_5 = x_2 - 1.
Let x_6 = x_5 % 2.
Let x_7 = i + x_2.
Let x_8 = 2 * x_2.
Let x_9 = 2 * i.
Let x_10 = 3 * i.
Let x_11 = x_8 - 2 - i.
Let x_12 = i + x_2 - 1.
Let x_13 = 1 + x_9.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(b) /\
      is_sint32(b_1) /\ is_sint32(b_2) /\ is_sint32(n) /\ is_sint32(tmp_0) /\
      is_sint32(x_2) /\ is_sint32(x_5) /\ is_sint32(x_12) /\ is_sint32(x_11).
  (* Pre-condition *)
  Have: n <= 999999.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: x_2 = (1 + (x_4 / 3)).
  (* Invariant *)
  Have: x_7 <= (1 + x).
  (* Invariant *)
  Have: (i = 0) \/ (x_2 = (1 + i)).
  (* Invariant *)
  Have: (x_2 + x_6) = x_13.
  (* Invariant *)
  Have: x_2 = (1 + x_10).
  (* Invariant *)
  Have: x_2 <= x_13.
  (* Invariant *)
  Have: x_8 <= (2 + i + x).
  (* Invariant *)
  Have: x_2 = (1 + x_9 + (x_5 % 3)).
  (* Invariant *)
  Have: (x_11 % 3) = (x_12 % 3).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < x_2) ->
      ((x_10 = i_3) \/ ((3 + i_3 + x_10) = x_3)))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < x_2) -> (x_2 = (1 + i_3)))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> (((2 + i_3) <= x_2) -> (i_3 < x_2))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> (((2 + i_3) <= x_2) ->
      ((2 + i_3 + x_9) <= x_8))).
  (* Invariant *)
  Have: (0 <= i) /\ (i < x_2).
  (* Invariant *)
  Have: (0 < x_7) /\ (3 <= x_1) /\ ((2 + i) <= x_8).
  (* Invariant *)
  Have: (x_4 % 3) = 0.
  (* Invariant *)
  Have: (x_4 % 2) = x_6.
  (* Invariant *)
  Have: x_2 <= (1 + n).
  (* Invariant *)
  Have: 0 <= i_2.
  (* Then *)
  Have: x_2 <= n.
  If tmp_0 != 0
  Then {
    Let x_14 = 3 + a_1 + b_1.
    Let x_15 = x_14 / 3.
    Have: ((2 + b_1) = b) /\ (x_14 = (3 * x_15)) /\ ((i + x_15) = (1 + b_1)).
    Have: (1 + a_1) = a.
  }
  Else {
    Let x_16 = 1 + b_2.
    Let x_17 = 3 + a_2 + b_2.
    Let x_18 = x_17 / 3.
    Have: (x_16 = b) /\ (x_17 = (3 * x_18)) /\ ((i + x_18) = x_16).
    Have: (2 + a_2) = a.
  }
  (* Invariant *)
  Have: b <= x.
}
Prove: ((a + x_2) = b) \/ ((b + x_2) = a).
Prover Z3 4.8.12 returns Valid (Qed:44ms) (20ms) (62812)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:44ms) (12ms) (176)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 17):
Let x = a + b.
Let x_1 = x / 3.
Let x_2 = 2 * n.
Let x_3 = 3 * x_1.
Let x_4 = x_3 - 3.
Let x_5 = x_1 - 1.
Let x_6 = x_5 % 2.
Let x_7 = i + x_1.
Let x_8 = 2 * x_1.
Let x_9 = 2 * i.
Let x_10 = 3 * i.
Let x_11 = x_8 - 2 - i.
Let x_12 = i + x_1 - 1.
Let x_13 = 1 + x_9.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(b) /\
      is_sint32(b_1) /\ is_sint32(b_2) /\ is_sint32(n) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_5) /\ is_sint32(x_12) /\ is_sint32(x_11).
  (* Pre-condition *)
  Have: n <= 999999.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: x_1 = (1 + (x_4 / 3)).
  (* Invariant *)
  Have: x_7 <= (1 + x_2).
  (* Invariant *)
  Have: (i = 0) \/ (x_1 = (1 + i)).
  (* Invariant *)
  Have: (x_1 + x_6) = x_13.
  (* Invariant *)
  Have: x_1 = (1 + x_10).
  (* Invariant *)
  Have: x_1 <= x_13.
  (* Invariant *)
  Have: x_8 <= (2 + i + x_2).
  (* Invariant *)
  Have: x_1 = (1 + x_9 + (x_5 % 3)).
  (* Invariant *)
  Have: (x_11 % 3) = (x_12 % 3).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < x_1) ->
      ((x_10 = i_3) \/ ((3 + i_3 + x_10) = x_3)))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < x_1) -> (x_1 = (1 + i_3)))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> (((2 + i_3) <= x_1) -> (i_3 < x_1))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> (((2 + i_3) <= x_1) ->
      ((2 + i_3 + x_9) <= x_8))).
  (* Invariant *)
  Have: (0 <= i) /\ (i < x_1).
  (* Invariant *)
  Have: (0 < x_7) /\ (3 <= x) /\ ((2 + i) <= x_8).
  (* Invariant *)
  Have: (x_4 % 3) = 0.
  (* Invariant *)
  Have: (x_4 % 2) = x_6.
  (* Invariant *)
  Have: x_1 <= (1 + n).
  (* Invariant *)
  Have: 0 <= i_2.
  (* Then *)
  Have: x_1 <= n.
  If tmp_0 != 0
  Then {
    Let x_14 = 3 + a_1 + b_1.
    Let x_15 = x_14 / 3.
    Have: ((2 + b_1) = b) /\ (x_14 = (3 * x_15)) /\ ((i + x_15) = (1 + b_1)).
    Have: (1 + a_1) = a.
  }
  Else {
    Let x_16 = 1 + b_2.
    Let x_17 = 3 + a_2 + b_2.
    Let x_18 = x_17 / 3.
    Have: (x_16 = b) /\ (x_17 = (3 * x_18)) /\ ((i + x_18) = x_16).
    Have: (2 + a_2) = a.
  }
  (* Invariant *)
  Have: b <= x_2.
  (* Invariant *)
  Have: ((a + x_1) = b) \/ ((b + x_1) = a).
}
Prove: (a + (x_1 % 2)) = b.
Prover Z3 4.8.12 returns Timeout (Qed:40ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:40ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (10ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 19):
Assume {
  Type: is_sint32(n) /\ is_sint32(tmp_0).
  (* Pre-condition *)
  Have: n <= 999999.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= i_1.
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: 0 < n.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:13ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:13ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.84ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (10ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (10ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1.00ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (11ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.92ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (11ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (11ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (12ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.86ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (12ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.94ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (12ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.81ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (14ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (0.73ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (15ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 32):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 33):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (14ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (15ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (16ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (16ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (19ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (10ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (14ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (13ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 43):
Assume {
  Type: is_sint32(n).
  (* Pre-condition *)
  Have: n <= 999999.
  (* Invariant *)
  Have: 0 <= n.
}
Prove: exists i : Z. 0 <= i.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (23846)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (0.85ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0005/003_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0005/003_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (0.88ms)

------------------------------------------------------------

Goal Loop assigns (file out/003_0005/003_merged.c, line 47) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/003_0005/003_merged.c, line 47) (2/2):
Call Result at line 52
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/003_0005/003_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/003_0005/003_merged.c:7: Warning: 
  No 'assigns' specification for function 'foo003'.
  Callers assumptions might be imprecise.

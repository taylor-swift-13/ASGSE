[kernel] Parsing out/0019_0017/0019_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 42 goals scheduled
[wp] [Timeout] typed_foo0019_loop_invariant_3_established (Qed 0.54ms) (Z3)
[wp] [Timeout] typed_foo0019_loop_invariant_4_preserved (Qed 8ms) (Z3)
[wp] [Timeout] typed_foo0019_loop_invariant_7_established (Qed 0.91ms) (Z3)
[wp] [Timeout] typed_foo0019_loop_invariant_8_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_foo0019_loop_invariant_9_preserved (Qed 5ms) (Z3)
[wp] Proved goals:   37 / 42
  Qed:              30
  Alt-Ergo 2.5.4:    6 (5ms-35ms)
  Z3 4.8.12:         1 (10ms)
  Timeout:           5
------------------------------------------------------------
  Function foo0019
------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0017/0019_merged.c, line 14):
Let x = -k.
Let x_1 = n - k.
Let x_2 = (-n) / 2.
Let x_3 = x_1 / 2.
Let x_4 = 2 + n - k.
Assume {
  Type: is_sint32(k) /\ is_sint32(n) /\ is_sint32(k - 1) /\ is_sint32(x_1) /\
      is_sint32(x_4).
  (* Pre-condition *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < n) -> ((i_2 % 2) = 0))).
  (* Invariant *)
  Have: ((i % 2) = 0) /\ (0 <= i) /\ (i < n).
  (* Invariant *)
  Have: x_2 < n.
  (* Invariant *)
  Have: (k + x_3) = n.
  (* Invariant *)
  Have: x_3 <= n.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: 0 <= (k + n).
  (* Invariant *)
  Have: n <= (3 * k).
  (* Invariant *)
  Have: ((i_1 % 2) = 0) /\ (0 <= i_1) /\ (i_1 < n).
  (* Invariant *)
  Have: x_2 < k.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: (x_1 % 2) = 0.
  (* Then *)
  Have: 0 < k.
}
Prove: (k + (x_4 / 2)) = (1 + n).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (39883)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (35ms) (354)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0017/0019_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0017/0019_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0017/0019_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0017/0019_merged.c, line 16):
Let x = 2 + i.
Let x_1 = x / 2.
Let x_2 = k + x_1.
Let x_3 = (1 - k - x_1) / 2.
Let x_4 = 2 * k.
Let x_5 = i / 2.
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(k - 1) /\ is_sint32(x) /\
      is_sint32(k + x_1 - 1).
  (* Pre-condition *)
  Have: x_2 <= 2147483648.
  (* Invariant *)
  Have: 0 < x_2.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> (((2 + i_3) <= x_2) ->
      ((i_3 % 2) = 0))).
  (* Invariant *)
  Have: ((i_1 % 2) = 0) /\ (0 <= i_1) /\ ((2 + i_1) <= x_2).
  (* Invariant *)
  Have: (2 + x_3) <= x_2.
  (* Invariant *)
  Have: x_1 = (1 + x_5).
  (* Invariant *)
  Have: x_5 < x_1.
  (* Invariant *)
  Have: x_5 < x_2.
  (* Invariant *)
  Have: i < x_2.
  (* Invariant *)
  Have: x <= (x_4 + (2 * x_1)).
  (* Invariant *)
  Have: i <= x_4.
  (* Invariant *)
  Have: ((i_2 % 2) = 0) /\ (0 <= i_2) /\ ((2 + i_2) <= x_2).
  (* Invariant *)
  Have: x_1 = (1 + i).
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_3 < k.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Then *)
  Have: x <= x_2.
}
Prove: 0 < k.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (36639)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (5ms) (32)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0017/0019_merged.c, line 16):
Assume { Type: is_sint32(n). (* Pre-condition *) Have: n <= 2147483647. }
Prove: 0 <= n.
Prover Z3 4.8.12 returns Timeout (Qed:0.54ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.54ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0017/0019_merged.c, line 17):
Let x = 2 + i.
Let x_1 = x / 2.
Let x_2 = k + x_1.
Let x_3 = (1 - k - x_1) / 2.
Let x_4 = 2 * k.
Let x_5 = i / 2.
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(k - 1) /\ is_sint32(x) /\
      is_sint32(k + x_1 - 1).
  (* Pre-condition *)
  Have: x_2 <= 2147483648.
  (* Invariant *)
  Have: 0 < x_2.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> (((2 + i_3) <= x_2) ->
      ((i_3 % 2) = 0))).
  (* Invariant *)
  Have: ((i_1 % 2) = 0) /\ (0 <= i_1) /\ ((2 + i_1) <= x_2).
  (* Invariant *)
  Have: (2 + x_3) <= x_2.
  (* Invariant *)
  Have: x_1 = (1 + x_5).
  (* Invariant *)
  Have: x_5 < x_1.
  (* Invariant *)
  Have: x_5 < x_2.
  (* Invariant *)
  Have: i < x_2.
  (* Invariant *)
  Have: x <= (x_4 + (2 * x_1)).
  (* Invariant *)
  Have: i <= x_4.
  (* Invariant *)
  Have: ((i_2 % 2) = 0) /\ (0 <= i_2) /\ ((2 + i_2) <= x_2).
  (* Invariant *)
  Have: x_1 = (1 + i).
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_3 < k.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Then *)
  Have: x <= x_2.
  (* Invariant *)
  Have: 0 < k.
}
Prove: (3 + i) <= x_2.
Prover Z3 4.8.12 returns Timeout (Qed:8ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:8ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0017/0019_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.85ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0017/0019_merged.c, line 18):
Let x = 2 + i.
Let x_1 = x / 2.
Let x_2 = k + x_1.
Let x_3 = (1 - k - x_1) / 2.
Let x_4 = 2 * k.
Let x_5 = x_4 + (2 * x_1).
Let x_6 = i / 2.
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(k - 1) /\ is_sint32(x) /\
      is_sint32(k + x_1 - 1).
  (* Pre-condition *)
  Have: x_2 <= 2147483648.
  (* Invariant *)
  Have: 0 < x_2.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> (((2 + i_3) <= x_2) ->
      ((i_3 % 2) = 0))).
  (* Invariant *)
  Have: ((i_1 % 2) = 0) /\ (0 <= i_1) /\ ((2 + i_1) <= x_2).
  (* Invariant *)
  Have: (2 + x_3) <= x_2.
  (* Invariant *)
  Have: x_1 = (1 + x_6).
  (* Invariant *)
  Have: x_6 < x_1.
  (* Invariant *)
  Have: x_6 < x_2.
  (* Invariant *)
  Have: i < x_2.
  (* Invariant *)
  Have: x <= x_5.
  (* Invariant *)
  Have: i <= x_4.
  (* Invariant *)
  Have: ((i_2 % 2) = 0) /\ (0 <= i_2) /\ ((2 + i_2) <= x_2).
  (* Invariant *)
  Have: x_1 = (1 + i).
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_3 < k.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Then *)
  Have: x <= x_2.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (3 + i) <= x_2.
}
Prove: (4 + i) <= x_5.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (20ms) (34401)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (6ms) (45)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0017/0019_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0017/0019_merged.c, line 19):
Let x = 2 + i.
Let x_1 = 2 * n.
Let x_2 = x / 2.
Let x_3 = (-n) / 2.
Let x_4 = 2 * x_2.
Let x_5 = i / 2.
Let x_6 = -x_2.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(n - x_2) /\
      is_sint32(1 + n - x_2).
  (* Pre-condition *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < n) -> ((i_3 % 2) = 0))).
  (* Invariant *)
  Have: ((i_1 % 2) = 0) /\ (0 <= i_1) /\ (i_1 < n).
  (* Invariant *)
  Have: x_3 < n.
  (* Invariant *)
  Have: x_2 = (1 + x_5).
  (* Invariant *)
  Have: x_5 < x_2.
  (* Invariant *)
  Have: x_5 <= n.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: i <= x_1.
  (* Invariant *)
  Have: (i + x_4) <= (2 + x_1).
  (* Invariant *)
  Have: ((i_2 % 2) = 0) /\ (0 <= i_2) /\ (i_2 < n).
  (* Invariant *)
  Have: x_2 = (1 + i).
  (* Invariant *)
  Have: x_2 <= (1 + n).
  (* Invariant *)
  Have: (x_3 + x_2) <= n.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Then *)
  Have: i < n.
  (* Invariant *)
  Have: x_2 <= n.
  (* Invariant *)
  Have: x <= n.
  (* Invariant *)
  Have: x <= x_1.
}
Prove: (2 + i + x_4) <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (20ms) (39684)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (35ms) (395)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0017/0019_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0017/0019_merged.c, line 20):
Let x = 2 + i_1.
Let x_1 = x / 2.
Let x_2 = 2 * x_1.
Let x_3 = 2 * n.
Let x_4 = (-n) / 2.
Let x_5 = i_1 / 2.
Let x_6 = -x_1.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(n) /\ is_sint32(x) /\
      is_sint32(n - x_1) /\ is_sint32(1 + n - x_1).
  (* Goal *)
  When: (0 <= i) /\ (i < n).
  (* Pre-condition *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < n) -> ((i_4 % 2) = 0))).
  (* Invariant *)
  Have: ((i_2 % 2) = 0) /\ (0 <= i_2) /\ (i_2 < n).
  (* Invariant *)
  Have: x_4 < n.
  (* Invariant *)
  Have: x_1 = (1 + x_5).
  (* Invariant *)
  Have: x_5 < x_1.
  (* Invariant *)
  Have: x_5 <= n.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: i_1 <= x_3.
  (* Invariant *)
  Have: (i_1 + x_2) <= (2 + x_3).
  (* Invariant *)
  Have: ((i_3 % 2) = 0) /\ (0 <= i_3) /\ (i_3 < n).
  (* Invariant *)
  Have: x_1 = (1 + i_1).
  (* Invariant *)
  Have: x_1 <= (1 + n).
  (* Invariant *)
  Have: (x_4 + x_1) <= n.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: (i_1 % 2) = 0.
  (* Then *)
  Have: i_1 < n.
  (* Invariant *)
  Have: x_1 <= n.
  (* Invariant *)
  Have: x <= n.
  (* Invariant *)
  Have: x <= x_3.
  (* Invariant *)
  Have: (2 + i_1 + x_2) <= x_3.
}
Prove: (i % 2) = 0.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (37925)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (34ms) (418)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0017/0019_merged.c, line 20):
Assume {
  Type: is_sint32(k).
  (* Goal *)
  When: (0 <= i) /\ (i < k).
  (* Pre-condition *)
  Have: k <= 2147483647.
  (* Invariant *)
  Have: 0 <= k.
}
Prove: (i % 2) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:0.91ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.91ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0017/0019_merged.c, line 21):
Let x = 4 + i.
Let x_1 = 2 * k.
Let x_2 = 2 + i.
Let x_3 = x_2 / 2.
Let x_4 = x_1 + (2 * x_3).
Let x_5 = k + x_3.
Let x_6 = (1 - k - x_3) / 2.
Let x_7 = i / 2.
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(k - 1) /\ is_sint32(x_2) /\
      is_sint32(k + x_3 - 1).
  (* Pre-condition *)
  Have: x_5 <= 2147483648.
  (* Invariant *)
  Have: 0 < x_5.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> (((2 + i_3) <= x_5) ->
      ((i_3 % 2) = 0))).
  (* Invariant *)
  Have: ((i_1 % 2) = 0) /\ (0 <= i_1) /\ ((2 + i_1) <= x_5).
  (* Invariant *)
  Have: (2 + x_6) <= x_5.
  (* Invariant *)
  Have: x_3 = (1 + x_7).
  (* Invariant *)
  Have: x_7 < x_3.
  (* Invariant *)
  Have: x_7 < x_5.
  (* Invariant *)
  Have: i < x_5.
  (* Invariant *)
  Have: x_2 <= x_4.
  (* Invariant *)
  Have: i <= x_1.
  (* Invariant *)
  Have: ((i_2 % 2) = 0) /\ (0 <= i_2) /\ ((2 + i_2) <= x_5).
  (* Invariant *)
  Have: x_3 = (1 + i).
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_6 < k.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Then *)
  Have: x_2 <= x_5.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (3 + i) <= x_5.
  (* Invariant *)
  Have: x <= x_4.
  (* Invariant *)
  Have: x <= x_1.
}
Prove: exists i_3 : Z. ((i_3 % 2) = 0) /\ (0 <= i_3) /\ ((2 + i_3) <= x_5).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (37737)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0017/0019_merged.c, line 21):
Assume {
  Type: is_sint32(n).
  (* Pre-condition *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < n) -> ((i % 2) = 0))).
}
Prove: exists i : Z. ((i % 2) = 0) /\ (0 <= i) /\ (i < n).
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0017/0019_merged.c, line 22):
Let x = 2 + i.
Let x_1 = x / 2.
Let x_2 = 2 * x_1.
Let x_3 = 2 * n.
Let x_4 = (-n) / 2.
Let x_5 = i / 2.
Let x_6 = -x_1.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(n - x_1) /\
      is_sint32(1 + n - x_1).
  (* Pre-condition *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < n) -> ((i_4 % 2) = 0))).
  (* Invariant *)
  Have: ((i_1 % 2) = 0) /\ (0 <= i_1) /\ (i_1 < n).
  (* Invariant *)
  Have: x_4 < n.
  (* Invariant *)
  Have: x_1 = (1 + x_5).
  (* Invariant *)
  Have: x_5 < x_1.
  (* Invariant *)
  Have: x_5 <= n.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: i <= x_3.
  (* Invariant *)
  Have: (i + x_2) <= (2 + x_3).
  (* Invariant *)
  Have: ((i_2 % 2) = 0) /\ (0 <= i_2) /\ (i_2 < n).
  (* Invariant *)
  Have: x_1 = (1 + i).
  (* Invariant *)
  Have: x_1 <= (1 + n).
  (* Invariant *)
  Have: (x_4 + x_1) <= n.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Then *)
  Have: i < n.
  (* Invariant *)
  Have: x_1 <= n.
  (* Invariant *)
  Have: x <= n.
  (* Invariant *)
  Have: x <= x_3.
  (* Invariant *)
  Have: (2 + i + x_2) <= x_3.
  (* Invariant *)
  Have: ((i_3 % 2) = 0) /\ (0 <= i_3) /\ (i_3 < n).
}
Prove: x_1 = x.
Prover Z3 4.8.12 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0017/0019_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0017/0019_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0017/0019_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.84ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0017/0019_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0017/0019_merged.c, line 24):
Assume {
  Type: is_sint32(k).
  (* Pre-condition *)
  Have: k <= 2147483647.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < k) -> ((i_1 % 2) = 0))).
  (* Invariant *)
  Have: ((i % 2) = 0) /\ (0 <= i) /\ (i < k).
}
Prove: ((-k) / 2) < k.
Prover Z3 4.8.12 returns Valid (Qed:2ms) (31162)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (9ms) (93)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0017/0019_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0017/0019_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.97ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0017/0019_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0017/0019_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.92ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0017/0019_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0017/0019_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.84ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0017/0019_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0017/0019_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.94ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0017/0019_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0017/0019_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.82ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0017/0019_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0017/0019_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0017/0019_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0017/0019_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0017/0019_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0017/0019_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0017/0019_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0017/0019_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/0019_0017/0019_merged.c, line 31):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/0019_0017/0019_merged.c, line 46):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/0019_0017/0019_merged.c:7: Warning: 
  No 'assigns' specification for function 'foo0019'.
  Callers assumptions might be imprecise.

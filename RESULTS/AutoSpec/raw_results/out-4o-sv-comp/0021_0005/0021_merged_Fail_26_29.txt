[kernel] Parsing out/0021_0005/0021_merged.c (with preprocessing)
[kernel:typing:no-proto] out/0021_0005/0021_merged.c:37: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:CERT:MSC:37] out/0021_0005/0021_merged.c:15: Warning: 
  Body of function foo0021 falls-through. Adding a return statement
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/0021_0005/0021_merged.c:10: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] out/0021_0005/0021_merged.c:15: Warning: 
  Missing assigns clause (assigns 'everything' instead)
[wp] 29 goals scheduled
[wp] [Timeout] typed_foo0021_loop_invariant_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_foo0021_loop_invariant_9_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_foo0021_assert_missing_return (Qed 1ms) (Z3)
[wp] Proved goals:   26 / 29
  Qed:              18
  Alt-Ergo 2.5.4:    8
  Timeout:           3
------------------------------------------------------------
  Function foo0021
------------------------------------------------------------

Goal Preservation of Invariant (file out/0021_0005/0021_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0021_0005/0021_merged.c, line 20):
Let x = 2 * i.
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(n) /\ is_sint32(x).
  (* Pre-condition *)
  Have: k <= 2147483646.
  (* Then *)
  Have: i < n.
}
Prove: x <= n.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0021_0005/0021_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0021_0005/0021_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0021_0005/0021_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0021_0005/0021_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0021_0005/0021_merged.c, line 23):
Let x = 2 * i.
Let x_1 = 2 * i_2.
Assume {
  Type: is_sint32(i) /\ is_sint32(i_2) /\ is_sint32(j) /\ is_sint32(k) /\
      is_sint32(n) /\ is_sint32(x_1) /\ is_sint32(1 + j).
  (* Goal *)
  When: (i < n) /\ (i_1 < n) /\ (j < i_1).
  (* Pre-condition *)
  Have: k <= 2147483646.
  (* Then *)
  Have: i_2 < n.
  (* Invariant *)
  Have: x_1 <= n.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < i_2) -> ((2 * i_3) < n))).
  (* Invariant *)
  Have: forall i_3 : Z. (0 <= i_3) /\ (i_3 < i_2) /\ ((2 * i_3) < n).
  (* Invariant *)
  Have: 0 <= i_2.
  (* Invariant *)
  Have: j <= n.
  (* Invariant *)
  Have: forall i_3 : Z. ((j <= i_3) -> ((i_3 < n) -> (x <= i_3))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < i) -> ((2 * i_3) < n))).
  (* Invariant *)
  Have: forall i_3 : Z. (0 <= i_3) /\ (i_3 < i) /\ ((2 * i_3) < n).
  (* Invariant *)
  Have: x <= j.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: j < n.
}
Prove: x <= i_1.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (20ms) (35349)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (26)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0021_0005/0021_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (1.00ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0021_0005/0021_merged.c, line 24):
Let x = 2 * i.
Let x_1 = 2 * i_2.
Assume {
  Type: is_sint32(i) /\ is_sint32(i_2) /\ is_sint32(j) /\ is_sint32(k) /\
      is_sint32(n) /\ is_sint32(x_1) /\ is_sint32(1 + j).
  (* Goal *)
  When: (i_1 < n) /\ (j < i_1).
  (* Pre-condition *)
  Have: k <= 2147483646.
  (* Then *)
  Have: i_2 < n.
  (* Invariant *)
  Have: x_1 <= n.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < i_2) -> ((2 * i_3) < n))).
  (* Invariant *)
  Have: forall i_3 : Z. (0 <= i_3) /\ (i_3 < i_2) /\ ((2 * i_3) < n).
  (* Invariant *)
  Have: 0 <= i_2.
  (* Invariant *)
  Have: j <= n.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: i < n.
  (* Invariant *)
  Have: forall i_3 : Z. ((j <= i_3) -> ((i_3 < n) -> (x <= i_3))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < i) -> ((2 * i_3) < n))).
  (* Invariant *)
  Have: forall i_3 : Z. (0 <= i_3) /\ (i_3 < i) /\ ((2 * i_3) < n).
  (* Invariant *)
  Have: x <= j.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: j < n.
  (* Invariant *)
  Have: forall i_3 : Z. ((i_3 < n) -> ((j < i_3) -> (x <= i_3))).
}
Prove: x <= i_1.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (20ms) (36072)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (5ms) (27)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0021_0005/0021_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0021_0005/0021_merged.c, line 25):
Let x = 2 * i.
Let x_1 = 2 * i_2.
Assume {
  Type: is_sint32(i) /\ is_sint32(i_2) /\ is_sint32(j) /\ is_sint32(k) /\
      is_sint32(n) /\ is_sint32(x_1) /\ is_sint32(1 + j).
  (* Goal *)
  When: (i_1 < n) /\ (j < i_1).
  (* Pre-condition *)
  Have: k <= 2147483646.
  (* Then *)
  Have: i_2 < n.
  (* Invariant *)
  Have: x_1 <= n.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < i_2) -> ((2 * i_3) < n))).
  (* Invariant *)
  Have: forall i_3 : Z. (0 <= i_3) /\ (i_3 < i_2) /\ ((2 * i_3) < n).
  (* Invariant *)
  Have: 0 <= i_2.
  (* Invariant *)
  Have: j <= n.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: i < n.
  (* Invariant *)
  Have: forall i_3 : Z. ((j <= i_3) -> ((i_3 < n) -> (x <= i_3))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < i) -> ((2 * i_3) < n))).
  (* Invariant *)
  Have: forall i_3 : Z. (0 <= i_3) /\ (i_3 < i) /\ ((2 * i_3) < n).
  (* Invariant *)
  Have: x <= j.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: j < n.
  (* Invariant *)
  Have: forall i_3 : Z. ((i_3 < n) -> ((j < i_3) -> (x <= i_3))).
}
Prove: x <= i_1.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (36072)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (4ms) (27)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0021_0005/0021_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0021_0005/0021_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/0021_0005/0021_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0021_0005/0021_merged.c, line 27):
Let x = 2 * i_1.
Let x_1 = 2 * i_2.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(j) /\ is_sint32(k) /\
      is_sint32(n) /\ is_sint32(x_1) /\ is_sint32(1 + j).
  (* Goal *)
  When: (0 <= i) /\ (i < i_1).
  (* Pre-condition *)
  Have: k <= 2147483646.
  (* Then *)
  Have: i_2 < n.
  (* Invariant *)
  Have: x_1 <= n.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < i_2) -> ((2 * i_3) < n))).
  (* Invariant *)
  Have: forall i_3 : Z. (0 <= i_3) /\ (i_3 < i_2) /\ ((2 * i_3) < n).
  (* Invariant *)
  Have: 0 <= i_2.
  (* Invariant *)
  Have: j <= n.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: i_1 < n.
  (* Invariant *)
  Have: forall i_3 : Z. ((j <= i_3) -> ((i_3 < n) -> (x <= i_3))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < i_1) -> ((2 * i_3) < n))).
  (* Invariant *)
  Have: forall i_3 : Z. (0 <= i_3) /\ (i_3 < i_1) /\ ((2 * i_3) < n).
  (* Invariant *)
  Have: x <= j.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: j < n.
  (* Invariant *)
  Have: forall i_3 : Z. ((i_3 < n) -> ((j < i_3) -> (x <= i_3))).
}
Prove: (2 * i) < n.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (36064)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (5ms) (27)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0021_0005/0021_merged.c, line 27):
Let x = 2 * i_1.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(n) /\ is_sint32(x).
  (* Goal *)
  When: (0 <= i) /\ (i < i_1).
  (* Pre-condition *)
  Have: k <= 2147483646.
  (* Then *)
  Have: i_1 < n.
  (* Invariant *)
  Have: x <= n.
}
Prove: (2 * i) < n.
Prover Z3 4.8.12 returns Valid (Qed:2ms) (10ms) (30568)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (4ms) (16)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0021_0005/0021_merged.c, line 28):
Let x = 2 * i_1.
Let x_1 = 2 * i_2.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(j) /\ is_sint32(k) /\
      is_sint32(n) /\ is_sint32(x_1) /\ is_sint32(1 + j).
  (* Pre-condition *)
  Have: k <= 2147483646.
  (* Then *)
  Have: i_2 < n.
  (* Invariant *)
  Have: x_1 <= n.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < i_2) -> ((2 * i_3) < n))).
  (* Invariant *)
  Have: forall i_3 : Z. (0 <= i_3) /\ (i_3 < i_2) /\ ((2 * i_3) < n).
  (* Invariant *)
  Have: 0 <= i_2.
  (* Invariant *)
  Have: j <= n.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: i_1 < n.
  (* Invariant *)
  Have: forall i_3 : Z. ((j <= i_3) -> ((i_3 < n) -> (x <= i_3))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < i_1) -> ((2 * i_3) < n))).
  (* Invariant *)
  Have: forall i_3 : Z. (0 <= i_3) /\ (i_3 < i_1) /\ ((2 * i_3) < n).
  (* Invariant *)
  Have: x <= j.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: j < n.
  (* Invariant *)
  Have: forall i_3 : Z. ((i_3 < n) -> ((j < i_3) -> (x <= i_3))).
}
Prove: (0 <= i) /\ (i < i_1) /\ ((2 * i) < n).
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (39197)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (5ms) (61)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0021_0005/0021_merged.c, line 28):
Let x = 2 * i_1.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(n) /\ is_sint32(x).
  (* Pre-condition *)
  Have: k <= 2147483646.
  (* Then *)
  Have: i_1 < n.
  (* Invariant *)
  Have: x <= n.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) -> ((2 * i_2) < n))).
}
Prove: (0 <= i) /\ (i < i_1) /\ ((2 * i) < n).
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0021_0005/0021_merged.c, line 29):
Let x = 2 * i.
Let x_1 = 2 * i_1.
Let x_2 = 1 + j.
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(j) /\ is_sint32(k) /\
      is_sint32(n) /\ is_sint32(x_1) /\ is_sint32(x_2).
  (* Pre-condition *)
  Have: k <= 2147483646.
  (* Then *)
  Have: i_1 < n.
  (* Invariant *)
  Have: x_1 <= n.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) -> ((2 * i_2) < n))).
  (* Invariant *)
  Have: forall i_2 : Z. (0 <= i_2) /\ (i_2 < i_1) /\ ((2 * i_2) < n).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: j <= n.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: i < n.
  (* Invariant *)
  Have: forall i_2 : Z. ((j <= i_2) -> ((i_2 < n) -> (x <= i_2))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i) -> ((2 * i_2) < n))).
  (* Invariant *)
  Have: forall i_2 : Z. (0 <= i_2) /\ (i_2 < i) /\ ((2 * i_2) < n).
  (* Invariant *)
  Have: x <= j.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: j < n.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 < n) -> ((j < i_2) -> (x <= i_2))).
}
Prove: x <= x_2.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (5ms) (19)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0021_0005/0021_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.98ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0021_0005/0021_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0021_0005/0021_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0021_0005/0021_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0021_0005/0021_merged.c, line 31):
Let x = 2 * i.
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(n) /\ is_sint32(x).
  (* Pre-condition *)
  Have: k <= 2147483646.
  (* Then *)
  Have: i < n.
  (* Invariant *)
  Have: x <= n.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) -> ((2 * i_1) < n))).
  (* Invariant *)
  Have: forall i_1 : Z. (0 <= i_1) /\ (i_1 < i) /\ ((2 * i_1) < n).
}
Prove: 0 <= i.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (5ms) (30)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0021_0005/0021_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0021_0005/0021_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Assertion 'missing_return' (file out/0021_0005/0021_merged.c, line 45):
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(n).
  (* Pre-condition *)
  Have: k <= 2147483646.
  (* Else *)
  Have: n <= i.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/0021_0005/0021_merged.c, line 33) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/0021_0005/0021_merged.c, line 33) (2/2):
Call Result at line 37
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/0021_0005/0021_merged.c:4: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/0021_0005/0021_merged.c:10: Warning: 
  No 'assigns' specification for function 'foo0021'.
  Callers assumptions might be imprecise.

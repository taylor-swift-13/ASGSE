[kernel] Parsing out/0019_0013/0019_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 32 goals scheduled
[wp] [Timeout] typed_foo0019_loop_invariant_7_established (Qed 0.70ms) (Z3)
[wp] Proved goals:   31 / 32
  Qed:              24
  Alt-Ergo 2.5.4:    7 (3ms-10ms-19ms)
  Timeout:           1
------------------------------------------------------------
  Function foo0019
------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 14):
Let x = (2 * n) - (2 * k).
Assume {
  Type: is_sint32(k) /\ is_sint32(n) /\ is_sint32(k - 1) /\ is_sint32(x).
  (* Pre-condition *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: (k + (x / 2)) = n.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: (x % 2) = 0.
  (* Then *)
  Have: n < (2 * k).
}
Prove: k <= (1 + n).
Prover Z3 4.8.12 returns Valid (Qed:2ms) (10ms) (30954)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (4ms) (16)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 15):
Let x = 1 + n.
Let x_1 = (-2) * k.
Let x_2 = 2 * n.
Let x_3 = x_2 - (2 * k).
Let x_4 = 2 + x_2 - (2 * k).
Assume {
  Type: is_sint32(k) /\ is_sint32(n) /\ is_sint32(k - 1) /\ is_sint32(x_3) /\
      is_sint32(x_4).
  (* Pre-condition *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: (k + (x_3 / 2)) = n.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: (x_3 % 2) = 0.
  (* Then *)
  Have: n < (2 * k).
  (* Invariant *)
  Have: k <= x.
}
Prove: (k + (x_4 / 2)) <= x.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (33571)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (17ms) (205)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 16):
Let x = (-2) * k.
Let x_1 = 2 * n.
Let x_2 = 2 + x_1 - (2 * k).
Let x_3 = k + (x_2 / 2).
Let x_4 = 1 + n.
Let x_5 = x_1 - (2 * k).
Assume {
  Type: is_sint32(k) /\ is_sint32(n) /\ is_sint32(k - 1) /\ is_sint32(x_5) /\
      is_sint32(x_2).
  (* Pre-condition *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: (k + (x_5 / 2)) = n.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: (x_5 % 2) = 0.
  (* Then *)
  Have: n < (2 * k).
  (* Invariant *)
  Have: k <= x_4.
  (* Invariant *)
  Have: x_3 <= x_4.
}
Prove: x_3 = x_4.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (33674)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (15ms) (194)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 19):
Let x = (-2) * k.
Let x_1 = 2 * n.
Let x_2 = 2 + x_1 - (2 * k).
Let x_3 = x_2 / 2.
Let x_4 = k + x_3.
Let x_5 = 1 + n.
Let x_6 = x_1 - (2 * k).
Assume {
  Type: is_sint32(k) /\ is_sint32(n) /\ is_sint32(k - 1) /\ is_sint32(x_6) /\
      is_sint32(x_2).
  (* Goal *)
  When: (0 <= i) /\ (i < x_3).
  (* Pre-condition *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: (k + (x_6 / 2)) = n.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: (x_6 % 2) = 0.
  (* Then *)
  Have: n < (2 * k).
  (* Invariant *)
  Have: k <= x_5.
  (* Invariant *)
  Have: x_4 <= x_5.
  (* Invariant *)
  Have: x_4 = x_5.
}
Prove: 0 < k.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (31997)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (27)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 20):
Let x = (-2) * k.
Let x_1 = 2 * n.
Let x_2 = 2 + x_1 - (2 * k).
Let x_3 = x_2 / 2.
Let x_4 = k + x_3.
Let x_5 = 1 + n.
Let x_6 = x_1 - (2 * k).
Assume {
  Type: is_sint32(k) /\ is_sint32(n) /\ is_sint32(k - 1) /\ is_sint32(x_6) /\
      is_sint32(x_2).
  (* Pre-condition *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: (k + (x_6 / 2)) = n.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: (x_6 % 2) = 0.
  (* Then *)
  Have: n < (2 * k).
  (* Invariant *)
  Have: k <= x_5.
  (* Invariant *)
  Have: x_4 <= x_5.
  (* Invariant *)
  Have: x_4 = x_5.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < x_3) -> (0 < k))).
}
Prove: 0 < k.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (20ms) (32397)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (5ms) (26)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 20):
Assume { Type: is_sint32(k). (* Pre-condition *) Have: k <= 2147483647. }
Prove: 0 <= k.
Prover Z3 4.8.12 returns Timeout (Qed:0.70ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.70ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1.00ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.89ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 24):
Let x = (-2) * k.
Let x_1 = 2 * n.
Let x_2 = 2 + x_1 - (2 * k).
Let x_3 = k + (x_2 / 2).
Let x_4 = 1 + n.
Let x_5 = x_1 - (2 * k).
Assume {
  Type: is_sint32(k) /\ is_sint32(n) /\ is_sint32(k - 1) /\ is_sint32(x_5) /\
      is_sint32(x_2).
  (* Pre-condition *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: (k + (x_5 / 2)) = n.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: (x_5 % 2) = 0.
  (* Then *)
  Have: n < (2 * k).
  (* Invariant *)
  Have: k <= x_4.
  (* Invariant *)
  Have: x_3 <= x_4.
  (* Invariant *)
  Have: x_3 = x_4.
  (* Invariant *)
  Have: 0 < k.
}
Prove: (x_2 % 2) = 0.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (34109)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (19ms) (241)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 40):
Let x = i / 2.
Let x_1 = k + x.
Let x_2 = -x.
Let x_3 = -k.
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(n) /\ is_sint32(k - 1) /\
      is_sint32(n - x) /\ is_sint32(n - k - x) /\ is_sint32(1 + n - k - x).
  (* Pre-condition *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: (2 * x) = i.
  (* Invariant *)
  Have: x <= n.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: 0 <= i.
  (* Else *)
  Have: n <= i.
  (* Invariant *)
  Have: x_1 <= n.
  (* Then *)
  Have: n < (k + x + (n / 2)).
}
Prove: x_1 <= (1 + n).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (32108)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (3ms) (22)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/0019_0013/0019_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/0019_0013/0019_merged.c, line 41):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/0019_0013/0019_merged.c:7: Warning: 
  No 'assigns' specification for function 'foo0019'.
  Callers assumptions might be imprecise.

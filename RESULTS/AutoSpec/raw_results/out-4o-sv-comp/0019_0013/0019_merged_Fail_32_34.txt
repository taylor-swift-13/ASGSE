[kernel] Parsing out/0019_0013/0019_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 34 goals scheduled
[wp] [Timeout] typed_foo0019_loop_invariant_5_established (Qed 0.53ms) (Z3)
[wp] [Timeout] typed_foo0019_loop_invariant_5_preserved (Qed 3ms) (Z3)
[wp] Proved goals:   32 / 34
  Qed:              25
  Alt-Ergo 2.5.4:    7 (4ms-10ms-21ms)
  Timeout:           2
------------------------------------------------------------
  Function foo0019
------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 14):
Let x = 2 * k.
Let x_1 = (2 * n) - x.
Assume {
  Type: is_sint32(k) /\ is_sint32(n) /\ is_sint32(k - 1) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: (k + (x_1 / 2)) = n.
  (* Invariant *)
  Have: n <= x.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: (x_1 % 2) = 0.
  (* Then *)
  Have: n < x.
}
Prove: k <= (1 + n).
Prover Z3 4.8.12 returns Valid (Qed:2ms) (10ms) (31060)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (4ms) (18)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 15):
Let x = 1 + n.
Let x_1 = 2 * k.
Let x_2 = (-2) * k.
Let x_3 = 2 * n.
Let x_4 = x_3 - x_1.
Let x_5 = 2 + x_3 - x_1.
Assume {
  Type: is_sint32(k) /\ is_sint32(n) /\ is_sint32(k - 1) /\ is_sint32(x_4) /\
      is_sint32(x_5).
  (* Pre-condition *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: (k + (x_4 / 2)) = n.
  (* Invariant *)
  Have: n <= x_1.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: (x_4 % 2) = 0.
  (* Then *)
  Have: n < x_1.
  (* Invariant *)
  Have: k <= x.
}
Prove: (k + (x_5 / 2)) <= x.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (33678)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (16ms) (215)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 16):
Let x = (-2) * k.
Let x_1 = 2 * n.
Let x_2 = 2 + x_1 - (2 * k).
Let x_3 = k + (x_2 / 2).
Let x_4 = 1 + n.
Let x_5 = 2 * k.
Let x_6 = x_1 - x_5.
Assume {
  Type: is_sint32(k) /\ is_sint32(n) /\ is_sint32(k - 1) /\ is_sint32(x_6) /\
      is_sint32(x_2).
  (* Pre-condition *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: (k + (x_6 / 2)) = n.
  (* Invariant *)
  Have: n <= x_5.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: (x_6 % 2) = 0.
  (* Then *)
  Have: n < x_5.
  (* Invariant *)
  Have: k <= x_4.
  (* Invariant *)
  Have: x_3 <= x_4.
}
Prove: x_3 = x_4.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (33781)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (16ms) (203)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 18):
Let x = (-2) * k.
Let x_1 = 2 * n.
Let x_2 = 2 + x_1 - (2 * k).
Let x_3 = k + (x_2 / 2).
Let x_4 = 1 + n.
Let x_5 = 2 * k.
Let x_6 = x_1 - x_5.
Assume {
  Type: is_sint32(k) /\ is_sint32(n) /\ is_sint32(k - 1) /\ is_sint32(x_6) /\
      is_sint32(x_2).
  (* Pre-condition *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: (k + (x_6 / 2)) = n.
  (* Invariant *)
  Have: n <= x_5.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: (x_6 % 2) = 0.
  (* Then *)
  Have: n < x_5.
  (* Invariant *)
  Have: k <= x_4.
  (* Invariant *)
  Have: x_3 <= x_4.
  (* Invariant *)
  Have: x_3 = x_4.
}
Prove: (2 + n) <= x_5.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 18):
Assume { Type: is_sint32(n). (* Pre-condition *) Have: n <= 2147483647. }
Prove: 0 <= n.
Prover Z3 4.8.12 returns Timeout (Qed:0.53ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.53ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 20):
Let x = 2 * k.
Let x_1 = (-2) * k.
Let x_2 = 2 * n.
Let x_3 = 2 + x_2 - x.
Let x_4 = x_3 / 2.
Let x_5 = k + x_4.
Let x_6 = 1 + n.
Let x_7 = x_2 - x.
Assume {
  Type: is_sint32(k) /\ is_sint32(n) /\ is_sint32(k - 1) /\ is_sint32(x_7) /\
      is_sint32(x_3).
  (* Goal *)
  When: (0 <= i) /\ (i < x_4).
  (* Pre-condition *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: (k + (x_7 / 2)) = n.
  (* Invariant *)
  Have: n <= x.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: (x_7 % 2) = 0.
  (* Then *)
  Have: n < x.
  (* Invariant *)
  Have: k <= x_6.
  (* Invariant *)
  Have: x_5 <= x_6.
  (* Invariant *)
  Have: x_5 = x_6.
  (* Invariant *)
  Have: (2 + n) <= x.
}
Prove: 0 < k.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (32227)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (7ms) (29)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 21):
Let x = (-2) * k.
Let x_1 = 2 * n.
Let x_2 = 2 + x_1 - (2 * k).
Let x_3 = x_2 / 2.
Let x_4 = 2 * k.
Let x_5 = k + x_3.
Let x_6 = 1 + n.
Let x_7 = x_1 - x_4.
Assume {
  Type: is_sint32(k) /\ is_sint32(n) /\ is_sint32(k - 1) /\ is_sint32(x_7) /\
      is_sint32(x_2).
  (* Pre-condition *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: (k + (x_7 / 2)) = n.
  (* Invariant *)
  Have: n <= x_4.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: (x_7 % 2) = 0.
  (* Then *)
  Have: n < x_4.
  (* Invariant *)
  Have: k <= x_6.
  (* Invariant *)
  Have: x_5 <= x_6.
  (* Invariant *)
  Have: x_5 = x_6.
  (* Invariant *)
  Have: (2 + n) <= x_4.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < x_3) -> (0 < k))).
}
Prove: 0 < k.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (32623)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (4ms) (28)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 25):
Let x = 2 * k.
Let x_1 = (-2) * k.
Let x_2 = 2 * n.
Let x_3 = 2 + x_2 - x.
Let x_4 = k + (x_3 / 2).
Let x_5 = 1 + n.
Let x_6 = x_2 - x.
Assume {
  Type: is_sint32(k) /\ is_sint32(n) /\ is_sint32(k - 1) /\ is_sint32(x_6) /\
      is_sint32(x_3).
  (* Pre-condition *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: (k + (x_6 / 2)) = n.
  (* Invariant *)
  Have: n <= x.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: (x_6 % 2) = 0.
  (* Then *)
  Have: n < x.
  (* Invariant *)
  Have: k <= x_5.
  (* Invariant *)
  Have: x_4 <= x_5.
  (* Invariant *)
  Have: x_4 = x_5.
  (* Invariant *)
  Have: (2 + n) <= x.
  (* Invariant *)
  Have: 0 < k.
}
Prove: (x_3 % 2) = 0.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (34341)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (21ms) (263)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.82ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0019_0013/0019_merged.c, line 41):
Let x = i / 2.
Let x_1 = k + x.
Let x_2 = -x.
Let x_3 = -k.
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(n) /\ is_sint32(k - 1) /\
      is_sint32(n - x) /\ is_sint32(n - k - x) /\ is_sint32(1 + n - k - x).
  (* Pre-condition *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: (2 * x) = i.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: x <= n.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: 0 <= i.
  (* Else *)
  Have: n <= i.
  (* Invariant *)
  Have: x_1 <= i.
  (* Then *)
  Have: 0 < k.
}
Prove: x_1 <= (1 + i).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (32096)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (4ms) (22)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0019_0013/0019_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/0019_0013/0019_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/0019_0013/0019_merged.c, line 42):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/0019_0013/0019_merged.c:7: Warning: 
  No 'assigns' specification for function 'foo0019'.
  Callers assumptions might be imprecise.

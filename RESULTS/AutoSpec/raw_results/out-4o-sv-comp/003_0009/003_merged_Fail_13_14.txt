[kernel] Parsing out/003_0009/003_merged.c (with preprocessing)
[kernel:typing:no-proto] out/003_0009/003_merged.c:25: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/003_0009/003_merged.c:7: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 14 goals scheduled
[wp] [Timeout] typed_foo003_loop_invariant_3_preserved (Qed 11ms) (Z3)
[wp] Proved goals:   13 / 14
  Qed:              11
  Alt-Ergo 2.5.4:    2 (5ms-7ms)
  Timeout:           1
------------------------------------------------------------
  Function foo003
------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0009/003_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0009/003_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0009/003_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0009/003_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0009/003_merged.c, line 16):
Let x = 3 * i.
Let x_1 = x - b_3.
Let x_2 = 3 + x - b.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b) /\ is_sint32(b_1) /\
      is_sint32(b_2) /\ is_sint32(b_3) /\ is_sint32(i) /\ is_sint32(n) /\
      is_sint32(tmp_0) /\ is_sint32(1 + i) /\ is_sint32(x_1) /\
      is_sint32(x_2).
  (* Pre-condition *)
  Have: n <= 999999.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: (x_1 % 2) = (b_3 % 2).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= b_3.
  (* Invariant *)
  Have: b_3 <= x.
  (* Then *)
  Have: i < n.
  If tmp_0 != 0
  Then { Have: (b_3 = b_1) /\ ((a + b_1) = x). Have: (2 + b_1) = b. }
  Else { Have: (b_3 = b_2) /\ ((a_1 + b_2) = x). Have: (1 + b_2) = b. }
}
Prove: (x_2 % 2) = (b % 2).
Prover Z3 4.8.12 returns Timeout (Qed:11ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:11ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0009/003_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0009/003_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (8ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0009/003_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.84ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0009/003_merged.c, line 18):
Let x = 3 * i.
Let x_1 = 3 + x - a.
Let x_2 = x - b_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(b) /\
      is_sint32(b_1) /\ is_sint32(b_2) /\ is_sint32(i) /\ is_sint32(n) /\
      is_sint32(tmp_0) /\ is_sint32(1 + i) /\ is_sint32(x_2) /\
      is_sint32(x_1).
  (* Pre-condition *)
  Have: n <= 999999.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: (x_2 % 2) = (b_2 % 2).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= b_2.
  (* Invariant *)
  Have: b_2 <= x.
  (* Then *)
  Have: i < n.
  If tmp_0 != 0
  Then { Have: (b_2 = b) /\ ((a_1 + b) = x). Have: (1 + x) = (a + b). }
  Else { Have: (b_2 = b_1) /\ ((a_2 + b_1) = x). Have: (2 + x) = (a + b_1). }
  (* Invariant *)
  Have: (x_1 % 2) = (a % 2).
  (* Invariant *)
  Have: (-1) <= i.
}
Prove: a <= (3 + x).
Prover Z3 4.8.12 returns Valid (Qed:15ms) (10ms) (39498)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:15ms) (5ms) (61)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0009/003_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0009/003_merged.c, line 19):
Let x = 3 * i.
Let x_1 = 3 + x - b.
Let x_2 = x - b_3.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b) /\ is_sint32(b_1) /\
      is_sint32(b_2) /\ is_sint32(b_3) /\ is_sint32(i) /\ is_sint32(n) /\
      is_sint32(tmp_0) /\ is_sint32(1 + i) /\ is_sint32(x_2) /\
      is_sint32(x_1).
  (* Pre-condition *)
  Have: n <= 999999.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: (x_2 % 2) = (b_3 % 2).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= b_3.
  (* Invariant *)
  Have: b_3 <= x.
  (* Then *)
  Have: i < n.
  If tmp_0 != 0
  Then { Have: (b_3 = b_1) /\ ((a + b_1) = x). Have: (2 + b_1) = b. }
  Else { Have: (b_3 = b_2) /\ ((a_1 + b_2) = x). Have: (1 + b_2) = b. }
  (* Invariant *)
  Have: (x_1 % 2) = (b % 2).
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: 0 <= b.
}
Prove: b <= (3 + x).
Prover Z3 4.8.12 returns Valid (Qed:13ms) (20ms) (39592)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:13ms) (7ms) (63)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0009/003_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Loop assigns (file out/003_0009/003_merged.c, line 20) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/003_0009/003_merged.c, line 20) (2/2):
Call Result at line 25
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/003_0009/003_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/003_0009/003_merged.c:7: Warning: 
  No 'assigns' specification for function 'foo003'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/003_0002/003_merged.c (with preprocessing)
[kernel:typing:no-proto] out/003_0002/003_merged.c:50: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/003_0002/003_merged.c:7: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 64 goals scheduled
[wp] [Timeout] typed_foo003_loop_invariant_3_preserved (Qed 21ms) (Z3)
[wp] [Timeout] typed_foo003_loop_invariant_9_preserved (Qed 17ms) (Z3)
[wp] Proved goals:   62 / 64
  Qed:              56
  Alt-Ergo 2.5.4:    5
  Z3 4.8.12:         1 (10ms)
  Timeout:           2
------------------------------------------------------------
  Function foo003
------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 14):
Let x = 3 * i.
Let x_1 = 2 * i.
Let x_2 = x - b_1.
Let x_3 = i % 2.
Let x_4 = i % 3.
Let x_5 = 2 * b_1.
Let x_6 = 1 + i.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(b) /\
      is_sint32(b_1) /\ is_sint32(i) /\ is_sint32(n) /\ is_sint32(tmp_0) /\
      is_sint32(x_6) /\ is_sint32(x_2).
  (* Pre-condition *)
  Have: n <= 999999.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: (i = 0) \/ (i = b_1) \/ (x_1 = b_1).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: x_5 <= x.
  (* Invariant *)
  Have: b_1 <= x_1.
  (* Invariant *)
  Have: x_4 = (b_1 % 3).
  (* Invariant *)
  Have: x_3 = (b_1 % 2).
  (* Invariant *)
  Have: x <= x_5.
  (* Invariant *)
  Have: i <= b_1.
  (* Invariant *)
  Have: (x_2 % 3) = x_4.
  (* Invariant *)
  Have: (x_2 % 2) = x_3.
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < i) -> (i_4 <= i))).
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < i) -> (i_4 = i))).
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < i) ->
      (((x - (3 * i_4)) % 3) = 0))).
  (* Invariant *)
  Have: ((0 <= i_2) -> ((i_2 < i) -> (i_2 = i))).
  (* Invariant *)
  Have: x_1 <= (b_1 + n).
  (* Invariant *)
  Have: b_1 <= (i + n).
  (* Invariant *)
  Have: (0 <= b_1) /\ (b_1 <= x).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= i_3.
  (* Then *)
  Have: i < n.
  If tmp_0 != 0
  Then {
    Have: (a_1 + b_1) = x.
    Have: (1 + x) = (a + b_1).
    Have: (2 + b_1) = b.
  }
  Else {
    Have: (a_2 + b_1) = x.
    Have: (2 + x) = (a + b_1).
    Have: (1 + b_1) = b.
  }
}
Prove: ((a + b) = x_6) \/ ((1 + a + i) = b) \/ ((1 + b + i) = a).
Prover Z3 4.8.12 returns Valid (Qed:20ms) (10ms) (49649)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:20ms) (14ms) (212)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 15):
Let x = a + b.
Let x_1 = 1 + i.
Let x_2 = 3 * i.
Let x_3 = 2 * i.
Let x_4 = x_2 - b_1.
Let x_5 = i % 2.
Let x_6 = i % 3.
Let x_7 = 2 * b_1.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(b) /\
      is_sint32(b_1) /\ is_sint32(i) /\ is_sint32(n) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_4).
  (* Pre-condition *)
  Have: n <= 999999.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: (i = 0) \/ (i = b_1) \/ (x_3 = b_1).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: x_7 <= x_2.
  (* Invariant *)
  Have: b_1 <= x_3.
  (* Invariant *)
  Have: x_6 = (b_1 % 3).
  (* Invariant *)
  Have: x_5 = (b_1 % 2).
  (* Invariant *)
  Have: x_2 <= x_7.
  (* Invariant *)
  Have: i <= b_1.
  (* Invariant *)
  Have: (x_4 % 3) = x_6.
  (* Invariant *)
  Have: (x_4 % 2) = x_5.
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < i) -> (i_4 <= i))).
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < i) -> (i_4 = i))).
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < i) ->
      (((x_2 - (3 * i_4)) % 3) = 0))).
  (* Invariant *)
  Have: ((0 <= i_2) -> ((i_2 < i) -> (i_2 = i))).
  (* Invariant *)
  Have: x_3 <= (b_1 + n).
  (* Invariant *)
  Have: b_1 <= (i + n).
  (* Invariant *)
  Have: (0 <= b_1) /\ (b_1 <= x_2).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= i_3.
  (* Then *)
  Have: i < n.
  If tmp_0 != 0
  Then {
    Have: (a_1 + b_1) = x_2.
    Have: (1 + x_2) = (a + b_1).
    Have: (2 + b_1) = b.
  }
  Else {
    Have: (a_2 + b_1) = x_2.
    Have: (2 + x_2) = (a + b_1).
    Have: (1 + b_1) = b.
  }
  (* Invariant *)
  Have: (x = x_1) \/ ((1 + a + i) = b) \/ ((1 + b + i) = a).
}
Prove: i < x.
Prover Z3 4.8.12 returns Valid (Qed:23ms) (20ms) (49881)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:23ms) (5ms) (116)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 16):
Let x = a + b.
Let x_1 = 1 + i.
Let x_2 = 3 * i.
Let x_3 = 2 * i.
Let x_4 = x_2 - b_1.
Let x_5 = i % 2.
Let x_6 = i % 3.
Let x_7 = 2 * b_1.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(b) /\
      is_sint32(b_1) /\ is_sint32(i) /\ is_sint32(n) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_4).
  (* Pre-condition *)
  Have: n <= 999999.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: (i = 0) \/ (i = b_1) \/ (x_3 = b_1).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: x_7 <= x_2.
  (* Invariant *)
  Have: b_1 <= x_3.
  (* Invariant *)
  Have: x_6 = (b_1 % 3).
  (* Invariant *)
  Have: x_5 = (b_1 % 2).
  (* Invariant *)
  Have: x_2 <= x_7.
  (* Invariant *)
  Have: i <= b_1.
  (* Invariant *)
  Have: (x_4 % 3) = x_6.
  (* Invariant *)
  Have: (x_4 % 2) = x_5.
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < i) -> (i_4 <= i))).
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < i) -> (i_4 = i))).
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < i) ->
      (((x_2 - (3 * i_4)) % 3) = 0))).
  (* Invariant *)
  Have: ((0 <= i_2) -> ((i_2 < i) -> (i_2 = i))).
  (* Invariant *)
  Have: x_3 <= (b_1 + n).
  (* Invariant *)
  Have: b_1 <= (i + n).
  (* Invariant *)
  Have: (0 <= b_1) /\ (b_1 <= x_2).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= i_3.
  (* Then *)
  Have: i < n.
  If tmp_0 != 0
  Then {
    Have: (a_1 + b_1) = x_2.
    Have: (1 + x_2) = (a + b_1).
    Have: (2 + b_1) = b.
  }
  Else {
    Have: (a_2 + b_1) = x_2.
    Have: (2 + x_2) = (a + b_1).
    Have: (1 + b_1) = b.
  }
  (* Invariant *)
  Have: (x = x_1) \/ ((1 + a + i) = b) \/ ((1 + b + i) = a).
  (* Invariant *)
  Have: i < x.
}
Prove: b <= a.
Prover Z3 4.8.12 returns Timeout (Qed:21ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:21ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 17):
Let x = 2 * b.
Let x_1 = 3 * i.
Let x_2 = 2 * i.
Let x_3 = 1 + x_2.
Let x_4 = -b.
Let x_5 = x_1 - b.
Let x_6 = i % 2.
Let x_7 = i % 3.
Assume {
  Type: is_sint32(b) /\ is_sint32(i) /\ is_sint32(n) /\ is_sint32(1 + b) /\
      is_sint32(1 + i) /\ is_sint32(x_5) /\ is_sint32(2 + x_1 - b).
  (* Pre-condition *)
  Have: n <= 999999.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: (i = 0) \/ (i = b) \/ (x_2 = b).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: x <= x_1.
  (* Invariant *)
  Have: b <= x_2.
  (* Invariant *)
  Have: x_7 = (b % 3).
  (* Invariant *)
  Have: x_6 = (b % 2).
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: i <= b.
  (* Invariant *)
  Have: (x_5 % 3) = x_7.
  (* Invariant *)
  Have: (x_5 % 2) = x_6.
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < i) -> (i_4 <= i))).
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < i) -> (i_4 = i))).
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < i) ->
      (((x_1 - (3 * i_4)) % 3) = 0))).
  (* Invariant *)
  Have: ((0 <= i_2) -> ((i_2 < i) -> (i_2 = i))).
  (* Invariant *)
  Have: x_2 <= (b + n).
  (* Invariant *)
  Have: b <= (i + n).
  (* Invariant *)
  Have: (0 <= b) /\ (b <= x_1).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= i_3.
  (* Then *)
  Have: i < n.
  (* Invariant *)
  Have: (i = (-1)) \/ (i = b) \/ (x_3 = b).
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: x <= (1 + x_1).
}
Prove: b <= x_3.
Prover Z3 4.8.12 returns Valid (Qed:20ms) (10ms) (36315)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:20ms) (38)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 19):
Let x = 2 * i.
Let x_1 = 1 + x.
Let x_2 = 2 * b.
Let x_3 = 3 * i.
Let x_4 = -b.
Let x_5 = x_3 - b.
Let x_6 = i % 2.
Let x_7 = i % 3.
Let x_8 = 1 + b.
Let x_9 = 1 + i.
Assume {
  Type: is_sint32(b) /\ is_sint32(i) /\ is_sint32(n) /\ is_sint32(x_8) /\
      is_sint32(x_9) /\ is_sint32(x_5) /\ is_sint32(2 + x_3 - b).
  (* Pre-condition *)
  Have: n <= 999999.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: (i = 0) \/ (i = b) \/ (x = b).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: x_2 <= x_3.
  (* Invariant *)
  Have: b <= x.
  (* Invariant *)
  Have: x_7 = (b % 3).
  (* Invariant *)
  Have: x_6 = (b % 2).
  (* Invariant *)
  Have: x_3 <= x_2.
  (* Invariant *)
  Have: i <= b.
  (* Invariant *)
  Have: (x_5 % 3) = x_7.
  (* Invariant *)
  Have: (x_5 % 2) = x_6.
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < i) -> (i_4 <= i))).
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < i) -> (i_4 = i))).
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < i) ->
      (((x_3 - (3 * i_4)) % 3) = 0))).
  (* Invariant *)
  Have: ((0 <= i_2) -> ((i_2 < i) -> (i_2 = i))).
  (* Invariant *)
  Have: x <= (b + n).
  (* Invariant *)
  Have: b <= (i + n).
  (* Invariant *)
  Have: (0 <= b) /\ (b <= x_3).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= i_3.
  (* Then *)
  Have: i < n.
  (* Invariant *)
  Have: (i = (-1)) \/ (i = b) \/ (x_1 = b).
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: x_2 <= (1 + x_3).
  (* Invariant *)
  Have: b <= x_1.
}
Prove: (x_9 % 3) = (x_8 % 3).
Prover Z3 4.8.12 returns Valid (Qed:18ms) (20ms) (47062)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:18ms) (8ms) (117)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.78ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 20):
Let x = 1 + i.
Let x_1 = 1 + b.
Let x_2 = 2 * i.
Let x_3 = 1 + x_2.
Let x_4 = 2 * b.
Let x_5 = 3 * i.
Let x_6 = -b.
Let x_7 = x_5 - b.
Let x_8 = i % 2.
Let x_9 = i % 3.
Assume {
  Type: is_sint32(b) /\ is_sint32(i) /\ is_sint32(n) /\ is_sint32(x_1) /\
      is_sint32(x) /\ is_sint32(x_7) /\ is_sint32(2 + x_5 - b).
  (* Pre-condition *)
  Have: n <= 999999.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: (i = 0) \/ (i = b) \/ (x_2 = b).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: x_4 <= x_5.
  (* Invariant *)
  Have: b <= x_2.
  (* Invariant *)
  Have: x_9 = (b % 3).
  (* Invariant *)
  Have: x_8 = (b % 2).
  (* Invariant *)
  Have: x_5 <= x_4.
  (* Invariant *)
  Have: i <= b.
  (* Invariant *)
  Have: (x_7 % 3) = x_9.
  (* Invariant *)
  Have: (x_7 % 2) = x_8.
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < i) -> (i_4 <= i))).
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < i) -> (i_4 = i))).
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < i) ->
      (((x_5 - (3 * i_4)) % 3) = 0))).
  (* Invariant *)
  Have: ((0 <= i_2) -> ((i_2 < i) -> (i_2 = i))).
  (* Invariant *)
  Have: x_2 <= (b + n).
  (* Invariant *)
  Have: b <= (i + n).
  (* Invariant *)
  Have: (0 <= b) /\ (b <= x_5).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= i_3.
  (* Then *)
  Have: i < n.
  (* Invariant *)
  Have: (i = (-1)) \/ (i = b) \/ (x_3 = b).
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: x_4 <= (1 + x_5).
  (* Invariant *)
  Have: b <= x_3.
  (* Invariant *)
  Have: (x % 3) = (x_1 % 3).
}
Prove: (x % 2) = (x_1 % 2).
Prover Z3 4.8.12 returns Valid (Qed:18ms) (20ms) (49900)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:18ms) (7ms) (122)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.98ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 22):
Let x = 1 + i.
Let x_1 = 1 + b.
Let x_2 = 2 * i.
Let x_3 = 1 + x_2.
Let x_4 = 2 * b.
Let x_5 = 3 * i.
Let x_6 = -b.
Let x_7 = x_5 - b.
Let x_8 = i % 2.
Let x_9 = i % 3.
Assume {
  Type: is_sint32(b) /\ is_sint32(i) /\ is_sint32(n) /\ is_sint32(x_1) /\
      is_sint32(x) /\ is_sint32(x_7) /\ is_sint32(2 + x_5 - b).
  (* Pre-condition *)
  Have: n <= 999999.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: (i = 0) \/ (i = b) \/ (x_2 = b).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: x_4 <= x_5.
  (* Invariant *)
  Have: b <= x_2.
  (* Invariant *)
  Have: x_9 = (b % 3).
  (* Invariant *)
  Have: x_8 = (b % 2).
  (* Invariant *)
  Have: x_5 <= x_4.
  (* Invariant *)
  Have: i <= b.
  (* Invariant *)
  Have: (x_7 % 3) = x_9.
  (* Invariant *)
  Have: (x_7 % 2) = x_8.
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < i) -> (i_4 <= i))).
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < i) -> (i_4 = i))).
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < i) ->
      (((x_5 - (3 * i_4)) % 3) = 0))).
  (* Invariant *)
  Have: ((0 <= i_2) -> ((i_2 < i) -> (i_2 = i))).
  (* Invariant *)
  Have: x_2 <= (b + n).
  (* Invariant *)
  Have: b <= (i + n).
  (* Invariant *)
  Have: (0 <= b) /\ (b <= x_5).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= i_3.
  (* Then *)
  Have: i < n.
  (* Invariant *)
  Have: (i = (-1)) \/ (i = b) \/ (x_3 = b).
  (* Invariant *)
  Have: (-1) <= i.
  (* Invariant *)
  Have: x_4 <= (1 + x_5).
  (* Invariant *)
  Have: b <= x_3.
  (* Invariant *)
  Have: (x % 3) = (x_1 % 3).
  (* Invariant *)
  Have: (x % 2) = (x_1 % 2).
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:17ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:17ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (16ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (15ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (15ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (16ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (17ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 28):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (20ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 29):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (19ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 30):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 31):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (21ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (22ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 34):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (22ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (21ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 38):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (20ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 41):
Assume {
  Type: is_sint32(n).
  (* Pre-condition *)
  Have: n <= 999999.
  (* Invariant *)
  Have: 0 <= n.
}
Prove: exists i : Z. 0 <= i.
Prover Z3 4.8.12 returns Valid (Qed:0.70ms) (10ms) (23846)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/003_0002/003_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/003_0002/003_merged.c, line 44):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/003_0002/003_merged.c, line 45) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/003_0002/003_merged.c, line 45) (2/2):
Call Result at line 50
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/003_0002/003_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/003_0002/003_merged.c:7: Warning: 
  No 'assigns' specification for function 'foo003'.
  Callers assumptions might be imprecise.

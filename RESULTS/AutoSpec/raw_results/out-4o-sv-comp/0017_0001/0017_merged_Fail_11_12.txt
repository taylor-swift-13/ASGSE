[kernel] Parsing out/0017_0001/0017_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 12 goals scheduled
[wp] [Timeout] typed_foo0017_loop_invariant_2_preserved (Qed 4ms) (Z3)
[wp] Proved goals:   11 / 12
  Qed:               9
  Alt-Ergo 2.5.4:    2 (5ms-12ms)
  Timeout:           1
------------------------------------------------------------
  Function foo0017
------------------------------------------------------------

Goal Preservation of Invariant (file out/0017_0001/0017_merged.c, line 7):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0017_0001/0017_merged.c, line 7):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0017_0001/0017_merged.c, line 8):
Let a = havoc(Mint_undef_0, Mint_0, shift_sint32(B, 0), 2048).
Let a_1 = a[shift_sint32(B, i) <- a[shift_sint32(A, i)]].
Assume {
  Type: is_sint32(i) /\ is_sint32(1 + i).
  (* Heap *)
  Type: (region(A.base) <= 0) /\ (region(B.base) <= 0).
  (* Goal *)
  When: (0 <= i_1) /\ (i_1 <= i).
  (* Invariant *)
  Have: i <= 2048.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i) ->
      (a[shift_sint32(B, i_2)] = a[shift_sint32(A, i_2)]))).
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i <= 2047.
}
Prove: a_1[shift_sint32(B, i_1)] = a_1[shift_sint32(A, i_1)].
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0017_0001/0017_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0017_0001/0017_merged.c, line 9):
Let a = havoc(Mint_undef_0, Mint_0, shift_sint32(B, 0), 2048).
Let a_1 = a[shift_sint32(B, i) <- a[shift_sint32(A, i)]].
Assume {
  Type: is_sint32(i) /\ is_sint32(1 + i).
  (* Heap *)
  Type: (region(A.base) <= 0) /\ (region(B.base) <= 0).
  (* Goal *)
  When: (0 <= i_1) /\ (i_1 <= i).
  (* Invariant *)
  Have: i <= 2048.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i) ->
      (a[shift_sint32(B, i_2)] = a[shift_sint32(A, i_2)]))).
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i <= 2047.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= i) -> ((0 <= i_2) ->
      (a_1[shift_sint32(B, i_2)] = a_1[shift_sint32(A, i_2)]))).
}
Prove: a_1[shift_sint32(B, i_1)] = a_1[shift_sint32(A, i_1)].
Prover Z3 4.8.12 returns Valid (Qed:6ms) (50ms) (223371)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (5ms) (77)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0017_0001/0017_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0017_0001/0017_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0017_0001/0017_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Assertion (file out/0017_0001/0017_merged.c, line 20):
Let a = havoc(Mint_undef_0, Mint_0, shift_sint32(B, 0), 2048).
Let x = Mint_undef_0[shift_sint32(B, 1024)].
Let a_1 = a[shift_sint32(A, 1024)].
Assume {
  Type: is_sint32(i) /\ is_sint32(x) /\ is_sint32(a_1).
  (* Heap *)
  Type: (region(A.base) <= 0) /\ (region(B.base) <= 0).
  (* Invariant *)
  Have: i <= 2048.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (a[shift_sint32(B, i_1)] = a[shift_sint32(A, i_1)]))).
  (* Invariant *)
  Have: 0 <= i.
  (* Else *)
  Have: 2048 <= i.
}
Prove: a_1 = x.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (30ms) (126392)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (12ms) (191)

------------------------------------------------------------

Goal Loop assigns (file out/0017_0001/0017_merged.c, line 11) (1/3):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/0017_0001/0017_merged.c, line 11) (2/3):
Effect at line 15
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/0017_0001/0017_merged.c, line 11) (3/3):
Effect at line 17
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/0017_0001/0017_merged.c:3: Warning: 
  No 'assigns' specification for function 'foo0017'.
  Callers assumptions might be imprecise.

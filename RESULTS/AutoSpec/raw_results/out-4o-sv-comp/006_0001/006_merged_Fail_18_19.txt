[kernel] Parsing out/006_0001/006_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 19 goals scheduled
[wp] [Timeout] typed_foo006_loop_invariant_8_preserved (Qed 3ms) (Z3)
[wp] Proved goals:   18 / 19
  Qed:              17
  Alt-Ergo 2.5.4:    1 (5ms)
  Timeout:           1
------------------------------------------------------------
  Function foo006
------------------------------------------------------------

Goal Preservation of Invariant (file out/006_0001/006_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/006_0001/006_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/006_0001/006_merged.c, line 13):
Let x = i + k.
Let x_1 = 1 + i.
Let x_2 = j + k.
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(k) /\ is_sint32(k_1) /\
      is_sint32(k - 1) /\ is_sint32(x_1) /\ is_sint32(x_2).
  (* Invariant *)
  Have: (0 <= k_1) /\ (k_1 <= 1).
  (* Invariant *)
  Have: k <= 1.
  (* Invariant *)
  Have: j <= x_1.
  (* Invariant *)
  Have: i <= 1000000.
  (* Invariant *)
  Have: x <= 2.
  (* Invariant *)
  Have: 0 < i.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 <= k.
  (* Then *)
  Have: i <= 999999.
  (* Invariant *)
  Have: k <= 2.
}
Prove: x_2 <= (2 + i).
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (31744)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (5ms) (24)

------------------------------------------------------------

Goal Establishment of Invariant (file out/006_0001/006_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/006_0001/006_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/006_0001/006_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/006_0001/006_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/006_0001/006_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/006_0001/006_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/006_0001/006_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/006_0001/006_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/006_0001/006_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/006_0001/006_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/006_0001/006_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/006_0001/006_merged.c, line 19):
Let x = j + k.
Let x_1 = i + k.
Let x_2 = 1 + i.
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(k) /\ is_sint32(k_1) /\
      is_sint32(k - 1) /\ is_sint32(x_2) /\ is_sint32(x).
  (* Invariant *)
  Have: (0 <= k_1) /\ (k_1 <= 1).
  (* Invariant *)
  Have: k <= 1.
  (* Invariant *)
  Have: j <= x_2.
  (* Invariant *)
  Have: i <= 1000000.
  (* Invariant *)
  Have: x_1 <= 2.
  (* Invariant *)
  Have: 0 < i.
  (* Invariant *)
  Have: 0 < x_1.
  (* Invariant *)
  Have: 0 <= k.
  (* Then *)
  Have: i <= 999999.
  (* Invariant *)
  Have: k <= 2.
  (* Invariant *)
  Have: x <= (2 + i).
}
Prove: 0 < k.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/006_0001/006_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/006_0001/006_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/006_0001/006_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Loop assigns (file out/006_0001/006_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/006_0001/006_merged.c:5: Warning: 
  No 'assigns' specification for function 'foo006'.
  Callers assumptions might be imprecise.

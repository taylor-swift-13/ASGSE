[kernel] Parsing out/004_0001/004_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 31 goals scheduled
[wp] [Timeout] typed_foo004_loop_invariant_4_preserved (Qed 4ms) (Z3)
[wp] Proved goals:   30 / 31
  Qed:              25
  Alt-Ergo 2.5.4:    4 (5ms-19ms-27ms)
  Z3 4.8.12:         1 (30ms)
  Timeout:           1
------------------------------------------------------------
  Function foo004
------------------------------------------------------------

Goal Preservation of Invariant (file out/004_0001/004_merged.c, line 9):
Let x = (i - 1) / 2.
Let x_1 = i + x.
Let x_2 = -x.
Assume {
  Type: is_sint32(i) /\ is_sint32(2 + i) /\ is_sint32(9 - x) /\
      is_sint32(10 - x).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: x_1 <= 19.
  (* Invariant *)
  Have: x_1 <= 11.
  (* Invariant *)
  Have: (i + (2 * x)) <= 21.
  (* Invariant *)
  Have: i <= 19.
  (* Invariant *)
  Have: x_1 <= 12.
  (* Invariant *)
  Have: (i % 2) = 1.
  (* Invariant *)
  Have: i <= 10.
  (* Invariant *)
  Have: i <= 14.
  (* Invariant *)
  Have: 0 < i.
  (* Invariant *)
  Have: i <= 22.
  (* Invariant *)
  Have: ((10 - i - x) % 3) = 0.
  (* Then *)
  Have: x_1 <= 10.
}
Prove: ((1 + i) / 2) = (1 + x).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (36277)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (20ms) (287)

------------------------------------------------------------

Goal Establishment of Invariant (file out/004_0001/004_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/004_0001/004_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/004_0001/004_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/004_0001/004_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/004_0001/004_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/004_0001/004_merged.c, line 12):
Let x = (1 + i) / 2.
Let x_1 = i + x.
Let x_2 = -x.
Assume {
  Type: is_sint32(i) /\ is_sint32(2 + i) /\ is_sint32(10 - x) /\
      is_sint32(11 - x).
  (* Invariant *)
  Have: x = (1 + ((i - 1) / 2)).
  (* Invariant *)
  Have: 0 < i.
  (* Invariant *)
  Have: x_1 <= 20.
  (* Invariant *)
  Have: x_1 <= 12.
  (* Invariant *)
  Have: (i + (2 * x)) <= 23.
  (* Invariant *)
  Have: i <= 19.
  (* Invariant *)
  Have: x_1 <= 13.
  (* Invariant *)
  Have: (i % 2) = 1.
  (* Invariant *)
  Have: i <= 10.
  (* Invariant *)
  Have: i <= 14.
  (* Invariant *)
  Have: i <= 22.
  (* Invariant *)
  Have: ((11 - i - x) % 3) = 0.
  (* Then *)
  Have: x_1 <= 11.
  (* Invariant *)
  Have: (-2) <= i.
  (* Invariant *)
  Have: x_1 <= 17.
}
Prove: x_1 <= 9.
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/004_0001/004_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/004_0001/004_merged.c, line 13):
Let x = (1 + i) / 2.
Let x_1 = i + x.
Let x_2 = -x.
Let x_3 = i + (2 * x).
Assume {
  Type: is_sint32(i) /\ is_sint32(2 + i) /\ is_sint32(10 - x) /\
      is_sint32(11 - x).
  (* Invariant *)
  Have: x = (1 + ((i - 1) / 2)).
  (* Invariant *)
  Have: 0 < i.
  (* Invariant *)
  Have: x_1 <= 20.
  (* Invariant *)
  Have: x_1 <= 12.
  (* Invariant *)
  Have: x_3 <= 23.
  (* Invariant *)
  Have: i <= 19.
  (* Invariant *)
  Have: x_1 <= 13.
  (* Invariant *)
  Have: (i % 2) = 1.
  (* Invariant *)
  Have: i <= 10.
  (* Invariant *)
  Have: i <= 14.
  (* Invariant *)
  Have: i <= 22.
  (* Invariant *)
  Have: ((11 - i - x) % 3) = 0.
  (* Then *)
  Have: x_1 <= 11.
  (* Invariant *)
  Have: (-2) <= i.
  (* Invariant *)
  Have: x_1 <= 17.
  (* Invariant *)
  Have: x_1 <= 9.
}
Prove: x_3 <= 19.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (32252)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (5ms) (31)

------------------------------------------------------------

Goal Establishment of Invariant (file out/004_0001/004_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/004_0001/004_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/004_0001/004_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/004_0001/004_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/004_0001/004_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/004_0001/004_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/004_0001/004_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/004_0001/004_merged.c, line 17):
Let x = (1 + i) / 2.
Let x_1 = i + x.
Let x_2 = i + (2 * x).
Let x_3 = -x.
Let x_4 = 2 + i.
Assume {
  Type: is_sint32(i) /\ is_sint32(x_4) /\ is_sint32(10 - x) /\
      is_sint32(11 - x).
  (* Invariant *)
  Have: x = (1 + ((i - 1) / 2)).
  (* Invariant *)
  Have: 0 < i.
  (* Invariant *)
  Have: x_1 <= 20.
  (* Invariant *)
  Have: x_1 <= 12.
  (* Invariant *)
  Have: x_2 <= 23.
  (* Invariant *)
  Have: i <= 19.
  (* Invariant *)
  Have: x_1 <= 13.
  (* Invariant *)
  Have: (i % 2) = 1.
  (* Invariant *)
  Have: i <= 10.
  (* Invariant *)
  Have: i <= 14.
  (* Invariant *)
  Have: i <= 22.
  (* Invariant *)
  Have: ((11 - i - x) % 3) = 0.
  (* Then *)
  Have: x_1 <= 11.
  (* Invariant *)
  Have: (-2) <= i.
  (* Invariant *)
  Have: x_1 <= 17.
  (* Invariant *)
  Have: x_1 <= 9.
  (* Invariant *)
  Have: x_2 <= 19.
  (* Invariant *)
  Have: i <= 17.
  (* Invariant *)
  Have: x_1 <= 10.
}
Prove: (x_4 % 2) = 1.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (38340)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (24ms) (387)

------------------------------------------------------------

Goal Establishment of Invariant (file out/004_0001/004_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/004_0001/004_merged.c, line 18):
Let x = 2 + i.
Let x_1 = (1 + i) / 2.
Let x_2 = i + x_1.
Let x_3 = i + (2 * x_1).
Let x_4 = -x_1.
Assume {
  Type: is_sint32(i) /\ is_sint32(x) /\ is_sint32(10 - x_1) /\
      is_sint32(11 - x_1).
  (* Invariant *)
  Have: x_1 = (1 + ((i - 1) / 2)).
  (* Invariant *)
  Have: 0 < i.
  (* Invariant *)
  Have: x_2 <= 20.
  (* Invariant *)
  Have: x_2 <= 12.
  (* Invariant *)
  Have: x_3 <= 23.
  (* Invariant *)
  Have: i <= 19.
  (* Invariant *)
  Have: x_2 <= 13.
  (* Invariant *)
  Have: (i % 2) = 1.
  (* Invariant *)
  Have: i <= 10.
  (* Invariant *)
  Have: i <= 14.
  (* Invariant *)
  Have: i <= 22.
  (* Invariant *)
  Have: ((11 - i - x_1) % 3) = 0.
  (* Then *)
  Have: x_2 <= 11.
  (* Invariant *)
  Have: (-2) <= i.
  (* Invariant *)
  Have: x_2 <= 17.
  (* Invariant *)
  Have: x_2 <= 9.
  (* Invariant *)
  Have: x_3 <= 19.
  (* Invariant *)
  Have: i <= 17.
  (* Invariant *)
  Have: x_2 <= 10.
  (* Invariant *)
  Have: (x % 2) = 1.
}
Prove: i <= 8.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (34734)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (27ms) (462)

------------------------------------------------------------

Goal Establishment of Invariant (file out/004_0001/004_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/004_0001/004_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/004_0001/004_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/004_0001/004_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/004_0001/004_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/004_0001/004_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/004_0001/004_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/004_0001/004_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/004_0001/004_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/004_0001/004_merged.c, line 23):
Let x = 2 + i.
Let x_1 = (1 + i) / 2.
Let x_2 = i + x_1.
Let x_3 = i + (2 * x_1).
Let x_4 = -i.
Let x_5 = -x_1.
Assume {
  Type: is_sint32(i) /\ is_sint32(x) /\ is_sint32(10 - x_1) /\
      is_sint32(11 - x_1).
  (* Invariant *)
  Have: x_1 = (1 + ((i - 1) / 2)).
  (* Invariant *)
  Have: 0 < i.
  (* Invariant *)
  Have: x_2 <= 20.
  (* Invariant *)
  Have: x_2 <= 12.
  (* Invariant *)
  Have: x_3 <= 23.
  (* Invariant *)
  Have: i <= 19.
  (* Invariant *)
  Have: x_2 <= 13.
  (* Invariant *)
  Have: (i % 2) = 1.
  (* Invariant *)
  Have: i <= 10.
  (* Invariant *)
  Have: i <= 14.
  (* Invariant *)
  Have: i <= 22.
  (* Invariant *)
  Have: ((11 - i - x_1) % 3) = 0.
  (* Then *)
  Have: x_2 <= 11.
  (* Invariant *)
  Have: (-2) <= i.
  (* Invariant *)
  Have: x_2 <= 17.
  (* Invariant *)
  Have: x_2 <= 9.
  (* Invariant *)
  Have: x_3 <= 19.
  (* Invariant *)
  Have: i <= 17.
  (* Invariant *)
  Have: x_2 <= 10.
  (* Invariant *)
  Have: (x % 2) = 1.
  (* Invariant *)
  Have: i <= 8.
  (* Invariant *)
  Have: i <= 12.
  (* Invariant *)
  Have: i <= 20.
}
Prove: ((8 - i - x_1) % 3) = 0.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (30ms) (75751)

------------------------------------------------------------

Goal Establishment of Invariant (file out/004_0001/004_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.97ms)

------------------------------------------------------------

Goal Loop assigns (file out/004_0001/004_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/004_0001/004_merged.c:2: Warning: 
  No 'assigns' specification for function 'foo004'.
  Callers assumptions might be imprecise.

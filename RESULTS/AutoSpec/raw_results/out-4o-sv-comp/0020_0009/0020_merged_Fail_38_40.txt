[kernel] Parsing out/0020_0009/0020_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 40 goals scheduled
[wp] [Timeout] typed_foo0020_loop_invariant_12_established (Qed 7ms) (Z3)
[wp] [Timeout] typed_foo0020_loop_invariant_14_preserved (Qed 7ms) (Z3)
[wp] Proved goals:   38 / 40
  Qed:              35
  Alt-Ergo 2.5.4:    2 (5ms-8ms)
  Z3 4.8.12:         1 (10ms)
  Timeout:           2
------------------------------------------------------------
  Function foo0020
------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0009/0020_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (10ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0009/0020_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0009/0020_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0009/0020_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0009/0020_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0009/0020_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0009/0020_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (14ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0009/0020_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0009/0020_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (14ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0009/0020_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0009/0020_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0009/0020_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0009/0020_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0009/0020_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0009/0020_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0009/0020_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0009/0020_merged.c, line 25):
Let x = 1 + i.
Let x_1 = x * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_2 = 4000 * i.
Let x_3 = 2000 * i.
Let x_4 = 10000 * i.
Let x_5 = i * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(v) /\ is_sint32(x) /\
      is_sint32(x_5) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: n <= 1.
  (* Pre-condition *)
  Have: 0 <= v.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: ((2 <= v) -> (x_5 = x_4)).
  (* Invariant *)
  Have: ((v = 1) -> (x_5 = x_3)).
  (* Invariant *)
  Have: ((v = 0) -> (x_5 = x_2)).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= x_5.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
  (* Invariant *)
  Have: ((2 <= v) -> (x_1 = (10000 + x_4))).
  (* Invariant *)
  Have: ((v = 1) -> (x_1 = (2000 + x_3))).
  (* Invariant *)
  Have: ((v = 0) -> (x_1 = (4000 + x_2))).
}
Prove: 0 <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:18ms) (20ms) (33511)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:18ms) (8ms) (195)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0009/0020_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0009/0020_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (8ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0009/0020_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0009/0020_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0009/0020_merged.c, line 43):
Let x = i * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(v) /\ is_sint32(x).
  (* Pre-condition *)
  Have: n <= 1.
  (* Pre-condition *)
  Have: 0 <= v.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: ((2 <= v) -> (x = (10000 * i))).
  (* Invariant *)
  Have: ((v = 1) -> (x = (2000 * i))).
  (* Invariant *)
  Have: ((v = 0) -> (x = (4000 * i))).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= i.
  (* Else *)
  Have: n <= i.
}
Prove: i <= x.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (32599)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (60)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0009/0020_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0009/0020_merged.c, line 44):
Let x = i * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(v) /\ is_sint32(x).
  (* Pre-condition *)
  Have: n <= 1.
  (* Pre-condition *)
  Have: 0 <= v.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: ((2 <= v) -> (x = (10000 * i))).
  (* Invariant *)
  Have: ((v = 1) -> (x = (2000 * i))).
  (* Invariant *)
  Have: ((v = 0) -> (x = (4000 * i))).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= i.
  (* Else *)
  Have: n <= i.
  (* Invariant *)
  Have: i <= x.
}
Prove: i < x.
Prover Z3 4.8.12 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0009/0020_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0009/0020_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0009/0020_merged.c, line 46):
Let x = i * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_1 = i + k.
Let x_2 = -x.
Let x_3 = n * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_4 = -k.
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(n) /\ is_sint32(v) /\
      is_sint32(k - 1) /\ is_sint32(x_3) /\ is_sint32(x_3 - k) /\
      is_sint32(1 + x_3 - k).
  (* Pre-condition *)
  Have: n <= 1.
  (* Pre-condition *)
  Have: 0 <= v.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: ((2 <= v) -> (x_3 = (10000 * i))).
  (* Invariant *)
  Have: ((v = 1) -> (x_3 = (2000 * i))).
  (* Invariant *)
  Have: ((v = 0) -> (x_3 = (4000 * i))).
  (* Invariant *)
  Have: x <= x_3.
  (* Invariant *)
  Have: x_3 = x.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: 0 <= i.
  (* Else *)
  Have: n <= i.
  (* Invariant *)
  Have: i <= x.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: i < x.
  (* Invariant *)
  Have: ((i + k - x) *
         (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000))) = k.
  (* Invariant *)
  Have: x <= x_1.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: k <= x.
  (* Invariant *)
  Have: 0 < k.
  (* Then *)
  Have: x < x_1.
}
Prove: (1
        + ((i + k - 1 - x) *
           (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000))))
         = k.
Prover Z3 4.8.12 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0009/0020_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0009/0020_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0009/0020_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0009/0020_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0009/0020_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0009/0020_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0009/0020_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0009/0020_merged.c, line 50):
Let x = -j.
Let x_1 = (i - 1 - j) *
    (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_2 = i * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_3 = 1 + j + x_1.
Let x_4 = n * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_5 = (n - 1 - j) *
    (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(n) /\ is_sint32(v) /\
      is_sint32(1 + j) /\ is_sint32(x_4) /\ is_sint32(x_5) /\
      is_sint32(1 + x_5).
  (* Pre-condition *)
  Have: n <= 1.
  (* Pre-condition *)
  Have: 0 <= v.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: ((2 <= v) -> (x_4 = (10000 * i))).
  (* Invariant *)
  Have: ((v = 1) -> (x_4 = (2000 * i))).
  (* Invariant *)
  Have: ((v = 0) -> (x_4 = (4000 * i))).
  (* Invariant *)
  Have: x_2 <= x_4.
  (* Invariant *)
  Have: x_4 = x_2.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: 0 <= i.
  (* Else *)
  Have: n <= i.
  (* Invariant *)
  Have: i <= x_2.
  (* Invariant *)
  Have: 0 < x_2.
  (* Invariant *)
  Have: i < x_2.
  (* Invariant *)
  Have: i <= x_3.
  (* Invariant *)
  Have: i <= (j + x_1).
  (* Invariant *)
  Have: x_2 = x_3.
  (* Invariant *)
  Have: ((i - j) *
         (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)))
          = (1 + x_1).
  (* Invariant *)
  Have: j <= i.
  (* Invariant *)
  Have: (-1) <= x_1.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: j < i.
  (* Invariant *)
  Have: (-1) <= j.
}
Prove: 0 < x_1.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (10663)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0009/0020_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0009/0020_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0009/0020_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Loop assigns (file out/0020_0009/0020_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/0020_0009/0020_merged.c, line 52):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/0020_0009/0020_merged.c:6: Warning: 
  No 'assigns' specification for function 'foo0020'.
  Callers assumptions might be imprecise.

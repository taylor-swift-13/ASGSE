[kernel] Parsing out/008_0016/008_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 25 goals scheduled
[wp] [Timeout] typed_foo008_loop_invariant_5_preserved (Qed 4ms) (Z3)
[wp] Proved goals:   24 / 25
  Qed:              21
  Alt-Ergo 2.5.4:    2 (4ms-133ms)
  Z3 4.8.12:         1 (140ms)
  Timeout:           1
------------------------------------------------------------
  Function foo008
------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0016/008_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0016/008_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0016/008_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0016/008_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0016/008_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0016/008_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0016/008_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0016/008_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0016/008_merged.c, line 18):
Let x = i_2 + res_1.
Let x_1 = cnt_0 + res_0.
Assume {
  Type: is_sint32(cnt_0) /\ is_sint32(res_0) /\ is_sint32(res_1) /\
      is_sint32(cnt_0 - 1) /\ is_sint32(1 + res_0) /\
      is_sint32(cnt_0 + res_0 - res_1).
  (* Goal *)
  When: (0 <= i) /\ ((i + res_1) <= res_0).
  (* Pre-condition *)
  Have: res_1 <= 999999.
  (* Pre-condition *)
  Have: (res_1 <= x_1) /\ (x_1 <= (1000000 + res_1)).
  (* Invariant *)
  Have: ((0 <= i_1) -> (((i_1 + res_1) <= x_1) -> (i_1 = 0))).
  (* Invariant *)
  Have: 0 <= cnt_0.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> (((res_1 + i_3) < res_0) ->
      (i_3 = cnt_0))).
  (* Invariant *)
  Have: ((0 <= i_2) -> ((x <= x_1) -> (x = res_0))).
  (* Invariant *)
  Have: res_1 <= res_0.
  (* Then *)
  Have: 0 < cnt_0.
}
Prove: (1 + i) = cnt_0.
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0016/008_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0016/008_merged.c, line 19):
Let x = i_1 + res_0.
Let x_1 = cnt_0 + res_1.
Let x_2 = 1 + res_1.
Assume {
  Type: is_sint32(cnt_0) /\ is_sint32(res_1) /\ is_sint32(res_0) /\
      is_sint32(cnt_0 - 1) /\ is_sint32(x_2) /\
      is_sint32(cnt_0 + res_1 - res_0).
  (* Pre-condition *)
  Have: res_0 <= 999999.
  (* Pre-condition *)
  Have: (res_0 <= x_1) /\ (x_1 <= (1000000 + res_0)).
  (* Invariant *)
  Have: ((0 <= i) -> (((i + res_0) <= x_1) -> (i = 0))).
  (* Invariant *)
  Have: 0 <= cnt_0.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> (((res_0 + i_2) < res_1) ->
      (i_2 = cnt_0))).
  (* Invariant *)
  Have: ((0 <= i_1) -> ((x <= x_1) -> (x = res_1))).
  (* Invariant *)
  Have: res_0 <= res_1.
  (* Then *)
  Have: 0 < cnt_0.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> (((res_0 + i_2) <= res_1) ->
      ((1 + i_2) = cnt_0))).
}
Prove: exists i_2 : Z. let x_3 = res_0 + i_2 in ((0 <= i_2) ->
    ((x_3 <= x_1) -> (x_3 = x_2))).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (140ms) (198936)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0016/008_merged.c, line 19):
Assume {
  Type: is_sint32(b) /\ is_sint32(res_0).
  (* Pre-condition *)
  Have: res_0 <= 999999.
  (* Pre-condition *)
  Have: (0 <= b) /\ (b <= 1000000).
}
Prove: exists i : Z. ((i <= b) -> ((0 <= i) -> (i = 0))).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (133ms) (2009)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0016/008_merged.c, line 20):
Let x = a + i_2.
Let x_1 = cnt_0 + res_0.
Let x_2 = 1 + res_0.
Let x_3 = a + i_1.
Assume {
  Type: is_sint32(a) /\ is_sint32(cnt_0) /\ is_sint32(res_0) /\
      is_sint32(cnt_0 - 1) /\ is_sint32(x_2) /\ is_sint32(cnt_0 + res_0 - a).
  (* Pre-condition *)
  Have: a <= 999999.
  (* Pre-condition *)
  Have: (a <= x_1) /\ (x_1 <= (1000000 + a)).
  (* Invariant *)
  Have: ((0 <= i) -> (((a + i) <= x_1) -> (i = 0))).
  (* Invariant *)
  Have: 0 <= cnt_0.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> (((a + i_3) < res_0) ->
      (i_3 = cnt_0))).
  (* Invariant *)
  Have: ((0 <= i_1) -> ((x_3 <= x_1) -> (x_3 = res_0))).
  (* Invariant *)
  Have: a <= res_0.
  (* Then *)
  Have: 0 < cnt_0.
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> (((a + i_3) <= res_0) ->
      ((1 + i_3) = cnt_0))).
  (* Invariant *)
  Have: ((0 <= i_2) -> ((x <= x_1) -> (x = x_2))).
}
Prove: a <= x_2.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (4ms) (22)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0016/008_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0016/008_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0016/008_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.92ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0016/008_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0016/008_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0016/008_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0016/008_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.81ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0016/008_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0016/008_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/008_0016/008_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/008_0016/008_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Loop assigns (file out/008_0016/008_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/008_0016/008_merged.c:6: Warning: 
  No 'assigns' specification for function 'foo008'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/0020_0002/0020_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 30 goals scheduled
[wp] [Timeout] typed_foo0020_loop_invariant_8_preserved (Qed 10ms) (Z3)
[wp] Proved goals:   29 / 30
  Qed:              24
  Alt-Ergo 2.5.4:    3 (4ms-7ms-8ms)
  Z3 4.8.12:         2 (10ms)
  Timeout:           1
------------------------------------------------------------
  Function foo0020
------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0002/0020_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (12ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0002/0020_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0002/0020_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0002/0020_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0002/0020_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0002/0020_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0002/0020_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0002/0020_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0002/0020_merged.c, line 21):
Let x = i * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_1 = 1 + i.
Let x_2 = x_1 *
    (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(v) /\ is_sint32(x_1) /\
      is_sint32(x) /\ is_sint32(x_2).
  (* Pre-condition *)
  Have: n <= 1.
  (* Pre-condition *)
  Have: 0 <= v.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (v = 0) \/ (v = 1) \/ (2 <= v).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: ((v = 0) /\ (x = (4000 * i))) \/ ((v = 1) /\ (x = (2000 * i))) \/
      ((x = (10000 * i)) /\ (2 <= v)).
  (* Then *)
  Have: i < n.
}
Prove: 0 <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:16ms) (10ms) (33330)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:16ms) (8ms) (164)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0002/0020_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0002/0020_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0002/0020_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0002/0020_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (14ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0002/0020_merged.c, line 23):
Assume {
  Type: is_sint32(n) /\ is_sint32(v).
  (* Pre-condition *)
  Have: n <= 1.
  (* Pre-condition *)
  Have: 0 <= v.
  (* Invariant *)
  Have: 0 <= n.
}
Prove: (v = 0) \/ (v = 1) \/ (2 <= v).
Prover Z3 4.8.12 returns Valid (Qed:1ms) (20ms) (29832)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (4ms) (18)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0002/0020_merged.c, line 40):
Let x = -j.
Let x_1 = (i - j) *
    (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_2 = 4000 * i.
Let x_3 = 2000 * i.
Let x_4 = 10000 * i.
Let x_5 = i * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_6 = n * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_7 = (n - j) *
    (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(n) /\ is_sint32(v) /\
      is_sint32(1 + j) /\ is_sint32(x_6) /\ is_sint32(x_7) /\
      is_sint32(x_7 - 1).
  (* Pre-condition *)
  Have: n <= 1.
  (* Pre-condition *)
  Have: 0 <= v.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (v = 0) \/ (v = 1) \/ (2 <= v).
  (* Invariant *)
  Have: x_6 = x_5.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= x_5.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: ((v = 0) /\ (x_6 = x_2)) \/ ((v = 1) /\ (x_6 = x_3)) \/
      ((x_6 = x_4) /\ (2 <= v)).
  (* Else *)
  Have: n <= i.
  (* Invariant *)
  Have: ((v = 0) /\ (x_5 = x_2)) \/ ((v = 1) /\ (x_5 = x_3)) \/
      ((x_5 = x_4) /\ (2 <= v)).
  (* Invariant *)
  Have: j <= i.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: ((v = 0) /\ (((4000 * j) + x_1) = x_2)) \/
      ((v = 1) /\ (((2000 * j) + x_1) = x_3)) \/
      ((((10000 * j) + x_1) = x_4) /\ (2 <= v)).
  (* Then *)
  Have: j < i.
}
Prove: x_1
         = (1
            + ((i - 1 - j) *
               (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)))).
Prover Z3 4.8.12 returns Timeout (Qed:10ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:10ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0002/0020_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0002/0020_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0002/0020_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0002/0020_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0002/0020_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0002/0020_merged.c, line 43):
Let x = -j.
Let x_1 = (i - 1 - j) *
    (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_2 = 4000 * i.
Let x_3 = 2000 * i.
Let x_4 = 10000 * i.
Let x_5 = i * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_6 = n * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_7 = (n - 1 - j) *
    (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(n) /\ is_sint32(v) /\
      is_sint32(1 + j) /\ is_sint32(x_6) /\ is_sint32(x_7) /\
      is_sint32(1 + x_7).
  (* Pre-condition *)
  Have: n <= 1.
  (* Pre-condition *)
  Have: 0 <= v.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (v = 0) \/ (v = 1) \/ (2 <= v).
  (* Invariant *)
  Have: x_6 = x_5.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= x_5.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: ((v = 0) /\ (x_6 = x_2)) \/ ((v = 1) /\ (x_6 = x_3)) \/
      ((x_6 = x_4) /\ (2 <= v)).
  (* Else *)
  Have: n <= i.
  (* Invariant *)
  Have: ((v = 0) /\ (x_5 = x_2)) \/ ((v = 1) /\ (x_5 = x_3)) \/
      ((x_5 = x_4) /\ (2 <= v)).
  (* Invariant *)
  Have: ((i - j) *
         (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)))
          = (1 + x_1).
  (* Invariant *)
  Have: j <= i.
  (* Invariant *)
  Have: (-1) <= x_1.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: ((v = 0) /\ ((1 + (4000 * j) + x_1) = x_2)) \/
      ((v = 1) /\ ((1 + (2000 * j) + x_1) = x_3)) \/
      (((1 + (10000 * j) + x_1) = x_4) /\ (2 <= v)).
  (* Then *)
  Have: j < i.
}
Prove: 0 <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:13ms) (10ms) (10721)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0002/0020_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0002/0020_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0002/0020_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0002/0020_merged.c, line 45):
Let x = -j.
Let x_1 = (i - 1 - j) *
    (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_2 = 4000 * j.
Let x_3 = 4000 * i.
Let x_4 = 2000 * j.
Let x_5 = 2000 * i.
Let x_6 = 10000 * j.
Let x_7 = 10000 * i.
Let x_8 = i * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_9 = n * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_10 = (n - 1 - j) *
    (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(n) /\ is_sint32(v) /\
      is_sint32(1 + j) /\ is_sint32(x_9) /\ is_sint32(x_10) /\
      is_sint32(1 + x_10).
  (* Pre-condition *)
  Have: n <= 1.
  (* Pre-condition *)
  Have: 0 <= v.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (v = 0) \/ (v = 1) \/ (2 <= v).
  (* Invariant *)
  Have: x_9 = x_8.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= x_8.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: ((v = 0) /\ (x_9 = x_3)) \/ ((v = 1) /\ (x_9 = x_5)) \/
      ((x_9 = x_7) /\ (2 <= v)).
  (* Else *)
  Have: n <= i.
  (* Invariant *)
  Have: ((v = 0) /\ (x_8 = x_3)) \/ ((v = 1) /\ (x_8 = x_5)) \/
      ((x_8 = x_7) /\ (2 <= v)).
  (* Invariant *)
  Have: ((i - j) *
         (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)))
          = (1 + x_1).
  (* Invariant *)
  Have: j <= i.
  (* Invariant *)
  Have: (-1) <= x_1.
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: ((v = 0) /\ ((1 + x_2 + x_1) = x_3)) \/
      ((v = 1) /\ ((1 + x_4 + x_1) = x_5)) \/
      (((1 + x_6 + x_1) = x_7) /\ (2 <= v)).
  (* Then *)
  Have: j < i.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: (-1) <= j.
}
Prove: ((v = 0) /\ ((4000 + x_2 + x_1) = x_3)) \/
    ((v = 1) /\ ((2000 + x_4 + x_1) = x_5)) \/
    (((10000 + x_6 + x_1) = x_7) /\ (2 <= v)).
Prover Z3 4.8.12 returns Valid (Qed:12ms) (10ms) (10927)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0002/0020_merged.c, line 45):
Let x = n * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_1 = 4000 * i.
Let x_2 = 2000 * i.
Let x_3 = 10000 * i.
Let x_4 = i * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(v) /\ is_sint32(x).
  (* Pre-condition *)
  Have: n <= 1.
  (* Pre-condition *)
  Have: 0 <= v.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (v = 0) \/ (v = 1) \/ (2 <= v).
  (* Invariant *)
  Have: x = x_4.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: ((v = 0) /\ (x = x_1)) \/ ((v = 1) /\ (x = x_2)) \/
      ((x = x_3) /\ (2 <= v)).
  (* Else *)
  Have: n <= i.
}
Prove: ((v = 0) /\ (x_4 = x_1)) \/ ((v = 1) /\ (x_4 = x_2)) \/
    ((x_4 = x_3) /\ (2 <= v)).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (8ms) (157)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0002/0020_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0002/0020_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/0020_0002/0020_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/0020_0002/0020_merged.c, line 47):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/0020_0002/0020_merged.c:6: Warning: 
  No 'assigns' specification for function 'foo0020'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/0020_0006/0020_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] out/0020_0006/0020_merged.c:46: Warning: 
  Missing assigns clause (assigns 'everything' instead)
[wp] 29 goals scheduled
[wp] [Timeout] typed_foo0020_loop_invariant_10_preserved (Qed 21ms) (Z3)
[wp] Proved goals:   28 / 29
  Qed:              27
  Alt-Ergo 2.5.4:    1 (4ms)
  Timeout:           1
------------------------------------------------------------
  Function foo0020
------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0006/0020_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (13ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0006/0020_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0006/0020_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.88ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0006/0020_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0006/0020_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0006/0020_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0006/0020_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0006/0020_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0006/0020_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0006/0020_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0006/0020_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0006/0020_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0006/0020_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0006/0020_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0006/0020_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0006/0020_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.89ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0006/0020_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0006/0020_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.82ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0006/0020_merged.c, line 26):
Let x = 1 + i.
Let x_1 = x * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_2 = i * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_3 = 10000 * i.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(v) /\ is_sint32(x) /\
      is_sint32(x_2) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: n <= 1.
  (* Pre-condition *)
  Have: 0 <= v.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: ((i = 2) -> ((v = 1) -> (x_2 = 4000))).
  (* Invariant *)
  Have: ((i = 2) -> ((v = 0) -> (x_2 = 8000))).
  (* Invariant *)
  Have: ((i = 2) -> ((v != 0) -> ((v != 1) -> (x_2 = 20000)))).
  (* Invariant *)
  Have: ((i = 1) -> ((v = 1) -> (x_2 = 2000))).
  (* Invariant *)
  Have: ((i = 1) -> ((v = 0) -> (x_2 = 4000))).
  (* Invariant *)
  Have: ((i = 1) -> ((v != 0) -> ((v != 1) -> (x_2 = 10000)))).
  (* Invariant *)
  Have: ((i = 0) -> (x_2 = 0)).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: x_3 <= x_2.
  (* Invariant *)
  Have: (2000 * i) <= x_2.
  (* Invariant *)
  Have: (4000 * i) <= x_2.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
  (* Invariant *)
  Have: ((i = 1) -> ((v = 1) -> (x_1 = 4000))).
  (* Invariant *)
  Have: ((i = 1) -> ((v = 0) -> (x_1 = 8000))).
  (* Invariant *)
  Have: ((i = 1) -> ((v != 0) -> ((v != 1) -> (x_1 = 20000)))).
  (* Invariant *)
  Have: ((i = 0) -> ((v = 1) -> (x_1 = 2000))).
  (* Invariant *)
  Have: ((i = 0) -> ((v = 0) -> (x_1 = 4000))).
  (* Invariant *)
  Have: ((i = 0) -> ((v != 0) -> ((v != 1) -> (x_1 = 10000)))).
  (* Invariant *)
  Have: ((i = (-1)) -> (x_1 = 0)).
}
Prove: (10000 + x_3) <= x_1.
Prover Z3 4.8.12 returns Timeout (Qed:21ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:21ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0006/0020_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0006/0020_merged.c, line 27):
Let x = 10000 * i.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(v) /\ is_sint32(x) /\
      is_sint32(1 + i) /\ is_sint32(10000 + x).
  (* Residual *)
  When: v != 1.
  (* Residual *)
  When: v != 0.
  (* Pre-condition *)
  Have: n <= 1.
  (* Pre-condition *)
  Have: 0 <= v.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
}
Prove: (-1) <= i.
Prover Z3 4.8.12 returns Valid (Qed:18ms) (10ms) (31053)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:18ms) (4ms) (17)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0006/0020_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.98ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0006/0020_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (16ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0006/0020_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0006/0020_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (17ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0006/0020_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0006/0020_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (12ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0006/0020_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/0020_0006/0020_merged.c, line 31):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/0020_0006/0020_merged.c:6: Warning: 
  No 'assigns' specification for function 'foo0020'.
  Callers assumptions might be imprecise.

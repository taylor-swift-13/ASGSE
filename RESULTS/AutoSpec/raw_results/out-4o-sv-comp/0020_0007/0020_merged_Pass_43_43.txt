[kernel] Parsing out/0020_0007/0020_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 43 goals scheduled
[wp] Proved goals:   43 / 43
  Qed:              38
  Alt-Ergo 2.5.4:    5 (3ms-6ms-12ms)
------------------------------------------------------------
  Function foo0020
------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0007/0020_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (14ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0007/0020_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0007/0020_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0007/0020_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0007/0020_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0007/0020_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0007/0020_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0007/0020_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0007/0020_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0007/0020_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0007/0020_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0007/0020_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0007/0020_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0007/0020_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0007/0020_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0007/0020_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.78ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0007/0020_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0007/0020_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.81ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0007/0020_merged.c, line 26):
Let x = 1 + i.
Let x_1 = x * (if (v = 0) then 4000 else 10000).
Let x_2 = i * (if (v = 0) then 4000 else 10000).
Let x_3 = 2000 * i.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(v) /\ is_sint32(x) /\
      is_sint32(x_2) /\ is_sint32(x_1).
  (* Residual *)
  When: v != 1.
  (* Pre-condition *)
  Have: n <= 1.
  (* Pre-condition *)
  Have: 0 <= v.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: ((i = 2) -> ((v = 0) -> (x_2 = 8000))).
  (* Invariant *)
  Have: ((i = 2) -> ((v != 0) -> (x_2 = 20000))).
  (* Invariant *)
  Have: ((i = 1) -> ((v = 0) -> (x_2 = 4000))).
  (* Invariant *)
  Have: ((i = 1) -> ((v != 0) -> (x_2 = 10000))).
  (* Invariant *)
  Have: ((i = 0) -> (x_2 = 0)).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: x_3 <= x_2.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
  (* Invariant *)
  Have: ((i = 1) -> ((v = 0) -> (x_1 = 8000))).
  (* Invariant *)
  Have: ((i = 1) -> ((v != 0) -> (x_1 = 20000))).
  (* Invariant *)
  Have: ((i = 0) -> ((v = 0) -> (x_1 = 4000))).
  (* Invariant *)
  Have: ((i = 0) -> ((v != 0) -> (x_1 = 10000))).
  (* Invariant *)
  Have: ((i = (-1)) -> (x_1 = 0)).
}
Prove: (2000 + x_3) <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:20ms) (20ms) (34600)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:20ms) (12ms) (170)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0007/0020_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0007/0020_merged.c, line 27):
Let x = 2000 * i.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(1 + i) /\
      is_sint32(2000 + x).
  (* Pre-condition *)
  Have: n <= 1.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
}
Prove: (-1) <= i.
Prover Z3 4.8.12 returns Valid (Qed:21ms) (10ms) (30543)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:21ms) (4ms) (13)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0007/0020_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.99ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0007/0020_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (10ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0007/0020_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0007/0020_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0007/0020_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0007/0020_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0007/0020_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0007/0020_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0007/0020_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0007/0020_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0007/0020_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0007/0020_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0007/0020_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0007/0020_merged.c, line 50):
Let x = i * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_1 = -j.
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(v) /\ is_sint32(1 + j) /\
      is_sint32(x) /\ is_sint32(x - j) /\ is_sint32(x - 1 - j).
  (* Goal *)
  When: (0 <= i_1) /\ (i_1 <= j).
  (* Pre-condition *)
  Have: i <= 1.
  (* Pre-condition *)
  Have: 0 <= v.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: ((i = 2) -> ((v = 1) -> (x = 4000))).
  (* Invariant *)
  Have: ((i = 2) -> ((v = 0) -> (x = 8000))).
  (* Invariant *)
  Have: ((i = 2) -> ((v != 0) -> ((v != 1) -> (x = 20000)))).
  (* Invariant *)
  Have: ((i = 1) -> ((v = 1) -> (x = 2000))).
  (* Invariant *)
  Have: ((i = 1) -> ((v = 0) -> (x = 4000))).
  (* Invariant *)
  Have: ((i = 1) -> ((v != 0) -> ((v != 1) -> (x = 10000)))).
  (* Invariant *)
  Have: ((i = 0) -> (x = 0)).
  (* Invariant *)
  Have: (2000 * i) <= x.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: j <= i.
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: 0 <= j.
  (* Then *)
  Have: j < i.
  (* Assertion *)
  Have: j < x.
}
Prove: (2 + j) <= x.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (33986)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (5ms) (42)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0007/0020_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0007/0020_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0007/0020_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/0020_0007/0020_merged.c, line 52):
Let x = i * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_1 = i + k.
Let x_2 = -k.
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(v) /\ is_sint32(k - 1) /\
      is_sint32(x) /\ is_sint32(x - k) /\ is_sint32(1 + x - k).
  (* Pre-condition *)
  Have: i <= 1.
  (* Pre-condition *)
  Have: 0 <= v.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: ((i = 2) -> ((v = 1) -> (x = 4000))).
  (* Invariant *)
  Have: ((i = 2) -> ((v = 0) -> (x = 8000))).
  (* Invariant *)
  Have: ((i = 2) -> ((v != 0) -> ((v != 1) -> (x = 20000)))).
  (* Invariant *)
  Have: ((i = 1) -> ((v = 1) -> (x = 2000))).
  (* Invariant *)
  Have: ((i = 1) -> ((v = 0) -> (x = 4000))).
  (* Invariant *)
  Have: ((i = 1) -> ((v != 0) -> ((v != 1) -> (x = 10000)))).
  (* Invariant *)
  Have: ((i = 0) -> (x = 0)).
  (* Invariant *)
  Have: (2000 * i) <= x.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: x <= x_1.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: k <= x.
  (* Then *)
  Have: x < x_1.
  (* Assertion *)
  Have: 0 < k.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> (((k + i_1) <= x) -> (2 <= k))).
}
Prove: k <= (1 + x).
Prover Z3 4.8.12 returns Valid (Qed:8ms) (20ms) (34338)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (3ms) (40)

------------------------------------------------------------

Goal Establishment of Invariant (file out/0020_0007/0020_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Assertion (file out/0020_0007/0020_merged.c, line 57):
Let x = i * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(v) /\ is_sint32(x) /\
      is_sint32(x - j).
  (* Pre-condition *)
  Have: i <= 1.
  (* Pre-condition *)
  Have: 0 <= v.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: ((i = 2) -> ((v = 1) -> (x = 4000))).
  (* Invariant *)
  Have: ((i = 2) -> ((v = 0) -> (x = 8000))).
  (* Invariant *)
  Have: ((i = 2) -> ((v != 0) -> ((v != 1) -> (x = 20000)))).
  (* Invariant *)
  Have: ((i = 1) -> ((v = 1) -> (x = 2000))).
  (* Invariant *)
  Have: ((i = 1) -> ((v = 0) -> (x = 4000))).
  (* Invariant *)
  Have: ((i = 1) -> ((v != 0) -> ((v != 1) -> (x = 10000)))).
  (* Invariant *)
  Have: ((i = 0) -> (x = 0)).
  (* Invariant *)
  Have: (2000 * i) <= x.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: j <= i.
  (* Invariant *)
  Have: ((0 < j) -> (j < x)).
  (* Invariant *)
  Have: j <= x.
  (* Invariant *)
  Have: 0 <= j.
  (* Then *)
  Have: j < i.
}
Prove: j < x.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (20ms) (33206)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (5ms) (35)

------------------------------------------------------------

Goal Loop assigns (file out/0020_0007/0020_merged.c, line 29):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/0020_0007/0020_merged.c, line 53):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/0020_0007/0020_merged.c:6: Warning: 
  No 'assigns' specification for function 'foo0020'.
  Callers assumptions might be imprecise.

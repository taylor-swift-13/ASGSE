[kernel] Parsing out/5_0008/5_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 15 goals scheduled
[wp] [Timeout] typed_fun_loop_invariant_6_established (Qed 0.71ms) (Alt-Ergo)
[wp] Proved goals:   14 / 15
  Qed:              11
  Alt-Ergo 2.6.2:    3 (4ms-6ms-9ms)
  Timeout:           1
------------------------------------------------------------
  Function fun
------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0008/5_merged.c, line 6):
Let x = 1 + d.
Let x_1 = y * x.
Let x_2 = d * y.
Let x_3 = y + x_2.
Let x_4 = v + x_2.
Assume {
  Type: is_sint32(d) /\ is_sint32(v) /\ is_sint32(y) /\ is_sint32(x) /\
      is_sint32(v - y) /\ is_sint32(x_4).
  (* Invariant *)
  Have: x_4 < y.
  (* Invariant *)
  Have: 0 <= d.
  (* Invariant *)
  Have: v < x_3.
  (* Invariant *)
  Have: v < x_1.
  (* Then *)
  Have: y <= v.
}
Prove: x_1 = x_3.
Prover Z3 4.8.6 returns Valid (Qed:3ms) (10ms) (9765)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (9ms) (50)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0008/5_merged.c, line 6):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0008/5_merged.c, line 7):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0008/5_merged.c, line 7):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0008/5_merged.c, line 8):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0008/5_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0008/5_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0008/5_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0008/5_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0008/5_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0008/5_merged.c, line 11):
Let x = 1 + d.
Let x_1 = y * x.
Let x_2 = y + (d * y).
Let x_3 = 2 * y.
Let x_4 = -y.
Assume {
  Type: is_sint32(d) /\ is_sint32(v) /\ is_sint32(y) /\ is_sint32(x) /\
      is_sint32(v - y) /\ is_sint32(v + x_1 - y).
  (* Invariant *)
  Have: (v + x_1) < x_3.
  (* Invariant *)
  Have: x_1 = x_2.
  (* Invariant *)
  Have: 0 <= d.
  (* Invariant *)
  Have: v < x_2.
  (* Invariant *)
  Have: v < x_1.
  (* Then *)
  Have: y <= v.
  (* Invariant *)
  Have: (-1) <= d.
}
Prove: v < (x_3 + x_1).
Prover Z3 4.8.6 returns Valid (Qed:3ms) (10ms) (34013)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (4ms) (62)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0008/5_merged.c, line 11):
Let x = Mint_0[r].
Assume {
  Type: is_sint32(y) /\ is_sint32(x).
  (* Heap *)
  Type: region(r.base) <= 0.
  Have: Mint_1[r <- x] = Mint_0.
}
Prove: x < y.
Prover Z3 4.8.6 returns Unknown (Qed:0.71ms)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:0.71ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/5_0008/5_merged.c, line 12):
Let x = 2 * y.
Let x_1 = 1 + d.
Let x_2 = y * x_1.
Let x_3 = y + (d * y).
Let x_4 = -y.
Assume {
  Type: is_sint32(d) /\ is_sint32(v) /\ is_sint32(y) /\ is_sint32(x_1) /\
      is_sint32(v - y) /\ is_sint32(v + x_2 - y).
  (* Invariant *)
  Have: (v + x_2) < x.
  (* Invariant *)
  Have: x_2 = x_3.
  (* Invariant *)
  Have: 0 <= d.
  (* Invariant *)
  Have: v < x_3.
  (* Invariant *)
  Have: v < x_2.
  (* Then *)
  Have: y <= v.
  (* Invariant *)
  Have: (-1) <= d.
  (* Invariant *)
  Have: v < (x + x_2).
}
Prove: v < (y + (y * (2 + d))).
Prover Z3 4.8.6 returns Valid (Qed:3ms) (10ms) (9981)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (5ms) (74)

------------------------------------------------------------

Goal Establishment of Invariant (file out/5_0008/5_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Loop assigns (file out/5_0008/5_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/5_0008/5_merged.c:1: Warning: 
  No 'assigns' specification for function 'fun'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/5_0008/5_merged.c:23: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/array_double_0004/array_double_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 6 goals scheduled
[wp] Proved goals:    6 / 6
  Qed:               4
  Alt-Ergo 2.6.2:    2 (8ms)
------------------------------------------------------------
  Function arrayDouble
------------------------------------------------------------

Goal Preservation of Invariant (file out/array_double_0004/array_double_merged.c, line 5):
Assume {
  Type: is_uint32(n) /\ is_sint32(p) /\ is_sint32(1 + p).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: p <= n.
  (* Invariant *)
  Have: 0 <= p.
  (* Then *)
  Have: to_uint32(p) < n.
}
Prove: p < n.
Prover Z3 4.8.6 returns Valid (Qed:2ms) (10ms) (32983)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (8ms) (42)

------------------------------------------------------------

Goal Establishment of Invariant (file out/array_double_0004/array_double_merged.c, line 5):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/array_double_0004/array_double_merged.c, line 6):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/array_double_0004/array_double_merged.c, line 6):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/array_double_0004/array_double_merged.c, line 7) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/array_double_0004/array_double_merged.c, line 7) (2/2):
Effect at line 11
Let x = p - 1.
Let a_1 = shift_sint32(a, x).
Assume {
  Type: is_uint32(n) /\ is_sint32(p) /\ is_sint32(x).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: !invalid(Malloc_0, a_1, 1).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: p <= (1 + n).
  (* Invariant *)
  Have: 0 < p.
  (* Then *)
  Have: to_uint32(x) < n.
  (* Invariant *)
  Have: p <= n.
}
Prove: included(a_1, 1, shift_sint32(a, 0), n).
Prover Z3 4.8.6 returns Valid (Qed:2ms) (20ms) (94395)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (8ms) (73)

------------------------------------------------------------
[wp:pedantic-assigns] out/array_double_0004/array_double_merged.c:1: Warning: 
  No 'assigns' specification for function 'arrayDouble'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/array_double_0004/array_double_merged.c:16: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

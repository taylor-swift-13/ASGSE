[kernel] Parsing out/array_max_advanced_0010/array_max_advanced_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] out/array_max_advanced_0010/array_max_advanced_merged.c:9: Warning: 
  Lambda-functions not yet implemented
[wp] out/array_max_advanced_0010/array_max_advanced_merged.c:9: Warning: 
  array type non-supported({ ℤ}ℤ)
[wp] out/array_max_advanced_0010/array_max_advanced_merged.c:8: Warning: 
  Lambda-functions not yet implemented
[wp] out/array_max_advanced_0010/array_max_advanced_merged.c:8: Warning: 
  array type non-supported({ ℤ}ℤ)
[wp] 14 goals scheduled
[wp] [Timeout] typed_array_max_advanced_ensures_2 (Qed 2ms) (Z3) (Stronger, 2 warnings)
[wp] [Timeout] typed_array_max_advanced_ensures (Qed 2ms) (Z3) (Stronger, 2 warnings)
[wp] [Timeout] typed_array_max_advanced_ensures_4 (Qed 3ms) (Alt-Ergo)
[wp] Proved goals:   11 / 14
  Qed:               8
  Alt-Ergo 2.6.2:    3 (9ms-12ms-14ms)
  Timeout:           3
------------------------------------------------------------
  Function array_max_advanced
------------------------------------------------------------

Goal Post-condition (file out/array_max_advanced_0010/array_max_advanced_merged.c, line 8) in 'array_max_advanced':
out/array_max_advanced_0010/array_max_advanced_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/array_max_advanced_0010/array_max_advanced_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Let a = shift_sint32(arr_0, 0).
Assume {
  Type: is_sint32(array_max_advanced_0) /\ is_sint32(i) /\ is_sint32(n) /\
      is_sint32(Mint_0[a]).
  (* Heap *)
  Type: (region(arr_0.base) <= 0) /\ linked(Malloc_0).
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a, n).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (Mint_0[shift_sint32(arr_0, i_1)] <= array_max_advanced_0))).
  (* Invariant *)
  Have: 0 <= i.
  (* Else *)
  Have: n <= i.
}
Prove: w = array_max_advanced_0.
Prover Z3 4.8.6 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Post-condition (file out/array_max_advanced_0010/array_max_advanced_merged.c, line 9) in 'array_max_advanced':
out/array_max_advanced_0010/array_max_advanced_merged.c:9: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/array_max_advanced_0010/array_max_advanced_merged.c:9: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Let a = shift_sint32(arr_0, 0).
Assume {
  Type: is_sint32(array_max_advanced_0) /\ is_sint32(i) /\ is_sint32(n) /\
      is_sint32(Mint_0[a]).
  (* Heap *)
  Type: (region(arr_0.base) <= 0) /\ linked(Malloc_0).
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a, n).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (Mint_0[shift_sint32(arr_0, i_1)] <= array_max_advanced_0))).
  (* Invariant *)
  Have: 0 <= i.
  (* Else *)
  Have: n <= i.
}
Prove: w = array_max_advanced_0.
Prover Z3 4.8.6 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Post-condition (file out/array_max_advanced_0010/array_max_advanced_merged.c, line 10) in 'array_max_advanced':
Let a = shift_sint32(arr_0, 0).
Assume {
  Type: is_sint32(array_max_advanced_0) /\ is_sint32(i_1) /\ is_sint32(n) /\
      is_sint32(Mint_0[a]).
  (* Heap *)
  Type: (region(arr_0.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: (0 <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a, n).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      (Mint_0[shift_sint32(arr_0, i_2)] <= array_max_advanced_0))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Else *)
  Have: n <= i_1.
}
Prove: Mint_0[shift_sint32(arr_0, i)] <= array_max_advanced_0.
Prover Z3 4.8.6 returns Valid (Qed:3ms) (10ms) (82391)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (13ms) (58)

------------------------------------------------------------

Goal Post-condition (file out/array_max_advanced_0010/array_max_advanced_merged.c, line 11) in 'array_max_advanced':
Let a = shift_sint32(arr_0, 0).
Assume {
  Type: is_sint32(array_max_advanced_0) /\ is_sint32(i) /\ is_sint32(n) /\
      is_sint32(Mint_0[a]).
  (* Heap *)
  Type: (region(arr_0.base) <= 0) /\ linked(Malloc_0).
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a, n).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (Mint_0[shift_sint32(arr_0, i_1)] <= array_max_advanced_0))).
  (* Invariant *)
  Have: 0 <= i.
  (* Else *)
  Have: n <= i.
}
Prove: exists i_1 : Z.
    (Mint_0[shift_sint32(arr_0, i_1)] = array_max_advanced_0) /\
    (0 <= i_1) /\ (i_1 < n).
Prover Z3 4.8.6 returns Unknown (Qed:3ms)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/array_max_advanced_0010/array_max_advanced_merged.c, line 17):
Let x = Mint_0[shift_sint32(arr_0, i_1)].
Let a = shift_sint32(arr_0, 0).
Assume {
  Type: is_sint32(i_1) /\ is_sint32(max_1) /\ is_sint32(n) /\
      is_sint32(1 + i_1) /\ is_sint32(Mint_0[a]) /\ is_sint32(x).
  (* Heap *)
  Type: (region(arr_0.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: (0 <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a, n).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      (Mint_0[shift_sint32(arr_0, i_2)] <= max_1))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: i_1 < n.
  If max_1 < x
  Then { Have: x = max_0. }
  Else { Have: max_1 = max_0. }
}
Prove: Mint_0[shift_sint32(arr_0, i)] <= max_0.
Prover Z3 4.8.6 returns Valid (Qed:7ms) (10ms) (128762)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:7ms) (14ms) (118)

------------------------------------------------------------

Goal Establishment of Invariant (file out/array_max_advanced_0010/array_max_advanced_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/array_max_advanced_0010/array_max_advanced_merged.c, line 18):
Let x = Mint_0[shift_sint32(arr_0, i_1)].
Let a = shift_sint32(arr_0, 0).
Assume {
  Type: is_sint32(i_1) /\ is_sint32(max_1) /\ is_sint32(n) /\
      is_sint32(1 + i_1) /\ is_sint32(Mint_0[a]) /\ is_sint32(x).
  (* Heap *)
  Type: (region(arr_0.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: (0 <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a, n).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      (Mint_0[shift_sint32(arr_0, i_2)] <= max_1))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: i_1 < n.
  If max_1 < x
  Then { Have: x = max_0. }
  Else { Have: max_1 = max_0. }
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= i_1) -> ((0 <= i_2) ->
      (Mint_0[shift_sint32(arr_0, i_2)] <= max_0))).
}
Prove: Mint_0[shift_sint32(arr_0, i)] <= max_0.
Prover Z3 4.8.6 returns Valid (Qed:10ms) (20ms) (84657)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:10ms) (9ms) (64)

------------------------------------------------------------

Goal Establishment of Invariant (file out/array_max_advanced_0010/array_max_advanced_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/array_max_advanced_0010/array_max_advanced_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/array_max_advanced_0010/array_max_advanced_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Loop assigns (file out/array_max_advanced_0010/array_max_advanced_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assigns nothing in 'array_max_advanced':
Effect at line 23
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/array_max_advanced_0010/array_max_advanced_merged.c, line 6) in 'array_max_advanced'' in 'main' at initialization of 'max' (file out/array_max_advanced_0010/array_max_advanced_merged.c, line 34)
:
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/array_max_advanced_0010/array_max_advanced_merged.c, line 7) in 'array_max_advanced'' in 'main' at initialization of 'max' (file out/array_max_advanced_0010/array_max_advanced_merged.c, line 34)
:
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/array_max_advanced_0010/array_max_advanced_merged.c:32: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

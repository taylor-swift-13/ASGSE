[kernel] Parsing out/sum_digits_0001/sum_digits_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 11 goals scheduled
[wp] [Timeout] typed_func_loop_invariant_2_preserved (Qed 2ms) (Z3)
[wp] [Timeout] typed_func_loop_invariant_4_established (Z3)
[wp] Proved goals:    9 / 11
  Qed:               6
  Alt-Ergo 2.6.2:    3 (8ms-12ms)
  Timeout:           2
------------------------------------------------------------
  Function func
------------------------------------------------------------

Goal Preservation of Invariant (file out/sum_digits_0001/sum_digits_merged.c, line 6):
Let x = num_0 % 10.
Assume {
  Type: is_sint32(num_0) /\ is_sint32(num_1) /\ is_sint32(sum_0) /\
      is_sint32(x).
  (* Invariant *)
  Have: 0 <= num_1.
  (* Invariant *)
  Have: 0 <= sum_0.
  (* Invariant *)
  Have: 0 <= num_0.
  (* Then *)
  Have: 0 < num_0.
}
Prove: x <= 9.
Prover Z3 4.8.6 returns Valid (Qed:2ms) (10ms) (33112)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (10ms) (56)

------------------------------------------------------------

Goal Establishment of Invariant (file out/sum_digits_0001/sum_digits_merged.c, line 6):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/sum_digits_0001/sum_digits_merged.c, line 7):
Let x = num_0 % 10.
Assume {
  Type: is_sint32(num_0) /\ is_sint32(num_1) /\ is_sint32(sum_0) /\
      is_sint32(num_0 / 10) /\ is_sint32(x).
  (* Goal *)
  When: 10 <= num_0.
  (* Invariant *)
  Have: 0 <= num_1.
  (* Invariant *)
  Have: 0 <= sum_0.
  (* Invariant *)
  Have: 0 <= num_0.
  (* Then *)
  Have: 0 < num_0.
  (* Invariant *)
  Have: x <= 9.
}
Prove: x = 0.
Prover Z3 4.8.6 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/sum_digits_0001/sum_digits_merged.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/sum_digits_0001/sum_digits_merged.c, line 8):
Let x = num_0 % 10.
Let x_1 = sum_0 + x.
Assume {
  Type: is_sint32(num_0) /\ is_sint32(num_1) /\ is_sint32(sum_0) /\
      is_sint32(num_0 / 10) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Invariant *)
  Have: 0 <= num_1.
  (* Invariant *)
  Have: 0 <= sum_0.
  (* Invariant *)
  Have: 0 <= num_0.
  (* Then *)
  Have: 0 < num_0.
  (* Invariant *)
  Have: x <= 9.
  (* Invariant *)
  Have: ((10 <= num_0) -> (x = 0)).
}
Prove: 0 <= x_1.
Prover Z3 4.8.6 returns Valid (Qed:2ms) (10ms) (34196)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (8ms) (89)

------------------------------------------------------------

Goal Establishment of Invariant (file out/sum_digits_0001/sum_digits_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/sum_digits_0001/sum_digits_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/sum_digits_0001/sum_digits_merged.c, line 9):
Assume { Type: is_sint32(num_0). }
Prove: 0 <= num_0.
Prover Z3 4.8.6 returns Timeout (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/sum_digits_0001/sum_digits_merged.c, line 10):
Let x = num_0 % 10.
Let x_1 = sum_0 + x.
Assume {
  Type: is_sint32(num_0) /\ is_sint32(num_1) /\ is_sint32(sum_0) /\
      is_sint32(num_0 / 10) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Invariant *)
  Have: 0 <= num_1.
  (* Invariant *)
  Have: 0 <= sum_0.
  (* Invariant *)
  Have: 0 <= num_0.
  (* Then *)
  Have: 0 < num_0.
  (* Invariant *)
  Have: x <= 9.
  (* Invariant *)
  Have: ((10 <= num_0) -> (x = 0)).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: (-9) <= num_0.
}
Prove: 0 <= x.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (12ms) (91)

------------------------------------------------------------

Goal Establishment of Invariant (file out/sum_digits_0001/sum_digits_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/sum_digits_0001/sum_digits_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/sum_digits_0001/sum_digits_merged.c:1: Warning: 
  No 'assigns' specification for function 'func'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/sum_digits_0001/sum_digits_merged.c:24: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

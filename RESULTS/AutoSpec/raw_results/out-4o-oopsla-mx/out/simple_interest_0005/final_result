Pass
{'CurTaskID': 2, 'Round': 1, 'Iteration': 1, 'Status': 1, 'llms_query_times': datetime.timedelta(seconds=3, microseconds=780630), 'total_solve_time': datetime.timedelta(microseconds=770080), 'simplified_time': datetime.timedelta(0), 'tokens_usage': 2230, 'spec_num_original': 0, 'spec_num_simplified': 0, 'TaskList': [1, 1], '1': ['requires p >= 0 && n >= 0 && r >= 0;', 'requires p <= INT_MAX && n <= INT_MAX && r <= INT_MAX;', 'requires INT_MIN <= r <= INT_MAX;', 'requires INT_MIN <= p <= INT_MAX;', 'requires INT_MIN <= n <= INT_MAX;', 'requires (p * n * r) / 100 <= INT_MAX; // To prevent overflow;', 'requires (p * n * r) / 100 <= INT_MAX; // To avoid overflow;', 'ensures \\result == p * n * r / 100;', 'ensures \\result == (p * n * r) / 100;', 'assigns \\nothing;'], '2': [], 'MSLines': ['#include<limits.h>\n', '\n', '/* 1. FUNC CONTRACT */\nint simple(int p,int n,int r)\n', '{\n', '    int si;\n', '    si = p*n*r/100;\n', '    return si;\n', '}\n', ' \n', '/* 2. FUNC CONTRACT */\nint main()\n', '{\n', '    int s = simple(10000, 3,10);\n', '    return 0;\n', '}']}
    へ　　　　　／|
　　/＼7　　　 ∠＿/
　 /　│　　 ／　／
　│　Z ＿,＜　／　　 /`ヽ
　│　　　　　ヽ　　 /　　〉
　 Y　　　　　`　 /　　/
　ｲ●　､　●　　⊂⊃〈　　/
　()　 へ　　　　|　＼〈
　　>ｰ ､_　 ィ　 │ ／／
　 / へ　　 /　ﾉ＜| ＼＼
　 ヽ_ﾉ　　(_／　 │／／
　　7　　　　　　　|／
　　＞―r￣￣`ｰ―＿

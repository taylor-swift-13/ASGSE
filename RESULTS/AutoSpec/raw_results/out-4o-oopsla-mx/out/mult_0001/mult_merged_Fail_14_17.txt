[kernel] Parsing out/mult_0001/mult_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 17 goals scheduled
[wp] [Timeout] typed_mul_loop_invariant_6_established (Qed 0.58ms) (Z3)
[wp] [Timeout] typed_mul_loop_invariant_6_preserved (Qed 3ms) (Z3)
[wp] [Timeout] typed_mul_loop_invariant_7_preserved (Qed 4ms) (Z3)
[wp] Proved goals:   14 / 17
  Qed:              11
  Alt-Ergo 2.6.2:    3 (7ms-10ms)
  Timeout:           3
------------------------------------------------------------
  Function mul
------------------------------------------------------------

Goal Preservation of Invariant (file out/mult_0001/mult_merged.c, line 7):
Let x_1 = b * (a - x).
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(x) /\ is_sint32(x - 1) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: x <= a.
  (* Invariant *)
  Have: (a * b) = ((b * x) + x_1).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: (-1) <= x.
}
Prove: x <= (1 + a).
Prover Z3 4.8.6 returns Valid (Qed:2ms) (10ms) (33555)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (8ms) (84)

------------------------------------------------------------

Goal Establishment of Invariant (file out/mult_0001/mult_merged.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/mult_0001/mult_merged.c, line 8):
Let x_1 = x * y.
Let x_2 = a * y.
Let x_3 = -x.
Let x_4 = -x_1.
Assume {
  Type: is_sint32(a) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(x - 1) /\
      is_sint32(x_2 - x_1) /\ is_sint32(y + x_2 - x_1).
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: x <= a.
  (* Invariant *)
  Have: x_2 = (x_1 + (y * (a - x))).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: x_1 <= x_2.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: x <= (1 + a).
}
Prove: (x_1 + (y * (1 + a - x))) = (y + x_2).
Prover Z3 4.8.6 returns Valid (Qed:3ms) (10025)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (7ms) (180)

------------------------------------------------------------

Goal Establishment of Invariant (file out/mult_0001/mult_merged.c, line 8):
Prove: true.
Prover Qed returns Valid (0.50ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/mult_0001/mult_merged.c, line 9):
Let x_1 = -x.
Let x_2 = b * (1 + a - x).
Let x_3 = a * b.
Let x_4 = x - 1.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(x) /\ is_sint32(x_4) /\
      is_sint32(x_2) /\ is_sint32(x_2 - b).
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: x <= a.
  (* Invariant *)
  Have: x_2 = (b + (b * (a - x))).
  (* Invariant *)
  Have: ((b * x) + x_2) = (b + x_3).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: b <= x_2.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: x <= (1 + a).
}
Prove: x_3 = ((b * x_4) + x_2).
Prover Z3 4.8.6 returns Valid (Qed:3ms) (10ms) (10089)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (10ms) (243)

------------------------------------------------------------

Goal Establishment of Invariant (file out/mult_0001/mult_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/mult_0001/mult_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/mult_0001/mult_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/mult_0001/mult_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/mult_0001/mult_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/mult_0001/mult_merged.c, line 12):
Let x_1 = a * b.
Let x_2 = x - 1.
Let x_3 = -x.
Let x_4 = b * (1 + a - x).
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_4) /\ is_sint32(x_4 - b).
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: x <= a.
  (* Invariant *)
  Have: x_4 = (b + (b * (a - x))).
  (* Invariant *)
  Have: ((b * x) + x_4) = (b + x_1).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: b <= x_4.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: x <= (1 + a).
  (* Invariant *)
  Have: x_1 = ((b * x_2) + x_4).
}
Prove: 0 < x.
Prover Z3 4.8.6 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/mult_0001/mult_merged.c, line 12):
Assume { Type: is_sint32(x). }
Prove: 0 <= x.
Prover Z3 4.8.6 returns Timeout (Qed:0.58ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:0.58ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/mult_0001/mult_merged.c, line 13):
Let x_1 = a * b.
Let x_2 = x - 1.
Let x_3 = -x.
Let x_4 = b * (1 + a - x).
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_4) /\ is_sint32(x_4 - b).
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: x <= a.
  (* Invariant *)
  Have: x_4 = (b + (b * (a - x))).
  (* Invariant *)
  Have: ((b * x) + x_4) = (b + x_1).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: b <= x_4.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: x <= (1 + a).
  (* Invariant *)
  Have: x_1 = ((b * x_2) + x_4).
  (* Invariant *)
  Have: 0 < x.
}
Prove: 0 <= x_4.
Prover Z3 4.8.6 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/mult_0001/mult_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.85ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/mult_0001/mult_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/mult_0001/mult_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Loop assigns (file out/mult_0001/mult_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/mult_0001/mult_merged.c:3: Warning: 
  No 'assigns' specification for function 'mul'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/mult_0001/mult_merged.c:25: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

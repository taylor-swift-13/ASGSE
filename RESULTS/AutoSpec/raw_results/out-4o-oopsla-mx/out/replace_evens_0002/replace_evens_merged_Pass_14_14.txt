[kernel] Parsing out/replace_evens_0002/replace_evens_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 14 goals scheduled
[wp] Proved goals:   14 / 14
  Qed:               8
  Alt-Ergo 2.6.2:    6 (13ms-15ms-20ms)
------------------------------------------------------------
  Function func
------------------------------------------------------------

Goal Post-condition (file out/replace_evens_0002/replace_evens_merged.c, line 4) in 'func':
Let a_1 = shift_sint32(a, 0).
Let a_2 = havoc(Mint_undef_0, Mint_0, a_1, n).
Assume {
  Type: is_sint32(i_1) /\ is_sint32(n).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: ((i % 2) = 0) /\ (0 <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 <= n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a_1, n).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((0 <= i_2) -> ((i_2 < i_1) ->
      (a_2[shift_sint32(a, i_2)] = 0)))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Else *)
  Have: n <= i_1.
}
Prove: a_2[shift_sint32(a, i)] = 0.
Prover Z3 4.8.6 returns Valid (Qed:3ms) (10ms) (77550)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (13ms) (94)

------------------------------------------------------------

Goal Post-condition (file out/replace_evens_0002/replace_evens_merged.c, line 5) in 'func':
Let a_1 = shift_sint32(a, 0).
Let a_2 = havoc(Mint_undef_0, Mint_0, a_1, n).
Assume {
  Type: is_sint32(i_1) /\ is_sint32(n).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: ((i % 2) = 0) /\ (0 <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 <= n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a_1, n).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((0 <= i_2) -> ((i_2 < i_1) ->
      (a_2[shift_sint32(a, i_2)] = 0)))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Else *)
  Have: n <= i_1.
}
Prove: a_2[shift_sint32(a, i)] = 0.
Prover Z3 4.8.6 returns Valid (Qed:3ms) (10ms) (77550)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (14ms) (94)

------------------------------------------------------------

Goal Post-condition (file out/replace_evens_0002/replace_evens_merged.c, line 6) in 'func':
Let a_1 = shift_sint32(a, 0).
Let a_2 = havoc(Mint_undef_0, Mint_0, a_1, n).
Assume {
  Type: is_sint32(i_1) /\ is_sint32(n).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: ((i % 2) = 0) /\ (0 <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 <= n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a_1, n).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((0 <= i_2) -> ((i_2 < i_1) ->
      (a_2[shift_sint32(a, i_2)] = 0)))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Else *)
  Have: n <= i_1.
}
Prove: a_2[shift_sint32(a, i)] = 0.
Prover Z3 4.8.6 returns Valid (Qed:3ms) (10ms) (77550)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (13ms) (94)

------------------------------------------------------------

Goal Preservation of Invariant (file out/replace_evens_0002/replace_evens_merged.c, line 11):
Let a_1 = shift_sint32(a, 0).
Assume {
  Type: is_sint32(i_1) /\ is_sint32(n) /\ is_sint32(1 + i_1).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: ((i % 2) = 0) /\ (0 <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 <= n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a_1, n).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((0 <= i_2) -> ((i_2 < i_1) ->
      (havoc(Mint_undef_0, Mint_1, a_1, n)[shift_sint32(a, i_2)] = 0)))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: i_1 < n.
  If (i_1 % 2) = 0
  Then {
    Have: havoc(Mint_undef_0, Mint_1, a_1, n)[shift_sint32(a, i_1) <- 0] =
        Mint_0.
  }
  Else { Have: havoc(Mint_undef_0, Mint_1, a_1, n) = Mint_0. }
}
Prove: Mint_0[shift_sint32(a, i)] = 0.
Prover Z3 4.8.6 returns Valid (Qed:9ms) (20ms) (126780)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:9ms) (20ms) (323)

------------------------------------------------------------

Goal Establishment of Invariant (file out/replace_evens_0002/replace_evens_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/replace_evens_0002/replace_evens_merged.c, line 12):
Let a_1 = shift_sint32(a, 0).
Assume {
  Type: is_sint32(i_1) /\ is_sint32(n) /\ is_sint32(1 + i_1).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: ((i % 2) = 0) /\ (0 <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 <= n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a_1, n).
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((0 <= i_2) -> ((i_2 < i_1) ->
      (havoc(Mint_undef_0, Mint_1, a_1, n)[shift_sint32(a, i_2)] = 0)))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: i_1 < n.
  If (i_1 % 2) = 0
  Then {
    Have: havoc(Mint_undef_0, Mint_1, a_1, n)[shift_sint32(a, i_1) <- 0] =
        Mint_0.
  }
  Else { Have: havoc(Mint_undef_0, Mint_1, a_1, n) = Mint_0. }
  (* Invariant *)
  Have: forall i_2 : Z. (((i_2 % 2) = 0) -> ((i_2 <= i_1) -> ((0 <= i_2) ->
      (Mint_0[shift_sint32(a, i_2)] = 0)))).
}
Prove: Mint_0[shift_sint32(a, i)] = 0.
Prover Z3 4.8.6 returns Valid (Qed:12ms) (20ms) (80169)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:12ms) (15ms) (120)

------------------------------------------------------------

Goal Establishment of Invariant (file out/replace_evens_0002/replace_evens_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/replace_evens_0002/replace_evens_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/replace_evens_0002/replace_evens_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Loop assigns (file out/replace_evens_0002/replace_evens_merged.c, line 14) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/replace_evens_0002/replace_evens_merged.c, line 14) (2/2):
Effect at line 19
Let a_1 = shift_sint32(a, 0).
Let a_2 = havoc(Mint_undef_0, Mint_0, a_1, n).
Let x = i - 1.
Let a_3 = shift_sint32(a, x).
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(x).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: !invalid(Malloc_0, a_3, 1).
  (* Pre-condition *)
  Have: 0 <= n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a_1, n).
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((0 <= i_1) ->
      (((2 + i_1) <= i) -> (a_2[shift_sint32(a, i_1)] = 0)))).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: i <= n.
  (* Then *)
  Have: (x % 2) = 0.
  (* Invariant *)
  Have: forall i_1 : Z. (((i_1 % 2) = 0) -> ((0 <= i_1) -> ((i_1 < i) ->
      (a_2[a_3 <- 0][shift_sint32(a, i_1)] = 0)))).
}
Prove: included(a_3, 1, a_1, n).
Prover Z3 4.8.6 returns Valid (Qed:5ms) (20ms) (105146)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:5ms) (16ms) (152)

------------------------------------------------------------

Goal Assigns (file out/replace_evens_0002/replace_evens_merged.c, line 7) in 'func':
Effect at line 17
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/replace_evens_0002/replace_evens_merged.c, line 2) in 'func'' in 'main' at call 'func' (file out/replace_evens_0002/replace_evens_merged.c, line 26)
:
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/replace_evens_0002/replace_evens_merged.c, line 3) in 'func'' in 'main' at call 'func' (file out/replace_evens_0002/replace_evens_merged.c, line 26)
:
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/replace_evens_0002/replace_evens_merged.c:24: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

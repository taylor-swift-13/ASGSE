[kernel] Parsing out/search_2_0003/search_2_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 9 goals scheduled
[wp] [Timeout] typed_arraySearch_loop_invariant_established (Z3)
[wp] Proved goals:    8 / 9
  Qed:               6
  Alt-Ergo 2.6.2:    2 (8ms-14ms)
  Timeout:           1
------------------------------------------------------------
  Function arraySearch
------------------------------------------------------------

Goal Preservation of Invariant (file out/search_2_0003/search_2_merged.c, line 5):
Prove: true.
Prover Qed returns Valid (0.81ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/search_2_0003/search_2_merged.c, line 5):
Assume { Type: is_sint32(n). }
Prove: 0 <= n.
Prover Z3 4.8.6 returns Timeout (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/search_2_0003/search_2_merged.c, line 6):
Let x_1 = Mint_0[shift_sint32(a, p)].
Assume {
  Type: is_sint32(n) /\ is_sint32(p) /\ is_sint32(x) /\ is_sint32(1 + p) /\
      is_sint32(x_1).
  (* Heap *)
  Type: region(a.base) <= 0.
  (* Goal *)
  When: (0 <= i) /\ (i <= p).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: p <= n.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < p) ->
      (Mint_0[shift_sint32(a, i_1)] != x))).
  (* Invariant *)
  Have: 0 <= p.
  (* Then *)
  Have: p < n.
  (* Else *)
  Have: x_1 != x.
}
Prove: Mint_0[shift_sint32(a, i)] != x.
Prover Z3 4.8.6 returns Valid (Qed:2ms) (20ms) (178405)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (14ms) (59)

------------------------------------------------------------

Goal Establishment of Invariant (file out/search_2_0003/search_2_merged.c, line 6):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/search_2_0003/search_2_merged.c, line 7):
Let x_1 = Mint_0[shift_sint32(a, p)].
Assume {
  Type: is_sint32(n) /\ is_sint32(p) /\ is_sint32(x) /\ is_sint32(1 + p) /\
      is_sint32(x_1).
  (* Heap *)
  Type: region(a.base) <= 0.
  (* Goal *)
  When: (0 <= i) /\ (i <= p).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: p <= n.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < p) ->
      (Mint_0[shift_sint32(a, i_1)] != x))).
  (* Invariant *)
  Have: 0 <= p.
  (* Then *)
  Have: p < n.
  (* Else *)
  Have: x_1 != x.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= p) ->
      (Mint_0[shift_sint32(a, i_1)] != x))).
}
Prove: Mint_0[shift_sint32(a, i)] != x.
Prover Z3 4.8.6 returns Valid (Qed:2ms) (20ms) (80882)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (8ms) (49)

------------------------------------------------------------

Goal Establishment of Invariant (file out/search_2_0003/search_2_merged.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/search_2_0003/search_2_merged.c, line 8):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/search_2_0003/search_2_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/search_2_0003/search_2_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/search_2_0003/search_2_merged.c:1: Warning: 
  No 'assigns' specification for function 'arraySearch'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/search_2_0003/search_2_merged.c:21: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

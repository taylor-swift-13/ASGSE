[kernel] Parsing out/array_max_advanced_0001/array_max_advanced_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 7 goals scheduled
[wp] Proved goals:    7 / 7
  Qed:               5
  Alt-Ergo 2.6.2:    2 (11ms-14ms)
------------------------------------------------------------
  Function array_max_advanced
------------------------------------------------------------

Goal Preservation of Invariant (file out/array_max_advanced_0001/array_max_advanced_merged.c, line 8):
Let x = Mint_0[shift_sint32(arr_0, i_1)].
Assume {
  Type: is_sint32(i_1) /\ is_sint32(max_1) /\ is_sint32(n) /\
      is_sint32(1 + i_1) /\ is_sint32(Mint_0[shift_sint32(arr_0, 0)]) /\
      is_sint32(x).
  (* Heap *)
  Type: region(arr_0.base) <= 0.
  (* Goal *)
  When: (0 <= i) /\ (i <= i_1).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      (Mint_0[shift_sint32(arr_0, i_2)] <= max_1))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: i_1 < n.
  If max_1 < x
  Then { Have: x = max_0. }
  Else { Have: max_1 = max_0. }
}
Prove: Mint_0[shift_sint32(arr_0, i)] <= max_0.
Prover Z3 4.8.6 returns Valid (Qed:7ms) (20ms) (125103)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:7ms) (14ms) (98)

------------------------------------------------------------

Goal Establishment of Invariant (file out/array_max_advanced_0001/array_max_advanced_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/array_max_advanced_0001/array_max_advanced_merged.c, line 9):
Let x = Mint_0[shift_sint32(arr_0, i_1)].
Assume {
  Type: is_sint32(i_1) /\ is_sint32(max_1) /\ is_sint32(n) /\
      is_sint32(1 + i_1) /\ is_sint32(Mint_0[shift_sint32(arr_0, 0)]) /\
      is_sint32(x).
  (* Heap *)
  Type: region(arr_0.base) <= 0.
  (* Goal *)
  When: (0 <= i) /\ (i <= i_1).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      (Mint_0[shift_sint32(arr_0, i_2)] <= max_1))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: i_1 < n.
  If max_1 < x
  Then { Have: x = max_0. }
  Else { Have: max_1 = max_0. }
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= i_1) -> ((0 <= i_2) ->
      (Mint_0[shift_sint32(arr_0, i_2)] <= max_0))).
}
Prove: Mint_0[shift_sint32(arr_0, i)] <= max_0.
Prover Z3 4.8.6 returns Valid (Qed:7ms) (10ms) (81115)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:7ms) (11ms) (53)

------------------------------------------------------------

Goal Establishment of Invariant (file out/array_max_advanced_0001/array_max_advanced_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/array_max_advanced_0001/array_max_advanced_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/array_max_advanced_0001/array_max_advanced_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/array_max_advanced_0001/array_max_advanced_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/array_max_advanced_0001/array_max_advanced_merged.c:5: Warning: 
  No 'assigns' specification for function 'array_max_advanced'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/array_max_advanced_0001/array_max_advanced_merged.c:23: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

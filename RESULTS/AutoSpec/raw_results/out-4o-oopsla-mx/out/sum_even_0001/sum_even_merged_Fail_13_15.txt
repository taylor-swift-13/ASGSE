[kernel] Parsing out/sum_even_0001/sum_even_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 15 goals scheduled
[wp] [Timeout] typed_func_loop_invariant_4_established (Z3)
[wp] [Timeout] typed_func_loop_invariant_6_preserved (Qed 4ms) (Z3)
[wp] Proved goals:   13 / 15
  Qed:              11
  Alt-Ergo 2.6.2:    2 (4ms-13ms)
  Timeout:           2
------------------------------------------------------------
  Function func
------------------------------------------------------------

Goal Preservation of Invariant (file out/sum_even_0001/sum_even_merged.c, line 6):
Let x = n / 2.
Let x_1 = i * (i - 1).
Let x_2 = x_1 / 2.
Let x_3 = 1 + i.
Let x_4 = (2 * i) + x_1.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(x_3) /\ is_sint32(x_1) /\
      is_sint32(x_4).
  (* Invariant *)
  Have: (-3) <= n.
  (* Invariant *)
  Have: x_1 = (2 * x_2).
  (* Invariant *)
  Have: i <= (1 + x).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (((i_1 * (1 + i_1)) / 2) = x_2))).
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i <= x.
}
Prove: (i * x_3) = x_4.
Prover Z3 4.8.6 returns Valid (Qed:3ms) (10ms) (10069)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (4ms) (56)

------------------------------------------------------------

Goal Establishment of Invariant (file out/sum_even_0001/sum_even_merged.c, line 6):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/sum_even_0001/sum_even_merged.c, line 7):
Let x = n / 2.
Let x_1 = 1 + i.
Let x_2 = i * x_1.
Let x_3 = 2 * i.
Let x_4 = i * (i - 1).
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(x_1) /\ is_sint32(x_2) /\
      is_sint32(x_2 - x_3).
  (* Invariant *)
  Have: (-3) <= n.
  (* Invariant *)
  Have: x_2 = (x_3 + x_4).
  (* Invariant *)
  Have: x_2 = (x_3 + (2 * (x_4 / 2))).
  (* Invariant *)
  Have: i <= (1 + x).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) ->
      (x_2 = (x_3 + (2 * ((i_1 * (1 + i_1)) / 2)))))).
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i <= x.
}
Prove: x_2 = (2 * (x_2 / 2)).
Prover Z3 4.8.6 returns Valid (Qed:2ms) (10ms) (89498)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (13ms) (441)

------------------------------------------------------------

Goal Establishment of Invariant (file out/sum_even_0001/sum_even_merged.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/sum_even_0001/sum_even_merged.c, line 8):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/sum_even_0001/sum_even_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/sum_even_0001/sum_even_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/sum_even_0001/sum_even_merged.c, line 9):
Assume { Type: is_sint32(n). }
Prove: (-3) <= n.
Prover Z3 4.8.6 returns Timeout (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/sum_even_0001/sum_even_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/sum_even_0001/sum_even_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/sum_even_0001/sum_even_merged.c, line 11):
Let x = 1 + i.
Let x_1 = i * x.
Let x_2 = x_1 / 2.
Let x_3 = n / 2.
Let x_4 = i * (i - 1).
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_1 - (2 * i)).
  (* Goal *)
  When: (0 <= i_1) /\ (i_1 <= i).
  (* Invariant *)
  Have: (-3) <= n.
  (* Invariant *)
  Have: x_1 = ((2 * i) + x_4).
  (* Invariant *)
  Have: x_2 = (i + (x_4 / 2)).
  (* Invariant *)
  Have: i <= (1 + x_3).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i) ->
      (x_2 = (i + ((i_2 * (1 + i_2)) / 2))))).
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i <= x_3.
  Have: x_1 = (2 * x_2).
}
Prove: x_2 = ((i_1 * (1 + i_1)) / 2).
Prover Z3 4.8.6 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/sum_even_0001/sum_even_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/sum_even_0001/sum_even_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/sum_even_0001/sum_even_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/sum_even_0001/sum_even_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/sum_even_0001/sum_even_merged.c:1: Warning: 
  No 'assigns' specification for function 'func'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/sum_even_0001/sum_even_merged.c:24: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

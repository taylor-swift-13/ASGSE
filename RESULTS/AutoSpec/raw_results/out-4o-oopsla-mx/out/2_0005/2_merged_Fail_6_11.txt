[kernel] Parsing out/2_0005/2_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] out/2_0005/2_merged.c:8: Warning: Lambda-functions not yet implemented
[wp] out/2_0005/2_merged.c:8: Warning: array type non-supported({ ℤ}ℤ)
[wp] 11 goals scheduled
[wp] [Timeout] typed_sum_loop_invariant_established (Z3) (Stronger, 2 warnings)
[wp] [Timeout] typed_sum_loop_invariant_preserved (Qed 4ms) (Z3) (Stronger, 2 warnings)
[wp] [Timeout] typed_sum_loop_invariant_2_preserved (Qed 4ms) (Z3) (Stronger, 2 warnings)
[wp] [Timeout] typed_sum_loop_invariant_3_established (Z3) (Stronger, 2 warnings)
[wp] [Timeout] typed_sum_loop_invariant_5_preserved (Qed 5ms) (Z3) (Stronger, 2 warnings)
[wp] Proved goals:    6 / 11
  Qed:               4
  Alt-Ergo 2.6.2:    1 (15ms)
  Z3 4.8.6:          1 (10ms)
  Timeout:           5
------------------------------------------------------------
  Function sum
------------------------------------------------------------

Goal Preservation of Invariant (file out/2_0005/2_merged.c, line 8):
out/2_0005/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/2_0005/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Let x = (k * (k - 1)) / 2.
Let x_1 = k + x.
Assume {
  Type: is_sint8(k) /\ is_sint8(n) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Invariant *)
  Have: (-1) <= n.
  (* Invariant *)
  Have: k <= (1 + n).
  (* Invariant *)
  Have: 0 <= k.
  (* Then *)
  Have: k <= n.
}
Prove: x_1 = w.
Prover Z3 4.8.6 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/2_0005/2_merged.c, line 8):
out/2_0005/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/2_0005/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Prove: w = 0.
Prover Z3 4.8.6 returns Timeout (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/2_0005/2_merged.c, line 9):
out/2_0005/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/2_0005/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Let x = (k * (k - 1)) / 2.
Let x_1 = k + x.
Let x_2 = to_sint8(1 + k).
Assume {
  Type: is_sint8(k) /\ is_sint8(n) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Invariant *)
  Have: (-1) <= n.
  (* Invariant *)
  Have: k <= (1 + n).
  (* Invariant *)
  Have: 0 <= k.
  (* Then *)
  Have: k <= n.
}
Prove: ((x_2 * (x_2 - 1)) / 2) = x_1.
Prover Z3 4.8.6 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/2_0005/2_merged.c, line 9):
out/2_0005/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/2_0005/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/2_0005/2_merged.c, line 10):
out/2_0005/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/2_0005/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Let x = 1 + n.
Let x_1 = to_sint8(1 + k).
Let x_2 = (x_1 * (x_1 - 1)) / 2.
Assume {
  Type: is_sint8(k) /\ is_sint8(n) /\ is_sint32(x_2) /\ is_sint32(x_2 - k).
  (* Invariant *)
  Have: (-1) <= n.
  (* Invariant *)
  Have: x_2 = (k + ((k * (k - 1)) / 2)).
  (* Invariant *)
  Have: k <= x.
  (* Invariant *)
  Have: 0 <= k.
  (* Then *)
  Have: k <= n.
}
Prove: x_1 <= x.
Prover Z3 4.8.6 returns Valid (Qed:4ms) (10ms) (37833)

------------------------------------------------------------

Goal Establishment of Invariant (file out/2_0005/2_merged.c, line 10):
out/2_0005/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/2_0005/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Assume { Type: is_sint8(n). }
Prove: (-1) <= n.
Prover Z3 4.8.6 returns Timeout (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/2_0005/2_merged.c, line 11):
out/2_0005/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/2_0005/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Let x = to_sint8(1 + k).
Let x_1 = 1 + n.
Let x_2 = (x * (x - 1)) / 2.
Assume {
  Type: is_sint8(k) /\ is_sint8(n) /\ is_sint32(x_2) /\ is_sint32(x_2 - k).
  (* Goal *)
  When: (0 <= i) /\ (i < x).
  (* Invariant *)
  Have: (-1) <= n.
  (* Invariant *)
  Have: x_2 = (k + ((k * (k - 1)) / 2)).
  (* Invariant *)
  Have: k <= x_1.
  (* Invariant *)
  Have: 0 <= k.
  (* Then *)
  Have: k <= n.
  (* Invariant *)
  Have: x <= x_1.
}
Prove: to_sint32(i) = i.
Prover Z3 4.8.6 returns Valid (Qed:5ms) (20ms) (35201)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:5ms) (15ms) (192)

------------------------------------------------------------

Goal Establishment of Invariant (file out/2_0005/2_merged.c, line 11):
out/2_0005/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/2_0005/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/2_0005/2_merged.c, line 12):
out/2_0005/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/2_0005/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Let x = to_sint8(1 + k).
Let x_1 = 1 + n.
Let x_2 = (x * (x - 1)) / 2.
Assume {
  Type: is_sint8(k) /\ is_sint8(n) /\ is_sint32(x_2) /\ is_sint32(x_2 - k).
  (* Invariant *)
  Have: (-1) <= n.
  (* Invariant *)
  Have: x_2 = (k + ((k * (k - 1)) / 2)).
  (* Invariant *)
  Have: k <= x_1.
  (* Invariant *)
  Have: 0 <= k.
  (* Then *)
  Have: k <= n.
  (* Invariant *)
  Have: x <= x_1.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < x) -> (to_sint32(i) = i))).
}
Prove: 0 <= x.
Prover Z3 4.8.6 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/2_0005/2_merged.c, line 12):
out/2_0005/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/2_0005/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Loop assigns (file out/2_0005/2_merged.c, line 13):
out/2_0005/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/2_0005/2_merged.c:8: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/2_0005/2_merged.c:3: Warning: 
  No 'assigns' specification for function 'sum'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/2_0005/2_merged.c:23: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/max_0003/max_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 9 goals scheduled
[wp] Proved goals:    9 / 9
  Qed:               7
  Alt-Ergo 2.6.2:    2 (12ms-13ms)
------------------------------------------------------------
  Function arraymax
------------------------------------------------------------

Goal Preservation of Invariant (file out/max_0003/max_merged.c, line 6):
Let x = Mint_0[shift_sint32(a, i_2)].
Let x_1 = Mint_0[shift_sint32(a, i_1)].
Let x_2 = Mint_0[shift_sint32(a, 0)].
Let x_3 = Mint_0[shift_sint32(a, i_3)].
Assume {
  Type: is_sint32(i_1) /\ is_sint32(n) /\ is_sint32(1 + i_1) /\
      is_sint32(x_2) /\ is_sint32(x_1) /\ is_sint32(x).
  (* Heap *)
  Type: region(a.base) <= 0.
  (* Goal *)
  When: (0 <= i) /\ (i <= i_1).
  (* Initializer *)
  Init: x_3 = x_2.
  (* Invariant *)
  Have: x_2 <= x_3.
  (* Invariant *)
  Have: (i_3 <= 0) /\ (0 <= i_3).
  (* Invariant *)
  Have: forall i_4 : Z. ((0 <= i_4) -> ((i_4 < i_1) ->
      (Mint_0[shift_sint32(a, i_4)] <= x))).
  (* Invariant *)
  Have: (0 <= i_2) /\ (i_2 < i_1).
  (* Invariant *)
  Have: 0 < i_1.
  (* Then *)
  Have: i_1 < n.
  If x < x_1
  Then { Have: x_1 = max_0. }
  Else { Have: x = max_0. }
}
Prove: Mint_0[shift_sint32(a, i)] <= max_0.
Prover Z3 4.8.6 returns Valid (Qed:12ms) (30ms) (293228)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:12ms) (12ms) (133)

------------------------------------------------------------

Goal Establishment of Invariant (file out/max_0003/max_merged.c, line 6):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/max_0003/max_merged.c, line 7):
Let x = Mint_0[shift_sint32(a, i_1)].
Let x_1 = Mint_0[shift_sint32(a, i)].
Let x_2 = Mint_0[shift_sint32(a, 0)].
Let x_3 = Mint_0[shift_sint32(a, i_2)].
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(1 + i) /\ is_sint32(x_2) /\
      is_sint32(x_1) /\ is_sint32(x).
  (* Heap *)
  Type: region(a.base) <= 0.
  (* Initializer *)
  Init: x_3 = x_2.
  (* Invariant *)
  Have: x_2 <= x_3.
  (* Invariant *)
  Have: (i_2 <= 0) /\ (0 <= i_2).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < i) ->
      (Mint_0[shift_sint32(a, i_3)] <= x))).
  (* Invariant *)
  Have: (0 <= i_1) /\ (i_1 < i).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: i < n.
  If x < x_1
  Then { Have: x_1 = max_0. }
  Else { Have: x = max_0. }
  (* Invariant *)
  Have: forall i_3 : Z. ((i_3 <= i) -> ((0 <= i_3) ->
      (Mint_0[shift_sint32(a, i_3)] <= max_0))).
}
Prove: exists i_3 : Z. (Mint_0[shift_sint32(a, i_3)] = max_0) /\
    (i_3 <= i) /\ (0 <= i_3).
Prover Z3 4.8.6 returns Valid (Qed:13ms) (20ms) (82950)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:13ms) (13ms) (95)

------------------------------------------------------------

Goal Establishment of Invariant (file out/max_0003/max_merged.c, line 7):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/max_0003/max_merged.c, line 8):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/max_0003/max_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/max_0003/max_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/max_0003/max_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Loop assigns (file out/max_0003/max_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/max_0003/max_merged.c:1: Warning: 
  No 'assigns' specification for function 'arraymax'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/max_0003/max_merged.c:24: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

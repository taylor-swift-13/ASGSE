[kernel] Parsing out/12_0001/12_merged.c (with preprocessing)
[kernel:typing:no-proto] out/12_0001/12_merged.c:33: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/12_0001/12_merged.c:50: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/12_0001/12_merged.c:5: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[kernel:annot:missing-spec] out/12_0001/12_merged.c:5: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] out/12_0001/12_merged.c:49: Warning: 
  Missing assigns clause (assigns 'everything' instead)
[wp] 34 goals scheduled
[wp] Proved goals:   34 / 34
  Qed:              29
  Alt-Ergo 2.6.2:    5 (9ms-17ms-46ms)
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0001/12_merged.c, line 12):
Let x = -t_1.
Let x_1 = t - t_1.
Let x_2 = t - 1 - t_1.
Let x_3 = x_1 * x_2.
Let x_4 = x_3 / 2.
Let x_5 = (x_1 * (1 + t - t_1)) / 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t_2) /\ is_sint32(t_1) /\
      is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_4).
  (* Invariant *)
  Have: (x_4 + (if (flag_0 = 0) then 0 else x_4)) = t_1.
  (* Invariant *)
  Have: t_1 <= (2 * x_4).
  (* Invariant *)
  Have: x_4 <= t_1.
  (* Invariant *)
  Have: t <= (1 + (2 * t_1)).
  (* Invariant *)
  Have: t <= (1 + t_1 + x_4).
  (* Invariant *)
  Have: 0 <= t_1.
  (* Invariant *)
  Have: (-1) <= x_3.
  (* Invariant *)
  Have: t_1 < t.
  (* Then *)
  Have: tmp_0 != 0.
  If flag_0 != 0
  Then { Have: (t_2 + t_1) = (2 * t). }
  Else { Have: t = t_2. }
}
Prove: (x_5 + (if (flag_0 = 0) then 0 else x_5)) = t_2.
Prover Z3 4.8.6 returns Valid (Qed:13ms) (30ms) (337203)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:13ms) (46ms) (1377)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0001/12_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0001/12_merged.c, line 13):
Let x = -t.
Let x_1 = t_1 - t.
Let x_2 = (x_1 * (1 + t_1 - t)) / 2.
Let x_3 = 2 * x_2.
Let x_4 = t_1 - 1 - t.
Let x_5 = x_1 * x_4.
Let x_6 = x_5 / 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_4) /\ is_sint32(x_6) /\ is_sint32(x_3) /\
      is_sint32(t_1 + x_6 - t) /\ is_sint32(t + x_3 - t_1).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: (2 * x_6) = t.
  (* Invariant *)
  Have: x_6 <= t.
  (* Invariant *)
  Have: t_1 <= (1 + (2 * t)).
  (* Invariant *)
  Have: t_1 <= (1 + t + x_6).
  (* Invariant *)
  Have: 0 <= t.
  (* Invariant *)
  Have: (-1) <= x_5.
  (* Invariant *)
  Have: t < t_1.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (t + x_3) = (2 * t_1).
}
Prove: (t + x_2) = (t_1 + x_6).
Prover Z3 4.8.6 returns Valid (Qed:12ms) (10ms) (42008)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:12ms) (10ms) (65)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0001/12_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0001/12_merged.c, line 14):
Let x = -t_1.
Let x_1 = t - t_1.
Let x_2 = t - 1 - t_1.
Let x_3 = x_1 * x_2.
Assume {
  Type: is_sint32(t) /\ is_sint32(t_1) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_2).
  (* Invariant *)
  Have: (x_3 / 2) = t_1.
  (* Invariant *)
  Have: 0 <= t_1.
  (* Invariant *)
  Have: t <= (1 + (2 * t_1)).
  (* Invariant *)
  Have: (-1) <= x_3.
  (* Invariant *)
  Have: t_1 < t.
  (* Then *)
  Have: tmp_0 != 0.
  Have: ((x_1 * (1 + t - t_1)) / 2) = t.
}
Prove: 0 <= t.
Prover Z3 4.8.6 returns Valid (Qed:11ms) (10ms) (34243)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:11ms) (9ms) (49)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0001/12_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0001/12_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0001/12_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.84ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0001/12_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (12ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0001/12_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0001/12_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0001/12_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0001/12_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0001/12_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0001/12_merged.c, line 19):
Let x = -t_1.
Let x_1 = t - t_1.
Let x_2 = x_1 * (1 + t - t_1).
Let x_3 = x_2 / 2.
Let x_4 = 2 * x_3.
Let x_5 = t_1 + x_4.
Let x_6 = 2 * t.
Let x_7 = t_1 + x_3.
Let x_8 = 2 * t_1.
Let x_9 = t - 1 - t_1.
Let x_10 = (x_1 * x_9) / 2.
Let x_11 = -t.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t_1) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_9) /\ is_sint32(x_3) /\ is_sint32(x_4) /\
      is_sint32(t_1 + x_3 - t) /\ is_sint32(t_1 + x_4 - t).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: (2 * x_10) = t_1.
  (* Invariant *)
  Have: (x_10 + x_3) = t.
  (* Invariant *)
  Have: x_6 <= x_5.
  (* Invariant *)
  Have: x_7 = (t + x_10).
  (* Invariant *)
  Have: x_3 <= t.
  (* Invariant *)
  Have: t <= (1 + x_8).
  (* Invariant *)
  Have: x_6 <= (1 + x_8 + x_3).
  (* Invariant *)
  Have: 0 <= t_1.
  (* Invariant *)
  Have: t <= x_7.
  (* Invariant *)
  Have: t_1 < t.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_5 = x_6.
}
Prove: (-1) <= x_2.
Prover Z3 4.8.6 returns Valid (Qed:13ms) (10ms) (38731)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:13ms) (11ms) (363)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0001/12_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0001/12_merged.c, line 20):
Let x = -t_1.
Let x_1 = t - t_1.
Let x_2 = x_1 * (1 + t - t_1).
Let x_3 = x_2 / 2.
Let x_4 = 2 * x_3.
Let x_5 = t_1 + x_4.
Let x_6 = 2 * t.
Let x_7 = t_1 + x_3.
Let x_8 = 2 * t_1.
Let x_9 = t - 1 - t_1.
Let x_10 = (x_1 * x_9) / 2.
Let x_11 = -t.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t_1) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_9) /\ is_sint32(x_3) /\ is_sint32(x_4) /\
      is_sint32(t_1 + x_3 - t) /\ is_sint32(t_1 + x_4 - t).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: (2 * x_10) = t_1.
  (* Invariant *)
  Have: (x_10 + x_3) = t.
  (* Invariant *)
  Have: x_6 <= x_5.
  (* Invariant *)
  Have: x_7 = (t + x_10).
  (* Invariant *)
  Have: x_3 <= t.
  (* Invariant *)
  Have: t <= (1 + x_8).
  (* Invariant *)
  Have: x_6 <= (1 + x_8 + x_3).
  (* Invariant *)
  Have: 0 <= t_1.
  (* Invariant *)
  Have: t <= x_7.
  (* Invariant *)
  Have: t_1 < t.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_5 = x_6.
  (* Invariant *)
  Have: (-1) <= x_2.
}
Prove: t <= x_5.
Prover Z3 4.8.6 returns Valid (Qed:13ms) (10ms) (36919)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:13ms) (11ms) (351)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0001/12_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0001/12_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0001/12_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0001/12_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0001/12_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0001/12_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0001/12_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0001/12_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0001/12_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0001/12_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (13ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0001/12_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0001/12_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0001/12_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0001/12_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0001/12_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Loop assigns (file out/12_0001/12_merged.c, line 28) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/12_0001/12_merged.c, line 28) (2/2):
Call Result at line 33
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/12_0001/12_merged.c:1: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/12_0001/12_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/12_0001/12_merged.c:5: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

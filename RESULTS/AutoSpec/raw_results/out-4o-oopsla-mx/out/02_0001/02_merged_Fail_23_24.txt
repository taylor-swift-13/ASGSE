[kernel] Parsing out/02_0001/02_merged.c (with preprocessing)
[kernel:typing:no-proto] out/02_0001/02_merged.c:33: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/02_0001/02_merged.c:7: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 24 goals scheduled
[wp] [Timeout] typed_main_loop_invariant_preserved (Qed 16ms) (Z3)
[wp] Proved goals:   23 / 24
  Qed:              20
  Alt-Ergo 2.6.2:    2 (13ms-27ms)
  Z3 4.8.6:          1 (10ms)
  Timeout:           1
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Preservation of Invariant (file out/02_0001/02_merged.c, line 17):
Let x_2 = 4 * x.
Let x_3 = 2 * (x * (x / 2)).
Let x_4 = x * ((3 * x) - 1).
Let x_5 = 1 + x_2 + x_3 + x_4.
Let x_6 = 1 + x_3 + x_4.
Let x_7 = 2 * x.
Let x_8 = x_3 + x_4.
Let x_9 = 1 + x.
Let x_10 = 2 + x_7.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x) /\
      is_sint32(x_7) /\ is_sint32(x_9) /\ is_sint32(x_10) /\
      is_sint32(x_6) /\ is_sint32(x_5).
  (* Invariant *)
  Have: x_8 = (2 * (x * x)).
  (* Invariant *)
  Have: (x * (1 + x_7)) = x_8.
  (* Invariant *)
  Have: (x_6 % 2) = 1.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
  If (x_5 % 2) = 1
  Then { Have: x_9 = x_1. }
  Else { Have: x = x_1. }
}
Prove: (x_9 * (x_1 + (x_10 / 2))) = (x_2 + x_3 + x_4).
Prover Z3 4.8.6 returns Timeout (Qed:16ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:16ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/02_0001/02_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/02_0001/02_merged.c, line 18):
Let x_1 = 1 + y.
Let x_2 = 2 * y.
Let x_3 = 2 + x_2.
Let x_4 = x_3 / 2.
Let x_5 = x_1 * (x + x_4).
Let x_6 = 1 + x_5.
Let x_7 = 1 + x_5 - (4 * y).
Let x_8 = 4 * y.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_2) /\
      is_sint32(x_1) /\ is_sint32(x_3) /\ is_sint32(x_6) /\ is_sint32(x_7).
  (* Invariant *)
  Have: x_5 = (x_8 + (2 * (y * y))).
  (* Invariant *)
  Have: x_5 = (x_8 + (y * (1 + x_2))).
  (* Invariant *)
  Have: x_5 = (x_8 + (2 * (y * (y / 2))) + (y * ((3 * y) - 1))).
  (* Invariant *)
  Have: (x_7 % 2) = 1.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: tmp_0 != 0.
  If (x_6 % 2) = 1
  Then { Have: x_1 = x. }
  Else { Have: y = x. }
}
Prove: (x_1 * (1 + x + x_4)) = x_5.
Prover Z3 4.8.6 returns Valid (Qed:17ms) (10ms) (46373)

------------------------------------------------------------

Goal Establishment of Invariant (file out/02_0001/02_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/02_0001/02_merged.c, line 19):
Let x_1 = 1 + y.
Let x_2 = 2 * y.
Let x_3 = 2 + x_2.
Let x_4 = x_3 / 2.
Let x_5 = x_1 * (1 + x + x_4).
Let x_6 = 1 + x_5.
Let x_7 = 1 + x_5 - (4 * y).
Let x_8 = 4 * y.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_2) /\
      is_sint32(x_1) /\ is_sint32(x_3) /\ is_sint32(x_6) /\ is_sint32(x_7).
  (* Invariant *)
  Have: x_5 = (x_8 + (2 * (y * y))).
  (* Invariant *)
  Have: x_5 = (x_8 + (y * (1 + x_2))).
  (* Invariant *)
  Have: x_5 = (x_8 + (2 * (y * (y / 2))) + (y * ((3 * y) - 1))).
  (* Invariant *)
  Have: (x_7 % 2) = 1.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: tmp_0 != 0.
  If (x_6 % 2) = 1
  Then { Have: x_1 = x. }
  Else { Have: y = x. }
  (* Invariant *)
  Have: x_5 = (x_1 * (x + x_4)).
}
Prove: x_5 = ((x_1 * (1 + x + x_2)) + (x_3 * (x_1 / 2))).
Prover Z3 4.8.6 returns Valid (Qed:18ms) (10ms) (36278)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:18ms) (27ms) (529)

------------------------------------------------------------

Goal Establishment of Invariant (file out/02_0001/02_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/02_0001/02_merged.c, line 20):
Let x_1 = 1 + x.
Let x_2 = 2 * x.
Let x_3 = 2 + x_2.
Let x_4 = x_3 / 2.
Let x_5 = 3 * x.
Let x_6 = x_1 * (1 + x_5).
Let x_7 = x_3 * (x_1 / 2).
Let x_8 = x_6 + x_7.
Let x_9 = 1 + x_6 + x_7 - (4 * x).
Let x_10 = 4 * x.
Let x_11 = 1 + x_6 + x_7.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_1) /\ is_sint32(x_3) /\ is_sint32(x_11) /\ is_sint32(x_9).
  (* Residual *)
  When: (x_11 % 2) != 1.
  (* Invariant *)
  Have: x_8 = (x_10 + (2 * (x * x))).
  (* Invariant *)
  Have: x_8 = (x_10 + (x * (1 + x_2))).
  (* Invariant *)
  Have: x_8 = (x_10 + (2 * (x * (x / 2))) + (x * (x_5 - 1))).
  (* Invariant *)
  Have: (x_9 % 2) = 1.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x_1 * (x + x_4)) = x_8.
  (* Invariant *)
  Have: (x_1 * (1 + x + x_4)) = x_8.
}
Prove: false.
Prover Z3 4.8.6 returns Valid (Qed:14ms) (10ms) (36249)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:14ms) (13ms) (259)

------------------------------------------------------------

Goal Establishment of Invariant (file out/02_0001/02_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/02_0001/02_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (10ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/02_0001/02_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.82ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/02_0001/02_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/02_0001/02_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/02_0001/02_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/02_0001/02_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/02_0001/02_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/02_0001/02_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.96ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/02_0001/02_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/02_0001/02_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/02_0001/02_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/02_0001/02_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/02_0001/02_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/02_0001/02_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Loop assigns (file out/02_0001/02_merged.c, line 28) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/02_0001/02_merged.c, line 28) (2/2):
Call Result at line 33
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/02_0001/02_merged.c:3: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/02_0001/02_merged.c:7: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/12_0007/12_merged.c (with preprocessing)
[kernel:typing:no-proto] out/12_0007/12_merged.c:30: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/12_0007/12_merged.c:47: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/12_0007/12_merged.c:5: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[kernel:annot:missing-spec] out/12_0007/12_merged.c:5: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] out/12_0007/12_merged.c:46: Warning: 
  Missing assigns clause (assigns 'everything' instead)
[wp] 28 goals scheduled
[wp] Proved goals:   28 / 28
  Qed:              23
  Alt-Ergo 2.6.2:    5 (6ms-17ms-48ms)
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0007/12_merged.c, line 12):
Let x = -t_1.
Let x_1 = t - t_1.
Let x_2 = t - 1 - t_1.
Let x_3 = x_1 * x_2.
Let x_4 = x_3 / 2.
Let x_5 = 2 * x_4.
Let x_6 = (x_1 * (1 + t - t_1)) / 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t_2) /\ is_sint32(t_1) /\
      is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_4).
  (* Invariant *)
  Have: (x_4 + (if (flag_0 = 0) then 0 else x_4)) = t_1.
  (* Invariant *)
  Have: t_1 <= x_5.
  (* Invariant *)
  Have: t_1 <= ((if (flag_0 = 0) then 0 else x_2) + x_5).
  (* Invariant *)
  Have: x_4 <= t_1.
  (* Invariant *)
  Have: 0 <= t_1.
  (* Invariant *)
  Have: (-1) <= x_3.
  (* Invariant *)
  Have: t_1 < t.
  (* Then *)
  Have: tmp_0 != 0.
  If flag_0 != 0
  Then { Have: (t_2 + t_1) = (2 * t). }
  Else { Have: t = t_2. }
}
Prove: (x_6 + (if (flag_0 = 0) then 0 else x_6)) = t_2.
Prover Z3 4.8.6 returns Valid (Qed:12ms) (30ms) (203744)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:12ms) (48ms) (1538)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0007/12_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0007/12_merged.c, line 13):
Let x = -t.
Let x_1 = t_1 - t.
Let x_2 = t_1 - 1 - t.
Let x_3 = x_1 * x_2.
Let x_4 = x_3 / 2.
Let x_5 = 2 * x_4.
Let x_6 = (x_1 * (1 + t_1 - t)) / 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t_2) /\ is_sint32(t) /\
      is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x_2) /\
      is_sint32(x_4) /\ is_sint32(t_1 + x_4 - t) /\
      is_sint32(x_6 + (if (flag_0 = 0) then 0 else x_6)).
  (* Invariant *)
  Have: (x_4 + (if (flag_0 = 0) then 0 else x_4)) = t.
  (* Invariant *)
  Have: t <= x_5.
  (* Invariant *)
  Have: t <= ((if (flag_0 = 0) then 0 else x_2) + x_5).
  (* Invariant *)
  Have: x_4 <= t.
  (* Invariant *)
  Have: 0 <= t.
  (* Invariant *)
  Have: (-1) <= x_3.
  (* Invariant *)
  Have: t < t_1.
  (* Then *)
  Have: tmp_0 != 0.
  If flag_0 != 0
  Then {
    Let x_7 = t + (2 * x_6).
    Have: (x_7 = (2 * t_1)) /\ (x_7 = (t_2 + t_1)).
  }
  Else { Have: x_6 = t_1. }
}
Prove: ((2 * t) + x_6 + (if (flag_0 = 0) then 0 else x_6))
         <= ((2 * t_1) + x_5).
Prover Z3 4.8.6 returns Valid (Qed:12ms) (10ms) (45604)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:12ms) (12ms) (142)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0007/12_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0007/12_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0007/12_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0007/12_merged.c, line 15):
Let x = -t.
Let x_1 = t_1 - t.
Let x_2 = 2 * ((x_1 * (1 + t_1 - t)) / 2).
Let x_3 = t + x_2.
Let x_4 = 2 * t_1.
Let x_5 = t_1 - 1 - t.
Let x_6 = x_1 * x_5.
Let x_7 = x_6 / 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_5) /\ is_sint32(x_7) /\ is_sint32(x_2) /\
      is_sint32(t_1 + x_7 - t) /\ is_sint32(t + x_2 - t_1).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: (2 * x_7) = t.
  (* Invariant *)
  Have: t < t_1.
  (* Invariant *)
  Have: x_7 <= t.
  (* Invariant *)
  Have: 0 <= t.
  (* Invariant *)
  Have: (-1) <= x_6.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_3 = x_4.
  (* Invariant *)
  Have: x_3 <= x_4.
}
Prove: ((2 * t) + x_2) <= (3 * t_1).
Prover Z3 4.8.6 returns Valid (Qed:13ms) (10ms) (35940)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:13ms) (6ms) (64)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0007/12_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0007/12_merged.c, line 16):
Let x = -t.
Let x_1 = t_1 - t.
Let x_2 = (x_1 * (1 + t_1 - t)) / 2.
Let x_3 = 2 * x_2.
Let x_4 = t + x_3.
Let x_5 = 2 * t_1.
Let x_6 = t_1 - 1 - t.
Let x_7 = x_1 * x_6.
Let x_8 = x_7 / 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_6) /\ is_sint32(x_8) /\ is_sint32(x_3) /\
      is_sint32(t_1 + x_8 - t) /\ is_sint32(t + x_3 - t_1).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: (2 * x_8) = t.
  (* Invariant *)
  Have: t < t_1.
  (* Invariant *)
  Have: x_8 <= t.
  (* Invariant *)
  Have: 0 <= t.
  (* Invariant *)
  Have: (-1) <= x_7.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_4 = x_5.
  (* Invariant *)
  Have: x_4 <= x_5.
  (* Invariant *)
  Have: ((2 * t) + x_3) <= (3 * t_1).
}
Prove: (t + x_2) = (t_1 + x_8).
Prover Z3 4.8.6 returns Valid (Qed:15ms) (20ms) (41683)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:15ms) (10ms) (65)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0007/12_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0007/12_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0007/12_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0007/12_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0007/12_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0007/12_merged.c, line 19):
Let x = -t_1.
Let x_1 = t - t_1.
Let x_2 = x_1 * (1 + t - t_1).
Let x_3 = x_2 / 2.
Let x_4 = 2 * x_3.
Let x_5 = t_1 + x_4.
Let x_6 = 2 * t.
Let x_7 = t_1 + x_3.
Let x_8 = t - 1 - t_1.
Let x_9 = (x_1 * x_8) / 2.
Let x_10 = -t.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t_1) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_8) /\ is_sint32(x_3) /\ is_sint32(x_4) /\
      is_sint32(t_1 + x_3 - t) /\ is_sint32(t_1 + x_4 - t).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: (2 * x_9) = t_1.
  (* Invariant *)
  Have: x_6 <= x_5.
  (* Invariant *)
  Have: t < x_4.
  (* Invariant *)
  Have: x_7 = (t + x_9).
  (* Invariant *)
  Have: x_3 <= t.
  (* Invariant *)
  Have: 0 <= t_1.
  (* Invariant *)
  Have: t <= x_7.
  (* Invariant *)
  Have: t_1 < t.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_5 = x_6.
}
Prove: (-1) <= x_2.
Prover Z3 4.8.6 returns Valid (Qed:12ms) (10ms) (38260)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:12ms) (11ms) (344)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0007/12_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0007/12_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0007/12_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.99ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0007/12_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (12ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0007/12_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0007/12_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (12ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0007/12_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0007/12_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0007/12_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0007/12_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0007/12_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Loop assigns (file out/12_0007/12_merged.c, line 25) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/12_0007/12_merged.c, line 25) (2/2):
Call Result at line 30
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/12_0007/12_merged.c:1: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/12_0007/12_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/12_0007/12_merged.c:5: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

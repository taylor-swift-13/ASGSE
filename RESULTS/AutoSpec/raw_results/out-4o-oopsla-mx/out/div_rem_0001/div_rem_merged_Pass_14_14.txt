[kernel] Parsing out/div_rem_0001/div_rem_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 14 goals scheduled
[wp] Proved goals:   14 / 14
  Qed:               9
  Alt-Ergo 2.6.2:    5 (12ms-13ms-16ms)
------------------------------------------------------------
  Function div_rem
------------------------------------------------------------

Goal Post-condition (file out/div_rem_0001/div_rem_merged.c, line 7) in 'div_rem':
Let x_1 = to_uint32(x % y).
Let x_2 = Mint_0[q <- to_uint32(x / y)][r <- x_1][q].
Assume {
  Type: is_uint32(x) /\ is_uint32(y) /\ is_uint32(x_2).
  (* Heap *)
  Type: (region(q.base) <= 0) /\ (region(r.base) <= 0) /\ linked(Malloc_0).
  (* Pre-condition *)
  Have: y != 0.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, r, 1).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, q, 1).
  (* Pre-condition *)
  Have: r != q.
}
Prove: (x_1 + (y * x_2)) = x.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (12ms) (235)

------------------------------------------------------------

Goal Post-condition (file out/div_rem_0001/div_rem_merged.c, line 8) in 'div_rem':
Let x_1 = to_uint32(x % y).
Let x_2 = Mint_0[q <- to_uint32(x / y)][r <- x_1][q].
Assume {
  Type: is_uint32(x) /\ is_uint32(y) /\ is_uint32(x_2).
  (* Heap *)
  Type: (region(q.base) <= 0) /\ (region(r.base) <= 0) /\ linked(Malloc_0).
  (* Pre-condition *)
  Have: y != 0.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, r, 1).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, q, 1).
  (* Pre-condition *)
  Have: r != q.
}
Prove: (x_1 + (y * x_2)) = x.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (14ms) (235)

------------------------------------------------------------

Goal Post-condition (file out/div_rem_0001/div_rem_merged.c, line 9) in 'div_rem':
Let x_1 = x % y.
Assume {
  Type: is_uint32(x) /\ is_uint32(y).
  (* Heap *)
  Type: (region(q.base) <= 0) /\ (region(r.base) <= 0) /\ linked(Malloc_0).
  (* Pre-condition *)
  Have: y != 0.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, r, 1).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, q, 1).
  (* Pre-condition *)
  Have: r != q.
}
Prove: x_1 = to_uint32(x_1).
Prover Z3 4.8.6 returns Valid (Qed:2ms) (10ms) (74168)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (12ms) (113)

------------------------------------------------------------

Goal Post-condition (file out/div_rem_0001/div_rem_merged.c, line 10) in 'div_rem':
Assume {
  Type: is_uint32(x) /\ is_uint32(y).
  (* Heap *)
  Type: (region(q.base) <= 0) /\ (region(r.base) <= 0) /\ linked(Malloc_0).
  (* Pre-condition *)
  Have: y != 0.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, r, 1).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, q, 1).
  (* Pre-condition *)
  Have: r != q.
}
Prove: to_uint32(x % y) < y.
Prover Z3 4.8.6 returns Valid (Qed:2ms) (10ms) (87417)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (12ms) (112)

------------------------------------------------------------

Goal Post-condition (file out/div_rem_0001/div_rem_merged.c, line 11) in 'div_rem':
Let x_1 = x / y.
Let x_2 = Mint_0[q <- to_uint32(x_1)][r <- to_uint32(x % y)][q].
Assume {
  Type: is_uint32(x) /\ is_uint32(y) /\ is_uint32(x_2).
  (* Heap *)
  Type: (region(q.base) <= 0) /\ (region(r.base) <= 0) /\ linked(Malloc_0).
  (* Pre-condition *)
  Have: y != 0.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, r, 1).
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, q, 1).
  (* Pre-condition *)
  Have: r != q.
}
Prove: x_2 = x_1.
Prover Z3 4.8.6 returns Valid (Qed:2ms) (10ms) (95255)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (16ms) (218)

------------------------------------------------------------

Goal Assigns (file out/div_rem_0001/div_rem_merged.c, line 12) in 'div_rem' (1/2):
Effect at line 15
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Assigns (file out/div_rem_0001/div_rem_merged.c, line 12) in 'div_rem' (2/2):
Effect at line 16
Prove: true.
Prover Qed returns Valid (0.89ms)

------------------------------------------------------------
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Assertion (file out/div_rem_0001/div_rem_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assertion (file out/div_rem_0001/div_rem_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/div_rem_0001/div_rem_merged.c, line 2) in 'div_rem'' in 'main' at call 'div_rem' (file out/div_rem_0001/div_rem_merged.c, line 22)
:
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/div_rem_0001/div_rem_merged.c, line 3) in 'div_rem'' in 'main' at call 'div_rem' (file out/div_rem_0001/div_rem_merged.c, line 22)
:
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/div_rem_0001/div_rem_merged.c, line 4) in 'div_rem'' in 'main' at call 'div_rem' (file out/div_rem_0001/div_rem_merged.c, line 22)
:
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/div_rem_0001/div_rem_merged.c, line 5) in 'div_rem'' in 'main' at call 'div_rem' (file out/div_rem_0001/div_rem_merged.c, line 22)
:
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/div_rem_0001/div_rem_merged.c, line 6) in 'div_rem'' in 'main' at call 'div_rem' (file out/div_rem_0001/div_rem_merged.c, line 22)
:
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/div_rem_0001/div_rem_merged.c:20: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

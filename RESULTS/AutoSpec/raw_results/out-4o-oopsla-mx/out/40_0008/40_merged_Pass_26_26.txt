[kernel] Parsing out/40_0008/40_merged.c (with preprocessing)
[kernel:typing:no-proto] out/40_0008/40_merged.c:33: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/40_0008/40_merged.c:43: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/40_0008/40_merged.c:8: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[kernel:annot:missing-spec] out/40_0008/40_merged.c:8: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] out/40_0008/40_merged.c:43: Warning: 
  Missing assigns clause (assigns 'everything' instead)
[wp] 26 goals scheduled
[wp] Proved goals:   26 / 26
  Qed:              21
  Alt-Ergo 2.6.2:    5 (8ms-14ms-18ms)
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0008/40_merged.c, line 18):
Let x = 2 * i.
Let x_1 = 2 + x.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(j_1) /\
      is_sint32(j_2) /\ is_sint32(j_3) /\ is_sint32(tmp_0) /\ is_sint32(x) /\
      is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: i <= j_3.
  (* Invariant *)
  Have: (j_3 % 2) = 1.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 < j_3.
  (* Invariant *)
  Have: x <= j_3.
  (* Then *)
  Have: tmp_0 != 0.
  If (x_1 % 2) = 0
  Then { Have: j_3 = j_1. Have: (2 + j_1) = j. }
  Else { Have: j_3 = j_2. Have: (1 + j_2) = j. }
}
Prove: (x_1 / 2) <= j.
Prover Z3 4.8.6 returns Valid (Qed:12ms) (10ms) (39970)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:12ms) (18ms) (280)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0008/40_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0008/40_merged.c, line 19):
Let x = 2 * i.
Let x_1 = 2 + x.
Let x_2 = 1 + j.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_0) /\
      is_sint32(x) /\ is_sint32(x_2) /\ is_sint32(x_1).
  (* Goal *)
  When: (x_1 % 2) = 1.
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: x <= j.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x_1 / 2) <= x_2.
}
Prove: (x_2 % 2) = 0.
Prover Z3 4.8.6 returns Valid (Qed:5ms) (10ms) (38194)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:5ms) (15ms) (244)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0008/40_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0008/40_merged.c, line 20):
Let x = 2 * i.
Let x_1 = 2 + x.
Let x_2 = x_1 % 2.
Let x_3 = 1 + j.
Let x_4 = x_3 % 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_0) /\
      is_sint32(x) /\ is_sint32(x_3) /\ is_sint32(x_1).
  (* Residual *)
  When: x_2 != 0.
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: x <= j.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x_1 / 2) <= x_3.
  (* Invariant *)
  Have: ((x_2 = 1) -> (x_4 = 0)).
}
Prove: x_4 = 1.
Prover Z3 4.8.6 returns Valid (Qed:9ms) (10ms) (38323)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:9ms) (13ms) (255)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0008/40_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0008/40_merged.c, line 21):
Let x = 1 + j.
Let x_1 = 2 * i.
Let x_2 = 2 + x_1.
Let x_3 = x_2 % 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x) /\ is_sint32(x_2).
  (* Residual *)
  When: x_3 != 0.
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: x_1 <= j.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x_2 / 2) <= x.
  (* Invariant *)
  Have: x_3 != 1.
  (* Invariant *)
  Have: (x % 2) = 1.
}
Prove: false.
Prover Z3 4.8.6 returns Valid (Qed:9ms) (10ms) (36488)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:9ms) (16ms) (250)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0008/40_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0008/40_merged.c, line 22):
Let x = 2 * i.
Let x_1 = 2 + x.
Let x_2 = 2 + j.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(j) /\ is_sint32(tmp_0) /\
      is_sint32(x) /\ is_sint32(x_2) /\ is_sint32(x_1).
  (* Goal *)
  When: (x_1 % 2) = 0.
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: x <= j.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x_1 / 2) <= x_2.
}
Prove: (x_2 % 2) = 1.
Prover Z3 4.8.6 returns Valid (Qed:5ms) (20ms) (70110)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:5ms) (8ms) (231)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0008/40_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0008/40_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0008/40_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0008/40_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0008/40_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0008/40_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0008/40_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0008/40_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0008/40_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0008/40_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0008/40_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0008/40_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0008/40_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0008/40_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0008/40_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Loop assigns (file out/40_0008/40_merged.c, line 30) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/40_0008/40_merged.c, line 30) (2/2):
Call Result at line 33
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/40_0008/40_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/40_0008/40_merged.c:3: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/40_0008/40_merged.c:8: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

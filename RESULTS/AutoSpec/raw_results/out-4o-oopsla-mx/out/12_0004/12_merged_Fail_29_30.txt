[kernel] Parsing out/12_0004/12_merged.c (with preprocessing)
[kernel:typing:no-proto] out/12_0004/12_merged.c:31: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/12_0004/12_merged.c:48: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/12_0004/12_merged.c:5: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[kernel:annot:missing-spec] out/12_0004/12_merged.c:5: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] out/12_0004/12_merged.c:47: Warning: 
  Missing assigns clause (assigns 'everything' instead)
[wp] 30 goals scheduled
[wp] [Timeout] typed_main_loop_invariant_5_preserved (Qed 16ms) (Z3)
[wp] Proved goals:   29 / 30
  Qed:              23
  Alt-Ergo 2.6.2:    5 (5ms-19ms-27ms)
  Z3 4.8.6:          1 (10ms)
  Timeout:           1
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0004/12_merged.c, line 12):
Let x = -t_1.
Let x_1 = t - 1 - t_1.
Let x_2 = (1 + flag_0) * x_1.
Let x_3 = 2 * x_2.
Let x_4 = t - t_1.
Let x_5 = (x_4 * x_1) / 2.
Let x_6 = x_1 * x_1.
Let x_7 = -x_2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t) /\ is_sint32(t_1) /\
      is_sint32(tmp_0) /\ is_sint32(x_4) /\ is_sint32((2 * t) - t_1) /\
      is_sint32(x_1) /\ is_sint32(t - x_2) /\ is_sint32(t_1 - x_2).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: x_6 = x_2.
  (* Invariant *)
  Have: (x_6 + x_5) = t_1.
  (* Invariant *)
  Have: x_5 = x_2.
  (* Invariant *)
  Have: x_3 <= t_1.
  (* Invariant *)
  Have: (x_2 + x_5) = t_1.
  (* Invariant *)
  Have: t_1 <= x_3.
  (* Invariant *)
  Have: t_1 < t.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: (t + x_2) = (t_1 + (x_4 * x_4)).
Prover Alt-Ergo 2.6.2 returns Valid (Qed:16ms) (27ms) (3931)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0004/12_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0004/12_merged.c, line 13):
Let x = -t_1.
Let x_1 = t - 1 - t_1.
Let x_2 = (1 + flag_0) * x_1.
Let x_3 = t - t_1.
Let x_4 = x_3 * x_3.
Let x_5 = 2 * x_2.
Let x_6 = (x_3 * x_1) / 2.
Let x_7 = x_1 * x_1.
Let x_8 = -x_2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t_1) /\ is_sint32(tmp_0) /\
      is_sint32(x_3) /\ is_sint32(x_1) /\ is_sint32(t - x_2) /\
      is_sint32(t_1 - x_2) /\ is_sint32(t + x_4 - x_2) /\
      is_sint32(t_1 + x_4 - x_2).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: x_7 = x_2.
  (* Invariant *)
  Have: (x_7 + x_6) = t_1.
  (* Invariant *)
  Have: x_6 = x_2.
  (* Invariant *)
  Have: x_5 <= t_1.
  (* Invariant *)
  Have: (x_2 + x_6) = t_1.
  (* Invariant *)
  Have: t_1 <= x_5.
  (* Invariant *)
  Have: t_1 < t.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (t + x_2) = (t_1 + x_4).
}
Prove: (x_2 + ((x_3 * (1 + t - t_1)) / 2)) = t.
Prover Z3 4.8.6 returns Valid (Qed:14ms) (10ms) (52457)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:14ms) (27ms) (1479)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0004/12_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0004/12_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (11ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0004/12_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0004/12_merged.c, line 15):
Let x = -t_1.
Let x_1 = t - t_1.
Let x_2 = x_1 * x_1.
Let x_3 = (x_1 * (1 + t - t_1)) / 2.
Let x_4 = 2 * t.
Let x_5 = t_1 + (2 * x_3).
Let x_6 = t - 1 - t_1.
Let x_7 = (x_1 * x_6) / 2.
Let x_8 = x_6 * x_6.
Let x_9 = -t.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t_1) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_6) /\ is_sint32(x_3) /\
      is_sint32(x_2 + x_3) /\ is_sint32(t_1 + x_3 - t) /\
      is_sint32(t_1 + x_2 + x_3 - t).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: (x_8 + x_3) = t.
  (* Invariant *)
  Have: (x_8 + x_7) = t_1.
  (* Invariant *)
  Have: (2 * x_7) = t_1.
  (* Invariant *)
  Have: (((1 + flag_0) * x_6) + x_3) = t.
  (* Invariant *)
  Have: (x_7 + x_3) = t.
  (* Invariant *)
  Have: x_4 <= x_5.
  (* Invariant *)
  Have: (t_1 + x_3) = (t + x_7).
  (* Invariant *)
  Have: x_5 <= x_4.
  (* Invariant *)
  Have: t_1 < t.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (t_1 + x_2 + x_3) = x_4.
}
Prove: x_3 = x_2.
Prover Z3 4.8.6 returns Valid (Qed:13ms) (10ms) (41262)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0004/12_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0004/12_merged.c, line 16):
Let x = -t_1.
Let x_1 = t - t_1.
Let x_2 = (x_1 * (1 + t - t_1)) / 2.
Let x_3 = t_1 + (2 * x_2) + (2 * (if (flag_0 = 0) then 0 else x_2)).
Let x_4 = x_1 * (if (flag_0 = 0) then 0 else x_1).
Let x_5 = (2 * t) + (2 * x_4).
Let x_6 = t - 1 - t_1.
Let x_7 = (x_1 * x_6) / 2.
Let x_8 = -x_4.
Let x_9 = t_1 + x_2 + (if (flag_0 = 0) then 0 else x_2) - t - x_4.
Let x_10 = 1 + flag_0.
Let x_11 = t + x_4.
Let x_12 = x_6 * x_6.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t_2) /\ is_sint32(t_1) /\
      is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x_6) /\
      is_sint32(x_2 + (if (flag_0 = 0) then 0 else x_2)) /\
      is_sint32(x_2 + (if (flag_0 = 0) then 0 else x_2) - x_4) /\
      is_sint32(x_9).
  (* Invariant *)
  Have: ((x_6 * (if (flag_0 = 0) then 0 else x_6)) + x_2
         + (if (flag_0 = 0) then 0 else x_2)) = x_11.
  (* Invariant *)
  Have: (x_12 + (if (flag_0 = 0) then 0 else x_7)) = t_1.
  (* Invariant *)
  Have: (x_7 + (if (flag_0 = 0) then 0 else x_12)) = t_1.
  (* Invariant *)
  Have: (x_7 + (if (flag_0 = 0) then 0 else x_7)) = t_1.
  (* Invariant *)
  Have: ((x_10 * x_6) + x_2 + (if (flag_0 = 0) then 0 else x_2)) = x_11.
  (* Invariant *)
  Have: (x_7 + (if (flag_0 = 0) then 0 else x_9)) = t_1.
  (* Invariant *)
  Have: x_5 <= x_3.
  (* Invariant *)
  Have: (t_1 + x_2 + (if (flag_0 = 0) then 0 else x_2)) = (t + x_4 + x_7).
  (* Invariant *)
  Have: x_3 <= x_5.
  (* Invariant *)
  Have: t_1 < t.
  (* Then *)
  Have: tmp_0 != 0.
  If flag_0 != 0
  Then {
    Let x_13 = t_1 + (2 * x_2).
    Have: (x_13 = (2 * t)) /\ (x_13 = (t_2 + t)).
  }
  Else { Have: x_2 = t. }
  (* Invariant *)
  Have: x_2 = (x_1 * x_1).
}
Prove: x_4 = (x_10 * x_1).
Prover Z3 4.8.6 returns Timeout (Qed:16ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:16ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0004/12_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0004/12_merged.c, line 17):
Let x = -t_1.
Let x_1 = t - t_1.
Let x_2 = (x_1 * (1 + t - t_1)) / 2.
Let x_3 = x_1 * x_1.
Let x_4 = 1 + flag_0.
Let x_5 = x_4 * x_1.
Let x_6 = 2 * x_2.
Let x_7 = t_1 + x_6.
Let x_8 = 2 * t.
Let x_9 = t_1 + (4 * x_2).
Let x_10 = x_8 + (2 * x_5).
Let x_11 = t - 1 - t_1.
Let x_12 = (x_1 * x_11) / 2.
Let x_13 = t + x_5.
Let x_14 = x_11 * x_11.
Let x_15 = -x_5.
Let x_16 = -t.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t_1) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_11) /\ is_sint32(x_6) /\
      is_sint32(x_6 - x_5) /\ is_sint32(t_1 + x_6 - t) /\
      is_sint32(t_1 + x_6 - t - x_5).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: (x_14 + x_6) = x_13.
  (* Invariant *)
  Have: (x_14 + x_12) = t_1.
  (* Invariant *)
  Have: (2 * x_12) = t_1.
  (* Invariant *)
  Have: ((x_4 * x_11) + x_6) = x_13.
  (* Invariant *)
  Have: (x_12 + x_6) = x_13.
  (* Invariant *)
  Have: x_10 <= x_9.
  (* Invariant *)
  Have: x_7 = (t + x_5 + x_12).
  (* Invariant *)
  Have: x_9 <= x_10.
  (* Invariant *)
  Have: t_1 < t.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_7 = x_8.
  (* Invariant *)
  Have: x_3 = x_5.
  (* Invariant *)
  Have: x_2 = x_3.
}
Prove: x_2 = x_5.
Prover Z3 4.8.6 returns Valid (Qed:19ms) (10ms) (41375)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:19ms) (20ms) (1451)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0004/12_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0004/12_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0004/12_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.92ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0004/12_merged.c, line 19):
Let x = -t_1.
Let x_1 = t - t_1.
Let x_2 = (x_1 * (1 + t - t_1)) / 2.
Let x_3 = 1 + flag_0.
Let x_4 = x_3 * x_1.
Let x_5 = x_1 * x_1.
Let x_6 = t_1 + x_5 + x_2.
Let x_7 = 2 * t.
Let x_8 = t_1 + (2 * x_5) + (2 * x_2).
Let x_9 = 2 * x_4.
Let x_10 = x_7 + x_9.
Let x_11 = t - 1 - t_1.
Let x_12 = (x_1 * x_11) / 2.
Let x_13 = t + x_4.
Let x_14 = x_11 * x_11.
Let x_15 = x_5 + x_2.
Let x_16 = -x_4.
Let x_17 = -t.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t_1) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_11) /\ is_sint32(x_15) /\
      is_sint32(x_5 + x_2 - x_4) /\ is_sint32(t_1 + x_5 + x_2 - t) /\
      is_sint32(t_1 + x_5 + x_2 - t - x_4).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: (x_5 + x_14 + x_2) = x_13.
  (* Invariant *)
  Have: (x_14 + x_12) = t_1.
  (* Invariant *)
  Have: (2 * x_12) = t_1.
  (* Invariant *)
  Have: (x_5 + (x_3 * x_11) + x_2) = x_13.
  (* Invariant *)
  Have: (x_5 + x_12 + x_2) = x_13.
  (* Invariant *)
  Have: x_10 <= x_8.
  (* Invariant *)
  Have: x_6 = (t + x_4 + x_12).
  (* Invariant *)
  Have: x_8 <= x_10.
  (* Invariant *)
  Have: t_1 < t.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_6 = x_7.
  (* Invariant *)
  Have: x_5 = x_4.
  (* Invariant *)
  Have: x_2 = x_5.
  (* Invariant *)
  Have: x_2 = x_4.
}
Prove: x_9 <= x_15.
Prover Z3 4.8.6 returns Valid (Qed:20ms) (10ms) (39250)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:20ms) (15ms) (1436)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0004/12_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0004/12_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (14ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0004/12_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.99ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0004/12_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0004/12_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.86ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0004/12_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0004/12_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0004/12_merged.c, line 23):
Let x = 1 + a.
Let x_1 = x * x.
Let x_2 = (x * (2 + a)) / 2.
Let x_3 = 1 + flag_0.
Let x_4 = (a * x) / 2.
Let x_5 = 1 + a + x_4.
Let x_6 = a * a.
Let x_7 = -a.
Assume {
  Type: is_sint32(a) /\ is_sint32(flag_0) /\ is_sint32(tmp_0) /\
      is_sint32(x) /\ is_sint32(x_2) /\ is_sint32(x_1 + x_2) /\
      is_sint32(x_2 - 1 - a) /\ is_sint32(x_1 + x_2 - 1 - a) /\
      is_sint32(x_4 + x_2 - 1 - a).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: x_4 = x_6.
  (* Invariant *)
  Have: x_2 = (1 + a + x_6).
  (* Invariant *)
  Have: x_4 = (a * x_3).
  (* Invariant *)
  Have: (a + x_4) < x_2.
  (* Invariant *)
  Have: x_2 = x_5.
  (* Invariant *)
  Have: x_2 <= x_5.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_1 = x_5.
  (* Invariant *)
  Have: x_2 = x_1.
  (* Invariant *)
  Have: (x * x_3) = x_1.
  (* Invariant *)
  Have: x_1 <= x_2.
}
Prove: x_2 <= x_1.
Prover Z3 4.8.6 returns Valid (Qed:18ms) (10ms) (36031)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:18ms) (5ms) (148)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0004/12_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0004/12_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0004/12_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0004/12_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0004/12_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.86ms)

------------------------------------------------------------

Goal Loop assigns (file out/12_0004/12_merged.c, line 26) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/12_0004/12_merged.c, line 26) (2/2):
Call Result at line 31
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/12_0004/12_merged.c:1: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/12_0004/12_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/12_0004/12_merged.c:5: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/increment_arr_0006/increment_arr_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 10 goals scheduled
[wp] [Timeout] typed_increment_array_by_ensures_2 (Qed 3ms) (Z3)
[wp] [Timeout] typed_increment_array_by_ensures (Qed 3ms) (Z3)
[wp] Proved goals:    8 / 10
  Qed:               7
  Alt-Ergo 2.6.2:    1 (12ms)
  Timeout:           2
------------------------------------------------------------
  Function increment_array_by
------------------------------------------------------------

Goal Post-condition (file out/increment_arr_0006/increment_arr_merged.c, line 5) in 'increment_array_by':
Let a = shift_sint32(arr_0, 0).
Let a_1 = shift_sint32(arr_0, i).
Assume {
  Type: is_sint32(c) /\ is_sint32(i_1) /\ is_sint32(n).
  (* Heap *)
  Type: (region(arr_0.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: (0 <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 <= n.
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a, n).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Else *)
  Have: n <= i_1.
}
Prove: havoc(Mint_undef_0, Mint_0, a, n)[a_1] = (c + Mint_0[a_1]).
Prover Z3 4.8.6 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Post-condition (file out/increment_arr_0006/increment_arr_merged.c, line 6) in 'increment_array_by':
Let a = shift_sint32(arr_0, 0).
Let a_1 = shift_sint32(arr_0, i).
Assume {
  Type: is_sint32(c) /\ is_sint32(i_1) /\ is_sint32(n).
  (* Heap *)
  Type: (region(arr_0.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: (0 <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 <= n.
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a, n).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Else *)
  Have: n <= i_1.
}
Prove: havoc(Mint_undef_0, Mint_0, a, n)[a_1] = (c + Mint_0[a_1]).
Prover Z3 4.8.6 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/increment_arr_0006/increment_arr_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/increment_arr_0006/increment_arr_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Loop assigns (file out/increment_arr_0006/increment_arr_merged.c, line 12) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/increment_arr_0006/increment_arr_merged.c, line 12) (2/2):
Effect at line 16
Let a = shift_sint32(arr_0, 0).
Let x = i - 1.
Let a_1 = shift_sint32(arr_0, x).
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(x).
  (* Heap *)
  Type: (region(arr_0.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: !invalid(Malloc_0, a_1, 1).
  (* Pre-condition *)
  Have: 0 <= n.
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a, n).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: i <= n.
}
Prove: included(a_1, 1, a, n).
Prover Z3 4.8.6 returns Valid (Qed:2ms) (10ms) (101884)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (12ms) (80)

------------------------------------------------------------

Goal Assigns (file out/increment_arr_0006/increment_arr_merged.c, line 7) in 'increment_array_by':
Effect at line 15
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/increment_arr_0006/increment_arr_merged.c, line 2) in 'increment_array_by'' in 'main' at call 'increment_array_by' (file out/increment_arr_0006/increment_arr_merged.c, line 24)
:
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/increment_arr_0006/increment_arr_merged.c, line 3) in 'increment_array_by'' in 'main' at call 'increment_array_by' (file out/increment_arr_0006/increment_arr_merged.c, line 24)
:
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/increment_arr_0006/increment_arr_merged.c, line 4) in 'increment_array_by'' in 'main' at call 'increment_array_by' (file out/increment_arr_0006/increment_arr_merged.c, line 24)
:
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/increment_arr_0006/increment_arr_merged.c:22: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

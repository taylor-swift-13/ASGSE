[kernel] Parsing out/reverse_array_0007/reverse_array_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 15 goals scheduled
[wp] Proved goals:   15 / 15
  Qed:              13
  Alt-Ergo 2.6.2:    2 (8ms-12ms)
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/reverse_array_0007/reverse_array_merged.c, line 2) in 'reverse'' in 'main' at call 'reverse' (file out/reverse_array_0007/reverse_array_merged.c, line 32)
:
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/reverse_array_0007/reverse_array_merged.c, line 3) in 'reverse'' in 'main' at call 'reverse' (file out/reverse_array_0007/reverse_array_merged.c, line 32)
:
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/reverse_array_0007/reverse_array_merged.c, line 4) in 'reverse'' in 'main' at call 'reverse' (file out/reverse_array_0007/reverse_array_merged.c, line 32)
:
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
------------------------------------------------------------
  Function reverse
------------------------------------------------------------

Goal Preservation of Invariant (file out/reverse_array_0007/reverse_array_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/reverse_array_0007/reverse_array_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/reverse_array_0007/reverse_array_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/reverse_array_0007/reverse_array_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/reverse_array_0007/reverse_array_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/reverse_array_0007/reverse_array_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/reverse_array_0007/reverse_array_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/reverse_array_0007/reverse_array_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.73ms)

------------------------------------------------------------

Goal Loop assigns (file out/reverse_array_0007/reverse_array_merged.c, line 16) (1/3):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/reverse_array_0007/reverse_array_merged.c, line 16) (2/3):
Effect at line 22
Let x = i + j.
Let a_1 = shift_sint32(a, 0).
Let x_1 = i - 1.
Let a_2 = shift_sint32(a, x_1).
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(x_1) /\ is_sint32(j - 1) /\
      is_sint32(x) /\ is_sint32(i + j - 1).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: !invalid(Malloc_0, a_2, 1).
  (* Pre-condition *)
  Have: 0 <= x.
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a_1, x).
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: i <= (x / 2).
}
Prove: included(a_2, 1, a_1, x).
Prover Z3 4.8.6 returns Valid (Qed:6ms) (20ms) (104515)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:6ms) (8ms) (167)

------------------------------------------------------------

Goal Loop assigns (file out/reverse_array_0007/reverse_array_merged.c, line 16) (3/3):
Effect at line 23
Let x = 2 + i + j.
Let a_1 = shift_sint32(a, 0).
Let x_1 = i + j.
Let x_2 = 1 + j.
Let a_2 = shift_sint32(a, x_2).
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(1 + i) /\ is_sint32(x_2) /\
      is_sint32(1 + i + j) /\ is_sint32(x).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: !invalid(Malloc_0, a_2, 1).
  (* Pre-condition *)
  Have: (-2) <= x_1.
  (* Pre-condition *)
  Have: (-1) <= x_1.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a_1, x).
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < (x / 2).
  (* Invariant *)
  Have: (-1) <= i.
}
Prove: included(a_2, 1, a_1, x).
Prover Z3 4.8.6 returns Valid (Qed:4ms) (20ms) (97205)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:4ms) (12ms) (170)

------------------------------------------------------------

Goal Assigns (file out/reverse_array_0007/reverse_array_merged.c, line 5) in 'reverse':
Effect at line 20
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/reverse_array_0007/reverse_array_merged.c:30: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

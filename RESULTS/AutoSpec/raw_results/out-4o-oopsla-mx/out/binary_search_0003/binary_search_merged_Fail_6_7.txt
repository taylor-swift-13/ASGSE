[kernel] Parsing out/binary_search_0003/binary_search_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 7 goals scheduled
[wp] [Timeout] typed_binarysearch_loop_invariant_2_preserved (Qed 10ms) (Z3)
[wp] Proved goals:    6 / 7
  Qed:               4
  Alt-Ergo 2.6.2:    2 (1ms-7ms)
  Timeout:           1
------------------------------------------------------------
  Function binarysearch
------------------------------------------------------------

Goal Preservation of Invariant (file out/binary_search_0003/binary_search_merged.c, line 8):
Let x_1 = (high_0 + low_0) / 2.
Let x_2 = Mint_0[shift_sint32(a, x_1)].
Assume {
  Type: is_sint32(high_0) /\ is_sint32(low_0) /\ is_sint32(n) /\
      is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_2).
  (* Heap *)
  Type: region(a.base) <= 0.
  (* Residual *)
  When: x <= x_2.
  (* Invariant *)
  Have: high_0 <= n.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= low_0) ->
      (Mint_0[shift_sint32(a, i)] < x))).
  (* Invariant *)
  Have: (-1) <= low_0.
  (* Then *)
  Have: (2 + low_0) <= high_0.
  (* Else *)
  Have: x_2 != x.
}
Prove: x_1 <= n.
Prover Z3 4.8.6 returns Valid (Qed:9ms) (20ms) (98786)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:9ms) (7ms) (93)

------------------------------------------------------------

Goal Establishment of Invariant (file out/binary_search_0003/binary_search_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/binary_search_0003/binary_search_merged.c, line 9):
Let x_1 = (high_1 + low_1) / 2.
Let x_2 = Mint_0[shift_sint32(a, x_1)].
Assume {
  Type: is_sint32(high_0) /\ is_sint32(high_1) /\ is_sint32(high_2) /\
      is_sint32(low_0) /\ is_sint32(low_1) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_2).
  (* Heap *)
  Type: region(a.base) <= 0.
  (* Goal *)
  When: (0 <= i) /\ (i <= low_0).
  (* Invariant *)
  Have: high_1 <= high_2.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= low_1) ->
      (Mint_0[shift_sint32(a, i_1)] < x))).
  (* Invariant *)
  Have: (-1) <= low_1.
  (* Then *)
  Have: (2 + low_1) <= high_1.
  (* Else *)
  Have: x_2 != x.
  If x_2 < x
  Then { Have: (high_1 = high_0) /\ (((high_0 + low_1) / 2) = low_0). }
  Else { Have: (low_1 = low_0) /\ (x_1 = high_0). }
  (* Invariant *)
  Have: high_0 <= high_2.
}
Prove: Mint_0[shift_sint32(a, i)] < x.
Prover Z3 4.8.6 returns Timeout (Qed:10ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:10ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/binary_search_0003/binary_search_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/binary_search_0003/binary_search_merged.c, line 10):
Let x_1 = high_0 + low_0.
Let x_2 = x_1 / 2.
Let x_3 = Mint_0[shift_sint32(a, x_2)].
Assume {
  Type: is_sint32(high_0) /\ is_sint32(high_1) /\ is_sint32(low_0) /\
      is_sint32(x) /\ is_sint32(x_2) /\ is_sint32(x_3).
  (* Heap *)
  Type: region(a.base) <= 0.
  (* Residual *)
  When: x_3 < x.
  (* Invariant *)
  Have: high_0 <= high_1.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= low_0) ->
      (Mint_0[shift_sint32(a, i)] < x))).
  (* Invariant *)
  Have: (-1) <= low_0.
  (* Then *)
  Have: (2 + low_0) <= high_0.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= x_2) ->
      (Mint_0[shift_sint32(a, i)] < x))).
}
Prove: (-3) <= x_1.
Prover Z3 4.8.6 returns Valid (Qed:10ms) (10ms) (79302)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:10ms) (1ms) (25)

------------------------------------------------------------

Goal Establishment of Invariant (file out/binary_search_0003/binary_search_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Loop assigns (file out/binary_search_0003/binary_search_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/binary_search_0003/binary_search_merged.c:1: Warning: 
  No 'assigns' specification for function 'binarysearch'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/binary_search_0003/binary_search_merged.c:28: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

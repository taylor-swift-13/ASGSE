[kernel] Parsing out/reverse_array_0002/reverse_array_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 17 goals scheduled
[wp] [Timeout] typed_reverse_loop_invariant_preserved (Qed 3ms) (Z3)
[wp] [Timeout] typed_reverse_loop_invariant_established (Qed 0.87ms) (Z3)
[wp] Proved goals:   15 / 17
  Qed:              12
  Alt-Ergo 2.6.2:    3 (10ms-17ms)
  Timeout:           2
------------------------------------------------------------
  Function reverse
------------------------------------------------------------

Goal Preservation of Invariant (file out/reverse_array_0002/reverse_array_merged.c, line 6):
Let x = 1 + i + j.
Let x_1 = x / 2.
Let x_2 = i + j.
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(j - 1) /\ is_sint32(x_2) /\
      is_sint32(x).
  (* Invariant *)
  Have: x_1 <= x_2.
  (* Invariant *)
  Have: (-2) <= x_2.
  (* Invariant *)
  Have: x_1 <= j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: i <= x_1.
  (* Then *)
  Have: i < x_1.
}
Prove: x_1 < j.
Prover Z3 4.8.6 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/reverse_array_0002/reverse_array_merged.c, line 6):
Assume { Type: is_sint32(n) /\ is_sint32(n - 1). }
Prove: (n / 2) < n.
Prover Z3 4.8.6 returns Timeout (Qed:0.87ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:0.87ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/reverse_array_0002/reverse_array_merged.c, line 7):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/reverse_array_0002/reverse_array_merged.c, line 7):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/reverse_array_0002/reverse_array_merged.c, line 8):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/reverse_array_0002/reverse_array_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/reverse_array_0002/reverse_array_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/reverse_array_0002/reverse_array_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/reverse_array_0002/reverse_array_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/reverse_array_0002/reverse_array_merged.c, line 10):
Let x = 1 + j.
Assume {
  Type: is_sint32(j) /\ is_sint32(x).
  (* Invariant *)
  Have: (x / 2) <= j.
}
Prove: (-2) <= j.
Prover Z3 4.8.6 returns Valid (Qed:1ms) (10ms) (32925)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:1ms) (10ms) (59)

------------------------------------------------------------

Goal Preservation of Invariant (file out/reverse_array_0002/reverse_array_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/reverse_array_0002/reverse_array_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/reverse_array_0002/reverse_array_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/reverse_array_0002/reverse_array_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Loop assigns (file out/reverse_array_0002/reverse_array_merged.c, line 13) (1/3):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/reverse_array_0002/reverse_array_merged.c, line 13) (2/3):
Effect at line 19
Let x = i + j.
Let x_1 = x / 2.
Let x_2 = i - 1.
Let a_1 = shift_sint32(a, x_2).
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(x_2) /\ is_sint32(j - 1) /\
      is_sint32(x) /\ is_sint32(i + j - 1).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: !invalid(Malloc_0, a_1, 1).
  (* Invariant *)
  Have: x_1 < x.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: x_1 <= j.
  (* Invariant *)
  Have: 0 < i.
  (* Invariant *)
  Have: i <= (1 + x_1).
  (* Then *)
  Have: i <= x_1.
  (* Invariant *)
  Have: x_1 < j.
}
Prove: included(a_1, 1, shift_sint32(a, 0), x).
Prover Z3 4.8.6 returns Valid (Qed:4ms) (20ms) (96486)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:4ms) (12ms) (146)

------------------------------------------------------------

Goal Loop assigns (file out/reverse_array_0002/reverse_array_merged.c, line 13) (3/3):
Effect at line 20
Let x = 2 + i + j.
Let x_1 = x / 2.
Let x_2 = 1 + j.
Let x_3 = 1 + i + j.
Let a_1 = shift_sint32(a, x_2).
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(1 + i) /\ is_sint32(x_2) /\
      is_sint32(x_3) /\ is_sint32(x).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: !invalid(Malloc_0, a_1, 1).
  (* Invariant *)
  Have: x_1 <= x_3.
  (* Invariant *)
  Have: (-3) <= (i + j).
  (* Invariant *)
  Have: x_1 <= x_2.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: i <= x_1.
  (* Then *)
  Have: i < x_1.
  (* Invariant *)
  Have: x_1 <= j.
  (* Invariant *)
  Have: (-1) <= i.
}
Prove: included(a_1, 1, shift_sint32(a, 0), x).
Prover Z3 4.8.6 returns Valid (Qed:4ms) (20ms) (96588)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:4ms) (17ms) (151)

------------------------------------------------------------
[wp:pedantic-assigns] out/reverse_array_0002/reverse_array_merged.c:1: Warning: 
  No 'assigns' specification for function 'reverse'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/reverse_array_0002/reverse_array_merged.c:27: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

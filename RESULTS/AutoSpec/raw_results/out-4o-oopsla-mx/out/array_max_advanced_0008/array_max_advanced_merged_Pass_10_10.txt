[kernel] Parsing out/array_max_advanced_0008/array_max_advanced_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 10 goals scheduled
[wp] Proved goals:   10 / 10
  Qed:               8
  Alt-Ergo 2.6.2:    2 (8ms-13ms)
------------------------------------------------------------
  Function array_max_advanced
------------------------------------------------------------

Goal Preservation of Invariant (file out/array_max_advanced_0008/array_max_advanced_merged.c, line 13):
Let x = Mint_0[shift_sint32(arr_0, i_1)].
Let a = shift_sint32(arr_0, 0).
Assume {
  Type: is_sint32(i_1) /\ is_sint32(max_1) /\ is_sint32(n) /\
      is_sint32(1 + i_1) /\ is_sint32(Mint_0[a]) /\ is_sint32(x).
  (* Heap *)
  Type: (region(arr_0.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: (0 <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a, n).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      (Mint_0[shift_sint32(arr_0, i_2)] <= max_1))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: i_1 < n.
  If max_1 < x
  Then { Have: x = max_0. }
  Else { Have: max_1 = max_0. }
}
Prove: Mint_0[shift_sint32(arr_0, i)] <= max_0.
Prover Z3 4.8.6 returns Valid (Qed:8ms) (20ms) (128762)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:8ms) (13ms) (118)

------------------------------------------------------------

Goal Establishment of Invariant (file out/array_max_advanced_0008/array_max_advanced_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/array_max_advanced_0008/array_max_advanced_merged.c, line 14):
Let x = Mint_0[shift_sint32(arr_0, i_1)].
Let a = shift_sint32(arr_0, 0).
Assume {
  Type: is_sint32(i_1) /\ is_sint32(max_1) /\ is_sint32(n) /\
      is_sint32(1 + i_1) /\ is_sint32(Mint_0[a]) /\ is_sint32(x).
  (* Heap *)
  Type: (region(arr_0.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: (0 <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, a, n).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) ->
      (Mint_0[shift_sint32(arr_0, i_2)] <= max_1))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: i_1 < n.
  If max_1 < x
  Then { Have: x = max_0. }
  Else { Have: max_1 = max_0. }
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= i_1) -> ((0 <= i_2) ->
      (Mint_0[shift_sint32(arr_0, i_2)] <= max_0))).
}
Prove: Mint_0[shift_sint32(arr_0, i)] <= max_0.
Prover Z3 4.8.6 returns Valid (Qed:8ms) (20ms) (84657)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:8ms) (8ms) (64)

------------------------------------------------------------

Goal Establishment of Invariant (file out/array_max_advanced_0008/array_max_advanced_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/array_max_advanced_0008/array_max_advanced_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/array_max_advanced_0008/array_max_advanced_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/array_max_advanced_0008/array_max_advanced_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assigns nothing in 'array_max_advanced':
Effect at line 19
Prove: true.
Prover Qed returns Valid (0.86ms)

------------------------------------------------------------
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/array_max_advanced_0008/array_max_advanced_merged.c, line 6) in 'array_max_advanced'' in 'main' at initialization of 'max' (file out/array_max_advanced_0008/array_max_advanced_merged.c, line 30)
:
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/array_max_advanced_0008/array_max_advanced_merged.c, line 7) in 'array_max_advanced'' in 'main' at initialization of 'max' (file out/array_max_advanced_0008/array_max_advanced_merged.c, line 30)
:
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/array_max_advanced_0008/array_max_advanced_merged.c:28: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/21_0001/21_merged.c (with preprocessing)
[kernel:typing:no-proto] out/21_0001/21_merged.c:38: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/21_0001/21_merged.c:14: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 22 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_3_preserved (Qed 13ms) (Z3)
[wp] Proved goals:   21 / 22
  Qed:              15
  Alt-Ergo 2.6.2:    6 (8ms-17ms-48ms)
  Timeout:           1
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 23):
Let x = 2000 * i.
Let x_1 = k % 4000.
Let x_2 = 4000 * i.
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(k) /\ is_sint32(n) /\
      is_sint32(tmp_0) /\ is_sint32(1 + i) /\ is_sint32(4000 + k).
  (* Residual *)
  When: (tmp_0 % 2) = 0.
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: n <= 9.
  (* Invariant *)
  Have: (x_2 = k) \/ ((k + (2000 * j)) = x_2).
  (* Invariant *)
  Have: k <= x_2.
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_1 = 2000).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: x <= k.
  (* Invariant *)
  Have: x <= (1999 + k).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: ((k - x) % 2000) = 0.
  (* Then *)
  Have: i < n.
}
Prove: (i = (-1)) \/ (x <= (3999 + k)).
Prover Z3 4.8.6 returns Valid (Qed:14ms) (10ms) (35173)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:14ms) (9ms) (27)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 24):
Let x = 2000 * i.
Let x_1 = k % 4000.
Let x_2 = 4000 * i.
Let x_3 = k + (2000 * j).
Let x_4 = 2000 + x_2.
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(k) /\ is_sint32(n) /\
      is_sint32(tmp_0) /\ is_sint32(1 + i) /\ is_sint32(2000 + k).
  (* Residual *)
  When: (tmp_0 % 2) != 0.
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: n <= 9.
  (* Invariant *)
  Have: (x_2 = k) \/ (x_3 = x_2).
  (* Invariant *)
  Have: k <= x_2.
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_1 = 2000).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: x <= k.
  (* Invariant *)
  Have: x <= (1999 + k).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: ((k - x) % 2000) = 0.
  (* Then *)
  Have: i < n.
}
Prove: (x_4 = k) \/ (x_3 = x_4).
Prover Z3 4.8.6 returns Timeout (Qed:13ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:13ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.96ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 25):
Let x = 4000 * i.
Let x_1 = 2000 + x.
Let x_2 = k + (2000 * j).
Let x_3 = 2000 * i.
Let x_4 = k % 4000.
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(k) /\ is_sint32(n) /\
      is_sint32(tmp_0) /\ is_sint32(1 + i) /\ is_sint32(2000 + k).
  (* Residual *)
  When: (tmp_0 % 2) != 0.
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: n <= 9.
  (* Invariant *)
  Have: (x = k) \/ (x_2 = x).
  (* Invariant *)
  Have: k <= x.
  (* Invariant *)
  Have: (x_4 = 0) \/ (x_4 = 2000).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: x_3 <= k.
  (* Invariant *)
  Have: x_3 <= (1999 + k).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: ((k - x_3) % 2000) = 0.
  (* Then *)
  Have: i < n.
  (* Invariant *)
  Have: (x_1 = k) \/ (x_2 = x_1).
}
Prove: k <= x_1.
Prover Z3 4.8.6 returns Valid (Qed:14ms) (10ms) (35307)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:14ms) (8ms) (31)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.99ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 26):
Let x = 4000 * i.
Let x_1 = 4000 + x.
Let x_2 = 2000 * j.
Let x_3 = 2000 * i.
Let x_4 = k_3 % 4000.
Let x_5 = k % 4000.
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(k) /\ is_sint32(k_1) /\
      is_sint32(k_2) /\ is_sint32(k_3) /\ is_sint32(n) /\ is_sint32(tmp_0) /\
      is_sint32(v) /\ is_sint32(1 + i).
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: n <= 9.
  (* Invariant *)
  Have: (x = k_3) \/ ((k_3 + x_2) = x).
  (* Invariant *)
  Have: k_3 <= x.
  (* Invariant *)
  Have: (x_4 = 0) \/ (x_4 = 2000).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: x_3 <= k_3.
  (* Invariant *)
  Have: x_3 <= (1999 + k_3).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: ((k_3 - x_3) % 2000) = 0.
  (* Then *)
  Have: i < n.
  If (tmp_0 % 2) = 0
  Then { Have: v = 0. }
  Else { Have: v = 1. }
  If v = 0
  Then { Have: k_3 = k_1. Have: (4000 + k_1) = k. }
  Else { Have: k_3 = k_2. Have: (2000 + k_2) = k. }
  (* Invariant *)
  Have: (i = (-1)) \/ (x_3 < k).
  (* Invariant *)
  Have: (x_1 = k) \/ ((k + x_2) = x_1).
  (* Invariant *)
  Have: k <= x_1.
}
Prove: (x_5 = 0) \/ (x_5 = 2000).
Prover Z3 4.8.6 returns Valid (Qed:23ms) (50ms) (475765)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:23ms) (48ms) (1258)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 28):
Let x = 4000 + k.
Let x_1 = x % 4000.
Let x_2 = 2000 * i.
Let x_3 = k % 4000.
Let x_4 = 4000 * i.
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(k) /\ is_sint32(n) /\
      is_sint32(tmp_0) /\ is_sint32(1 + i) /\ is_sint32(x).
  (* Residual *)
  When: (tmp_0 % 2) = 0.
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: n <= 9.
  (* Invariant *)
  Have: (x_4 = k) \/ ((k + (2000 * j)) = x_4).
  (* Invariant *)
  Have: k <= x_4.
  (* Invariant *)
  Have: (x_3 = 0) \/ (x_3 = 2000).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: x_2 <= k.
  (* Invariant *)
  Have: x_2 <= (1999 + k).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: ((k - x_2) % 2000) = 0.
  (* Then *)
  Have: i < n.
  (* Invariant *)
  Have: (i = (-1)) \/ (x_2 <= (3999 + k)).
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_1 = 2000).
}
Prove: x_2 <= (2000 + k).
Prover Z3 4.8.6 returns Valid (Qed:16ms) (10ms) (35619)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:16ms) (9ms) (31)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.98ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 29):
Let x = 2000 * i.
Let x_1 = 4000 + k.
Let x_2 = x_1 % 4000.
Let x_3 = 3999 + k.
Let x_4 = k % 4000.
Let x_5 = 4000 * i.
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(k) /\ is_sint32(n) /\
      is_sint32(tmp_0) /\ is_sint32(1 + i) /\ is_sint32(x_1).
  (* Residual *)
  When: (tmp_0 % 2) = 0.
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: n <= 9.
  (* Invariant *)
  Have: (x_5 = k) \/ ((k + (2000 * j)) = x_5).
  (* Invariant *)
  Have: k <= x_5.
  (* Invariant *)
  Have: (x_4 = 0) \/ (x_4 = 2000).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: x <= k.
  (* Invariant *)
  Have: x <= (1999 + k).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: ((k - x) % 2000) = 0.
  (* Then *)
  Have: i < n.
  (* Invariant *)
  Have: (i = (-1)) \/ (x <= x_3).
  (* Invariant *)
  Have: (x_2 = 0) \/ (x_2 = 2000).
  (* Invariant *)
  Have: x <= (2000 + k).
}
Prove: x <= x_3.
Prover Z3 4.8.6 returns Valid (Qed:17ms) (10ms) (35627)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:17ms) (8ms) (29)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0001/21_merged.c, line 31):
Let x = 2000 * i.
Let x_1 = 4000 + k.
Let x_2 = x_1 % 4000.
Let x_3 = (-2000) * i.
Let x_4 = k % 4000.
Let x_5 = 4000 * i.
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(k) /\ is_sint32(n) /\
      is_sint32(tmp_0) /\ is_sint32(1 + i) /\ is_sint32(x_1).
  (* Residual *)
  When: (tmp_0 % 2) = 0.
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: n <= 9.
  (* Invariant *)
  Have: (x_5 = k) \/ ((k + (2000 * j)) = x_5).
  (* Invariant *)
  Have: k <= x_5.
  (* Invariant *)
  Have: (x_4 = 0) \/ (x_4 = 2000).
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: x <= k.
  (* Invariant *)
  Have: x <= (1999 + k).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: ((k - x) % 2000) = 0.
  (* Then *)
  Have: i < n.
  (* Invariant *)
  Have: (x_2 = 0) \/ (x_2 = 2000).
  (* Invariant *)
  Have: x <= (2000 + k).
  (* Invariant *)
  Have: x <= (3999 + k).
  (* Invariant *)
  Have: (-1) <= i.
}
Prove: ((2000 + k - x) % 2000) = 0.
Prover Z3 4.8.6 returns Valid (Qed:17ms) (40ms) (210348)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:17ms) (22ms) (269)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0001/21_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/21_0001/21_merged.c, line 32) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/21_0001/21_merged.c, line 32) (2/2):
Call Result at line 38
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/21_0001/21_merged.c:3: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/21_0001/21_merged.c:14: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

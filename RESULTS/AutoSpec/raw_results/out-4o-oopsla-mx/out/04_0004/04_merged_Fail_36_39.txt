[kernel] Parsing out/04_0004/04_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 39 goals scheduled
[wp] [Timeout] typed_main_loop_invariant_2_established (Z3)
[wp] [Timeout] typed_main_loop_invariant_4_preserved (Qed 3ms) (Z3)
[wp] [Timeout] typed_main_loop_invariant_13_established (Qed 0.60ms) (Z3)
[wp] Proved goals:   36 / 39
  Qed:              28
  Alt-Ergo 2.6.2:    6 (4ms-9ms-13ms)
  Z3 4.8.6:          2 (10ms)
  Timeout:           3
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0004/04_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0004/04_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0004/04_merged.c, line 18):
Let x = y * (y - 1).
Let x_1 = x / 2.
Let x_2 = y + x_1.
Let x_3 = y * y.
Let x_4 = y_1 * y_1.
Let x_5 = 1 + y.
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_5) /\
      is_sint32(x_1 - 50) /\ is_sint32(y + x_1 - 50).
  (* Invariant *)
  Have: ((y_1 * (y_1 - 1)) / 2) = 0.
  (* Invariant *)
  Have: (-49) <= x_4.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: y_1 <= x_4.
  (* Invariant *)
  Have: x <= 101.
  (* Invariant *)
  Have: x_1 <= (49 + x_3).
  (* Invariant *)
  Have: x <= 99.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_2 <= x_3.
  (* Invariant *)
  Have: (-1) <= x.
}
Prove: ((y * x_5) / 2) = x_2.
Prover Z3 4.8.6 returns Valid (Qed:3ms) (10ms) (40960)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0004/04_merged.c, line 18):
Assume { Type: is_sint32(y). }
Prove: ((y * (y - 1)) / 2) = 0.
Prover Z3 4.8.6 returns Timeout (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0004/04_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0004/04_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0004/04_merged.c, line 20):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = x_1 / 2.
Let x_3 = y * y.
Let x_4 = y + ((y * (y - 1)) / 2).
Let x_5 = y_1 * y_1.
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x) /\
      is_sint32(x_2 - 50) /\ is_sint32(x_2 - 50 - y).
  (* Invariant *)
  Have: ((y_1 * (y_1 - 1)) / 2) = 0.
  (* Invariant *)
  Have: (-49) <= x_5.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: y_1 <= x_5.
  (* Invariant *)
  Have: x_2 = x_4.
  (* Invariant *)
  Have: x_2 <= x_4.
  (* Invariant *)
  Have: x_2 <= (50 + y).
  (* Invariant *)
  Have: x_2 <= (49 + y + x_3).
  (* Invariant *)
  Have: x_2 <= (49 + y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_2 <= x_3.
  (* Invariant *)
  Have: y <= x_2.
}
Prove: x_1 <= 101.
Prover Z3 4.8.6 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0004/04_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0004/04_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0004/04_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0004/04_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0004/04_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0004/04_merged.c, line 23):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = x_1 / 2.
Let x_3 = y * y.
Let x_4 = y + ((y * (y - 1)) / 2).
Let x_5 = y_1 * y_1.
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x) /\
      is_sint32(x_2 - 50) /\ is_sint32(x_2 - 50 - y).
  (* Invariant *)
  Have: ((y_1 * (y_1 - 1)) / 2) = 0.
  (* Invariant *)
  Have: (-49) <= x_5.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: y_1 <= x_5.
  (* Invariant *)
  Have: x_2 = x_4.
  (* Invariant *)
  Have: x_2 <= x_4.
  (* Invariant *)
  Have: x_2 <= (50 + y).
  (* Invariant *)
  Have: x_2 <= (49 + y + x_3).
  (* Invariant *)
  Have: x_2 <= (49 + y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_2 <= x_3.
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: x_1 <= 101.
}
Prove: x_2 <= (49 + (x * x)).
Prover Z3 4.8.6 returns Valid (Qed:3ms) (10ms) (35443)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (6ms) (112)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0004/04_merged.c, line 23):
Assume { Type: is_sint32(y). (* Invariant *) Have: ((y * (y - 1)) / 2) = 0. }
Prove: (-49) <= (y * y).
Prover Z3 4.8.6 returns Valid (20ms) (36722)
Prover Alt-Ergo 2.6.2 returns Valid (4ms) (19)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0004/04_merged.c, line 24):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = x_1 / 2.
Let x_3 = y * y.
Let x_4 = y + ((y * (y - 1)) / 2).
Let x_5 = y_1 * y_1.
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x) /\
      is_sint32(x_2 - 50) /\ is_sint32(x_2 - 50 - y).
  (* Invariant *)
  Have: ((y_1 * (y_1 - 1)) / 2) = 0.
  (* Invariant *)
  Have: (-49) <= x_5.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: y_1 <= x_5.
  (* Invariant *)
  Have: x_2 = x_4.
  (* Invariant *)
  Have: x_2 <= x_4.
  (* Invariant *)
  Have: x_2 <= (50 + y).
  (* Invariant *)
  Have: x_2 <= (49 + y + x_3).
  (* Invariant *)
  Have: x_2 <= (49 + y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_2 <= x_3.
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: x_1 <= 101.
  (* Invariant *)
  Have: x_2 <= (49 + (x * x)).
}
Prove: x_1 <= 99.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (13ms) (209)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0004/04_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0004/04_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0004/04_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0004/04_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0004/04_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0004/04_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0004/04_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0004/04_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0004/04_merged.c, line 28):
Assume {
  Type: is_sint32(y).
  (* Invariant *)
  Have: ((y * (y - 1)) / 2) = 0.
  (* Invariant *)
  Have: (-49) <= (y * y).
}
Prove: 0 <= y.
Prover Z3 4.8.6 returns Valid (Qed:0.78ms) (10ms) (33909)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:0.78ms) (11ms) (102)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0004/04_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0004/04_merged.c, line 29):
Assume {
  Type: is_sint32(y).
  (* Invariant *)
  Have: ((y * (y - 1)) / 2) = 0.
  (* Invariant *)
  Have: (-49) <= (y * y).
  (* Invariant *)
  Have: 0 <= y.
}
Prove: 0 < y.
Prover Z3 4.8.6 returns Timeout (Qed:0.60ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:0.60ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0004/04_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0004/04_merged.c, line 30):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0004/04_merged.c, line 31):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = x_1 / 2.
Let x_3 = x * x.
Let x_4 = y * y.
Let x_5 = y + ((y * (y - 1)) / 2).
Let x_6 = y_1 * y_1.
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x) /\
      is_sint32(x_2 - 50) /\ is_sint32(x_2 - 50 - y).
  (* Invariant *)
  Have: ((y_1 * (y_1 - 1)) / 2) = 0.
  (* Invariant *)
  Have: (-49) <= x_6.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: y_1 <= x_6.
  (* Invariant *)
  Have: x_2 = x_5.
  (* Invariant *)
  Have: x_2 <= x_5.
  (* Invariant *)
  Have: x_2 <= (50 + y).
  (* Invariant *)
  Have: x_2 <= (49 + y + x_4).
  (* Invariant *)
  Have: x_2 <= (49 + y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_2 <= x_4.
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: x_1 <= 101.
  (* Invariant *)
  Have: x_2 <= (49 + x_3).
  (* Invariant *)
  Have: x_1 <= 99.
}
Prove: (y + x_2) < x_3.
Prover Z3 4.8.6 returns Valid (Qed:4ms) (35764)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:4ms) (10ms) (116)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0004/04_merged.c, line 31):
Let x = y * y.
Assume {
  Type: is_sint32(y).
  (* Invariant *)
  Have: ((y * (y - 1)) / 2) = 0.
  (* Invariant *)
  Have: (-49) <= x.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 < y.
}
Prove: y <= x.
Prover Z3 4.8.6 returns Valid (Qed:1ms) (10ms) (44159)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0004/04_merged.c, line 32):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = x_1 / 2.
Let x_3 = x * x.
Let x_4 = y * y.
Let x_5 = y + ((y * (y - 1)) / 2).
Let x_6 = y_1 * y_1.
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x) /\
      is_sint32(x_2 - 50) /\ is_sint32(x_2 - 50 - y).
  (* Invariant *)
  Have: ((y_1 * (y_1 - 1)) / 2) = 0.
  (* Invariant *)
  Have: (-49) <= x_6.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: y_1 <= x_6.
  (* Invariant *)
  Have: x_2 = x_5.
  (* Invariant *)
  Have: x_2 <= x_5.
  (* Invariant *)
  Have: x_2 <= (50 + y).
  (* Invariant *)
  Have: x_2 <= (49 + y + x_4).
  (* Invariant *)
  Have: x_2 <= (49 + y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_2 <= x_4.
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: x_1 <= 101.
  (* Invariant *)
  Have: x_2 <= (49 + x_3).
  (* Invariant *)
  Have: x_1 <= 99.
  (* Invariant *)
  Have: (y + x_2) < x_3.
}
Prove: (-1) <= x_1.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:5ms) (10ms) (117)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0004/04_merged.c, line 32):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0004/04_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0004/04_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0004/04_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0004/04_merged.c, line 34):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0004/04_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0004/04_merged.c, line 35):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/04_0004/04_merged.c, line 36):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/04_0004/04_merged.c:12: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

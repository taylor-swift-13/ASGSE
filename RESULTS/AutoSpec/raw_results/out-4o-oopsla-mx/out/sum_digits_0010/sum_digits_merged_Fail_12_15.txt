[kernel] Parsing out/sum_digits_0010/sum_digits_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 15 goals scheduled
[wp] [Timeout] typed_func_loop_invariant_established (Z3)
[wp] [Timeout] typed_func_loop_invariant_preserved (Qed 2ms) (Z3)
[wp] [Timeout] typed_func_loop_invariant_6_established (Qed 0.53ms) (Z3)
[wp] Proved goals:   12 / 15
  Qed:              10
  Alt-Ergo 2.6.2:    2 (8ms-9ms)
  Timeout:           3
------------------------------------------------------------
  Function func
------------------------------------------------------------

Goal Preservation of Invariant (file out/sum_digits_0010/sum_digits_merged.c, line 6):
Let x = num_0 % 10.
Let x_1 = num_0 / 10.
Assume {
  Type: is_sint32(num_0) /\ is_sint32(num_1) /\ is_sint32(sum_0) /\
      is_sint32(x_1) /\ is_sint32(x).
  (* Invariant *)
  Have: (num_1 % 10) = 0.
  (* Invariant *)
  Have: 0 <= num_1.
  (* Invariant *)
  Have: x <= 9.
  (* Invariant *)
  Have: 0 <= sum_0.
  (* Invariant *)
  Have: 0 <= num_0.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: 0 < num_0.
}
Prove: (x_1 % 10) = x.
Prover Z3 4.8.6 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/sum_digits_0010/sum_digits_merged.c, line 6):
Assume { Type: is_sint32(num_0). }
Prove: (num_0 % 10) = 0.
Prover Z3 4.8.6 returns Timeout (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/sum_digits_0010/sum_digits_merged.c, line 7):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/sum_digits_0010/sum_digits_merged.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/sum_digits_0010/sum_digits_merged.c, line 8):
Let x = num_0 / 10.
Let x_1 = x % 10.
Let x_2 = num_0 % 10.
Let x_3 = sum_0 + x_1.
Assume {
  Type: is_sint32(num_0) /\ is_sint32(num_1) /\ is_sint32(sum_0) /\
      is_sint32(x) /\ is_sint32(x_2) /\ is_sint32(x_1) /\ is_sint32(x_3).
  (* Goal *)
  When: 0 <= i.
  (* Invariant *)
  Have: (num_1 % 10) = 0.
  (* Invariant *)
  Have: 0 <= num_1.
  (* Invariant *)
  Have: x_2 <= 9.
  (* Invariant *)
  Have: 0 <= sum_0.
  (* Invariant *)
  Have: 0 <= num_0.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Then *)
  Have: 0 < num_0.
  Have: x_1 = x_2.
  (* Invariant *)
  Have: x_1 <= 9.
}
Prove: 0 <= x_3.
Prover Z3 4.8.6 returns Valid (Qed:2ms) (10ms) (34355)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (9ms) (26)

------------------------------------------------------------

Goal Establishment of Invariant (file out/sum_digits_0010/sum_digits_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/sum_digits_0010/sum_digits_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (0.98ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/sum_digits_0010/sum_digits_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/sum_digits_0010/sum_digits_merged.c, line 10):
Let x = num_0 / 10.
Let x_1 = x % 10.
Let x_2 = sum_0 + x_1.
Let x_3 = num_0 % 10.
Assume {
  Type: is_sint32(num_0) /\ is_sint32(num_1) /\ is_sint32(sum_0) /\
      is_sint32(x) /\ is_sint32(x_3) /\ is_sint32(x_1) /\ is_sint32(x_2).
  (* Invariant *)
  Have: (num_1 % 10) = 0.
  (* Invariant *)
  Have: 0 <= num_1.
  (* Invariant *)
  Have: x_3 <= 9.
  (* Invariant *)
  Have: 0 <= sum_0.
  (* Invariant *)
  Have: 0 <= num_0.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Then *)
  Have: 0 < num_0.
  Have: x_1 = x_3.
  (* Invariant *)
  Have: x_1 <= 9.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> (0 <= x_2)).
}
Prove: 0 <= x_2.
Prover Z3 4.8.6 returns Valid (Qed:3ms) (10ms) (34539)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (8ms) (24)

------------------------------------------------------------

Goal Establishment of Invariant (file out/sum_digits_0010/sum_digits_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/sum_digits_0010/sum_digits_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/sum_digits_0010/sum_digits_merged.c, line 11):
Assume { Type: is_sint32(num_0). (* Invariant *) Have: (num_0 % 10) = 0. }
Prove: 0 <= num_0.
Prover Z3 4.8.6 returns Timeout (Qed:0.53ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:0.53ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/sum_digits_0010/sum_digits_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/sum_digits_0010/sum_digits_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/sum_digits_0010/sum_digits_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/sum_digits_0010/sum_digits_merged.c:1: Warning: 
  No 'assigns' specification for function 'func'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/sum_digits_0010/sum_digits_merged.c:26: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

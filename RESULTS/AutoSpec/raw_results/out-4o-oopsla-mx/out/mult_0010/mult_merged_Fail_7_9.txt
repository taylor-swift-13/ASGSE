[kernel] Parsing out/mult_0010/mult_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 9 goals scheduled
[wp] [Timeout] typed_mul_loop_invariant_3_established (Z3)
[wp] [Timeout] typed_mul_loop_invariant_3_preserved (Qed 3ms) (Z3)
[wp] Proved goals:    7 / 9
  Qed:               5
  Alt-Ergo 2.6.2:    2 (10ms)
  Timeout:           2
------------------------------------------------------------
  Function mul
------------------------------------------------------------

Goal Preservation of Invariant (file out/mult_0010/mult_merged.c, line 7):
Assume {
  Type: is_sint32(a) /\ is_sint32(x) /\ is_sint32(x - 1).
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: x <= a.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: (-1) <= x.
}
Prove: x <= (1 + a).
Prover Z3 4.8.6 returns Valid (Qed:2ms) (10ms) (32685)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (10ms) (22)

------------------------------------------------------------

Goal Establishment of Invariant (file out/mult_0010/mult_merged.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/mult_0010/mult_merged.c, line 8):
Let x_1 = -x.
Let x_2 = b * (a - x).
Let x_3 = b + x_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(x) /\ is_sint32(x - 1) /\
      is_sint32(x_2) /\ is_sint32(x_3).
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: x <= a.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: x <= (1 + a).
}
Prove: (b * (1 + a - x)) = x_3.
Prover Z3 4.8.6 returns Valid (Qed:3ms) (9845)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (10ms) (118)

------------------------------------------------------------

Goal Establishment of Invariant (file out/mult_0010/mult_merged.c, line 8):
Prove: true.
Prover Qed returns Valid (0.78ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/mult_0010/mult_merged.c, line 9):
Let x_1 = -x.
Let x_2 = b * (1 + a - x).
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(x) /\ is_sint32(x - 1) /\
      is_sint32(x_2) /\ is_sint32(x_2 - b).
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: x <= a.
  (* Invariant *)
  Have: x_2 = (b + (b * (a - x))).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: x <= (1 + a).
}
Prove: 0 < x.
Prover Z3 4.8.6 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/mult_0010/mult_merged.c, line 9):
Assume { Type: is_sint32(x). }
Prove: 0 <= x.
Prover Z3 4.8.6 returns Timeout (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/mult_0010/mult_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/mult_0010/mult_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Loop assigns (file out/mult_0010/mult_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/mult_0010/mult_merged.c:3: Warning: 
  No 'assigns' specification for function 'mul'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/mult_0010/mult_merged.c:21: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

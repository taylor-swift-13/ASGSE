[kernel] Parsing out/42_0001/42_merged.c (with preprocessing)
[kernel:typing:no-proto] out/42_0001/42_merged.c:37: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/42_0001/42_merged.c:4: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 38 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_2_preserved (Qed 57ms) (Z3)
[wp] Proved goals:   37 / 38
  Qed:              34
  Alt-Ergo 2.6.2:    3 (1ms-7ms-11ms)
  Timeout:           1
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/42_0001/42_merged.c, line 15):
Let x_5 = 2 * x_4.
Let x_6 = 1 + x_5.
Let x_7 = a_1 % 2.
Let x_8 = a_2 % 2.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\
      is_sint32(flag_0) /\ is_sint32(tmp_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_3) /\ is_sint32(x_4) /\
      is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(y_2) /\ is_sint32(y_3).
  If flag_0 != 0
  Then { Have: a_2 = 0. }
  Else { Have: a_2 = 1. }
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x_8 = 0)).
  (* Invariant *)
  Have: (x_8 = 0) \/ (x_8 = 1).
  (* Invariant *)
  Have: (((flag_0 != 0) -> (a_2 = 2))) \/ (((flag_0 = 0) -> (a_2 = 3))).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x_8 = 1)).
  (* Invariant *)
  Have: 0 < x_4.
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x_7 = 0)).
  (* Invariant *)
  Have: (x_7 = 0) \/ (x_7 = 1).
  (* Invariant *)
  Have: (((flag_0 != 0) -> (x_5 = a_1))) \/ (((flag_0 = 0) -> (x_6 = a_1))).
  (* Invariant *)
  Have: ((flag_0 = 0) -> ((x_6 % 2) = x_7)).
  (* Then *)
  Have: tmp_0 != 0.
  If flag_0 != 0
  Then {
    Have: (x_4 = x_3) /\ (y_2 = x_3) /\ (y_2 = x_4).
    Have: (2 * y_2) = a.
    Have: (1 + y_2) = x_2.
  }
  Else {
    Have: (x_4 = x_2) /\ (y_3 = x_2) /\ ((1 + x_2) = y_2).
    Have: (1 + (2 * x_2)) = a.
  }
  If (a % 2) = 1
  Then { Have: (x_2 = x) /\ (y_2 = y_1). Have: (1 + y_1) = y. }
  Else { Have: (x_2 = x_1) /\ (y_2 = y). Have: (1 + x_1) = x. }
}
Prove: (0 < x) /\ (0 < y).
Prover Z3 4.8.6 returns Valid (Qed:63ms) (10ms) (45299)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:63ms) (8ms) (115)

------------------------------------------------------------

Goal Establishment of Invariant (file out/42_0001/42_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/42_0001/42_merged.c, line 16):
Let x_5 = 2 * x_4.
Let x_6 = 1 + x_5.
Let x_7 = a_1 % 2.
Let x_8 = a_2 % 2.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\
      is_sint32(flag_0) /\ is_sint32(tmp_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_3) /\ is_sint32(x_4) /\
      is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(y_2) /\ is_sint32(y_3).
  If flag_0 != 0
  Then { Have: a_2 = 0. }
  Else { Have: a_2 = 1. }
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x_8 = 0)).
  (* Invariant *)
  Have: (x_8 = 0) \/ (x_8 = 1).
  (* Invariant *)
  Have: (((flag_0 != 0) -> (a_2 = 2))) \/ (((flag_0 = 0) -> (a_2 = 3))).
  (* Invariant *)
  Have: ((flag_0 = 0) -> (x_8 = 1)).
  (* Invariant *)
  Have: 0 < x_4.
  (* Invariant *)
  Have: ((flag_0 != 0) -> (x_7 = 0)).
  (* Invariant *)
  Have: (x_7 = 0) \/ (x_7 = 1).
  (* Invariant *)
  Have: (((flag_0 != 0) -> (x_5 = a_1))) \/ (((flag_0 = 0) -> (x_6 = a_1))).
  (* Invariant *)
  Have: ((flag_0 = 0) -> ((x_6 % 2) = x_7)).
  (* Then *)
  Have: tmp_0 != 0.
  If flag_0 != 0
  Then {
    Have: (x_4 = x_3) /\ (y_2 = x_3) /\ (y_2 = x_4).
    Have: (2 * y_2) = a.
    Have: (1 + y_2) = x_2.
  }
  Else {
    Have: (x_4 = x_2) /\ (y_3 = x_2) /\ ((1 + x_2) = y_2).
    Have: (1 + (2 * x_2)) = a.
  }
  If (a % 2) = 1
  Then { Have: (x_2 = x) /\ (y_2 = y_1). Have: (1 + y_1) = y. }
  Else { Have: (x_2 = x_1) /\ (y_2 = y). Have: (1 + x_1) = x. }
  (* Invariant *)
  Have: (0 < x) /\ (0 < y).
}
Prove: y = x.
Prover Z3 4.8.6 returns Timeout (Qed:57ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:57ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/42_0001/42_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/42_0001/42_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/42_0001/42_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/42_0001/42_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/42_0001/42_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.79ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/42_0001/42_merged.c, line 19):
Let x_1 = (2 * x) - 1.
Let x_2 = x_1 % 2.
Let x_3 = a % 2.
Assume {
  Type: is_sint32(a) /\ is_sint32(tmp_0) /\ is_sint32(x) /\
      is_sint32(x - 1) /\ is_sint32(x_1).
  (* Invariant *)
  Have: 2 <= x.
  (* Invariant *)
  Have: (x_3 = 0) \/ (x_3 = 1).
  (* Invariant *)
  Have: x_2 = x_3.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_2 != 1.
  (* Invariant *)
  Have: 0 < x.
}
Prove: x_2 = 0.
Prover Z3 4.8.6 returns Valid (Qed:30ms) (20ms) (34536)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:30ms) (1ms) (36)

------------------------------------------------------------

Goal Establishment of Invariant (file out/42_0001/42_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/42_0001/42_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/42_0001/42_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.79ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/42_0001/42_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/42_0001/42_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/42_0001/42_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/42_0001/42_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/42_0001/42_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/42_0001/42_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/42_0001/42_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/42_0001/42_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/42_0001/42_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/42_0001/42_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.99ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/42_0001/42_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/42_0001/42_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/42_0001/42_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/42_0001/42_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/42_0001/42_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/42_0001/42_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.81ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/42_0001/42_merged.c, line 29):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/42_0001/42_merged.c, line 29):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/42_0001/42_merged.c, line 30):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/42_0001/42_merged.c, line 30):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/42_0001/42_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/42_0001/42_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/42_0001/42_merged.c, line 32):
Let x_1 = 2 * x.
Let x_2 = x_1 - 1.
Assume {
  Type: is_sint32(a) /\ is_sint32(tmp_0) /\ is_sint32(x) /\
      is_sint32(x - 1) /\ is_sint32(x_2).
  (* Invariant *)
  Have: 2 <= x.
  (* Invariant *)
  Have: (a % 2) = 0.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: (x_2 % 2) = 0.
}
Prove: ((1 + x_1) % 2) = 0.
Prover Z3 4.8.6 returns Valid (Qed:7ms) (20ms) (99258)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:7ms) (11ms) (205)

------------------------------------------------------------

Goal Establishment of Invariant (file out/42_0001/42_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Loop assigns (file out/42_0001/42_merged.c, line 33) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/42_0001/42_merged.c, line 33) (2/2):
Call Result at line 37
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/42_0001/42_merged.c:1: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/42_0001/42_merged.c:4: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/10_0004/10_merged.c (with preprocessing)
[kernel:typing:no-proto] out/10_0004/10_merged.c:33: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/10_0004/10_merged.c:7: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 26 goals scheduled
[wp] [Timeout] typed_main_loop_invariant_3_preserved (Qed 16ms) (Z3)
[wp] [Timeout] typed_main_loop_invariant_4_preserved (Qed 15ms) (Z3)
[wp] Proved goals:   24 / 26
  Qed:              22
  Alt-Ergo 2.6.2:    2 (4ms-8ms)
  Timeout:           2
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0004/10_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0004/10_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0004/10_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0004/10_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0004/10_merged.c, line 18):
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(w) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_2) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(y_2) /\
      is_sint32(z) /\ is_sint32(z_1).
  (* Invariant *)
  Have: (z_1 = 0) \/ (z_1 = 1).
  (* Invariant *)
  Have: y_2 <= (1 + x_2).
  (* Invariant *)
  Have: x_2 <= (1 + y_2).
  (* Invariant *)
  Have: (w = 0) \/ (w = 1).
  (* Invariant *)
  Have: 0 <= y_2.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Then *)
  Have: tmp_0 != 0.
  If w != 0
  Then { Have: x_2 = x_1. Have: (1 + x_1) = x. }
  Else { Have: x_2 = x. }
  If z_1 = 0
  Then { Have: y_2 = y_1. Have: (1 + y_1) = y. Have: z = 1. }
  Else { Have: (y_2 = y) /\ (z_1 = z). }
  (* Invariant *)
  Have: (z = 0) \/ (z = 1).
}
Prove: y <= (1 + x).
Prover Z3 4.8.6 returns Timeout (Qed:16ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:16ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0004/10_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0004/10_merged.c, line 19):
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(w) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_2) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(y_2) /\
      is_sint32(z) /\ is_sint32(z_1).
  (* Invariant *)
  Have: (z_1 = 0) \/ (z_1 = 1).
  (* Invariant *)
  Have: y_2 <= (1 + x_2).
  (* Invariant *)
  Have: x_2 <= (1 + y_2).
  (* Invariant *)
  Have: (w = 0) \/ (w = 1).
  (* Invariant *)
  Have: 0 <= y_2.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Then *)
  Have: tmp_0 != 0.
  If w != 0
  Then { Have: x_2 = x_1. Have: (1 + x_1) = x. }
  Else { Have: x_2 = x. }
  If z_1 = 0
  Then { Have: y_2 = y_1. Have: (1 + y_1) = y. Have: z = 1. }
  Else { Have: (y_2 = y) /\ (z_1 = z). }
  (* Invariant *)
  Have: (z = 0) \/ (z = 1).
  (* Invariant *)
  Have: y <= (1 + x).
}
Prove: x <= (1 + y).
Prover Z3 4.8.6 returns Timeout (Qed:15ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:15ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0004/10_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0004/10_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0004/10_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0004/10_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0004/10_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0004/10_merged.c, line 22):
Let x_3 = 1 + y.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(w) /\ is_sint32(w_1) /\
      is_sint32(w_2) /\ is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_2) /\
      is_sint32(y) /\ is_sint32(x_3).
  (* Invariant *)
  Have: y <= (1 + x_2).
  (* Invariant *)
  Have: x_2 <= x_3.
  (* Invariant *)
  Have: (w_2 = 0) \/ (w_2 = 1).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Then *)
  Have: tmp_0 != 0.
  If w_2 != 0
  Then {
    Have: (w_2 = w_1) /\ (x_2 = x_1).
    Have: (1 + x_1) = x.
    Have: (if (w_1 = 0) then 1 else 0) = w.
  }
  Else { Have: (w = 0) /\ (x_2 = x). }
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: x <= (2 + y).
  (* Invariant *)
  Have: (w = 0) \/ (w = 1).
}
Prove: (-1) <= y.
Prover Z3 4.8.6 returns Valid (Qed:15ms) (10ms) (35831)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:15ms) (4ms) (22)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0004/10_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0004/10_merged.c, line 23):
Let x_1 = 1 + x.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\
      is_sint32(y_2) /\ is_sint32(z) /\ is_sint32(z_1) /\ is_sint32(x_1).
  (* Invariant *)
  Have: (z_1 = 0) \/ (z_1 = 1).
  (* Invariant *)
  Have: y_2 <= x_1.
  (* Invariant *)
  Have: x <= (1 + y_2).
  (* Invariant *)
  Have: 0 <= y_2.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
  If z_1 = 0
  Then { Have: y_2 = y_1. Have: (1 + y_1) = y. Have: z = 1. }
  Else { Have: (y_2 = y) /\ (z_1 = z). }
  (* Invariant *)
  Have: (z = 0) \/ (z = 1).
  (* Invariant *)
  Have: y <= (2 + x).
  (* Invariant *)
  Have: x <= y.
  (* Invariant *)
  Have: 0 <= y.
}
Prove: (-1) <= x.
Prover Z3 4.8.6 returns Valid (Qed:13ms) (10ms) (35468)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:13ms) (8ms) (22)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0004/10_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0004/10_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0004/10_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0004/10_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0004/10_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0004/10_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0004/10_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0004/10_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0004/10_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Loop assigns (file out/10_0004/10_merged.c, line 28) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/10_0004/10_merged.c, line 28) (2/2):
Call Result at line 33
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/10_0004/10_merged.c:3: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/10_0004/10_merged.c:7: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

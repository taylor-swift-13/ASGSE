[kernel] Parsing out/12_0003/12_merged.c (with preprocessing)
[kernel:typing:no-proto] out/12_0003/12_merged.c:35: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/12_0003/12_merged.c:52: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/12_0003/12_merged.c:5: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[kernel:annot:missing-spec] out/12_0003/12_merged.c:5: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] out/12_0003/12_merged.c:51: Warning: 
  Missing assigns clause (assigns 'everything' instead)
[wp] 38 goals scheduled
[wp] [Timeout] typed_main_loop_invariant_8_preserved (Qed 16ms) (Z3)
[wp] [Timeout] typed_main_loop_invariant_15_preserved (Qed 14ms) (Z3)
[wp] Proved goals:   36 / 38
  Qed:              30
  Alt-Ergo 2.6.2:    6 (8ms-13ms-25ms)
  Timeout:           2
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 12):
Let x = t / 2.
Let x_1 = -x.
Let x_2 = t - x.
Let x_3 = 1 + t - x.
Let x_4 = 2 * t.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t) /\ is_sint32(tmp_0) /\
      is_sint32(x) /\ is_sint32(1 + t) /\ is_sint32(2 + x_4) /\
      is_sint32(x_2) /\ is_sint32(x_3) /\ is_sint32(1 + x_4 - x).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: (x + (x_2 * x_2)) = t.
  (* Invariant *)
  Have: (2 * x) = t.
  (* Invariant *)
  Have: (x_2 * x_3) = t.
  (* Invariant *)
  Have: (x + ((1 + flag_0) * x_2)) = t.
  (* Invariant *)
  Have: x <= t.
  (* Invariant *)
  Have: 0 <= t.
  (* Invariant *)
  Have: (-1) <= t.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: x = 0.
Prover Z3 4.8.6 returns Valid (Qed:15ms) (20ms) (258924)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:15ms) (10ms) (112)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 13):
Let x = t - 1.
Let x_1 = x / 2.
Let x_2 = -x_1.
Let x_3 = t - 1 - x_1.
Let x_4 = t - x_1.
Let x_5 = 2 * t.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t) /\ is_sint32(tmp_0) /\
      is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_4) /\
      is_sint32(x_5 - x_1) /\ is_sint32(x_3).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: (1 + x_1 + (x_3 * x_3)) = t.
  (* Invariant *)
  Have: (1 + (2 * x_1)) = t.
  (* Invariant *)
  Have: (1 + (x_4 * x_3)) = t.
  (* Invariant *)
  Have: (1 + x_1 + ((1 + flag_0) * x_3)) = t.
  (* Invariant *)
  Have: x_1 < t.
  (* Invariant *)
  Have: 0 < t.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (1 + x_1) = t.
}
Prove: (x_1 + (x_4 * x_4) + ((x_4 * (1 + t - x_1)) / 2)) = x_5.
Prover Z3 4.8.6 returns Valid (Qed:24ms) (10ms) (43056)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:24ms) (10ms) (288)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 14):
Let x = -t.
Let x_1 = t_1 - t.
Let x_2 = x_1 * x_1.
Let x_3 = (x_1 * (1 + t_1 - t)) / 2.
Let x_4 = t + x_2 + x_3.
Let x_5 = 2 * t_1.
Let x_6 = 2 * t.
Let x_7 = x_6 + x_2 + x_3.
Let x_8 = 3 * t.
Let x_9 = x_8 + (2 * x_2) + (2 * x_3).
Let x_10 = 4 * t_1.
Let x_11 = t / 2.
Let x_12 = t_1 - 1 - t.
Let x_13 = x_2 + x_3.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_12) /\ is_sint32(x_13) /\
      is_sint32(t + x_2 + x_3 - t_1) /\ is_sint32(x_6 + x_2 + x_3 - x_5).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: x_13 = (1 + t_1).
  (* Invariant *)
  Have: (x_11 + (x_12 * x_12)) = t.
  (* Invariant *)
  Have: (2 + x_8) = x_5.
  (* Invariant *)
  Have: (x_1 * x_12) = t.
  (* Invariant *)
  Have: (2 * x_11) = t.
  (* Invariant *)
  Have: (x_11 + ((1 + flag_0) * x_12)) = t.
  (* Invariant *)
  Have: x_10 <= x_9.
  (* Invariant *)
  Have: x_7 = (x_5 + x_11).
  (* Invariant *)
  Have: x_4 <= x_5.
  (* Invariant *)
  Have: x_9 <= x_10.
  (* Invariant *)
  Have: 0 <= t.
  (* Invariant *)
  Have: x_5 <= x_7.
  (* Invariant *)
  Have: t < t_1.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_4 = x_5.
}
Prove: x_7 = x_5.
Prover Z3 4.8.6 returns Valid (Qed:15ms) (10ms) (37963)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:15ms) (11ms) (254)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (16ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (15ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 17):
Let x = -t_1.
Let x_1 = t - t_1.
Let x_2 = x_1 * (1 + t - t_1).
Let x_3 = x_1 * x_1.
Let x_4 = x_2 / 2.
Let x_5 = 2 * t_1.
Let x_6 = x_5 + x_3 + x_4.
Let x_7 = 2 * t.
Let x_8 = t_1 + x_3 + x_4.
Let x_9 = 3 * t_1.
Let x_10 = x_9 + (2 * x_3) + (2 * x_4).
Let x_11 = 4 * t.
Let x_12 = t_1 / 2.
Let x_13 = t - 1 - t_1.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t_1) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_13) /\ is_sint32(x_2) /\
      is_sint32(t_1 + x_3 + x_4 - t) /\ is_sint32(x_5 + x_3 + x_4 - x_7).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: x_2 = (1 + t).
  (* Invariant *)
  Have: (x_12 + (x_13 * x_13)) = t_1.
  (* Invariant *)
  Have: (2 + x_9) = x_7.
  (* Invariant *)
  Have: (x_1 * x_13) = t_1.
  (* Invariant *)
  Have: (2 * x_12) = t_1.
  (* Invariant *)
  Have: (x_12 + ((1 + flag_0) * x_13)) = t_1.
  (* Invariant *)
  Have: x_11 <= x_10.
  (* Invariant *)
  Have: x_6 = (x_7 + x_12).
  (* Invariant *)
  Have: x_8 <= x_7.
  (* Invariant *)
  Have: x_10 <= x_11.
  (* Invariant *)
  Have: 0 <= t_1.
  (* Invariant *)
  Have: x_7 <= x_6.
  (* Invariant *)
  Have: t_1 < t.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_8 = x_7.
  (* Invariant *)
  Have: x_6 = x_7.
  (* Invariant *)
  Have: x_2 = (x_3 + x_4).
}
Prove: x_4 = x_3.
Prover Z3 4.8.6 returns Valid (Qed:17ms) (10ms) (42040)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:17ms) (8ms) (263)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 19):
Let x = -t_1.
Let x_1 = t - t_1.
Let x_2 = x_1 * (1 + t - t_1).
Let x_3 = x_2 / 2.
Let x_4 = t_1 + x_2.
Let x_5 = 2 * t.
Let x_6 = 3 * t_1.
Let x_7 = x_6 + (4 * x_3).
Let x_8 = 4 * t.
Let x_9 = 2 * t_1.
Let x_10 = t_1 / 2.
Let x_11 = 1 + flag_0.
Let x_12 = t - 1 - t_1.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t_1) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_12) /\ is_sint32(x_2) /\
      is_sint32(t_1 + x_2 - t) /\ is_sint32(x_9 + x_2 - x_5).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: x_2 = (1 + t).
  (* Invariant *)
  Have: (x_10 + (x_12 * x_12)) = t_1.
  (* Invariant *)
  Have: (2 + x_6) = x_5.
  (* Invariant *)
  Have: (x_1 * x_12) = t_1.
  (* Invariant *)
  Have: (2 * x_10) = t_1.
  (* Invariant *)
  Have: (x_10 + (x_11 * x_12)) = t_1.
  (* Invariant *)
  Have: x_8 <= x_7.
  (* Invariant *)
  Have: (x_9 + x_2) = (x_5 + x_10).
  (* Invariant *)
  Have: x_4 <= x_5.
  (* Invariant *)
  Have: x_7 <= x_8.
  (* Invariant *)
  Have: 0 <= t_1.
  (* Invariant *)
  Have: t_1 < t.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_4 = x_5.
  (* Invariant *)
  Have: x_3 = (x_1 * x_1).
  (* Invariant *)
  Have: (t_1 + x_3) = t.
  (* Invariant *)
  Have: x_2 = (2 * x_3).
}
Prove: x_3 = (x_11 * x_1).
Prover Z3 4.8.6 returns Timeout (Qed:16ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:16ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (14ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 21):
Let x = 2 * t_1.
Let x_1 = 2 * t.
Let x_2 = 1 + flag_0.
Let x_3 = -t.
Let x_4 = t_1 - t.
Let x_5 = x_2 * x_4.
Let x_6 = x_4 * (1 + t_1 - t).
Let x_7 = x_6 / 2.
Let x_8 = x_1 + x_5 + x_7.
Let x_9 = t + x_5 + x_7.
Let x_10 = 3 * t.
Let x_11 = x_10 + (2 * x_5) + (2 * x_7).
Let x_12 = 4 * t_1.
Let x_13 = t / 2.
Let x_14 = t_1 - 1 - t.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t) /\ is_sint32(tmp_0) /\
      is_sint32(x_4) /\ is_sint32(x_14) /\ is_sint32(x_6) /\
      is_sint32(t + x_5 + x_7 - t_1) /\ is_sint32(x_1 + x_5 + x_7 - x).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: x_6 = (1 + t_1).
  (* Invariant *)
  Have: (x_13 + (x_14 * x_14)) = t.
  (* Invariant *)
  Have: (2 + x_10) = x.
  (* Invariant *)
  Have: (x_4 * x_14) = t.
  (* Invariant *)
  Have: (2 * x_13) = t.
  (* Invariant *)
  Have: (x_13 + (x_2 * x_14)) = t.
  (* Invariant *)
  Have: x_12 <= x_11.
  (* Invariant *)
  Have: x_8 = (x + x_13).
  (* Invariant *)
  Have: x_9 <= x.
  (* Invariant *)
  Have: x_11 <= x_12.
  (* Invariant *)
  Have: 0 <= t.
  (* Invariant *)
  Have: t < t_1.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_9 = x.
  (* Invariant *)
  Have: x_8 = x.
  (* Invariant *)
  Have: x_6 = (x_5 + x_7).
  (* Invariant *)
  Have: (x_4 * x_4) = x_5.
  (* Invariant *)
  Have: x_7 = x_5.
  (* Invariant *)
  Have: x <= x_8.
}
Prove: (t + x_5) = t_1.
Prover Z3 4.8.6 returns Valid (Qed:20ms) (20ms) (43748)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:20ms) (25ms) (1612)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 24):
Let x = 1 + flag_0.
Let x_1 = -t_1.
Let x_2 = t - t_1.
Let x_3 = x * x_2.
Let x_4 = x_2 * (1 + t - t_1).
Let x_5 = x_4 / 2.
Let x_6 = 2 * t.
Let x_7 = t_1 + x_5.
Let x_8 = t_1 + (2 * x_5).
Let x_9 = t_1 / 2.
Let x_10 = t - 1 - t_1.
Let x_11 = -t.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t_1) /\ is_sint32(tmp_0) /\
      is_sint32(x_2) /\ is_sint32(x_10) /\ is_sint32(x_4) /\
      is_sint32(x_5) /\ is_sint32(t_1 + x_5 - t) /\
      is_sint32(t_1 + x_3 + x_5 - t).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: x_5 = (1 + t_1).
  (* Invariant *)
  Have: (x_9 + (x_10 * x_10)) = t_1.
  (* Invariant *)
  Have: (2 + (3 * t_1)) = x_6.
  (* Invariant *)
  Have: (x_2 * x_10) = t_1.
  (* Invariant *)
  Have: (2 * x_9) = t_1.
  (* Invariant *)
  Have: (x_9 + (x * x_10)) = t_1.
  (* Invariant *)
  Have: x_6 <= x_8.
  (* Invariant *)
  Have: x_7 = (t + x_9).
  (* Invariant *)
  Have: x_5 <= t.
  (* Invariant *)
  Have: x_8 <= x_6.
  (* Invariant *)
  Have: 0 <= t_1.
  (* Invariant *)
  Have: t <= x_7.
  (* Invariant *)
  Have: t_1 < t.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (t_1 + x_3 + x_5) = x_6.
  (* Invariant *)
  Have: (t_1 + x_3) = t.
  (* Invariant *)
  Have: ((2 * t_1) + x_3 + x_5) = x_6.
  (* Invariant *)
  Have: x_4 = (x_3 + x_5).
  (* Invariant *)
  Have: (x_2 * x_2) = x_3.
  (* Invariant *)
  Have: x_5 = x_3.
  (* Invariant *)
  Have: x_3 <= x_5.
}
Prove: 0 <= x_3.
Prover Z3 4.8.6 returns Valid (Qed:17ms) (20ms) (38913)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:17ms) (12ms) (396)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 26):
Assume { Type: is_sint32(tmp_0). (* Then *) Have: tmp_0 != 0. }
Prove: false.
Prover Z3 4.8.6 returns Timeout (Qed:14ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:14ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (13ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (13ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (11ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/12_0003/12_merged.c, line 30) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/12_0003/12_merged.c, line 30) (2/2):
Call Result at line 35
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/12_0003/12_merged.c:1: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/12_0003/12_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/12_0003/12_merged.c:5: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

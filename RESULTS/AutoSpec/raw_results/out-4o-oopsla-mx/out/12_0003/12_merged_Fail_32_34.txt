[kernel] Parsing out/12_0003/12_merged.c (with preprocessing)
[kernel:typing:no-proto] out/12_0003/12_merged.c:33: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/12_0003/12_merged.c:50: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/12_0003/12_merged.c:5: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[kernel:annot:missing-spec] out/12_0003/12_merged.c:5: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] out/12_0003/12_merged.c:49: Warning: 
  Missing assigns clause (assigns 'everything' instead)
[wp] 34 goals scheduled
[wp] [Timeout] typed_main_loop_invariant_2_preserved (Qed 24ms) (Z3)
[wp] [Timeout] typed_main_loop_invariant_preserved (Qed 14ms) (Z3)
[wp] Proved goals:   32 / 34
  Qed:              30
  Alt-Ergo 2.6.2:    1 (9ms)
  Z3 4.8.6:          1 (10ms)
  Timeout:           2
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 12):
Let x = t / 2.
Let x_1 = -x.
Let x_2 = t - x.
Let x_3 = 1 + t - x.
Let x_4 = 2 * t.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t) /\ is_sint32(tmp_0) /\
      is_sint32(x) /\ is_sint32(1 + t) /\ is_sint32(2 + x_4) /\
      is_sint32(x_2) /\ is_sint32(x_3) /\ is_sint32(1 + x_4 - x).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: (x + (x_2 * x_2)) = t.
  (* Invariant *)
  Have: (2 * x) = t.
  (* Invariant *)
  Have: (x_2 * x_3) = t.
  (* Invariant *)
  Have: x <= t.
  (* Invariant *)
  Have: 0 <= t.
  (* Invariant *)
  Have: (-1) <= t.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: x = 0.
Prover Z3 4.8.6 returns Timeout (Qed:14ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:14ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 13):
Let x = -t_1.
Let x_1 = t - 1 - t_1.
Let x_2 = x_1 * (if (flag_0 = 0) then 0 else 1).
Let x_3 = t - t_1.
Let x_4 = (x_3 * x_1) / 2.
Let x_5 = -x_2.
Let x_6 = t_1 - x_2.
Let x_7 = x_1 * x_1.
Let x_8 = x_3 * (if (flag_0 = 0) then 0 else 1).
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t_2) /\ is_sint32(t_1) /\
      is_sint32(tmp_0) /\ is_sint32(x_3) /\ is_sint32(x_1) /\
      is_sint32(t - x_2) /\ is_sint32(x_6) /\ is_sint32(t + x_8 - x_2).
  (* Invariant *)
  Have: (x_7 + (if (flag_0 = 0) then 0 else x_6)) = t_1.
  (* Invariant *)
  Have: (x_1 * (if (flag_0 = 0) then 1 else 2)) = t_1.
  (* Invariant *)
  Have: (x_1 * (if (flag_0 = 0) then 1 else x_3)) = t_1.
  (* Invariant *)
  Have: (x_4 + (if (flag_0 = 0) then 0 else x_7)) = t_1.
  (* Invariant *)
  Have: (x_4 + (if (flag_0 = 0) then 0 else x_6)) = t_1.
  (* Invariant *)
  Have: (2 * x_2) <= t_1.
  (* Invariant *)
  Have: (x_2 + x_4) = t_1.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 <= t_1.
  (* Invariant *)
  Have: x_2 <= t_1.
  (* Invariant *)
  Have: t_1 < t.
  (* Then *)
  Have: tmp_0 != 0.
  If flag_0 != 0
  Then { Have: (t = t_2) /\ ((1 + t_1) = t_2). }
}
Prove: ((x_3 * x_3) + x_2
        + (if (flag_0 = 0) then 0 else ((x_3 * (1 + t - t_1)) / 2)))
         = (t + x_8).
Prover Z3 4.8.6 returns Timeout (Qed:24ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:24ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 14):
Let x = -t_1.
Let x_1 = t - t_1.
Let x_2 = x_1 * (if (flag_0 = 0) then 0 else 1).
Let x_3 = t + x_2.
Let x_4 = x_1 * x_1.
Let x_5 = (x_1 * (1 + t - t_1)) / 2.
Let x_6 = t_1 + x_4 + (if (flag_0 = 0) then 0 else x_5).
Let x_7 = x_4 + (if (flag_0 = 0) then 0 else x_5).
Let x_8 = t - 1 - t_1.
Let x_9 = (x_1 * x_8) / 2.
Let x_10 = x_8 * x_8.
Let x_11 = -x_2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t_2) /\ is_sint32(t_1) /\
      is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x_8) /\
      is_sint32(x_7) /\
      is_sint32(x_4 + (if (flag_0 = 0) then 0 else x_5) - x_2) /\
      is_sint32(t_1 + x_4 + (if (flag_0 = 0) then 0 else x_5) - t - x_2).
  (* Invariant *)
  Have: (x_4 + (x_8 * (if (flag_0 = 0) then 0 else 1))
         + (if (flag_0 = 0) then 0 else x_5)) = x_3.
  (* Invariant *)
  Have: (x_10 + (if (flag_0 = 0) then 0 else x_9)) = t_1.
  (* Invariant *)
  Have: (x_8 * (if (flag_0 = 0) then 1 else 2)) = t_1.
  (* Invariant *)
  Have: (x_8 * (if (flag_0 = 0) then 1 else x_1)) = t_1.
  (* Invariant *)
  Have: (x_9 + (if (flag_0 = 0) then 0 else x_10)) = t_1.
  (* Invariant *)
  Have: (x_9 + (if (flag_0 = 0) then 0 else x_9)) = t_1.
  (* Invariant *)
  Have: ((2 * t) + (2 * x_2))
          <= (t_1 + (2 * x_4) + (2 * (if (flag_0 = 0) then 0 else x_5))).
  (* Invariant *)
  Have: x_6 = (t + x_2 + x_9).
  (* Invariant *)
  Have: x_7 <= x_3.
  (* Invariant *)
  Have: 0 <= t_1.
  (* Invariant *)
  Have: x_3 <= x_6.
  (* Invariant *)
  Have: t_1 < t.
  (* Then *)
  Have: tmp_0 != 0.
  If flag_0 != 0
  Then {
    Let x_12 = t_1 + x_4 + x_5.
    Have: (x_12 = (2 * t)) /\ (x_12 = (t_2 + t)).
  }
  Else { Have: x_4 = t. }
}
Prove: (x_1 * (if (flag_0 = 0) then 1 else 2)) = x_7.
Prover Z3 4.8.6 returns Valid (Qed:14ms) (10ms) (52029)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (15ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (14ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.84ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 17):
Let x = -t_1.
Let x_1 = t - t_1.
Let x_2 = x_1 * (1 + t - t_1).
Let x_3 = x_1 * x_1.
Let x_4 = x_2 / 2.
Let x_5 = 2 * t_1.
Let x_6 = x_5 + x_3 + x_4.
Let x_7 = 2 * t.
Let x_8 = t_1 + x_3 + x_4.
Let x_9 = t_1 / 2.
Let x_10 = 3 * t_1.
Let x_11 = t - 1 - t_1.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t_1) /\ is_sint32(tmp_0) /\
      is_sint32(x_1) /\ is_sint32(x_11) /\ is_sint32(x_2) /\
      is_sint32(t_1 + x_3 + x_4 - t) /\ is_sint32(x_5 + x_3 + x_4 - x_7).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: x_2 = (1 + t).
  (* Invariant *)
  Have: (x_9 + (x_11 * x_11)) = t_1.
  (* Invariant *)
  Have: (2 + x_10) = x_7.
  (* Invariant *)
  Have: (x_1 * x_11) = t_1.
  (* Invariant *)
  Have: (2 * x_9) = t_1.
  (* Invariant *)
  Have: (4 * t) <= (x_10 + (2 * x_3) + (2 * x_4)).
  (* Invariant *)
  Have: x_6 = (x_7 + x_9).
  (* Invariant *)
  Have: x_8 <= x_7.
  (* Invariant *)
  Have: 0 <= t_1.
  (* Invariant *)
  Have: x_7 <= x_6.
  (* Invariant *)
  Have: t_1 < t.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_8 = x_7.
  (* Invariant *)
  Have: x_6 = x_7.
  (* Invariant *)
  Have: x_2 = (x_3 + x_4).
}
Prove: x_4 = x_3.
Prover Z3 4.8.6 returns Valid (Qed:16ms) (10ms) (40955)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:16ms) (9ms) (218)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.80ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.99ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (12ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (13ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.78ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.84ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (10ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.86ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (12ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.87ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (12ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (10ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Loop assigns (file out/12_0003/12_merged.c, line 28) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/12_0003/12_merged.c, line 28) (2/2):
Call Result at line 33
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/12_0003/12_merged.c:1: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/12_0003/12_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/12_0003/12_merged.c:5: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

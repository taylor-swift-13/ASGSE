[kernel] Parsing out/12_0003/12_merged.c (with preprocessing)
[kernel:typing:no-proto] out/12_0003/12_merged.c:31: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/12_0003/12_merged.c:48: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/12_0003/12_merged.c:5: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[kernel:annot:missing-spec] out/12_0003/12_merged.c:5: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] out/12_0003/12_merged.c:47: Warning: 
  Missing assigns clause (assigns 'everything' instead)
[wp] 30 goals scheduled
[wp] [Timeout] typed_main_loop_invariant_preserved (Qed 13ms) (Z3)
[wp] Proved goals:   29 / 30
  Qed:              26
  Alt-Ergo 2.6.2:    3 (10ms-12ms-16ms)
  Timeout:           1
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 12):
Let x = -t_1.
Let x_1 = t - t_1.
Let x_2 = t - 1 - t_1.
Let x_3 = x_1 * x_2.
Let x_4 = x_3 / 2.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t_2) /\ is_sint32(t_1) /\
      is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_4).
  (* Invariant *)
  Have: (x_2 * (if (flag_0 = 0) then 1 else 2)) = t_1.
  (* Invariant *)
  Have: (x_2 * (if (flag_0 = 0) then 1 else x_1)) = t_1.
  (* Invariant *)
  Have: (x_4 + (if (flag_0 = 0) then 0 else (x_2 * x_2))) = t_1.
  (* Invariant *)
  Have: (x_4 + (if (flag_0 = 0) then 0 else x_4)) = t_1.
  (* Invariant *)
  Have: t_1 <= (2 * x_4).
  (* Invariant *)
  Have: x_4 <= t_1.
  (* Invariant *)
  Have: 0 <= t_1.
  (* Invariant *)
  Have: (-1) <= x_3.
  (* Invariant *)
  Have: t_1 < t.
  (* Then *)
  Have: tmp_0 != 0.
  If flag_0 != 0
  Then { Have: (t_2 + t_1) = (2 * t). }
  Else { Have: t = t_2. }
}
Prove: (x_1 * (if (flag_0 = 0) then 1 else 2)) = t_2.
Prover Z3 4.8.6 returns Timeout (Qed:13ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:13ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 14):
Let x = -t_1.
Let x_1 = t - t_1.
Let x_2 = x_1 * (1 + t - t_1).
Let x_3 = 2 * t.
Let x_4 = t_1 / 2.
Let x_5 = t - 1 - t_1.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t_1) /\ is_sint32(tmp_0) /\
      is_sint32(x_4) /\ is_sint32(x_1) /\ is_sint32(x_5) /\ is_sint32(x_2) /\
      is_sint32(t_1 + x_2 - t).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: (2 + (3 * t_1)) = x_3.
  (* Invariant *)
  Have: (x_1 * x_5) = t_1.
  (* Invariant *)
  Have: (x_4 + (x_5 * x_5)) = t_1.
  (* Invariant *)
  Have: (2 * x_4) = t_1.
  (* Invariant *)
  Have: x_4 <= t_1.
  (* Invariant *)
  Have: 0 <= t_1.
  (* Invariant *)
  Have: (-1) <= t_1.
  (* Invariant *)
  Have: t_1 < t.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (t_1 + x_2) = x_3.
  (* Invariant *)
  Have: ((2 * t_1) + x_2) = x_3.
}
Prove: x_2 = ((x_1 * x_1) + (x_2 / 2)).
Prover Z3 4.8.6 returns Valid (Qed:10ms) (40980)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:10ms) (16ms) (396)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 15):
Let x = -t_1.
Let x_1 = t - t_1.
Let x_2 = x_1 * (1 + t - t_1).
Let x_3 = x_1 * x_1.
Let x_4 = x_2 / 2.
Let x_5 = 2 * t.
Let x_6 = t_1 / 2.
Let x_7 = t - 1 - t_1.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t_1) /\ is_sint32(tmp_0) /\
      is_sint32(x_6) /\ is_sint32(x_1) /\ is_sint32(x_7) /\ is_sint32(x_2) /\
      is_sint32(t_1 + x_3 + x_4 - t).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: (2 + (3 * t_1)) = x_5.
  (* Invariant *)
  Have: (x_1 * x_7) = t_1.
  (* Invariant *)
  Have: (x_6 + (x_7 * x_7)) = t_1.
  (* Invariant *)
  Have: (2 * x_6) = t_1.
  (* Invariant *)
  Have: x_6 <= t_1.
  (* Invariant *)
  Have: 0 <= t_1.
  (* Invariant *)
  Have: (-1) <= t_1.
  (* Invariant *)
  Have: t_1 < t.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (t_1 + x_3 + x_4) = x_5.
  (* Invariant *)
  Have: ((2 * t_1) + x_3 + x_4) = x_5.
  (* Invariant *)
  Have: x_2 = (x_3 + x_4).
}
Prove: x_4 = x_3.
Prover Z3 4.8.6 returns Valid (Qed:11ms) (20ms) (38718)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:11ms) (11ms) (172)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.99ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (13ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 18):
Let x = -t.
Let x_1 = t_1 - t.
Let x_2 = x_1 * (1 + t_1 - t).
Let x_3 = x_2 / 2.
Let x_4 = 2 * t_1.
Let x_5 = t / 2.
Let x_6 = t_1 - 1 - t.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(t) /\ is_sint32(tmp_0) /\
      is_sint32(x_5) /\ is_sint32(x_1) /\ is_sint32(x_6) /\
      is_sint32(t_1 + x_5 - t) /\ is_sint32(x_2) /\ is_sint32(t + x_2 - t_1).
  (* Residual *)
  When: flag_0 != 0.
  (* Invariant *)
  Have: (2 + (3 * t)) = x_4.
  (* Invariant *)
  Have: (x_1 * x_6) = t.
  (* Invariant *)
  Have: (x_5 + (x_6 * x_6)) = t.
  (* Invariant *)
  Have: (2 * x_5) = t.
  (* Invariant *)
  Have: x_5 <= t.
  (* Invariant *)
  Have: 0 <= t.
  (* Invariant *)
  Have: (-1) <= t.
  (* Invariant *)
  Have: t < t_1.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (t + x_2) = x_4.
  (* Invariant *)
  Have: (t + x_3) = t_1.
  (* Invariant *)
  Have: x_2 = (2 * x_3).
  (* Invariant *)
  Have: x_3 = (x_1 * x_1).
}
Prove: x_5 = 0.
Prover Z3 4.8.6 returns Valid (Qed:16ms) (10ms) (38878)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:16ms) (10ms) (155)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (11ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.97ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.97ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (12ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.92ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (11ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.97ms)

------------------------------------------------------------

Goal Loop assigns (file out/12_0003/12_merged.c, line 26) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/12_0003/12_merged.c, line 26) (2/2):
Call Result at line 31
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/12_0003/12_merged.c:1: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/12_0003/12_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/12_0003/12_merged.c:5: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

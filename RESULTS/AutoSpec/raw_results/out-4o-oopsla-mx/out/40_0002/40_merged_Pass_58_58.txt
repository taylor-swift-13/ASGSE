[kernel] Parsing out/40_0002/40_merged.c (with preprocessing)
[kernel:typing:no-proto] out/40_0002/40_merged.c:35: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[kernel:typing:no-proto] out/40_0002/40_merged.c:62: Warning: 
  Calling function unknown2 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/40_0002/40_merged.c:8: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[kernel:annot:missing-spec] out/40_0002/40_merged.c:8: Warning: 
  Neither code nor specification for function unknown2, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 58 goals scheduled
[wp] Proved goals:   58 / 58
  Qed:              50
  Alt-Ergo 2.6.2:    8 (5ms-11ms-21ms)
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 18):
Let x = 2 + i.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(1 + j) /\ is_sint32(x).
  (* Residual *)
  When: (x % 2) != 0.
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: (i / 2) < j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: i < j.
Prover Z3 4.8.6 returns Valid (Qed:9ms) (10ms) (35866)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:9ms) (5ms) (23)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 19):
Let x = 2 + i.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(j_1) /\ is_sint32(j_2) /\ is_sint32(j_3) /\
      is_sint32(tmp_0) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: i <= j_3.
  (* Invariant *)
  Have: (i / 2) < j_3.
  (* Invariant *)
  Have: (j_3 % 2) = 1.
  (* Invariant *)
  Have: 0 < j_3.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Then *)
  Have: tmp_0 != 0.
  If (x % 2) = 0
  Then { Have: j_3 = j_1. Have: (2 + j_1) = j. }
  Else { Have: j_3 = j_2. Have: (1 + j_2) = j. }
  (* Invariant *)
  Have: x <= j.
}
Prove: (x / 2) < j.
Prover Z3 4.8.6 returns Valid (Qed:9ms) (20ms) (37624)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:9ms) (14ms) (215)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.92ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 20):
Let x = 2 + i.
Let x_1 = 1 + j.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x).
  (* Goal *)
  When: (x % 2) = 1.
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: (i / 2) < j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: (x / 2) <= j.
}
Prove: (x_1 % 2) = 0.
Prover Z3 4.8.6 returns Valid (Qed:5ms) (10ms) (38981)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:5ms) (13ms) (219)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 21):
Let x = 2 + i.
Let x_1 = x % 2.
Let x_2 = 1 + j.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x_2) /\ is_sint32(x).
  (* Residual *)
  When: x_1 != 0.
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: (i / 2) < j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: (x / 2) <= j.
  (* Invariant *)
  Have: ((x_1 = 1) -> ((x_2 % 2) = 0)).
}
Prove: x_1 = 1.
Prover Z3 4.8.6 returns Valid (Qed:7ms) (10ms) (36394)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:7ms) (5ms) (198)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 22):
Let x = 2 + i.
Let x_1 = 2 + j.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Goal *)
  When: (x % 2) = 0.
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: (i / 2) < j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (x / 2) <= (1 + j).
}
Prove: (x_1 % 2) = 1.
Prover Z3 4.8.6 returns Valid (Qed:4ms) (30ms) (207434)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:4ms) (21ms) (231)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 23):
Let x = 2 + i.
Let x_1 = 1 + j.
Assume {
  Type: is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: (i / 2) < j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: i < j.
  (* Invariant *)
  Have: (x / 2) <= j.
  (* Invariant *)
  Have: (x_1 % 2) = 0.
  (* Invariant *)
  Have: (x % 2) = 1.
}
Prove: false.
Prover Z3 4.8.6 returns Valid (Qed:4ms) (10ms) (65134)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:4ms) (14ms) (218)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 30):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 30):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 31):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 51):
Let x = -i.
Let x_1 = j - i.
Let x_2 = a * x_1.
Let x_3 = 1 + a.
Assume {
  Type: is_sint32(a) /\ is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0_0) /\ is_sint32(x_3) /\ is_sint32(x_2) /\
      is_sint32(j + x_2 - i).
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: (i / 2) < j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: tmp_0_0 != 0.
}
Prove: (j + x_2) = (i + (x_3 * x_1)).
Prover Z3 4.8.6 returns Valid (Qed:5ms) (10ms) (10073)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:5ms) (10ms) (119)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 53):
Let x = 1 + a.
Let x_1 = j - i.
Let x_2 = x * x_1.
Let x_3 = i + x_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(flag_0) /\ is_sint32(i) /\ is_sint32(j) /\
      is_sint32(tmp_0_0) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(i + x_2 - j).
  (* Pre-condition *)
  Have: 0 < flag_0.
  (* Invariant *)
  Have: i <= j.
  (* Invariant *)
  Have: (i / 2) < j.
  (* Invariant *)
  Have: (j % 2) = 1.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: (i % 2) = 0.
  (* Invariant *)
  Have: (j + (a * x_1)) = x_3.
  (* Invariant *)
  Have: j <= x_3.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: tmp_0_0 != 0.
}
Prove: 0 <= x_2.
Prover Z3 4.8.6 returns Valid (Qed:5ms) (20ms) (35080)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:5ms) (11ms) (141)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 53):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 54):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 54):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 55):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 55):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 56):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 56):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 57):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 57):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/40_0002/40_merged.c, line 58):
Prove: true.
Prover Qed returns Valid (0.78ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/40_0002/40_merged.c, line 58):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/40_0002/40_merged.c, line 32) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/40_0002/40_merged.c, line 32) (2/2):
Call Result at line 35
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/40_0002/40_merged.c, line 59) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/40_0002/40_merged.c, line 59) (2/2):
Call Result at line 62
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/40_0002/40_merged.c:2: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/40_0002/40_merged.c:3: Warning: 
  No 'assigns' specification for function 'unknown2'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/40_0002/40_merged.c:8: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

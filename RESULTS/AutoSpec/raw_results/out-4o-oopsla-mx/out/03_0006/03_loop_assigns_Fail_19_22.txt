[kernel] Parsing out/03_0006/03_loop_assigns.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] out/03_0006/03_loop_assigns.c:15: Warning: 
  Missing assigns clause (assigns 'everything' instead)
[wp] 22 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_2_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_5_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_8_established (Qed 2ms) (Z3)
[wp] Proved goals:   19 / 22
  Qed:              13
  Alt-Ergo 2.6.2:    4 (5ms-8ms-9ms)
  Z3 4.8.6:          2 (20ms-30ms)
  Timeout:           3
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0006/03_loop_assigns.c, line 17):
Let x = 1 + i.
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 < n_1.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l < n.
  (* Invariant *)
  Have: forall i_1 : Z. ((l <= i_1) -> ((i_1 < n) -> (0 < i_1))).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 < l.
  (* Invariant *)
  Have: l <= i.
  (* Invariant *)
  Have: i <= n.
  (* Then *)
  Have: i < n.
}
Prove: l <= x.
Prover Z3 4.8.6 returns Valid (Qed:4ms) (10ms) (34937)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:4ms) (9ms) (20)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0006/03_loop_assigns.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0006/03_loop_assigns.c, line 18):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0006/03_loop_assigns.c, line 18):
Assume {
  Type: is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\ is_sint32(n) /\
      is_sint32(n_1).
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 < n_1.
  (* Then *)
  Have: k < n.
}
Prove: l < n.
Prover Z3 4.8.6 returns Timeout (Qed:1ms) (3s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:1ms) (3s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0006/03_loop_assigns.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0006/03_loop_assigns.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0006/03_loop_assigns.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0006/03_loop_assigns.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0006/03_loop_assigns.c, line 21):
Let x = 1 + i_1.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 < n_1.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l < n.
  (* Invariant *)
  Have: forall i_2 : Z. ((l <= i_2) -> ((i_2 < n) -> (0 < i_2))).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 < l.
  (* Invariant *)
  Have: l <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Then *)
  Have: i_1 < n.
  (* Invariant *)
  Have: l <= x.
}
Prove: 0 < i.
Prover Z3 4.8.6 returns Valid (Qed:4ms) (10ms) (35493)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:4ms) (5ms) (22)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0006/03_loop_assigns.c, line 21):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n) /\
      is_sint32(n_1).
  (* Goal *)
  When: (i_1 <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n_1.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: i_1 < n.
}
Prove: 0 < i.
Prover Z3 4.8.6 returns Timeout (Qed:2ms) (3s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:2ms) (3s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0006/03_loop_assigns.c, line 22):
Let x = 1 + i_1.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x).
  (* Goal *)
  When: (l <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 < n_1.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l < n.
  (* Invariant *)
  Have: forall i_2 : Z. ((l <= i_2) -> ((i_2 < n) -> (0 < i_2))).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 < l.
  (* Invariant *)
  Have: l <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Then *)
  Have: i_1 < n.
  (* Invariant *)
  Have: l <= x.
}
Prove: 0 < i.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:6ms) (9ms) (22)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0006/03_loop_assigns.c, line 22):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0006/03_loop_assigns.c, line 23):
Let x = 1 + i_1.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\
      is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 < n_1.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l < n.
  (* Invariant *)
  Have: forall i_2 : Z. ((l <= i_2) -> ((i_2 < n) -> (0 < i_2))).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 < l.
  (* Invariant *)
  Have: l <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Then *)
  Have: i_1 < n.
  (* Invariant *)
  Have: l <= x.
}
Prove: 0 < i.
Prover Z3 4.8.6 returns Valid (Qed:5ms) (10ms) (35493)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:5ms) (9ms) (22)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0006/03_loop_assigns.c, line 23):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n) /\
      is_sint32(n_1).
  (* Goal *)
  When: (i_1 <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n_1.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: i_1 < n.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_1 <= i_2) -> ((i_2 < n) -> (0 < i_2))).
}
Prove: 0 < i.
Prover Z3 4.8.6 returns Valid (Qed:3ms) (20ms) (69051)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0006/03_loop_assigns.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0006/03_loop_assigns.c, line 24):
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(l) /\ is_sint32(n) /\
      is_sint32(n_1).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l < n_1.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: i < n.
  (* Invariant *)
  Have: forall i_1 : Z. ((i <= i_1) -> ((i_1 < n) -> (0 < i_1))).
}
Prove: 0 < k.
Prover Z3 4.8.6 returns Timeout (Qed:2ms) (3s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:2ms) (3s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0006/03_loop_assigns.c, line 25):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0006/03_loop_assigns.c, line 25):
Assume {
  Type: is_sint32(k) /\ is_sint32(l) /\ is_sint32(l_1) /\ is_sint32(n) /\
      is_sint32(n_1).
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 < n_1.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l < n.
  (* Invariant *)
  Have: forall i : Z. ((l <= i) -> ((i < n) -> (0 < i))).
  (* Invariant *)
  Have: 0 < k.
}
Prove: 0 < l.
Prover Z3 4.8.6 returns Valid (Qed:2ms) (30ms) (193556)

------------------------------------------------------------

Goal Preservation of Invariant (file out/03_0006/03_loop_assigns.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/03_0006/03_loop_assigns.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/03_0006/03_loop_assigns.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/03_0006/03_loop_assigns.c, line 32):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/03_0006/03_loop_assigns.c:11: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

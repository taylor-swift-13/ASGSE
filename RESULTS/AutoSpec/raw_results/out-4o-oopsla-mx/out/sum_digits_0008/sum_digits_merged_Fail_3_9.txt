[kernel] Parsing out/sum_digits_0008/sum_digits_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] out/sum_digits_0008/sum_digits_merged.c:7: Warning: 
  Lambda-functions not yet implemented
[wp] out/sum_digits_0008/sum_digits_merged.c:7: Warning: 
  array type non-supported({ ℤ}ℤ)
[wp] 9 goals scheduled
[wp] [Timeout] typed_func_loop_invariant_established (Z3)
[wp] [Timeout] typed_func_loop_invariant_preserved (Qed 4ms) (Z3) (Stronger, 2 warnings)
[wp] [Timeout] typed_func_loop_invariant_2_preserved (Qed 3ms) (Z3) (Stronger, 2 warnings)
[wp] [Timeout] typed_func_loop_invariant_2_established (Z3) (Stronger, 2 warnings)
[wp] [Timeout] typed_func_loop_invariant_3_preserved (Qed 3ms) (Z3) (Stronger, 2 warnings)
[wp] [Timeout] typed_func_loop_invariant_4_established (Qed 0.83ms) (Z3) (Stronger, 2 warnings)
[wp] Proved goals:    3 / 9
  Qed:             3
  Timeout:         6
------------------------------------------------------------
  Function func
------------------------------------------------------------

Goal Preservation of Invariant (file out/sum_digits_0008/sum_digits_merged.c, line 6):
out/sum_digits_0008/sum_digits_merged.c:7: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/sum_digits_0008/sum_digits_merged.c:7: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Let x = num_0 % 10.
Let x_1 = num_0 / 10.
Assume {
  Type: is_sint32(num_0) /\ is_sint32(num_1) /\ is_sint32(x_1) /\
      is_sint32(x) /\ is_sint32(x_1 - x).
  (* Invariant *)
  Have: num_1 != 0.
  Warning[wp]: array type non-supported({ ℤ}ℤ)
  (Hide sub-term definition).
  Warning[wp]: Lambda-functions not yet implemented
  (Hide sub-term definition).
  (* Invariant *)
  Have: forall i : Z. ((num_1 <= i) -> (w = 0)).
  (* Invariant *)
  Have: 0 <= num_1.
  (* Invariant *)
  Have: ((x_1 = (num_0 + x)) -> (num_0 != 0)).
  Warning[wp]: array type non-supported({ ℤ}ℤ)
  (Hide sub-term definition).
  Warning[wp]: Lambda-functions not yet implemented
  (Hide sub-term definition).
  (* Invariant *)
  Have: forall i : Z. ((num_0 <= i) -> (x_1 = (w_1 + x))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> (((i + x) < x_1) -> ((i % 10) = i))).
  (* Invariant *)
  Have: 0 <= num_0.
  (* Then *)
  Have: 0 < num_0.
}
Prove: x_1 != 0.
Prover Z3 4.8.6 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/sum_digits_0008/sum_digits_merged.c, line 6):
Prove: false.
Prover Z3 4.8.6 returns Timeout (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/sum_digits_0008/sum_digits_merged.c, line 7):
out/sum_digits_0008/sum_digits_merged.c:7: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/sum_digits_0008/sum_digits_merged.c:7: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Let x = num_0 / 10.
Let x_1 = num_0 % 10.
Let x_2 = sum_0 + x_1.
Assume {
  Type: is_sint32(num_0) /\ is_sint32(num_1) /\ is_sint32(sum_0) /\
      is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_2).
  (* Goal *)
  When: x <= i.
  (* Invariant *)
  Have: num_1 != 0.
  Warning[wp]: array type non-supported({ ℤ}ℤ)
  (Hide sub-term definition).
  Warning[wp]: Lambda-functions not yet implemented
  (Hide sub-term definition).
  (* Invariant *)
  Have: forall i_1 : Z. ((num_1 <= i_1) -> (w_1 = 0)).
  (* Invariant *)
  Have: 0 <= num_1.
  (* Invariant *)
  Have: ((sum_0 = num_0) -> (num_0 != 0)).
  Warning[wp]: array type non-supported({ ℤ}ℤ)
  (Hide sub-term definition).
  Warning[wp]: Lambda-functions not yet implemented
  (Hide sub-term definition).
  (* Invariant *)
  Have: forall i_1 : Z. ((num_0 <= i_1) -> (w_2 = sum_0)).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < sum_0) ->
      ((i_1 % 10) = i_1))).
  (* Invariant *)
  Have: 0 <= num_0.
  (* Then *)
  Have: 0 < num_0.
  (* Invariant *)
  Have: ((x = x_2) -> (x != 0)).
}
Prove: x_2 = w.
Prover Z3 4.8.6 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/sum_digits_0008/sum_digits_merged.c, line 7):
out/sum_digits_0008/sum_digits_merged.c:7: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/sum_digits_0008/sum_digits_merged.c:7: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Assume {
  Type: is_sint32(num_0).
  (* Goal *)
  When: num_0 <= i.
  (* Invariant *)
  Have: num_0 != 0.
}
Prove: w = 0.
Prover Z3 4.8.6 returns Timeout (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/sum_digits_0008/sum_digits_merged.c, line 8):
out/sum_digits_0008/sum_digits_merged.c:7: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/sum_digits_0008/sum_digits_merged.c:7: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Let x = num_0 / 10.
Let x_1 = num_0 % 10.
Let x_2 = sum_0 + x_1.
Assume {
  Type: is_sint32(num_0) /\ is_sint32(num_1) /\ is_sint32(sum_0) /\
      is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_2).
  (* Goal *)
  When: (0 <= i) /\ (i < x_2).
  (* Invariant *)
  Have: num_1 != 0.
  Warning[wp]: array type non-supported({ ℤ}ℤ)
  (Hide sub-term definition).
  Warning[wp]: Lambda-functions not yet implemented
  (Hide sub-term definition).
  (* Invariant *)
  Have: forall i_1 : Z. ((num_1 <= i_1) -> (w = 0)).
  (* Invariant *)
  Have: 0 <= num_1.
  (* Invariant *)
  Have: ((sum_0 = num_0) -> (num_0 != 0)).
  Warning[wp]: array type non-supported({ ℤ}ℤ)
  (Hide sub-term definition).
  Warning[wp]: Lambda-functions not yet implemented
  (Hide sub-term definition).
  (* Invariant *)
  Have: forall i_1 : Z. ((num_0 <= i_1) -> (w_1 = sum_0)).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < sum_0) ->
      ((i_1 % 10) = i_1))).
  (* Invariant *)
  Have: 0 <= num_0.
  (* Then *)
  Have: 0 < num_0.
  (* Invariant *)
  Have: ((x = x_2) -> (x != 0)).
  Warning[wp]: array type non-supported({ ℤ}ℤ)
  (Hide sub-term definition).
  Warning[wp]: Lambda-functions not yet implemented
  (Hide sub-term definition).
  (* Invariant *)
  Have: forall i_1 : Z. ((x <= i_1) -> (x_2 = w_2)).
}
Prove: (i % 10) = i.
Prover Z3 4.8.6 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/sum_digits_0008/sum_digits_merged.c, line 8):
out/sum_digits_0008/sum_digits_merged.c:7: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/sum_digits_0008/sum_digits_merged.c:7: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/sum_digits_0008/sum_digits_merged.c, line 9):
out/sum_digits_0008/sum_digits_merged.c:7: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/sum_digits_0008/sum_digits_merged.c:7: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/sum_digits_0008/sum_digits_merged.c, line 9):
out/sum_digits_0008/sum_digits_merged.c:7: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/sum_digits_0008/sum_digits_merged.c:7: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Assume {
  Type: is_sint32(num_0).
  (* Invariant *)
  Have: num_0 != 0.
  Warning[wp]: array type non-supported({ ℤ}ℤ)
  (Hide sub-term definition).
  Warning[wp]: Lambda-functions not yet implemented
  (Hide sub-term definition).
  (* Invariant *)
  Have: forall i : Z. ((num_0 <= i) -> (w = 0)).
}
Prove: 0 <= num_0.
Prover Z3 4.8.6 returns Timeout (Qed:0.83ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:0.83ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/sum_digits_0008/sum_digits_merged.c, line 10):
out/sum_digits_0008/sum_digits_merged.c:7: warning from wp:
 - Warning: Hide sub-term definition
   Reason: array type non-supported({ ℤ}ℤ)
out/sum_digits_0008/sum_digits_merged.c:7: warning from wp:
 - Warning: Hide sub-term definition
   Reason: Lambda-functions not yet implemented
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/sum_digits_0008/sum_digits_merged.c:1: Warning: 
  No 'assigns' specification for function 'func'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/sum_digits_0008/sum_digits_merged.c:23: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

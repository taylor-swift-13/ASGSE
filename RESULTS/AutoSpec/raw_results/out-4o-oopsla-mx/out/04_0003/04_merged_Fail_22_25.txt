[kernel] Parsing out/04_0003/04_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 25 goals scheduled
[wp] [Timeout] typed_main_loop_invariant_established (Z3)
[wp] [Timeout] typed_main_loop_invariant_8_preserved (Qed 4ms) (Z3)
[wp] [Timeout] typed_main_loop_invariant_8_established (Qed 0.56ms) (Z3)
[wp] Proved goals:   22 / 25
  Qed:              16
  Alt-Ergo 2.6.2:    5 (4ms-13ms-18ms)
  Z3 4.8.6:          1 (10ms)
  Timeout:           3
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0003/04_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0003/04_merged.c, line 17):
Assume { Type: is_sint32(y). }
Prove: 0 < y.
Prover Z3 4.8.6 returns Timeout (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0003/04_merged.c, line 18):
Let x = y * (y - 1).
Let x_1 = x / 2.
Let x_2 = y_1 * (y_1 - 1).
Let x_3 = 1 + y.
Let x_4 = -x_1.
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_3) /\
      is_sint32(-50 - x_1) /\ is_sint32(y - 50 - x_1).
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (-1) <= x_2.
  (* Invariant *)
  Have: (x_2 / 2) = 0.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: (-99) <= x.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: x <= 1.
}
Prove: y <= (x_1 + ((y * x_3) / 2)).
Prover Z3 4.8.6 returns Valid (Qed:3ms) (10ms) (40895)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0003/04_merged.c, line 18):
Assume { Type: is_sint32(y). (* Invariant *) Have: 0 < y. }
Prove: (-1) <= (y * (y - 1)).
Prover Alt-Ergo 2.6.2 returns Valid (Qed:1ms) (4ms) (31)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0003/04_merged.c, line 19):
Let x = y * (y - 1).
Let x_1 = x / 2.
Let x_2 = 1 + y.
Let x_3 = y_1 * (y_1 - 1).
Let x_4 = -x_1.
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_2) /\
      is_sint32(-50 - x_1) /\ is_sint32(y - 50 - x_1).
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (-1) <= x_3.
  (* Invariant *)
  Have: (x_3 / 2) = 0.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: (-99) <= x.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: x <= 1.
  (* Invariant *)
  Have: y <= (x_1 + ((y * x_2) / 2)).
}
Prove: y <= (49 + x_1).
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (16ms) (851)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0003/04_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0003/04_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0003/04_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0003/04_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0003/04_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0003/04_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0003/04_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0003/04_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0003/04_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0003/04_merged.c, line 24):
Let x = y * (y - 1).
Let x_1 = x / 2.
Let x_2 = 1 + y.
Let x_3 = (y * x_2) / 2.
Let x_4 = y_1 * (y_1 - 1).
Let x_5 = -x_1.
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_2) /\
      is_sint32(-50 - x_1) /\ is_sint32(y - 50 - x_1).
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (-1) <= x_4.
  (* Invariant *)
  Have: (x_4 / 2) = 0.
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: (-99) <= x.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: x <= 1.
  (* Invariant *)
  Have: y <= (x_1 + x_3).
  (* Invariant *)
  Have: y <= (49 + x_1).
}
Prove: x_1 = (y + x_3).
Prover Z3 4.8.6 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0003/04_merged.c, line 24):
Let x = y * (y - 1).
Assume {
  Type: is_sint32(y).
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: (-1) <= x.
}
Prove: (x / 2) = 0.
Prover Z3 4.8.6 returns Timeout (Qed:0.56ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:0.56ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0003/04_merged.c, line 25):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = x_1 / 2.
Let x_3 = y + x_2.
Let x_4 = y * (y - 1).
Let x_5 = x_4 / 2.
Let x_6 = y_1 * (y_1 - 1).
Let x_7 = -x_2.
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x) /\
      is_sint32(-50 - x_2) /\ is_sint32(-50 - y - x_2).
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (-1) <= x_6.
  (* Invariant *)
  Have: (x_6 / 2) = 0.
  (* Invariant *)
  Have: 0 <= x_6.
  (* Invariant *)
  Have: 0 <= (y + x_5 + x_2).
  (* Invariant *)
  Have: (-49) <= x_3.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_5 = x_3.
  (* Invariant *)
  Have: x_3 <= x_4.
  (* Invariant *)
  Have: x_3 <= 0.
  (* Invariant *)
  Have: (-1) <= x_1.
  (* Invariant *)
  Have: (-99) <= x_1.
}
Prove: x_2 <= x_1.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:4ms) (10ms) (116)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0003/04_merged.c, line 25):
Let x = y * (y - 1).
Assume {
  Type: is_sint32(y).
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: (x / 2) = 0.
}
Prove: 0 <= x.
Prover Z3 4.8.6 returns Valid (Qed:1ms) (20ms) (41912)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:1ms) (18ms) (764)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0003/04_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0003/04_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0003/04_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0003/04_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0003/04_merged.c, line 28):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = x_1 / 2.
Let x_3 = y + x_2.
Let x_4 = y * (y - 1).
Let x_5 = x_4 / 2.
Let x_6 = y_1 * (y_1 - 1).
Let x_7 = -x_2.
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x) /\
      is_sint32(-50 - x_2) /\ is_sint32(-50 - y - x_2).
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (-1) <= x_6.
  (* Invariant *)
  Have: (x_6 / 2) = 0.
  (* Invariant *)
  Have: 0 <= x_6.
  (* Invariant *)
  Have: 0 <= (y + x_5 + x_2).
  (* Invariant *)
  Have: (-49) <= x_3.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_5 = x_3.
  (* Invariant *)
  Have: x_3 <= x_4.
  (* Invariant *)
  Have: x_3 <= 0.
  (* Invariant *)
  Have: (-1) <= x_1.
  (* Invariant *)
  Have: (-99) <= x_1.
  (* Invariant *)
  Have: x_2 <= x_1.
}
Prove: x_1 <= 1.
Prover Z3 4.8.6 returns Valid (Qed:4ms) (20ms) (36405)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:4ms) (18ms) (570)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0003/04_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Loop assigns (file out/04_0003/04_merged.c, line 29):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/04_0003/04_merged.c:12: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/search_2_0004/search_2_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 22 goals scheduled
[wp] Proved goals:   22 / 22
  Qed:              11
  Alt-Ergo 2.6.2:   11 (8ms-17ms)
------------------------------------------------------------
  Function arraySearch
------------------------------------------------------------

Goal Post-condition (file out/search_2_0004/search_2_merged.c, line 5) in 'arraySearch':
Let x = Mint_0[shift_sint32(a, p)].
Assume {
  Type: is_sint32(n) /\ is_sint32(p) /\ is_sint32(x).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ linked(Malloc_0).
  (* Pre-condition *)
  Have: 0 <= n.
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, shift_sint32(a, 0), n).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < p) ->
      (Mint_0[shift_sint32(a, i)] != x))).
  (* Invariant *)
  Have: 0 <= p.
  Have: p < n.
}
Prove: exists i : Z. (Mint_0[shift_sint32(a, i)] = x) /\ (0 <= i) /\ (i < n).
Prover Z3 4.8.6 returns Valid (Qed:3ms) (10ms) (82752)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (8ms) (42)

------------------------------------------------------------

Goal Post-condition (file out/search_2_0004/search_2_merged.c, line 6) in 'arraySearch':
Let x = Mint_0[shift_sint32(a, p)].
Assume {
  Type: is_sint32(n) /\ is_sint32(p) /\ is_sint32(x).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ linked(Malloc_0).
  (* Pre-condition *)
  Have: 0 <= n.
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, shift_sint32(a, 0), n).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < p) ->
      (Mint_0[shift_sint32(a, i)] != x))).
  (* Invariant *)
  Have: 0 <= p.
  Have: p < n.
}
Prove: exists i : Z. (Mint_0[shift_sint32(a, i)] = x) /\ (0 <= i) /\ (i < n).
Prover Z3 4.8.6 returns Valid (Qed:3ms) (10ms) (82752)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (11ms) (42)

------------------------------------------------------------

Goal Post-condition (file out/search_2_0004/search_2_merged.c, line 7) in 'arraySearch':
Assume {
  Type: is_sint32(arraySearch_0) /\ is_sint32(n) /\ is_sint32(p) /\
      is_sint32(x).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ linked(Malloc_0).
  (* Pre-condition *)
  Have: 0 <= n.
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, shift_sint32(a, 0), n).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < p) ->
      (Mint_0[shift_sint32(a, i)] != x))).
  (* Invariant *)
  Have: 0 <= p.
  If p < n
  Then {
    (* Then *)
    Have: Mint_0[shift_sint32(a, p)] = x.
    Have: arraySearch_0 = 1.
  }
  Else { Have: arraySearch_0 = 0. }
}
Prove: (exists i : Z. (Mint_0[shift_sint32(a, i)] = x) /\ (0 <= i) /\
        (i < n)) <-> (arraySearch_0 = 1).
Prover Alt-Ergo 2.6.2 returns Valid (Qed:7ms) (15ms) (132)

------------------------------------------------------------

Goal Post-condition (file out/search_2_0004/search_2_merged.c, line 8) in 'arraySearch':
Assume {
  Type: is_sint32(arraySearch_0) /\ is_sint32(n) /\ is_sint32(p) /\
      is_sint32(x).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ linked(Malloc_0).
  (* Pre-condition *)
  Have: 0 <= n.
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, shift_sint32(a, 0), n).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < p) ->
      (Mint_0[shift_sint32(a, i)] != x))).
  (* Invariant *)
  Have: 0 <= p.
  If p < n
  Then {
    (* Then *)
    Have: Mint_0[shift_sint32(a, p)] = x.
    Have: arraySearch_0 = 1.
  }
  Else { Have: arraySearch_0 = 0. }
}
Prove: (exists i : Z. (Mint_0[shift_sint32(a, i)] = x) /\ (0 <= i) /\
        (i < n)) <-> (arraySearch_0 = 1).
Prover Alt-Ergo 2.6.2 returns Valid (Qed:7ms) (15ms) (132)

------------------------------------------------------------

Goal Post-condition (file out/search_2_0004/search_2_merged.c, line 9) in 'arraySearch':
Assume {
  Type: is_sint32(n) /\ is_sint32(p) /\ is_sint32(x).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: (0 <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 <= n.
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, shift_sint32(a, 0), n).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < p) ->
      (Mint_0[shift_sint32(a, i_1)] != x))).
  (* Invariant *)
  Have: 0 <= p.
  Have: n <= p.
}
Prove: Mint_0[shift_sint32(a, i)] != x.
Prover Z3 4.8.6 returns Valid (Qed:3ms) (10ms) (82244)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (11ms) (54)

------------------------------------------------------------

Goal Post-condition (file out/search_2_0004/search_2_merged.c, line 10) in 'arraySearch':
Assume {
  Type: is_sint32(n) /\ is_sint32(p) /\ is_sint32(x).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: (0 <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 <= n.
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, shift_sint32(a, 0), n).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < p) ->
      (Mint_0[shift_sint32(a, i_1)] != x))).
  (* Invariant *)
  Have: 0 <= p.
  Have: n <= p.
}
Prove: Mint_0[shift_sint32(a, i)] != x.
Prover Z3 4.8.6 returns Valid (Qed:3ms) (20ms) (82244)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (12ms) (54)

------------------------------------------------------------

Goal Post-condition (file out/search_2_0004/search_2_merged.c, line 11) in 'arraySearch':
Assume {
  Type: is_sint32(arraySearch_0) /\ is_sint32(n) /\ is_sint32(p) /\
      is_sint32(x).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ linked(Malloc_0).
  (* Pre-condition *)
  Have: 0 <= n.
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, shift_sint32(a, 0), n).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < p) ->
      (Mint_0[shift_sint32(a, i)] != x))).
  (* Invariant *)
  Have: 0 <= p.
  If p < n
  Then {
    (* Then *)
    Have: Mint_0[shift_sint32(a, p)] = x.
    Have: arraySearch_0 = 1.
  }
  Else { Have: arraySearch_0 = 0. }
}
Prove: (forall i : Z. ((0 <= i) -> ((i < n) ->
        (Mint_0[shift_sint32(a, i)] != x)))) <-> (arraySearch_0 = 0).
Prover Z3 4.8.6 returns Valid (Qed:7ms) (90ms) (886901)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:7ms) (17ms) (134)

------------------------------------------------------------

Goal Post-condition (file out/search_2_0004/search_2_merged.c, line 12) in 'arraySearch':
Assume {
  Type: is_sint32(arraySearch_0) /\ is_sint32(n) /\ is_sint32(p) /\
      is_sint32(x).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ linked(Malloc_0).
  (* Pre-condition *)
  Have: 0 <= n.
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, shift_sint32(a, 0), n).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < p) ->
      (Mint_0[shift_sint32(a, i)] != x))).
  (* Invariant *)
  Have: 0 <= p.
  If p < n
  Then {
    (* Then *)
    Have: Mint_0[shift_sint32(a, p)] = x.
    Have: arraySearch_0 = 1.
  }
  Else { Have: arraySearch_0 = 0. }
}
Prove: (forall i : Z. ((0 <= i) -> ((i < n) ->
        (Mint_0[shift_sint32(a, i)] != x)))) <-> (arraySearch_0 = 0).
Prover Z3 4.8.6 returns Valid (Qed:8ms) (90ms) (886901)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:8ms) (15ms) (134)

------------------------------------------------------------

Goal Preservation of Invariant (file out/search_2_0004/search_2_merged.c, line 19):
Let x_1 = Mint_0[shift_sint32(a, p)].
Assume {
  Type: is_sint32(n) /\ is_sint32(p) /\ is_sint32(x) /\ is_sint32(1 + p) /\
      is_sint32(x_1).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: (0 <= i) /\ (i <= p).
  (* Pre-condition *)
  Have: 0 <= n.
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, shift_sint32(a, 0), n).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < p) ->
      (Mint_0[shift_sint32(a, i_1)] != x))).
  (* Invariant *)
  Have: 0 <= p.
  (* Then *)
  Have: p < n.
  (* Else *)
  Have: x_1 != x.
}
Prove: Mint_0[shift_sint32(a, i)] != x.
Prover Z3 4.8.6 returns Valid (Qed:2ms) (30ms) (212725)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (8ms) (67)

------------------------------------------------------------

Goal Establishment of Invariant (file out/search_2_0004/search_2_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/search_2_0004/search_2_merged.c, line 20):
Let x_1 = Mint_0[shift_sint32(a, p)].
Assume {
  Type: is_sint32(n) /\ is_sint32(p) /\ is_sint32(x) /\ is_sint32(1 + p) /\
      is_sint32(x_1).
  (* Heap *)
  Type: (region(a.base) <= 0) /\ linked(Malloc_0).
  (* Goal *)
  When: (0 <= i) /\ (i <= p).
  (* Pre-condition *)
  Have: 0 <= n.
  (* Pre-condition *)
  Have: 0 < n.
  (* Pre-condition *)
  Have: valid_rw(Malloc_0, shift_sint32(a, 0), n).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < p) ->
      (Mint_0[shift_sint32(a, i_1)] != x))).
  (* Invariant *)
  Have: 0 <= p.
  (* Then *)
  Have: p < n.
  (* Else *)
  Have: x_1 != x.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= p) ->
      (Mint_0[shift_sint32(a, i_1)] != x))).
}
Prove: Mint_0[shift_sint32(a, i)] != x.
Prover Z3 4.8.6 returns Valid (Qed:3ms) (10ms) (84363)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (8ms) (55)

------------------------------------------------------------

Goal Establishment of Invariant (file out/search_2_0004/search_2_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/search_2_0004/search_2_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/search_2_0004/search_2_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Loop assigns (file out/search_2_0004/search_2_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assigns nothing in 'arraySearch' (1/3):
Effect at line 24
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Assigns nothing in 'arraySearch' (2/3):
Effect at line 26
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Assigns nothing in 'arraySearch' (3/3):
Effect at line 30
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Assertion (file out/search_2_0004/search_2_merged.c, line 37):
Assume {
  Type: is_sint32(sum_0).
  (* Initializer *)
  Init: arr_0[0] = 1.
  (* Initializer *)
  Init: arr_0[1] = 2.
  (* Initializer *)
  Init: arr_0[2] = 3.
  (* Initializer *)
  Init: arr_0[3] = 4.
  (* Initializer *)
  Init: arr_0[4] = 5.
  (* Call 'arraySearch' *)
  Have: ((forall i : Z. ((0 <= i) -> ((i <= 4) -> (arr_0[i] != 3)))) <->
         (sum_0 = 0)) /\
      ((exists i : Z. (arr_0[i] = 3) /\ (0 <= i) /\ (i <= 4)) <->
       (sum_0 = 1)) /\
      (((sum_0 = 0) ->
       (forall i : Z. ((0 <= i) -> ((i <= 4) -> (arr_0[i] != 3)))))) /\
      (((sum_0 = 1) ->
       (exists i : Z. (arr_0[i] = 3) /\ (0 <= i) /\ (i <= 4)))).
}
Prove: sum_0 = 1.
Prover Z3 4.8.6 returns Valid (Qed:1ms) (10ms) (34417)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:1ms) (10ms) (40)

------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/search_2_0004/search_2_merged.c, line 2) in 'arraySearch'' in 'main' at initialization of 'sum' (file out/search_2_0004/search_2_merged.c, line 36)
:
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/search_2_0004/search_2_merged.c, line 3) in 'arraySearch'' in 'main' at initialization of 'sum' (file out/search_2_0004/search_2_merged.c, line 36)
:
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Instance of 'Pre-condition (file out/search_2_0004/search_2_merged.c, line 4) in 'arraySearch'' in 'main' at initialization of 'sum' (file out/search_2_0004/search_2_merged.c, line 36)
:
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/search_2_0004/search_2_merged.c:34: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

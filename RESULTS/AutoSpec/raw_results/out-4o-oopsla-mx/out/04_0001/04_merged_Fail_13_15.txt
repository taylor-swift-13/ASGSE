[kernel] Parsing out/04_0001/04_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 15 goals scheduled
[wp] [Timeout] typed_main_loop_invariant_3_preserved (Qed 2ms) (Z3)
[wp] [Timeout] typed_main_loop_invariant_5_established (Qed 0.70ms) (Z3)
[wp] Proved goals:   13 / 15
  Qed:               9
  Alt-Ergo 2.6.2:    3 (8ms-10ms)
  Z3 4.8.6:          1 (340ms)
  Timeout:           2
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 18):
Let x_1 = (y * (y - 1)) / 2.
Let x_2 = 1 + y.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_2) /\
      is_sint32(x + y).
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: (-1) <= (y_1 * (y_1 - 1)).
  (* Invariant *)
  Have: (50 + x) <= x_1.
  (* Invariant *)
  Have: x < 0.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: (-50) <= x.
  (* Invariant *)
  Have: (-50) <= (x + x_1).
}
Prove: (50 + x + y) <= ((y * x_2) / 2).
Prover Z3 4.8.6 returns Valid (Qed:2ms) (340ms) (3244116)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 18):
Assume { Type: is_sint32(y). }
Prove: (-1) <= (y * (y - 1)).
Prover Z3 4.8.6 returns Valid (20ms) (32244)
Prover Alt-Ergo 2.6.2 returns Valid (10ms) (30)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 19):
Let x_1 = 1 + y.
Let x_2 = (y * (y - 1)) / 2.
Let x_3 = x + y.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_1) /\
      is_sint32(x_3).
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: (-1) <= (y_1 * (y_1 - 1)).
  (* Invariant *)
  Have: (50 + x) <= x_2.
  (* Invariant *)
  Have: x < 0.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: (-50) <= x.
  (* Invariant *)
  Have: (-50) <= (x + x_2).
  (* Invariant *)
  Have: (50 + x + y) <= ((y * x_1) / 2).
}
Prove: x_3 < 0.
Prover Z3 4.8.6 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 21):
Assume { Type: is_sint32(y). (* Invariant *) Have: (-1) <= (y * (y - 1)). }
Prove: 0 <= y.
Prover Z3 4.8.6 returns Timeout (Qed:0.70ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:0.70ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 22):
Let x_1 = x + y.
Let x_2 = 1 + y.
Let x_3 = (y * (y - 1)) / 2.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_2) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: (-1) <= (y_1 * (y_1 - 1)).
  (* Invariant *)
  Have: (50 + x) <= x_3.
  (* Invariant *)
  Have: x < 0.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: (-50) <= x.
  (* Invariant *)
  Have: (-50) <= (x + x_3).
  (* Invariant *)
  Have: (50 + x + y) <= ((y * x_2) / 2).
  (* Invariant *)
  Have: x_1 < 0.
  (* Invariant *)
  Have: (-1) <= y.
}
Prove: (-50) <= x_1.
Prover Z3 4.8.6 returns Valid (Qed:2ms) (10ms) (34456)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (9ms) (38)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 23):
Let x_1 = x + y.
Let x_2 = 1 + y.
Let x_3 = (y * x_2) / 2.
Let x_4 = (y * (y - 1)) / 2.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_2) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: (-1) <= (y_1 * (y_1 - 1)).
  (* Invariant *)
  Have: (50 + x) <= x_4.
  (* Invariant *)
  Have: x < 0.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: (-50) <= x.
  (* Invariant *)
  Have: (-50) <= (x + x_4).
  (* Invariant *)
  Have: (50 + x + y) <= x_3.
  (* Invariant *)
  Have: x_1 < 0.
  (* Invariant *)
  Have: (-1) <= y.
  (* Invariant *)
  Have: (-50) <= x_1.
}
Prove: (-50) <= (x + y + x_3).
Prover Z3 4.8.6 returns Valid (Qed:3ms) (10ms) (34671)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (8ms) (40)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Loop assigns (file out/04_0001/04_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/04_0001/04_merged.c:12: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

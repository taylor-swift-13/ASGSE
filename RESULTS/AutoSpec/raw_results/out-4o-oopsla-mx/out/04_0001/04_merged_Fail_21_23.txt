[kernel] Parsing out/04_0001/04_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 23 goals scheduled
[wp] [Timeout] typed_main_loop_invariant_established (Z3)
[wp] [Timeout] typed_main_loop_invariant_6_established (Qed 1ms) (Z3)
[wp] Proved goals:   21 / 23
  Qed:              14
  Alt-Ergo 2.6.2:    7 (7ms-15ms-24ms)
  Timeout:           2
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 17):
Let x = y * (y - 1).
Let x_1 = x / 2.
Let x_2 = y_1 * (y_1 - 1).
Let x_3 = 1 + y.
Let x_4 = -x_1.
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_3) /\
      is_sint32(-50 - x_1) /\ is_sint32(y - 50 - x_1).
  (* Goal *)
  When: 0 <= y.
  (* Invariant *)
  Have: x_2 <= 1.
  (* Invariant *)
  Have: (-1) <= x_2.
  (* Invariant *)
  Have: 51 <= y_1.
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (x_2 / 2) = 0.
  (* Invariant *)
  Have: x <= 1.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: (-99) <= x.
  (* Invariant *)
  Have: (51 + x_1) <= y.
  (* Invariant *)
  Have: 0 < y.
}
Prove: (x_1 + ((y * x_3) / 2)) <= y.
Prover Z3 4.8.6 returns Valid (Qed:3ms) (20ms) (39344)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (24ms) (821)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 17):
Assume { Type: is_sint32(y). (* Goal *) When: 0 < y. }
Prove: (y * (y - 1)) <= 1.
Prover Z3 4.8.6 returns Timeout (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 19):
Let x = y * (y - 1).
Let x_1 = x / 2.
Let x_2 = 1 + y.
Let x_3 = x_1 + ((y * x_2) / 2).
Let x_4 = y_1 * (y_1 - 1).
Let x_5 = -x_1.
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_2) /\
      is_sint32(-50 - x_1) /\ is_sint32(y - 50 - x_1).
  (* Invariant *)
  Have: x_4 <= 1.
  (* Invariant *)
  Have: (-1) <= x_4.
  (* Invariant *)
  Have: 51 <= y_1.
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (x_4 / 2) = 0.
  (* Invariant *)
  Have: x <= 1.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: (-99) <= x.
  (* Invariant *)
  Have: (51 + x_1) <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_3 <= y.
}
Prove: y <= x_3.
Prover Z3 4.8.6 returns Valid (Qed:3ms) (40ms) (796526)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (20ms) (911)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 19):
Let x = y * (y - 1).
Assume { Type: is_sint32(y). (* Invariant *) Have: ((0 < y) -> (x <= 1)). }
Prove: (-1) <= x.
Prover Z3 4.8.6 returns Unknown (Qed:0.65ms)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:0.65ms) (7ms) (498)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 20):
Let x = y * (y - 1).
Let x_1 = x / 2.
Let x_2 = 1 + y.
Let x_3 = x_1 + ((y * x_2) / 2).
Let x_4 = y_1 * (y_1 - 1).
Let x_5 = -x_1.
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_2) /\
      is_sint32(-50 - x_1) /\ is_sint32(y - 50 - x_1).
  (* Invariant *)
  Have: x_4 <= 1.
  (* Invariant *)
  Have: (-1) <= x_4.
  (* Invariant *)
  Have: 51 <= y_1.
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (x_4 / 2) = 0.
  (* Invariant *)
  Have: x <= 1.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: (-99) <= x.
  (* Invariant *)
  Have: (51 + x_1) <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_3 <= y.
  (* Invariant *)
  Have: y <= x_3.
}
Prove: y <= (49 + x_1).
Prover Z3 4.8.6 returns Valid (Qed:3ms) (10ms) (50667)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (24ms) (934)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 22):
Let x = y * (y - 1).
Let x_1 = x / 2.
Let x_2 = 1 + y.
Let x_3 = x_1 + ((y * x_2) / 2).
Let x_4 = y_1 * (y_1 - 1).
Let x_5 = -x_1.
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_2) /\
      is_sint32(-50 - x_1) /\ is_sint32(y - 50 - x_1).
  (* Goal *)
  When: y <= (49 + x_1).
  (* Invariant *)
  Have: x_4 <= 1.
  (* Invariant *)
  Have: (-1) <= x_4.
  (* Invariant *)
  Have: 51 <= y_1.
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (x_4 / 2) = 0.
  (* Invariant *)
  Have: x <= 1.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: (-99) <= x.
  (* Invariant *)
  Have: (51 + x_1) <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_3 <= y.
  (* Invariant *)
  Have: y <= x_3.
}
Prove: (50 + x_1) <= (2 * y).
Prover Z3 4.8.6 returns Valid (Qed:3ms) (10ms) (35091)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (9ms) (95)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 22):
Let x = y * (y - 1).
Assume {
  Type: is_sint32(y).
  (* Invariant *)
  Have: ((0 < y) -> (x <= 1)).
  (* Invariant *)
  Have: (-1) <= x.
}
Prove: 51 <= y.
Prover Z3 4.8.6 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 24):
Let x = y * (y - 1).
Let x_1 = x / 2.
Let x_2 = 1 + y.
Let x_3 = (y * x_2) / 2.
Let x_4 = x_1 + x_3.
Let x_5 = y_1 * (y_1 - 1).
Let x_6 = -x_1.
Assume {
  Type: is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(x_2) /\
      is_sint32(-50 - x_1) /\ is_sint32(y - 50 - x_1).
  (* Invariant *)
  Have: x_5 <= 1.
  (* Invariant *)
  Have: (-1) <= x_5.
  (* Invariant *)
  Have: 51 <= y_1.
  (* Invariant *)
  Have: 0 < y_1.
  (* Invariant *)
  Have: (x_5 / 2) = 0.
  (* Invariant *)
  Have: x <= 1.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: (-99) <= x.
  (* Invariant *)
  Have: (51 + x_1) <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_4 <= y.
  (* Invariant *)
  Have: y <= x_4.
  (* Invariant *)
  Have: y <= (49 + x_1).
  (* Invariant *)
  Have: (50 + x_1) <= (2 * y).
}
Prove: x_1 = (y + x_3).
Prover Z3 4.8.6 returns Valid (Qed:4ms) (10ms) (35272)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:4ms) (9ms) (99)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 24):
Let x = y * (y - 1).
Assume {
  Type: is_sint32(y).
  (* Invariant *)
  Have: x <= 1.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: 51 <= y.
  (* Invariant *)
  Have: 0 < y.
}
Prove: (x / 2) = 0.
Prover Z3 4.8.6 returns Valid (Qed:1ms) (10ms) (33318)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:1ms) (11ms) (140)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/04_0001/04_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/04_0001/04_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Loop assigns (file out/04_0001/04_merged.c, line 28):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/04_0001/04_merged.c:12: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

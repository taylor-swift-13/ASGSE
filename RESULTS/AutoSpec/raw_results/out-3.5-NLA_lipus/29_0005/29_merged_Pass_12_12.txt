[kernel] Parsing out/29_0005/29_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 12 goals scheduled
[wp] Proved goals:   12 / 12
  Qed:               8
  Alt-Ergo 2.5.4:    3 (8ms-10ms-13ms)
  Z3 4.8.12:         1 (3.2s)
------------------------------------------------------------
  Function main29
------------------------------------------------------------

Goal Preservation of Invariant (file out/29_0005/29_merged.c, line 14):
Let x_1 = p + (x * y).
Let x_2 = w + (y * y).
Let x_3 = z + (x * x).
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(p) /\ is_sint32(w) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(x_1) /\
      is_sint32(x_2) /\ is_sint32(x_3).
  (* Pre-condition *)
  Have: 0 <= x.
  (* Pre-condition *)
  Have: 0 <= y.
  (* Pre-condition *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (p * p) <= (w * z).
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: 0 <= w.
  (* Invariant *)
  Have: 0 <= p.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
}
Prove: (x_1 * x_1) <= (x_2 * x_3).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (3.2s) (7297065)

------------------------------------------------------------

Goal Establishment of Invariant (file out/29_0005/29_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/29_0005/29_merged.c, line 15):
Let x_1 = p + (x * y).
Let x_2 = w + (y * y).
Let x_3 = z + (x * x).
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(p) /\ is_sint32(w) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(x_1) /\
      is_sint32(x_2) /\ is_sint32(x_3).
  (* Pre-condition *)
  Have: 0 <= x.
  (* Pre-condition *)
  Have: 0 <= y.
  (* Pre-condition *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (p * p) <= (w * z).
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: 0 <= w.
  (* Invariant *)
  Have: 0 <= p.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x_1 * x_1) <= (x_2 * x_3).
}
Prove: 0 <= x_3.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (20ms) (35678)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (13ms) (103)

------------------------------------------------------------

Goal Establishment of Invariant (file out/29_0005/29_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/29_0005/29_merged.c, line 16):
Let x_1 = z + (x * x).
Let x_2 = p + (x * y).
Let x_3 = w + (y * y).
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(p) /\ is_sint32(w) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(x_2) /\
      is_sint32(x_3) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 <= x.
  (* Pre-condition *)
  Have: 0 <= y.
  (* Pre-condition *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (p * p) <= (w * z).
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: 0 <= w.
  (* Invariant *)
  Have: 0 <= p.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x_2 * x_2) <= (x_3 * x_1).
  (* Invariant *)
  Have: 0 <= x_1.
}
Prove: 0 <= x_3.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (35810)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (8ms) (86)

------------------------------------------------------------

Goal Establishment of Invariant (file out/29_0005/29_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/29_0005/29_merged.c, line 17):
Let x_1 = w + (y * y).
Let x_2 = z + (x * x).
Let x_3 = p + (x * y).
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(p) /\ is_sint32(w) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(x_3) /\
      is_sint32(x_1) /\ is_sint32(x_2).
  (* Pre-condition *)
  Have: 0 <= x.
  (* Pre-condition *)
  Have: 0 <= y.
  (* Pre-condition *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (p * p) <= (w * z).
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: 0 <= w.
  (* Invariant *)
  Have: 0 <= p.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x_3 * x_3) <= (x_1 * x_2).
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 <= x_1.
}
Prove: 0 <= x_3.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (36286)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (8ms) (76)

------------------------------------------------------------

Goal Establishment of Invariant (file out/29_0005/29_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/29_0005/29_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/29_0005/29_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.82ms)

------------------------------------------------------------

Goal Assertion (file out/29_0005/29_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/29_0005/29_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/29_0005/29_merged.c:6: Warning: 
  No 'assigns' specification for function 'main29'.
  Callers assumptions might be imprecise.

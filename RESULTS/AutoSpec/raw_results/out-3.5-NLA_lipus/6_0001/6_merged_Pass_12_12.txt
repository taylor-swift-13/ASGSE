[kernel] Parsing out/6_0001/6_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 12 goals scheduled
[wp] Proved goals:   12 / 12
  Qed:               7
  Alt-Ergo 2.5.4:    5 (9ms-17ms-27ms)
------------------------------------------------------------
  Function main6
------------------------------------------------------------

Goal Preservation of Invariant (file out/6_0001/6_merged.c, line 17):
Let x = (a * q_2) + (b * s_2).
Let x_1 = (a * p_2) + (b * r_2).
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(p) /\ is_sint32(p_1) /\
      is_sint32(p_2) /\ is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\
      is_sint32(r) /\ is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\
      is_sint32(s_1) /\ is_sint32(s_2) /\ is_sint32(x_1) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < a.
  (* Pre-condition *)
  Have: 0 < b.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < x_1.
  (* Then *)
  Have: x != x_1.
  If x < x_1
  Then {
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1).
  }
}
Prove: (p * s) = (1 + (q * r)).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:38ms) (17ms) (354)

------------------------------------------------------------

Goal Establishment of Invariant (file out/6_0001/6_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/6_0001/6_merged.c, line 18):
Let x_1 = s - r.
Let x_2 = q - p.
Let x_3 = q * x.
Let x_4 = s * y.
Let x_5 = x_3 + x_4.
Let x_6 = p * x.
Let x_7 = r * y.
Let x_8 = x_6 + x_7.
Assume {
  Type: is_sint32(p) /\ is_sint32(q) /\ is_sint32(r) /\ is_sint32(s) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_2) /\ is_sint32(x_1) /\
      is_sint32(x_8) /\ is_sint32(x_5) /\ is_sint32(x_3 + x_4 - x_6 - x_7).
  (* Residual *)
  When: x_8 <= x_5.
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: 0 < x_5.
  (* Invariant *)
  Have: 0 < x_8.
  (* Then *)
  Have: x_5 != x_8.
  (* Invariant *)
  Have: (p * x_1) = (1 + (r * x_2)).
}
Prove: (x_6 + x_7 + (x * x_2) + (y * x_1)) = x_5.
Prover Z3 4.8.12 returns Valid (Qed:43ms) (10ms) (10095)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:43ms) (10ms) (217)

------------------------------------------------------------

Goal Establishment of Invariant (file out/6_0001/6_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/6_0001/6_merged.c, line 19):
Let x_1 = p - q.
Let x_2 = r - s.
Let x_3 = p * x.
Let x_4 = r * y.
Let x_5 = x_3 + x_4.
Let x_6 = q * x.
Let x_7 = s * y.
Let x_8 = x_6 + x_7.
Assume {
  Type: is_sint32(p) /\ is_sint32(q) /\ is_sint32(r) /\ is_sint32(s) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_1) /\ is_sint32(x_2) /\
      is_sint32(x_5) /\ is_sint32(x_8) /\ is_sint32(x_3 + x_4 - x_6 - x_7).
  (* Residual *)
  When: x_8 < x_5.
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: 0 < x_8.
  (* Invariant *)
  Have: 0 < x_5.
  (* Invariant *)
  Have: (s * x_1) = (1 + (q * x_2)).
}
Prove: (x_6 + x_7 + (x * x_1) + (y * x_2)) = x_5.
Prover Z3 4.8.12 returns Valid (Qed:46ms) (10ms) (10067)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:46ms) (9ms) (202)

------------------------------------------------------------

Goal Establishment of Invariant (file out/6_0001/6_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/6_0001/6_merged.c, line 20):
Let x_1 = s - r.
Let x_2 = q - p.
Let x_3 = p * x.
Let x_4 = r * y.
Let x_5 = x * x_2.
Let x_6 = y * x_1.
Let x_7 = x_3 + x_4 + x_5 + x_6.
Let x_8 = (q * x) + (s * y).
Let x_9 = x_3 + x_4.
Let x_10 = x_5 + x_6.
Assume {
  Type: is_sint32(p) /\ is_sint32(q) /\ is_sint32(r) /\ is_sint32(s) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_2) /\ is_sint32(x_1) /\
      is_sint32(x_9) /\ is_sint32(x_8) /\ is_sint32(x_10) /\ is_sint32(x_7).
  (* Residual *)
  When: x_9 <= x_8.
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: 0 < x_8.
  (* Invariant *)
  Have: 0 < x_9.
  (* Then *)
  Have: x_8 != x_9.
  Have: x_7 = x_8.
  (* Invariant *)
  Have: (p * x_1) = (1 + (r * x_2)).
}
Prove: 0 < x_10.
Prover Z3 4.8.12 returns Valid (Qed:42ms) (20ms) (33057)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:42ms) (19ms) (268)

------------------------------------------------------------

Goal Establishment of Invariant (file out/6_0001/6_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/6_0001/6_merged.c, line 21):
Let x_1 = p - q.
Let x_2 = r - s.
Let x_3 = q * x.
Let x_4 = s * y.
Let x_5 = x * x_1.
Let x_6 = y * x_2.
Let x_7 = x_3 + x_4 + x_5 + x_6.
Let x_8 = (p * x) + (r * y).
Let x_9 = x_3 + x_4.
Let x_10 = x_5 + x_6.
Assume {
  Type: is_sint32(p) /\ is_sint32(q) /\ is_sint32(r) /\ is_sint32(s) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_1) /\ is_sint32(x_2) /\
      is_sint32(x_8) /\ is_sint32(x_9) /\ is_sint32(x_10) /\ is_sint32(x_7).
  (* Residual *)
  When: x_9 < x_8.
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: 0 < x_9.
  (* Invariant *)
  Have: 0 < x_8.
  Have: x_7 = x_8.
  (* Invariant *)
  Have: (s * x_1) = (1 + (q * x_2)).
}
Prove: 0 < x_10.
Prover Z3 4.8.12 returns Valid (Qed:37ms) (10ms) (10115)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:37ms) (27ms) (251)

------------------------------------------------------------

Goal Establishment of Invariant (file out/6_0001/6_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.92ms)

------------------------------------------------------------

Goal Assertion (file out/6_0001/6_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Loop assigns (file out/6_0001/6_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/6_0001/6_merged.c:4: Warning: 
  No 'assigns' specification for function 'main6'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/3_0004/3_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 10 goals scheduled
[wp] Proved goals:   10 / 10
  Qed:               6
  Alt-Ergo 2.5.4:    4
------------------------------------------------------------
  Function main3
------------------------------------------------------------

Goal Preservation of Invariant (file out/3_0004/3_merged.c, line 10):
Let x_1 = r_2 + (q * y).
Assume {
  Type: is_sint32(q) /\ is_sint32(r) /\ is_sint32(r_1) /\ is_sint32(r_2) /\
      is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: r_2 < y.
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: 0 <= r_2.
  (* Invariant *)
  Have: 0 <= q.
  (* Then *)
  Have: x_1 < x.
  If (1 + r_2) = y
  Then { Have: r = 0. }
  Else { Have: r_2 = r_1. Have: (1 + r_1) = r. }
}
Prove: r < y.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (32110)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (4ms) (41)

------------------------------------------------------------

Goal Establishment of Invariant (file out/3_0004/3_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/3_0004/3_merged.c, line 11):
Let x_1 = r_2 + (q_2 * y).
Assume {
  Type: is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: r_2 < y.
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: 0 <= r_2.
  (* Invariant *)
  Have: 0 <= q_2.
  (* Then *)
  Have: x_1 < x.
  If (1 + r_2) = y
  Then { Have: q_2 = q_1. Have: r = 0. Have: (1 + q_1) = q. }
  Else { Have: (q_2 = q) /\ (r_2 = r_1). Have: (1 + r_1) = r. }
  (* Invariant *)
  Have: r < y.
}
Prove: (r + (q * y)) <= x.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (50ms) (73539)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (69)

------------------------------------------------------------

Goal Establishment of Invariant (file out/3_0004/3_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/3_0004/3_merged.c, line 12):
Let x_1 = r_2 + (q_2 * y).
Assume {
  Type: is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: r_2 < y.
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: 0 <= r_2.
  (* Invariant *)
  Have: 0 <= q_2.
  (* Then *)
  Have: x_1 < x.
  If (1 + r_2) = y
  Then { Have: q_2 = q_1. Have: r = 0. Have: (1 + q_1) = q. }
  Else { Have: (q_2 = q) /\ (r_2 = r_1). Have: (1 + r_1) = r. }
  (* Invariant *)
  Have: r < y.
  (* Invariant *)
  Have: (r + (q * y)) <= x.
}
Prove: 0 <= r.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (20ms) (33632)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (8ms) (69)

------------------------------------------------------------

Goal Establishment of Invariant (file out/3_0004/3_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/3_0004/3_merged.c, line 13):
Let x_1 = r_2 + (q_2 * y).
Assume {
  Type: is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: r_2 < y.
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: 0 <= r_2.
  (* Invariant *)
  Have: 0 <= q_2.
  (* Then *)
  Have: x_1 < x.
  If (1 + r_2) = y
  Then { Have: q_2 = q_1. Have: r = 0. Have: (1 + q_1) = q. }
  Else { Have: (q_2 = q) /\ (r_2 = r_1). Have: (1 + r_1) = r. }
  (* Invariant *)
  Have: r < y.
  (* Invariant *)
  Have: (r + (q * y)) <= x.
  (* Invariant *)
  Have: 0 <= r.
}
Prove: 0 <= q.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (33760)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (7ms) (70)

------------------------------------------------------------

Goal Establishment of Invariant (file out/3_0004/3_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Assertion (file out/3_0004/3_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/3_0004/3_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/3_0004/3_merged.c:4: Warning: 
  No 'assigns' specification for function 'main3'.
  Callers assumptions might be imprecise.

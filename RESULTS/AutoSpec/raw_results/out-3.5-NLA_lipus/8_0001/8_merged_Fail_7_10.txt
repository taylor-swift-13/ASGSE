[kernel] Parsing out/8_0001/8_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 10 goals scheduled
[wp] [Timeout] typed_main8_loop_invariant_2_preserved (Qed 41ms) (Z3)
[wp] [Timeout] typed_main8_loop_invariant_3_preserved (Qed 46ms) (Z3)
[wp] [Timeout] typed_main8_assert (Qed 6ms) (Z3)
[wp] Proved goals:    7 / 10
  Qed:               5
  Alt-Ergo 2.5.4:    2 (11ms-24ms)
  Timeout:           3
------------------------------------------------------------
  Function main8
------------------------------------------------------------

Goal Preservation of Invariant (file out/8_0001/8_merged.c, line 17):
Let x = (a * r_2) + (b * s_2).
Let x_1 = (a * p_2) + (b * q_2).
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(p) /\ is_sint32(p_1) /\
      is_sint32(p_2) /\ is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\
      is_sint32(r) /\ is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\
      is_sint32(s_1) /\ is_sint32(s_2) /\ is_sint32(x_1) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < x_1.
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: (p_2 * s_2) = (1 + (q_2 * r_2)).
  (* Invariant *)
  Have: (0 < a) /\ (0 < b).
  (* Then *)
  Have: b != a.
  If b < a
  Then {
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1).
  }
}
Prove: (p * s) = (1 + (q * r)).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:31ms) (11ms) (354)

------------------------------------------------------------

Goal Establishment of Invariant (file out/8_0001/8_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.73ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/8_0001/8_merged.c, line 18):
Let x = (a * r) + (b * s).
Let x_1 = (a * p_2) + (b * q_2).
Assume {
  Type: is_sint32(a_1) /\ is_sint32(a) /\ is_sint32(b_1) /\ is_sint32(b_2) /\
      is_sint32(b) /\ is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\
      is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r_1) /\
      is_sint32(r) /\ is_sint32(s_1) /\ is_sint32(s_2) /\ is_sint32(s) /\
      is_sint32(x_1) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < x_1.
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: (p_2 * s) = (1 + (q_2 * r)).
  (* Invariant *)
  Have: (0 < a) /\ (0 < b).
  (* Then *)
  Have: b != a.
  If b < a
  Then {
    Have: (b = b_1) /\ (p_2 = p_1) /\ (q_2 = q) /\ (s = s_1).
    Have: (a_1 + b_1) = a.
    Have: (p + q) = p_1.
    Have: (r_1 + s_1) = r.
  }
  Else {
    Have: (b = b_2) /\ (q_2 = q_1) /\ (s = s_2) /\ ((a_1 + b_1) = b_2) /\
        ((a + b_1) = b_2) /\ ((p + q) = q_1) /\ ((p_2 + q) = q_1) /\
        ((r_1 + s_1) = s_2) /\ ((r + s_1) = s_2).
  }
  (* Invariant *)
  Have: (p * s_1) = (1 + (q * r_1)).
}
Prove: x = ((a_1 * r_1) + (b_1 * s_1)).
Prover Z3 4.8.12 returns Timeout (Qed:41ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:41ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/8_0001/8_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/8_0001/8_merged.c, line 19):
Let x = (a_1 * r) + (b_1 * s).
Let x_1 = (a * p) + (b * q).
Assume {
  Type: is_sint32(a_1) /\ is_sint32(a) /\ is_sint32(b_1) /\ is_sint32(b_2) /\
      is_sint32(b) /\ is_sint32(p_1) /\ is_sint32(p) /\ is_sint32(q_1) /\
      is_sint32(q_2) /\ is_sint32(q) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 < x_1.
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: (p * s_2) = (1 + (q * r_2)).
  (* Invariant *)
  Have: ((a * r_2) + (b * s_2)) = x.
  (* Invariant *)
  Have: (0 < a) /\ (0 < b).
  (* Then *)
  Have: b != a.
  If b < a
  Then {
    Have: (b = b_1) /\ (q = q_1) /\ (r_2 = r_1) /\ (s_2 = s).
    Have: (a_1 + b_1) = a.
    Have: (p_1 + q_1) = p.
    Have: (r + s) = r_1.
  }
  Else {
    Have: (b = b_2) /\ (q = q_2) /\ (s_2 = s_1) /\ ((a_1 + b_1) = b_2) /\
        ((a + b_1) = b_2) /\ ((p_1 + q_1) = q_2) /\ ((p + q_1) = q_2) /\
        ((r + s) = s_1) /\ ((r_2 + s) = s_1).
  }
  (* Invariant *)
  Have: (p_1 * s) = (1 + (q_1 * r)).
}
Prove: x_1 = ((a_1 * p_1) + (b_1 * q_1)).
Prover Z3 4.8.12 returns Timeout (Qed:46ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:46ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/8_0001/8_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/8_0001/8_merged.c, line 20):
Let x = s - r.
Let x_1 = q - p.
Let x_2 = b - a.
Let x_3 = x_2 * x_1.
Let x_4 = x_2 * x.
Let x_5 = (a * r) + x_4.
Let x_6 = (a * p) + x_3.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(p) /\ is_sint32(q) /\
      is_sint32(r) /\ is_sint32(s) /\ is_sint32(x_2) /\ is_sint32(x_1) /\
      is_sint32(x) /\ is_sint32(x_6) /\ is_sint32(x_5).
  (* Residual *)
  When: a <= b.
  (* Pre-condition *)
  Have: 0 < x_6.
  (* Pre-condition *)
  Have: 0 < x_5.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: x_4 = (b * s).
  (* Invariant *)
  Have: x_3 = (b * q).
  (* Invariant *)
  Have: (0 < a) /\ (0 < b).
  (* Then *)
  Have: b != a.
  (* Invariant *)
  Have: (p * x) = (1 + (r * x_1)).
}
Prove: a < b.
Prover Z3 4.8.12 returns Valid (Qed:51ms) (20ms) (33642)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:51ms) (24ms) (152)

------------------------------------------------------------

Goal Establishment of Invariant (file out/8_0001/8_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Assertion (file out/8_0001/8_merged.c, line 41):
Let x = (a * r) + (a * s).
Let x_1 = (a * p) + (a * q).
Assume {
  Type: is_sint32(a) /\ is_sint32(p) /\ is_sint32(q) /\ is_sint32(r) /\
      is_sint32(s) /\ is_sint32(x_1) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < x_1.
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: (p * s) = (1 + (q * r)).
  (* Invariant *)
  Have: 0 < a.
}
Prove: ((r - s) * x) = ((q - p) * x_1).
Prover Z3 4.8.12 returns Timeout (Qed:6ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:6ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/8_0001/8_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/8_0001/8_merged.c:4: Warning: 
  No 'assigns' specification for function 'main8'.
  Callers assumptions might be imprecise.

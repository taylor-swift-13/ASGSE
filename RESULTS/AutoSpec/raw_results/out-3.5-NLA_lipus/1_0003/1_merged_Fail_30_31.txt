[kernel] Parsing out/1_0003/1_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 31 goals scheduled
[wp] [Timeout] typed_main1_loop_invariant_7_preserved (Qed 5ms) (Z3)
[wp] Proved goals:   30 / 31
  Qed:              22
  Alt-Ergo 2.5.4:    7 (4ms-8ms-19ms)
  Z3 4.8.12:         1 (30ms)
  Timeout:           1
------------------------------------------------------------
  Function main1
------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0003/1_merged.c, line 12):
Let x = n * n * n.
Let x_1 = n * n.
Let x_2 = 3 * n.
Let x_3 = 3 * x_1.
Let x_4 = 1 + x_2 + x_3.
Let x_5 = 6 * n.
Let x_6 = 6 + x_5.
Let x_7 = 12 + x_5.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x_6) /\ is_sint32(x_7) /\
      is_sint32(x) /\ is_sint32(x_4).
  (* Pre-condition *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: (x_6 % 6) = 0.
  (* Invariant *)
  Have: x_1 <= (1 + n).
  (* Invariant *)
  Have: x <= x_4.
  (* Invariant *)
  Have: x <= (x_2 + x_3).
  (* Invariant *)
  Have: (x = 0) \/ ((x % 3) = 0).
  (* Invariant *)
  Have: n <= (1 + a).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= (n + x_1).
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: n <= a.
}
Prove: (x_7 % 6) = 0.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (41912)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (19ms) (926)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0003/1_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0003/1_merged.c, line 13):
Let x = 6 * n.
Let x_1 = 12 + x.
Let x_2 = n * n * n.
Let x_3 = n * n.
Let x_4 = n + x_3.
Let x_5 = 3 * n.
Let x_6 = 3 * x_3.
Let x_7 = 1 + x_5 + x_6.
Let x_8 = 6 + x.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x_8) /\ is_sint32(x_1) /\
      is_sint32(x_2) /\ is_sint32(x_7) /\ is_sint32(7 + (9 * n) + x_6).
  (* Pre-condition *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: (x_8 % 6) = 0.
  (* Invariant *)
  Have: x_3 <= (1 + n).
  (* Invariant *)
  Have: x_2 <= x_7.
  (* Invariant *)
  Have: x_2 <= (x_5 + x_6).
  (* Invariant *)
  Have: (x_2 = 0) \/ ((x_2 % 3) = 0).
  (* Invariant *)
  Have: n <= (1 + a).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Then *)
  Have: n <= a.
  (* Invariant *)
  Have: (x_1 % 6) = 0.
}
Prove: x_4 <= 1.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (30ms) (82354)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0003/1_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0003/1_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0003/1_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0003/1_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0003/1_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0003/1_merged.c, line 16):
Let x = n * n.
Let x_1 = n + x.
Let x_2 = 6 * n.
Let x_3 = 12 + x_2.
Let x_4 = n * n * n.
Let x_5 = 3 * n.
Let x_6 = 3 * x.
Let x_7 = 1 + x_5 + x_6.
Let x_8 = 6 + x_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x_8) /\ is_sint32(x_3) /\
      is_sint32(x_4) /\ is_sint32(x_7) /\ is_sint32(7 + (9 * n) + x_6) /\
      is_sint32(1 + x_5 + x_6 + x_4).
  (* Pre-condition *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: (x_8 % 6) = 0.
  (* Invariant *)
  Have: x <= (1 + n).
  (* Invariant *)
  Have: x_4 <= x_7.
  (* Invariant *)
  Have: x_4 <= (x_5 + x_6).
  (* Invariant *)
  Have: (x_4 = 0) \/ ((x_4 % 3) = 0).
  (* Invariant *)
  Have: n <= (1 + a).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: 0 <= x_4.
  (* Then *)
  Have: n <= a.
  (* Invariant *)
  Have: (x_3 % 6) = 0.
  (* Invariant *)
  Have: x_1 <= 1.
}
Prove: x_4 <= x_8.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (33267)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (7ms) (113)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0003/1_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0003/1_merged.c, line 17):
Let x = n * n * n.
Let x_1 = 6 * n.
Let x_2 = 6 + x_1.
Let x_3 = n * n.
Let x_4 = n + x_3.
Let x_5 = 12 + x_1.
Let x_6 = 3 * n.
Let x_7 = 3 * x_3.
Let x_8 = 1 + x_6 + x_7.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x_2) /\ is_sint32(x_5) /\
      is_sint32(x) /\ is_sint32(x_8) /\ is_sint32(7 + (9 * n) + x_7) /\
      is_sint32(1 + x_6 + x_7 + x).
  (* Pre-condition *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: (x_2 % 6) = 0.
  (* Invariant *)
  Have: x_3 <= (1 + n).
  (* Invariant *)
  Have: x <= x_8.
  (* Invariant *)
  Have: x <= (x_6 + x_7).
  (* Invariant *)
  Have: (x = 0) \/ ((x % 3) = 0).
  (* Invariant *)
  Have: n <= (1 + a).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: n <= a.
  (* Invariant *)
  Have: (x_5 % 6) = 0.
  (* Invariant *)
  Have: x_4 <= 1.
  (* Invariant *)
  Have: x <= x_2.
}
Prove: x <= (5 + x_1).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (33384)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (6ms) (114)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0003/1_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0003/1_merged.c, line 18):
Let x = n * n * n.
Let x_1 = 6 * n.
Let x_2 = 6 + x_1.
Let x_3 = n * n.
Let x_4 = n + x_3.
Let x_5 = 12 + x_1.
Let x_6 = 3 * n.
Let x_7 = 3 * x_3.
Let x_8 = 1 + x_6 + x_7.
Let x_9 = 1 + x_6 + x_7 + x.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x_2) /\ is_sint32(x_5) /\
      is_sint32(x) /\ is_sint32(x_8) /\ is_sint32(7 + (9 * n) + x_7) /\
      is_sint32(x_9).
  (* Pre-condition *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: (x_2 % 6) = 0.
  (* Invariant *)
  Have: x_3 <= (1 + n).
  (* Invariant *)
  Have: x <= x_8.
  (* Invariant *)
  Have: x <= (x_6 + x_7).
  (* Invariant *)
  Have: (x = 0) \/ ((x % 3) = 0).
  (* Invariant *)
  Have: n <= (1 + a).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: n <= a.
  (* Invariant *)
  Have: (x_5 % 6) = 0.
  (* Invariant *)
  Have: x_4 <= 1.
  (* Invariant *)
  Have: x <= x_2.
  (* Invariant *)
  Have: x <= (5 + x_1).
}
Prove: ((x_6 + x_7 + x) = (-1)) \/ ((x_9 % 3) = 0).
Prover Z3 4.8.12 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0003/1_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0003/1_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0003/1_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0003/1_merged.c, line 20):
Let x = 3 * n.
Let x_1 = n * n.
Let x_2 = 3 * x_1.
Let x_3 = n * n * n.
Let x_4 = 1 + x + x_2 + x_3.
Let x_5 = 6 * n.
Let x_6 = 6 + x_5.
Let x_7 = n + x_1.
Let x_8 = 12 + x_5.
Let x_9 = 1 + x + x_2.
Let x_10 = 1 + n.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x_10) /\ is_sint32(x_6) /\
      is_sint32(x_8) /\ is_sint32(x_3) /\ is_sint32(x_9) /\
      is_sint32(7 + (9 * n) + x_2) /\ is_sint32(x_4).
  (* Pre-condition *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: (x_6 % 6) = 0.
  (* Invariant *)
  Have: x_1 <= x_10.
  (* Invariant *)
  Have: x_3 <= x_9.
  (* Invariant *)
  Have: x_3 <= (x + x_2).
  (* Invariant *)
  Have: (x_3 = 0) \/ ((x_3 % 3) = 0).
  (* Invariant *)
  Have: n <= (1 + a).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= x_7.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Then *)
  Have: n <= a.
  (* Invariant *)
  Have: (x_8 % 6) = 0.
  (* Invariant *)
  Have: x_7 <= 1.
  (* Invariant *)
  Have: x_3 <= x_6.
  (* Invariant *)
  Have: x_3 <= (5 + x_5).
  (* Invariant *)
  Have: ((x + x_2 + x_3) = (-1)) \/ ((x_4 % 3) = 0).
}
Prove: (x_10 * x_10) = (1 + (2 * n) + x_1).
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10387)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (6ms) (121)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0003/1_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0003/1_merged.c, line 21):
Let x = 1 + n.
Let x_1 = x * x.
Let x_2 = 3 * x_1.
Let x_3 = n * n * n.
Let x_4 = x_3 + x_2.
Let x_5 = 3 * n.
Let x_6 = 2 + x_5.
Let x_7 = (-3) * n.
Let x_8 = x_3 + x_2 - 2 - x_5.
Let x_9 = 6 * n.
Let x_10 = 6 + x_9.
Let x_11 = 12 + x_9.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(x_10) /\
      is_sint32(x_11) /\ is_sint32(x_3) /\ is_sint32(x_2 - 2 - x_5) /\
      is_sint32(4 + x_5 + x_2) /\ is_sint32(x_8).
  (* Pre-condition *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: (x_10 % 6) = 0.
  (* Invariant *)
  Have: x_1 <= x_6.
  (* Invariant *)
  Have: (2 + x_5 + x_3) <= x_2.
  (* Invariant *)
  Have: (3 + x_5 + x_3) <= x_2.
  (* Invariant *)
  Have: (x_3 = 0) \/ ((x_3 % 3) = 0).
  (* Invariant *)
  Have: x_1 = (1 + (2 * n) + (n * n)).
  (* Invariant *)
  Have: n <= (1 + a).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: n < x_1.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Then *)
  Have: n <= a.
  (* Invariant *)
  Have: (x_11 % 6) = 0.
  (* Invariant *)
  Have: x_1 <= (2 + n).
  (* Invariant *)
  Have: x_3 <= x_10.
  (* Invariant *)
  Have: x_3 <= (5 + x_9).
  (* Invariant *)
  Have: (x_4 = x_6) \/ ((x_8 % 3) = 0).
}
Prove: (2 + x_5 + (x * x * x)) = x_4.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (10557)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (7ms) (97)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0003/1_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.86ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0003/1_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0003/1_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.86ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0003/1_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0003/1_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.84ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0003/1_merged.c, line 24):
Let x = 1 + n.
Let x_1 = x * x * x.
Let x_2 = 3 * n.
Let x_3 = x * x.
Let x_4 = 3 * x_3.
Let x_5 = 4 + x_2 + x_4.
Let x_6 = 6 * n.
Let x_7 = 12 + x_6.
Let x_8 = 2 + x_2 + x_1.
Let x_9 = 2 + x_2 + x_1 - x_4.
Let x_10 = 6 * x_3.
Let x_11 = 6 + x_6.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(x_11) /\
      is_sint32(x_7) /\ is_sint32(x_1) /\ is_sint32(x_4 - 2 - x_2) /\
      is_sint32(x_5) /\ is_sint32(x_9).
  (* Pre-condition *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: (x_11 % 6) = 0.
  (* Invariant *)
  Have: x_3 <= (2 + x_2).
  (* Invariant *)
  Have: (4 + x_6 + x_1) <= x_10.
  (* Invariant *)
  Have: (5 + x_6 + x_1) <= x_10.
  (* Invariant *)
  Have: (x_8 = x_4) \/ ((x_9 % 3) = 0).
  (* Invariant *)
  Have: x_3 = (1 + (2 * n) + (n * n)).
  (* Invariant *)
  Have: x_8 = ((n * n * n) + x_4).
  (* Invariant *)
  Have: n <= (1 + a).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: n < x_3.
  (* Invariant *)
  Have: x_4 <= x_8.
  (* Then *)
  Have: n <= a.
  (* Invariant *)
  Have: (x_7 % 6) = 0.
  (* Invariant *)
  Have: x_3 <= (2 + n).
  (* Invariant *)
  Have: x_1 <= x_5.
  (* Invariant *)
  Have: x_1 <= (3 + x_2 + x_4).
  (* Invariant *)
  Have: (x_1 = 0) \/ ((x_1 % 3) = 0).
  (* Invariant *)
  Have: (-1) <= n.
}
Prove: (-1) <= (n + x_3).
Prover Z3 4.8.12 returns Valid (Qed:6ms) (20ms) (34547)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (4ms) (128)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0003/1_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0003/1_merged.c, line 25):
Let x = 1 + n.
Let x_1 = x * x.
Let x_2 = x * x * x.
Let x_3 = 3 * n.
Let x_4 = 3 * x_1.
Let x_5 = 4 + x_3 + x_4.
Let x_6 = 6 * n.
Let x_7 = 12 + x_6.
Let x_8 = 2 + x_3 + x_2.
Let x_9 = 2 + x_3 + x_2 - x_4.
Let x_10 = 6 * x_1.
Let x_11 = 6 + x_6.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(x_11) /\
      is_sint32(x_7) /\ is_sint32(x_2) /\ is_sint32(x_4 - 2 - x_3) /\
      is_sint32(x_5) /\ is_sint32(x_9).
  (* Pre-condition *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: (x_11 % 6) = 0.
  (* Invariant *)
  Have: x_1 <= (2 + x_3).
  (* Invariant *)
  Have: (4 + x_6 + x_2) <= x_10.
  (* Invariant *)
  Have: (5 + x_6 + x_2) <= x_10.
  (* Invariant *)
  Have: (x_8 = x_4) \/ ((x_9 % 3) = 0).
  (* Invariant *)
  Have: x_1 = (1 + (2 * n) + (n * n)).
  (* Invariant *)
  Have: x_8 = ((n * n * n) + x_4).
  (* Invariant *)
  Have: n <= (1 + a).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: n < x_1.
  (* Invariant *)
  Have: x_4 <= x_8.
  (* Then *)
  Have: n <= a.
  (* Invariant *)
  Have: (x_7 % 6) = 0.
  (* Invariant *)
  Have: x_1 <= (2 + n).
  (* Invariant *)
  Have: x_2 <= x_5.
  (* Invariant *)
  Have: x_2 <= (3 + x_3 + x_4).
  (* Invariant *)
  Have: (x_2 = 0) \/ ((x_2 % 3) = 0).
  (* Invariant *)
  Have: (-1) <= n.
  (* Invariant *)
  Have: (-1) <= (n + x_1).
}
Prove: 0 <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (34664)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (7ms) (129)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0003/1_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.82ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0003/1_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0003/1_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Loop assigns (file out/1_0003/1_merged.c, line 27):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/1_0003/1_merged.c:2: Warning: 
  No 'assigns' specification for function 'main1'.
  Callers assumptions might be imprecise.

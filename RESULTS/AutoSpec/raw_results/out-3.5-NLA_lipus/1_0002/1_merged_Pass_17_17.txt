[kernel] Parsing out/1_0002/1_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 17 goals scheduled
[wp] Proved goals:   17 / 17
  Qed:              13
  Alt-Ergo 2.5.4:    4
------------------------------------------------------------
  Function main1
------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0002/1_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0002/1_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0002/1_merged.c, line 13):
Let x = n * n * n.
Let x_1 = n * n.
Let x_2 = 6 * n.
Let x_3 = 3 * n.
Let x_4 = 3 * x_1.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(6 + x_2) /\
      is_sint32(12 + x_2) /\ is_sint32(x) /\ is_sint32(1 + x_3 + x_4) /\
      is_sint32(7 + (9 * n) + x_4).
  (* Pre-condition *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= (n + x_1).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: n <= (1 + a).
  (* Then *)
  Have: n <= a.
  (* Invariant *)
  Have: (-1) <= n.
}
Prove: (-2) <= (x_3 + x_1).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (31711)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (83)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0002/1_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0002/1_merged.c, line 14):
Let x = 3 * n.
Let x_1 = n * n.
Let x_2 = n * n * n.
Let x_3 = 6 * n.
Let x_4 = 3 * x_1.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(6 + x_3) /\
      is_sint32(12 + x_3) /\ is_sint32(x_2) /\ is_sint32(1 + x + x_4) /\
      is_sint32(7 + (9 * n) + x_4) /\ is_sint32(1 + x + x_4 + x_2).
  (* Pre-condition *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= (n + x_1).
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: n <= (1 + a).
  (* Then *)
  Have: n <= a.
  (* Invariant *)
  Have: (-1) <= n.
  (* Invariant *)
  Have: (-2) <= (x + x_1).
}
Prove: (-1) <= (x + x_4 + x_2).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (32152)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (89)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0002/1_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0002/1_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0002/1_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0002/1_merged.c, line 16):
Let x = 3 * n.
Let x_1 = n * n.
Let x_2 = 3 * x_1.
Let x_3 = n * n * n.
Let x_4 = 1 + n.
Let x_5 = 6 * n.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x_4) /\
      is_sint32(6 + x_5) /\ is_sint32(12 + x_5) /\ is_sint32(x_3) /\
      is_sint32(1 + x + x_2) /\ is_sint32(7 + (9 * n) + x_2) /\
      is_sint32(1 + x + x_2 + x_3).
  (* Pre-condition *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= (n + x_1).
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: n <= (1 + a).
  (* Then *)
  Have: n <= a.
  (* Invariant *)
  Have: (-1) <= n.
  (* Invariant *)
  Have: (-2) <= (x + x_1).
  (* Invariant *)
  Have: (-1) <= (x + x_2 + x_3).
}
Prove: (x_4 * x_4) = (1 + (2 * n) + x_1).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (10017)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (5ms) (92)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0002/1_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0002/1_merged.c, line 17):
Let x = 3 * n.
Let x_1 = 1 + n.
Let x_2 = x_1 * x_1.
Let x_3 = 3 * x_2.
Let x_4 = n * n * n.
Let x_5 = x_4 + x_3.
Let x_6 = 6 * n.
Let x_7 = (-3) * n.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x_1) /\
      is_sint32(6 + x_6) /\ is_sint32(12 + x_6) /\ is_sint32(x_4) /\
      is_sint32(x_3 - 2 - x) /\ is_sint32(4 + x + x_3) /\
      is_sint32(x_4 + x_3 - 2 - x).
  (* Pre-condition *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (-1) <= a.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: n < x_2.
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: x_2 = (1 + (2 * n) + (n * n)).
  (* Invariant *)
  Have: n <= (1 + a).
  (* Then *)
  Have: n <= a.
  (* Invariant *)
  Have: (-1) <= n.
  (* Invariant *)
  Have: (-1) <= (n + x_2).
  (* Invariant *)
  Have: (2 + x) <= x_5.
}
Prove: (2 + x + (x_1 * x_1 * x_1)) = x_5.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (10123)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (76)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0002/1_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0002/1_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0002/1_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/1_0002/1_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/1_0002/1_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/1_0002/1_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/1_0002/1_merged.c:2: Warning: 
  No 'assigns' specification for function 'main1'.
  Callers assumptions might be imprecise.

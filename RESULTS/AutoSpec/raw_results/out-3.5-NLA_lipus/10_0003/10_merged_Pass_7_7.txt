[kernel] Parsing out/10_0003/10_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 7 goals scheduled
[wp] Proved goals:    7 / 7
  Qed:               5
  Alt-Ergo 2.5.4:    2 (4ms)
------------------------------------------------------------
  Function main10
------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0003/10_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0003/10_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0003/10_merged.c, line 13):
Let x_1 = x * z.
Let x_2 = 1 + x_1.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x_2).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (0 < c) /\ (c <= k).
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: (x + (y * z)) = x_2.
  (* Then *)
  Have: c < k.
}
Prove: 0 <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (31845)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (4ms) (36)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0003/10_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0003/10_merged.c, line 14):
Let x_1 = x * z.
Let x_2 = y * z.
Let x_3 = 1 + x_1.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x_2) /\ is_sint32(x_3).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (0 < c) /\ (c <= k).
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: (x + x_2) = x_3.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: 0 <= x_1.
}
Prove: (z * x_3) = (x_1 + (y * z * z)).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (4ms) (63)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0003/10_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Loop assigns (file out/10_0003/10_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/10_0003/10_merged.c:5: Warning: 
  No 'assigns' specification for function 'main10'.
  Callers assumptions might be imprecise.

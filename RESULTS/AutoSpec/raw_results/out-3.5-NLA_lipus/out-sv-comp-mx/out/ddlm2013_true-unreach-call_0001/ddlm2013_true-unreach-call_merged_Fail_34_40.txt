[kernel] Parsing out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c (with preprocessing)
[kernel:typing:no-proto] out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c:42: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c:6: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 40 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_preserved (Qed 10ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_3_preserved (Qed 12ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_5_preserved (Qed 7ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_7_preserved (Qed 9ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_15_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_11_preserved (Qed 7ms) (Z3)
[wp] Proved goals:   34 / 40
  Qed:              31
  Alt-Ergo 2.6.2:    3 (20ms-32ms)
  Timeout:           6
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 18):
Let x = j - 1.
Let x_1 = to_uint32(1 + j).
Assume {
  Type: is_uint32(a) /\ is_uint32(j) /\ is_sint32(flag_0) /\
      is_sint32(tmp_0) /\ is_uint32(x).
  (* Residual *)
  When: to_uint32(x_1 % 2) = 0.
  (* Invariant *)
  Have: flag_0 != 0.
  (* Invariant *)
  Have: (x % 2) = 0.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (1 + (2 * (x / 2))) = j.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: x_1 <= to_uint32(2 + j).
Prover Z3 4.8.6 returns Timeout (Qed:10ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:10ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 19):
Let x = to_uint32(1 + j).
Let x_1 = x % 2.
Let x_2 = j - 1.
Assume {
  Type: is_uint32(a) /\ is_uint32(j_1) /\ is_uint32(j) /\
      is_sint32(flag_0) /\ is_sint32(tmp_0) /\ is_uint32(x_2).
  (* Invariant *)
  Have: flag_0 != 0.
  (* Invariant *)
  Have: (x_2 % 2) = 0.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (1 + (2 * (x_2 / 2))) = j.
  (* Then *)
  Have: tmp_0 != 0.
  If to_uint32(x_1) = 0
  Then { Have: to_uint32(2 + j) = j_1. }
  Else { Have: x = j_1. }
  (* Invariant *)
  Have: x <= j_1.
}
Prove: (x_1 = 0) \/ (x_1 = 1).
Prover Z3 4.8.6 returns Valid (Qed:12ms) (10ms) (35826)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:12ms) (26ms) (537)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 20):
Let x = to_uint32(1 + j).
Let x_1 = x % 2.
Let x_2 = j - 1.
Assume {
  Type: is_uint32(a) /\ is_uint32(j_1) /\ is_uint32(j) /\
      is_sint32(flag_0) /\ is_sint32(tmp_0) /\ is_uint32(x_2).
  (* Invariant *)
  Have: flag_0 != 0.
  (* Invariant *)
  Have: (x_2 % 2) = 0.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (1 + (2 * (x_2 / 2))) = j.
  (* Then *)
  Have: tmp_0 != 0.
  If to_uint32(x_1) = 0
  Then { Have: to_uint32(2 + j) = j_1. }
  Else { Have: x = j_1. }
  (* Invariant *)
  Have: x <= j_1.
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_1 = 1).
}
Prove: x_1 = 0.
Prover Z3 4.8.6 returns Timeout (Qed:12ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:12ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 22):
Let x = to_uint32(1 + j).
Let x_1 = to_uint32(2 + j).
Let x_2 = j - 1.
Let x_3 = to_uint32(1 + a).
Assume {
  Type: is_uint32(a) /\ is_uint32(j) /\ is_sint32(flag_0) /\
      is_sint32(tmp_0) /\ is_uint32(x_2).
  (* Invariant *)
  Have: flag_0 != 0.
  (* Invariant *)
  Have: (x_2 % 2) = 0.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (1 + (2 * (x_2 / 2))) = j.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: x <= x_1.
  (* Invariant *)
  Have: (x % 2) = 0.
}
Prove: (x_3 * (x_1 - x)) = x_3.
Prover Z3 4.8.6 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 24):
Let x = to_uint32(1 + j).
Let x_1 = to_uint32(2 + j).
Let x_2 = to_uint32(1 + a).
Let x_3 = j - 1.
Assume {
  Type: is_uint32(a) /\ is_uint32(j) /\ is_sint32(flag_0) /\
      is_sint32(tmp_0) /\ is_uint32(x_3).
  (* Invariant *)
  Have: flag_0 != 0.
  (* Invariant *)
  Have: (x_3 % 2) = 0.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (1 + (2 * (x_3 / 2))) = j.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (x_2 * (x_1 - x)) = x_2.
  (* Invariant *)
  Have: x <= x_1.
  (* Invariant *)
  Have: (x % 2) = 0.
}
Prove: 0 < x_1.
Prover Z3 4.8.6 returns Timeout (Qed:9ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:9ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 28):
Let x = to_uint32(2 + j).
Let x_1 = to_uint32(1 + j).
Let x_2 = to_uint32(1 + a).
Let x_3 = j - 1.
Assume {
  Type: is_uint32(a) /\ is_uint32(j) /\ is_sint32(flag_0) /\
      is_sint32(tmp_0) /\ is_uint32(x_3).
  (* Goal *)
  When: (x_1 % 2) = 0.
  (* Invariant *)
  Have: flag_0 != 0.
  (* Invariant *)
  Have: (x_3 % 2) = 0.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (1 + (2 * (x_3 / 2))) = j.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (x_2 * (x - x_1)) = x_2.
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: 0 < x.
}
Prove: (1 + (2 * (x_1 / 2))) = x.
Prover Z3 4.8.6 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 30):
Let x = to_uint32(1 + j).
Let x_1 = 2 * (x / 2).
Let x_2 = 1 + x_1.
Let x_3 = to_uint32(1 + a).
Let x_4 = j - 1.
Assume {
  Type: is_uint32(a) /\ is_uint32(j) /\ is_sint32(flag_0) /\
      is_sint32(tmp_0) /\ is_uint32(x_4).
  (* Goal *)
  When: (x % 2) = 0.
  (* Invariant *)
  Have: flag_0 != 0.
  (* Invariant *)
  Have: (x_4 % 2) = 0.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (1 + (2 * (x_4 / 2))) = j.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (x_3 * (1 + x_1 - x)) = x_3.
  Have: x_2 = to_uint32(2 + j).
  (* Invariant *)
  Have: x <= x_2.
}
Prove: x <= x_1.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:7ms) (20ms) (384)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 31):
Let x = to_uint32(1 + j).
Let x_1 = 2 * (x / 2).
Let x_2 = 1 + x_1.
Let x_3 = to_uint32(1 + a).
Let x_4 = j - 1.
Assume {
  Type: is_uint32(a) /\ is_uint32(j) /\ is_sint32(flag_0) /\
      is_sint32(tmp_0) /\ is_uint32(x_4).
  (* Invariant *)
  Have: flag_0 != 0.
  (* Invariant *)
  Have: (x_4 % 2) = 0.
  (* Invariant *)
  Have: 0 < j.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: (1 + (2 * (x_4 / 2))) = j.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (x_3 * (1 + x_1 - x)) = x_3.
  Have: x_2 = to_uint32(2 + j).
  (* Invariant *)
  Have: x <= x_2.
  (* Invariant *)
  Have: (x % 2) = 0.
  (* Invariant *)
  Have: x <= x_1.
}
Prove: x_1 = x.
Prover Z3 4.8.6 returns Valid (Qed:8ms) (10ms) (36900)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:8ms) (32ms) (1661)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 32):
Prove: false.
Prover Z3 4.8.6 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 33):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 34):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 37) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c, line 37) (2/2):
Call Result at line 42
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c:4: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/ddlm2013_true-unreach-call_0001/ddlm2013_true-unreach-call_merged.c:6: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

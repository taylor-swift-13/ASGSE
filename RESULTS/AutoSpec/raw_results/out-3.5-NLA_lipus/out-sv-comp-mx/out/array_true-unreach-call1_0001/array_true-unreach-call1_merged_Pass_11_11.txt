[kernel] Parsing out/array_true-unreach-call1_0001/array_true-unreach-call1_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 11 goals scheduled
[wp] Proved goals:   11 / 11
  Qed:               8
  Alt-Ergo 2.6.2:    3 (5ms-7ms-9ms)
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Preservation of Invariant (file out/array_true-unreach-call1_0001/array_true-unreach-call1_merged.c, line 8):
Prove: true.
Prover Qed returns Valid (0.99ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/array_true-unreach-call1_0001/array_true-unreach-call1_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/array_true-unreach-call1_0001/array_true-unreach-call1_merged.c, line 9):
Assume {
  Type: is_sint32(i) /\ is_sint32(1 + i).
  (* Goal *)
  When: (0 <= i_1) /\ (i_1 <= i).
  (* Loop assigns ... *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= 2047) ->
      (((i_2 < 0) \/ (1024 <= i_2)) -> (A_1[i_2] = A[i_2])))).
  (* Invariant *)
  Have: i <= 1024.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i) -> (A[i_2] = i_2))).
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i <= 1023.
}
Prove: A[i <- i][i_1] = i_1.
Prover Z3 4.8.6 returns Valid (Qed:2ms) (20ms) (35286)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (9ms) (64)

------------------------------------------------------------

Goal Establishment of Invariant (file out/array_true-unreach-call1_0001/array_true-unreach-call1_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/array_true-unreach-call1_0001/array_true-unreach-call1_merged.c, line 10):
Let m = A[i <- i].
Assume {
  Type: is_sint32(i) /\ is_sint32(1 + i).
  (* Goal *)
  When: (0 <= i_1) /\ (i_1 <= i).
  (* Loop assigns ... *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= 2047) ->
      (((i_2 < 0) \/ (1024 <= i_2)) -> (A_1[i_2] = A[i_2])))).
  (* Invariant *)
  Have: i <= 1024.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i) -> (A[i_2] = i_2))).
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i <= 1023.
  (* Invariant *)
  Have: forall i_2 : Z. ((i_2 <= i) -> ((0 <= i_2) -> (m[i_2] = i_2))).
}
Prove: m[i_1] = i_1.
Prover Z3 4.8.6 returns Valid (Qed:3ms) (10ms) (36200)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (8ms) (47)

------------------------------------------------------------

Goal Establishment of Invariant (file out/array_true-unreach-call1_0001/array_true-unreach-call1_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/array_true-unreach-call1_0001/array_true-unreach-call1_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/array_true-unreach-call1_0001/array_true-unreach-call1_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assertion (file out/array_true-unreach-call1_0001/array_true-unreach-call1_merged.c, line 19):
Let x = A[1023].
Assume {
  Type: is_sint32(i) /\ is_sint32(x).
  (* Loop assigns ... *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= 2047) ->
      (((i_1 < 0) \/ (1024 <= i_1)) -> (A_1[i_1] = A[i_1])))).
  (* Invariant *)
  Have: i <= 1024.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) -> (A[i_1] = i_1))).
  (* Invariant *)
  Have: 0 <= i.
  (* Else *)
  Have: 1024 <= i.
}
Prove: x = 1023.
Prover Z3 4.8.6 returns Valid (Qed:1ms) (10ms) (34007)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:1ms) (5ms) (32)

------------------------------------------------------------

Goal Loop assigns (file out/array_true-unreach-call1_0001/array_true-unreach-call1_merged.c, line 12) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/array_true-unreach-call1_0001/array_true-unreach-call1_merged.c, line 12) (2/2):
Effect at line 16
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/array_true-unreach-call1_0001/array_true-unreach-call1_merged.c:3: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

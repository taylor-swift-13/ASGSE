[kernel] Parsing out/terminator_03_true-unreach-call_true-termination_0001/terminator_03_true-unreach-call_true-termination_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 15 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_2_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_2_preserved (Qed 6ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_3_preserved (Qed 5ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_3_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_5_preserved (Qed 8ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_5_established (Qed 1ms) (Z3)
[wp] Proved goals:    9 / 15
  Qed:               8
  Alt-Ergo 2.6.2:    1 (17ms)
  Timeout:           6
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/terminator_03_true-unreach-call_true-termination_0001/terminator_03_true-unreach-call_true-termination_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/terminator_03_true-unreach-call_true-termination_0001/terminator_03_true-unreach-call_true-termination_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.84ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/terminator_03_true-unreach-call_true-termination_0001/terminator_03_true-unreach-call_true-termination_merged.c, line 13):
Let x = i * y.
Let x_1 = -x.
Let x_2 = i_1 * y.
Let x_3 = y + x.
Assume {
  Type: is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_2) /\ is_sint32(x_3).
  (* Pre-condition *)
  Have: y <= 1000000.
  (* Then *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_2 <= (100 + (y * ((100 - x_2) / y))).
  (* Invariant *)
  Have: x_2 <= 99.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: x <= (100 + (y * ((100 - x) / y))).
  (* Invariant *)
  Have: x <= 99.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= x.
}
Prove: x_3 <= (100 + (y * ((100 - y - x) / y))).
Prover Z3 4.8.6 returns Timeout (Qed:6ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:6ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/terminator_03_true-unreach-call_true-termination_0001/terminator_03_true-unreach-call_true-termination_merged.c, line 13):
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: y <= 1000000.
  (* Then *)
  Have: 0 < y.
}
Prove: x <= (100 + (y * ((100 - x) / y))).
Prover Z3 4.8.6 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/terminator_03_true-unreach-call_true-termination_0001/terminator_03_true-unreach-call_true-termination_merged.c, line 14):
Let x = i * y.
Let x_1 = y + x.
Let x_2 = -x.
Let x_3 = i_1 * y.
Assume {
  Type: is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_3) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: y <= 1000000.
  (* Then *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_3 <= (100 + (y * ((100 - x_3) / y))).
  (* Invariant *)
  Have: x_3 <= 99.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: x <= (100 + (y * ((100 - x) / y))).
  (* Invariant *)
  Have: x <= 99.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: x_1 <= (100 + (y * ((100 - y - x) / y))).
}
Prove: x_1 <= 99.
Prover Z3 4.8.6 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/terminator_03_true-unreach-call_true-termination_0001/terminator_03_true-unreach-call_true-termination_merged.c, line 14):
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: y <= 1000000.
  (* Then *)
  Have: 0 < y.
  (* Invariant *)
  Have: x <= (100 + (y * ((100 - x) / y))).
}
Prove: x <= 99.
Prover Z3 4.8.6 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/terminator_03_true-unreach-call_true-termination_0001/terminator_03_true-unreach-call_true-termination_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/terminator_03_true-unreach-call_true-termination_0001/terminator_03_true-unreach-call_true-termination_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/terminator_03_true-unreach-call_true-termination_0001/terminator_03_true-unreach-call_true-termination_merged.c, line 16):
Let x = i * y.
Let x_1 = y + x.
Let x_2 = -x.
Let x_3 = i_1 * y.
Assume {
  Type: is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_3) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: y <= 1000000.
  (* Then *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_3 <= (100 + (y * ((100 - x_3) / y))).
  (* Invariant *)
  Have: x_3 <= 99.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: x <= (100 + (y * ((100 - x) / y))).
  (* Invariant *)
  Have: x <= 99.
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: x_1 <= (100 + (y * ((100 - y - x) / y))).
  (* Invariant *)
  Have: x_1 <= 99.
}
Prove: exists i_2 : Z. ((y * i_2) = x_1) /\ (0 <= i_2).
Prover Z3 4.8.6 returns Timeout (Qed:8ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:8ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/terminator_03_true-unreach-call_true-termination_0001/terminator_03_true-unreach-call_true-termination_merged.c, line 16):
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: y <= 1000000.
  (* Then *)
  Have: 0 < y.
  (* Invariant *)
  Have: x <= (100 + (y * ((100 - x) / y))).
  (* Invariant *)
  Have: x <= 99.
}
Prove: exists i : Z. ((y * i) = x) /\ (0 <= i).
Prover Z3 4.8.6 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/terminator_03_true-unreach-call_true-termination_0001/terminator_03_true-unreach-call_true-termination_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (9ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/terminator_03_true-unreach-call_true-termination_0001/terminator_03_true-unreach-call_true-termination_merged.c, line 17):
Let x = i * y.
Assume {
  Type: is_sint32(y) /\ is_sint32(x).
  (* Pre-condition *)
  Have: y <= 1000000.
  (* Then *)
  Have: 0 < y.
  (* Invariant *)
  Have: x <= (100 + (y * ((100 - x) / y))).
  (* Invariant *)
  Have: x <= 99.
  (* Invariant *)
  Have: 0 <= i.
}
Prove: 0 <= x.
Prover Z3 4.8.6 returns Valid (Qed:3ms) (30ms) (34789)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (17ms) (31)

------------------------------------------------------------

Goal Preservation of Invariant (file out/terminator_03_true-unreach-call_true-termination_0001/terminator_03_true-unreach-call_true-termination_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/terminator_03_true-unreach-call_true-termination_0001/terminator_03_true-unreach-call_true-termination_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Loop assigns (file out/terminator_03_true-unreach-call_true-termination_0001/terminator_03_true-unreach-call_true-termination_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/terminator_03_true-unreach-call_true-termination_0001/terminator_03_true-unreach-call_true-termination_merged.c:6: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

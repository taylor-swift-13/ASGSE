[kernel] Parsing out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c (with preprocessing)
[kernel:typing:no-proto] out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c:58: Warning: 
  Calling function unknown1 that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c:11: Warning: 
  Neither code nor specification for function unknown1, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 67 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_3_established (Qed 0.95ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_7_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_14_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_foo_loop_invariant_22_established (Qed 5ms) (Z3)
[wp] Proved goals:   63 / 67
  Qed:              53
  Alt-Ergo 2.6.2:   10 (0.80ms-9ms-13ms)
  Timeout:           4
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 16):
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(k) /\
      is_sint32(l) /\ is_sint32(l_1) /\ is_sint32(n) /\ is_sint32(tmp_0) /\
      is_sint32(1 + l).
  (* Residual *)
  When: tmp_0 != 0.
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: l_1 <= n.
  (* Invariant *)
  Have: l_1 <= 2147483647.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: i_2 <= n.
  (* Invariant *)
  Have: 0 <= i_2.
  (* Invariant *)
  Have: (0 < l) /\ (l <= 2147483646).
  (* Invariant *)
  Have: l <= n.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l < n.
  (* Invariant *)
  Have: l <= i.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 < i.
  (* Else *)
  Have: n <= i.
}
Prove: l <= 2147483645.
Prover Z3 4.8.6 returns Valid (Qed:14ms) (20ms) (36525)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:14ms) (12ms) (67)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 17):
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(k) /\
      is_sint32(l) /\ is_sint32(l_1) /\ is_sint32(n) /\ is_sint32(tmp_0) /\
      is_sint32(1 + l).
  (* Residual *)
  When: tmp_0 != 0.
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: l_1 <= n.
  (* Invariant *)
  Have: l_1 <= 2147483647.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: i_2 <= n.
  (* Invariant *)
  Have: 0 <= i_2.
  (* Invariant *)
  Have: (0 < l) /\ (l <= 2147483646).
  (* Invariant *)
  Have: l <= n.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l < n.
  (* Invariant *)
  Have: l <= i.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 < i.
  (* Else *)
  Have: n <= i.
  (* Invariant *)
  Have: l <= 2147483645.
}
Prove: l < i.
Prover Z3 4.8.6 returns Valid (Qed:12ms) (20ms) (36676)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:12ms) (11ms) (69)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 17):
Assume {
  Type: is_sint32(l) /\ is_sint32(n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: n <= 2147483647.
}
Prove: l <= n.
Prover Z3 4.8.6 returns Timeout (Qed:0.95ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:0.95ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 21):
Assume {
  Type: is_sint32(i) /\ is_sint32(l) /\ is_sint32(n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: l <= n.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: 0 < n.
}
Prove: i <= n.
Prover Z3 4.8.6 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (8ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 23):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(i_3) /\ is_sint32(k) /\
      is_sint32(l) /\ is_sint32(l_1) /\ is_sint32(l_2) /\ is_sint32(l_3) /\
      is_sint32(n) /\ is_sint32(tmp_0) /\ is_sint32(1 + k).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l_3.
  (* Pre-condition *)
  Have: l_3 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: l_3 <= n.
  (* Invariant *)
  Have: l_3 <= 2147483647.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: i_3 <= n.
  (* Invariant *)
  Have: 0 <= i_3.
  (* Invariant *)
  Have: (0 < l_2) /\ (l_2 <= 2147483646).
  (* Invariant *)
  Have: l_2 <= n.
  (* Invariant *)
  Have: l_2 <= 2147483647.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: i_2 <= n.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 <= i_2.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l_2 < n.
  (* Invariant *)
  Have: l_2 <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: 0 < i_1.
  (* Else *)
  Have: n <= i_1.
  If tmp_0 != 0
  Then { Have: l_2 = l_1. Have: (1 + l_1) = l. }
  Else { Have: l_2 = l. }
  (* Invariant *)
  Have: (0 < l) /\ (l <= 2147483646).
  (* Invariant *)
  Have: l <= i_1.
  (* Invariant *)
  Have: l <= 2147483647.
}
Prove: 0 < i.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:19ms) (13ms) (79)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 23):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: l <= n.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: i_1 <= n.
}
Prove: 0 < i.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (0.80ms) (31)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 24):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(i_3) /\ is_sint32(k) /\
      is_sint32(l) /\ is_sint32(l_1) /\ is_sint32(l_2) /\ is_sint32(l_3) /\
      is_sint32(n) /\ is_sint32(tmp_0) /\ is_sint32(1 + k).
  (* Goal *)
  When: (i < i_1) /\ (l <= i).
  (* Pre-condition *)
  Have: 0 < l_3.
  (* Pre-condition *)
  Have: l_3 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: l_3 <= n.
  (* Invariant *)
  Have: l_3 <= 2147483647.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: i_3 <= n.
  (* Invariant *)
  Have: 0 <= i_3.
  (* Invariant *)
  Have: (0 < l_2) /\ (l_2 <= 2147483646).
  (* Invariant *)
  Have: l_2 <= n.
  (* Invariant *)
  Have: l_2 <= 2147483647.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: i_2 <= n.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 <= i_2.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l_2 < n.
  (* Invariant *)
  Have: l_2 <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: 0 < i_1.
  (* Else *)
  Have: n <= i_1.
  If tmp_0 != 0
  Then { Have: l_2 = l_1. Have: (1 + l_1) = l. }
  Else { Have: l_2 = l. }
  (* Invariant *)
  Have: (0 < l) /\ (l <= 2147483646).
  (* Invariant *)
  Have: l <= i_1.
  (* Invariant *)
  Have: l <= 2147483647.
}
Prove: 0 < i.
Prover Z3 4.8.6 returns Valid (Qed:19ms) (10ms) (38437)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:19ms) (10ms) (79)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 24):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (i < i_1) /\ (l <= i).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: l <= n.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: i_1 <= n.
}
Prove: 0 < i.
Prover Z3 4.8.6 returns Valid (Qed:3ms) (10ms) (33481)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:3ms) (8ms) (31)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 26):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(i_3) /\ is_sint32(k) /\
      is_sint32(l) /\ is_sint32(l_1) /\ is_sint32(l_2) /\ is_sint32(l_3) /\
      is_sint32(n) /\ is_sint32(tmp_0) /\ is_sint32(1 + k).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l_3.
  (* Pre-condition *)
  Have: l_3 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: l_3 <= n.
  (* Invariant *)
  Have: l_3 <= 2147483647.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: i_3 <= n.
  (* Invariant *)
  Have: 0 <= i_3.
  (* Invariant *)
  Have: (0 < l_2) /\ (l_2 <= 2147483646).
  (* Invariant *)
  Have: l_2 <= n.
  (* Invariant *)
  Have: l_2 <= 2147483647.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: i_2 <= n.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 <= i_2.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l_2 < n.
  (* Invariant *)
  Have: l_2 <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: 0 < i_1.
  (* Else *)
  Have: n <= i_1.
  If tmp_0 != 0
  Then { Have: l_2 = l_1. Have: (1 + l_1) = l. }
  Else { Have: l_2 = l. }
  (* Invariant *)
  Have: (0 < l) /\ (l <= 2147483646).
  (* Invariant *)
  Have: l <= i_1.
  (* Invariant *)
  Have: l <= 2147483647.
}
Prove: 0 < i.
Prover Z3 4.8.6 returns Valid (Qed:17ms) (10ms) (38429)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:17ms) (13ms) (79)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 26):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(l) /\ is_sint32(n).
  (* Goal *)
  When: (l <= i) /\ (i < n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: l <= n.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: i_1 <= n.
}
Prove: 0 < i.
Prover Z3 4.8.6 returns Valid (Qed:2ms) (20ms) (33420)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (9ms) (31)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.87ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 28):
Assume {
  Type: is_sint32(i) /\ is_sint32(l) /\ is_sint32(n).
  (* Pre-condition *)
  Have: 0 < l.
  (* Pre-condition *)
  Have: l <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: l <= n.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: i <= n.
}
Prove: 0 <= i.
Prover Z3 4.8.6 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 40):
Let x = 1 + i.
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(k) /\
      is_sint32(l) /\ is_sint32(l_1) /\ is_sint32(n) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: l_1 <= n.
  (* Invariant *)
  Have: l_1 <= 2147483647.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: i_2 <= n.
  (* Invariant *)
  Have: 0 <= i_2.
  (* Invariant *)
  Have: (0 < l) /\ (l <= 2147483646).
  (* Invariant *)
  Have: l <= n.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l < n.
  (* Invariant *)
  Have: l <= i.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 < i.
  (* Then *)
  Have: i < n.
}
Prove: l <= x.
Prover Z3 4.8.6 returns Valid (Qed:7ms) (10ms) (36112)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:7ms) (5ms) (25)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 42):
Assume {
  Type: is_sint32(i) /\ is_sint32(i_1) /\ is_sint32(k) /\ is_sint32(l) /\
      is_sint32(l_1) /\ is_sint32(n).
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: l_1 <= n.
  (* Invariant *)
  Have: l_1 <= 2147483647.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: (0 < l) /\ (l <= 2147483646).
  (* Invariant *)
  Have: l <= n.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: k < n.
}
Prove: l < n.
Prover Z3 4.8.6 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 45):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 46):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 47):
Let x = 1 + i_1.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(i_2) /\ is_sint32(i_3) /\ is_sint32(k) /\
      is_sint32(l) /\ is_sint32(l_1) /\ is_sint32(n) /\ is_sint32(x).
  (* Goal *)
  When: (l <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 < l_1.
  (* Pre-condition *)
  Have: l_1 <= 2147483646.
  (* Pre-condition *)
  Have: n <= 2147483646.
  (* Invariant *)
  Have: n <= 2147483647.
  (* Invariant *)
  Have: l_1 <= n.
  (* Invariant *)
  Have: l_1 <= 2147483647.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: i_3 <= n.
  (* Invariant *)
  Have: 0 <= i_3.
  (* Invariant *)
  Have: (0 < l) /\ (l <= 2147483646).
  (* Invariant *)
  Have: l <= n.
  (* Invariant *)
  Have: l <= 2147483647.
  (* Invariant *)
  Have: k <= n.
  (* Invariant *)
  Have: i_2 <= n.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: 0 <= i_2.
  (* Then *)
  Have: k < n.
  (* Invariant *)
  Have: l < n.
  (* Invariant *)
  Have: l <= i_1.
  (* Invariant *)
  Have: i_1 <= n.
  (* Invariant *)
  Have: 0 < i_1.
  (* Then *)
  Have: i_1 < n.
  (* Invariant *)
  Have: l <= x.
}
Prove: 0 < i.
Prover Z3 4.8.6 returns Valid (Qed:7ms) (10ms) (36668)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:7ms) (9ms) (31)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 47):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 48):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 49):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 50):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 51):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 30) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 30) (2/2):
Call Result at line 58
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Loop assigns (file out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c, line 53):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c:4: Warning: 
  No 'assigns' specification for function 'unknown1'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/nest-if3_true-unreach-call_0010/nest-if3_true-unreach-call_merged.c:11: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

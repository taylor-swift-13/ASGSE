[kernel] Parsing out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 24 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_7_preserved (Qed 6ms) (Z3)
[wp] Proved goals:   23 / 24
  Qed:              20
  Alt-Ergo 2.6.2:    2 (5ms-12ms)
  Z3 4.8.6:          1 (10ms)
  Timeout:           1
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Preservation of Invariant (file out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c, line 18):
Assume {
  Type: is_sint32(n) /\ is_sint32(v).
  (* Pre-condition *)
  Have: (0 <= n) /\ (n <= 1).
  (* Pre-condition *)
  Have: 0 <= v.
}
Prove: (v = 0) \/ (v = 1) \/ (2 <= v).
Prover Z3 4.8.6 returns Valid (Qed:1ms) (10ms) (32391)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:1ms) (5ms) (18)

------------------------------------------------------------

Goal Preservation of Invariant (file out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (12ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c, line 39):
Let x = i * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_1 = i + k.
Let x_2 = -x.
Let x_3 = n * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_4 = -k.
Assume {
  Type: is_sint32(i) /\ is_sint32(k) /\ is_sint32(n) /\ is_sint32(v) /\
      is_sint32(k - 1) /\ is_sint32(x_3) /\ is_sint32(x_3 - k) /\
      is_sint32(1 + x_3 - k).
  (* Pre-condition *)
  Have: n <= 1.
  (* Pre-condition *)
  Have: 0 <= v.
  (* Invariant *)
  Have: (v = 0) \/ (v = 1) \/ (2 <= v).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: x_3 = x.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= i.
  (* Else *)
  Have: n <= i.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: ((i + k - x) *
         (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000))) = k.
  (* Invariant *)
  Have: x <= x_1.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: k <= x.
  (* Then *)
  Have: x < x_1.
}
Prove: (1
        + ((i + k - 1 - x) *
           (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000))))
         = k.
Prover Z3 4.8.6 returns Timeout (Qed:6ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:6ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c, line 42):
Let x = -j.
Let x_1 = (i - 1 - j) *
    (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_2 = i * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_3 = n * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_4 = (n - 1 - j) *
    (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Assume {
  Type: is_sint32(i) /\ is_sint32(j) /\ is_sint32(n) /\ is_sint32(v) /\
      is_sint32(1 + j) /\ is_sint32(x_3) /\ is_sint32(x_4) /\
      is_sint32(1 + x_4).
  (* Pre-condition *)
  Have: n <= 1.
  (* Pre-condition *)
  Have: 0 <= v.
  (* Invariant *)
  Have: (v = 0) \/ (v = 1) \/ (2 <= v).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: x_3 = x_2.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= i.
  (* Else *)
  Have: n <= i.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: x_2 = (1 + j + x_1).
  (* Invariant *)
  Have: ((i - j) *
         (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)))
          = (1 + x_1).
  (* Invariant *)
  Have: j <= i.
  (* Invariant *)
  Have: (-1) <= x_1.
  (* Invariant *)
  Have: 0 <= j.
  (* Then *)
  Have: j < i.
}
Prove: 0 <= x_1.
Prover Z3 4.8.6 returns Valid (Qed:6ms) (10ms) (36977)

------------------------------------------------------------

Goal Establishment of Invariant (file out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c, line 42):
Let x = n * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Let x_1 = i * (if (v = 0) then 4000 else (if (v = 1) then 2000 else 10000)).
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(v) /\ is_sint32(x).
  (* Pre-condition *)
  Have: n <= 1.
  (* Pre-condition *)
  Have: 0 <= v.
  (* Invariant *)
  Have: (v = 0) \/ (v = 1) \/ (2 <= v).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: x = x_1.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= i.
  (* Else *)
  Have: n <= i.
}
Prove: 0 <= x_1.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:4ms) (12ms) (263)

------------------------------------------------------------

Goal Preservation of Invariant (file out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c, line 44):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/large_const_true-unreach-call_0004/large_const_true-unreach-call_merged.c:7: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 35 goals scheduled
[wp] [Timeout] typed_main_loop_invariant_2_preserved (Qed 4ms) (Z3)
[wp] Proved goals:   34 / 35
  Qed:              30
  Alt-Ergo 2.6.2:    4 (4ms-10ms-19ms)
  Timeout:           1
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Preservation of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 12):
Let x = 21 - (2 * j).
Assume {
  Type: is_sint32(j) /\ is_sint32(j - 1) /\ is_sint32(x).
  (* Invariant *)
  Have: (0 <= j) /\ (j <= 10).
  (* Invariant *)
  Have: (j % 2) = 0.
  (* Invariant *)
  Have: 5 <= j.
  (* Invariant *)
  Have: 7 <= j.
  (* Invariant *)
  Have: 4 <= j.
  (* Invariant *)
  Have: forall i : Z. ((j <= i) -> ((i <= 10) -> (i <= (2 * j)))).
  (* Invariant *)
  Have: (x % 2) = 1.
}
Prove: (0 < j) /\ (j <= 11).
Prover Z3 4.8.6 returns Valid (Qed:4ms) (10ms) (34780)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:4ms) (4ms) (32)

------------------------------------------------------------

Goal Establishment of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 13):
Let x = 21 - (2 * j).
Let x_1 = j - 1.
Assume {
  Type: is_sint32(j) /\ is_sint32(x_1) /\ is_sint32(x).
  (* Invariant *)
  Have: (0 <= j) /\ (j <= 10).
  (* Invariant *)
  Have: (j % 2) = 0.
  (* Invariant *)
  Have: 5 <= j.
  (* Invariant *)
  Have: 7 <= j.
  (* Invariant *)
  Have: 4 <= j.
  (* Invariant *)
  Have: forall i : Z. ((j <= i) -> ((i <= 10) -> (i <= (2 * j)))).
  (* Invariant *)
  Have: (x % 2) = 1.
  (* Invariant *)
  Have: (0 < j) /\ (j <= 11).
}
Prove: (x_1 % 2) = 0.
Prover Z3 4.8.6 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 15):
Let x = j - 1.
Let x_1 = (-2) * j.
Let x_2 = 21 - (2 * j).
Assume {
  Type: is_sint32(j) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(23 - (2 * j)).
  (* Invariant *)
  Have: (0 <= j) /\ (j <= 10).
  (* Invariant *)
  Have: (j % 2) = 0.
  (* Invariant *)
  Have: 5 <= j.
  (* Invariant *)
  Have: 7 <= j.
  (* Invariant *)
  Have: 4 <= j.
  (* Invariant *)
  Have: forall i : Z. ((j <= i) -> ((i <= 10) -> (i <= (2 * j)))).
  (* Invariant *)
  Have: (x_2 % 2) = 1.
  (* Invariant *)
  Have: (0 < j) /\ (j <= 11).
  (* Invariant *)
  Have: (x % 2) = 0.
  (* Invariant *)
  Have: 6 <= j.
}
Prove: 8 <= j.
Prover Z3 4.8.6 returns Valid (Qed:4ms) (10ms) (36043)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:4ms) (8ms) (26)

------------------------------------------------------------

Goal Establishment of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 20):
Let x = j - 1.
Let x_1 = (-2) * j.
Let x_2 = 21 - (2 * j).
Let x_3 = 2 * j.
Assume {
  Type: is_sint32(j) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(23 - x_3).
  (* Goal *)
  When: (i <= 10) /\ (j <= (1 + i)).
  (* Invariant *)
  Have: (0 <= j) /\ (j <= 10).
  (* Invariant *)
  Have: (j % 2) = 0.
  (* Invariant *)
  Have: 5 <= j.
  (* Invariant *)
  Have: 7 <= j.
  (* Invariant *)
  Have: 4 <= j.
  (* Invariant *)
  Have: forall i_1 : Z. ((j <= i_1) -> ((i_1 <= 10) -> (i_1 <= x_3))).
  (* Invariant *)
  Have: (x_2 % 2) = 1.
  (* Invariant *)
  Have: (0 < j) /\ (j <= 11).
  (* Invariant *)
  Have: (x % 2) = 0.
  (* Invariant *)
  Have: 6 <= j.
  (* Invariant *)
  Have: 8 <= j.
}
Prove: (2 + i) <= x_3.
Prover Z3 4.8.6 returns Valid (Qed:5ms) (10ms) (35048)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:5ms) (10ms) (28)

------------------------------------------------------------

Goal Establishment of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 26):
Let x = 2 * j.
Let x_1 = j - 1.
Let x_2 = (-2) * j.
Let x_3 = 21 - x.
Let x_4 = 23 - x.
Assume {
  Type: is_sint32(j) /\ is_sint32(x_1) /\ is_sint32(x_3) /\ is_sint32(x_4).
  (* Invariant *)
  Have: (0 <= j) /\ (j <= 10).
  (* Invariant *)
  Have: (j % 2) = 0.
  (* Invariant *)
  Have: 5 <= j.
  (* Invariant *)
  Have: 7 <= j.
  (* Invariant *)
  Have: 4 <= j.
  (* Invariant *)
  Have: forall i : Z. ((j <= i) -> ((i <= 10) -> (i <= x))).
  (* Invariant *)
  Have: (x_3 % 2) = 1.
  (* Invariant *)
  Have: (0 < j) /\ (j <= 11).
  (* Invariant *)
  Have: (x_1 % 2) = 0.
  (* Invariant *)
  Have: 6 <= j.
  (* Invariant *)
  Have: 8 <= j.
  (* Invariant *)
  Have: forall i : Z. ((i <= 10) -> ((j <= (1 + i)) -> ((2 + i) <= x))).
}
Prove: (x_4 % 2) = 1.
Prover Z3 4.8.6 returns Valid (Qed:5ms) (10ms) (39540)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:5ms) (19ms) (353)

------------------------------------------------------------

Goal Establishment of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 28):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c, line 29):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/cggmp2005_true-unreach-call_0002/cggmp2005_true-unreach-call_merged.c:7: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

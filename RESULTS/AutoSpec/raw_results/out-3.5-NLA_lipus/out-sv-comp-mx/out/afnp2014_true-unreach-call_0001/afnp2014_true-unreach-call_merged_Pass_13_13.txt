[kernel] Parsing out/afnp2014_true-unreach-call_0001/afnp2014_true-unreach-call_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 13 goals scheduled
[wp] Proved goals:   13 / 13
  Qed:              11
  Alt-Ergo 2.6.2:    1 (5ms)
  Z3 4.8.6:          1 (10ms)
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Preservation of Invariant (file out/afnp2014_true-unreach-call_0001/afnp2014_true-unreach-call_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/afnp2014_true-unreach-call_0001/afnp2014_true-unreach-call_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/afnp2014_true-unreach-call_0001/afnp2014_true-unreach-call_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/afnp2014_true-unreach-call_0001/afnp2014_true-unreach-call_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/afnp2014_true-unreach-call_0001/afnp2014_true-unreach-call_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.99ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/afnp2014_true-unreach-call_0001/afnp2014_true-unreach-call_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/afnp2014_true-unreach-call_0001/afnp2014_true-unreach-call_merged.c, line 14):
Let x = y * (y - 1).
Let x_1 = x / 2.
Let x_2 = 1 + x_1.
Let x_3 = 1 + y.
Assume {
  Type: is_sint32(y) /\ is_sint32(x_3) /\ is_sint32(x_2) /\
      is_sint32(1 + y + x_1).
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: y <= 1000.
  (* Invariant *)
  Have: (-1) <= x.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y <= 999.
}
Prove: ((y * x_3) / 2) = (y + x_1).
Prover Z3 4.8.6 returns Valid (Qed:2ms) (10ms) (46375)

------------------------------------------------------------

Goal Establishment of Invariant (file out/afnp2014_true-unreach-call_0001/afnp2014_true-unreach-call_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/afnp2014_true-unreach-call_0001/afnp2014_true-unreach-call_merged.c, line 15):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = x_1 / 2.
Let x_3 = 1 + x_2.
Assume {
  Type: is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(1 + x_2 - y).
  (* Invariant *)
  Have: (2 * y) <= x_3.
  (* Invariant *)
  Have: y <= 1000.
  (* Invariant *)
  Have: x_2 = (y + ((y * (y - 1)) / 2)).
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y <= 999.
}
Prove: (-1) <= x_1.
Prover Z3 4.8.6 returns Valid (Qed:2ms) (20ms) (34452)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (5ms) (52)

------------------------------------------------------------

Goal Establishment of Invariant (file out/afnp2014_true-unreach-call_0001/afnp2014_true-unreach-call_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/afnp2014_true-unreach-call_0001/afnp2014_true-unreach-call_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/afnp2014_true-unreach-call_0001/afnp2014_true-unreach-call_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/afnp2014_true-unreach-call_0001/afnp2014_true-unreach-call_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/afnp2014_true-unreach-call_0001/afnp2014_true-unreach-call_merged.c:7: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/seq_true-unreach-call_0003/seq_true-unreach-call_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 19 goals scheduled
[wp] [Timeout] typed_foon_loop_invariant_6_established (Qed 6ms) (Z3)
[wp] [Timeout] typed_foon_loop_invariant_7_preserved (Qed 9ms) (Z3)
[wp] Proved goals:   17 / 19
  Qed:              16
  Alt-Ergo 2.6.2:    1 (24ms)
  Timeout:           2
------------------------------------------------------------
  Function foon
------------------------------------------------------------

Goal Preservation of Invariant (file out/seq_true-unreach-call_0003/seq_true-unreach-call_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/seq_true-unreach-call_0003/seq_true-unreach-call_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.88ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/seq_true-unreach-call_0003/seq_true-unreach-call_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/seq_true-unreach-call_0003/seq_true-unreach-call_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/seq_true-unreach-call_0003/seq_true-unreach-call_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/seq_true-unreach-call_0003/seq_true-unreach-call_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/seq_true-unreach-call_0003/seq_true-unreach-call_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/seq_true-unreach-call_0003/seq_true-unreach-call_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/seq_true-unreach-call_0003/seq_true-unreach-call_merged.c, line 29):
Let x = 1 + k.
Let x_1 = -i0_0.
Assume {
  Type: is_sint32(i0_0) /\ is_sint32(k) /\ is_sint32(n0_0) /\
      is_sint32(n1_0) /\ is_sint32(x) /\ is_sint32(k - i0_0) /\
      is_sint32(1 + k - i0_0).
  (* Pre-condition *)
  Have: ((-2147483647) <= n0_0) /\ (n0_0 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= n1_0) /\ (n1_0 <= 2147483646).
  (* Invariant *)
  Have: 0 <= i0_0.
  (* Else *)
  Have: n0_0 <= i0_0.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: i0_0 <= k.
  (* Then *)
  Have: k < (i0_0 + n1_0).
  (* Invariant *)
  Have: (-1) <= k.
}
Prove: i0_0 <= x.
Prover Z3 4.8.6 returns Valid (Qed:8ms) (20ms) (34265)
Prover Alt-Ergo 2.6.2 returns Valid (Qed:8ms) (24ms) (20)

------------------------------------------------------------

Goal Establishment of Invariant (file out/seq_true-unreach-call_0003/seq_true-unreach-call_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/seq_true-unreach-call_0003/seq_true-unreach-call_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/seq_true-unreach-call_0003/seq_true-unreach-call_merged.c, line 40):
Assume {
  Type: is_sint32(i1_0) /\ is_sint32(k) /\ is_sint32(n0_0) /\
      is_sint32(n1_0) /\ is_sint32(k - i1_0).
  (* Pre-condition *)
  Have: ((-2147483647) <= n0_0) /\ (n0_0 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= n1_0) /\ (n1_0 <= 2147483646).
  (* Invariant *)
  Have: i1_0 <= k.
  (* Else *)
  Have: (i1_0 + n0_0) <= k.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: 0 <= i1_0.
  (* Else *)
  Have: n1_0 <= i1_0.
}
Prove: 0 <= (n0_0 + n1_0).
Prover Z3 4.8.6 returns Timeout (Qed:6ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:6ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/seq_true-unreach-call_0003/seq_true-unreach-call_merged.c, line 41):
Let x = n0_0 + n1_0.
Assume {
  Type: is_sint32(i1_0) /\ is_sint32(j1_0) /\ is_sint32(k) /\
      is_sint32(k_1) /\ is_sint32(n0_0) /\ is_sint32(n1_0) /\
      is_sint32(k - 1) /\ is_sint32(1 + j1_0) /\ is_sint32(k_1 - i1_0).
  (* Pre-condition *)
  Have: ((-2147483647) <= n0_0) /\ (n0_0 <= 2147483646).
  (* Pre-condition *)
  Have: ((-2147483647) <= n1_0) /\ (n1_0 <= 2147483646).
  (* Invariant *)
  Have: i1_0 <= k_1.
  (* Else *)
  Have: (i1_0 + n0_0) <= k_1.
  (* Invariant *)
  Have: 0 <= k_1.
  (* Invariant *)
  Have: 0 <= i1_0.
  (* Else *)
  Have: n1_0 <= i1_0.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: j1_0 <= x.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: 0 <= j1_0.
  (* Then *)
  Have: j1_0 < x.
}
Prove: 0 < k.
Prover Z3 4.8.6 returns Timeout (Qed:9ms) (8s)
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:9ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/seq_true-unreach-call_0003/seq_true-unreach-call_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/seq_true-unreach-call_0003/seq_true-unreach-call_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (8ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/seq_true-unreach-call_0003/seq_true-unreach-call_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Loop assigns (file out/seq_true-unreach-call_0003/seq_true-unreach-call_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/seq_true-unreach-call_0003/seq_true-unreach-call_merged.c, line 30):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/seq_true-unreach-call_0003/seq_true-unreach-call_merged.c, line 43):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/seq_true-unreach-call_0003/seq_true-unreach-call_merged.c:8: Warning: 
  No 'assigns' specification for function 'foon'.
  Callers assumptions might be imprecise.

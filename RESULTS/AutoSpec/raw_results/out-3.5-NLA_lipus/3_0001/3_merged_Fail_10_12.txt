[kernel] Parsing out/3_0001/3_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 12 goals scheduled
[wp] [Timeout] typed_main3_loop_invariant_preserved (Qed 3ms) (Z3)
[wp] [Timeout] typed_main3_loop_invariant_2_established (Qed 0.74ms) (Z3)
[wp] Proved goals:   10 / 12
  Qed:               6
  Alt-Ergo 2.5.4:    4 (4ms-5ms-6ms)
  Timeout:           2
------------------------------------------------------------
  Function main3
------------------------------------------------------------

Goal Preservation of Invariant (file out/3_0001/3_merged.c, line 10):
Assume {
  Type: is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: x <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: (r_2 + (q_2 * y)) < x.
  (* Invariant *)
  Have: x <= (r_2 + (y * (1 + q_2))).
  (* Invariant *)
  Have: r_2 < y.
  (* Invariant *)
  Have: 0 <= r_2.
  (* Invariant *)
  Have: 0 <= q_2.
  If (1 + r_2) = y
  Then { Have: q_2 = q_1. Have: r = 0. Have: (1 + q_1) = q. }
  Else { Have: (q_2 = q) /\ (r_2 = r_1). Have: (1 + r_1) = r. }
}
Prove: (r + (q * y)) < x.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/3_0001/3_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/3_0001/3_merged.c, line 11):
Assume {
  Type: is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: x <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: (r_2 + (q_2 * y)) < x.
  (* Invariant *)
  Have: x <= (r_2 + (y * (1 + q_2))).
  (* Invariant *)
  Have: r_2 < y.
  (* Invariant *)
  Have: 0 <= r_2.
  (* Invariant *)
  Have: 0 <= q_2.
  If (1 + r_2) = y
  Then { Have: q_2 = q_1. Have: r = 0. Have: (1 + q_1) = q. }
  Else { Have: (q_2 = q) /\ (r_2 = r_1). Have: (1 + r_1) = r. }
  (* Invariant *)
  Have: (r + (q * y)) < x.
}
Prove: x <= (r + (y * (1 + q))).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (38347)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (6ms) (44)

------------------------------------------------------------

Goal Establishment of Invariant (file out/3_0001/3_merged.c, line 11):
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: 0 < x.
}
Prove: x <= y.
Prover Z3 4.8.12 returns Timeout (Qed:0.74ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.74ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/3_0001/3_merged.c, line 12):
Assume {
  Type: is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: x <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: (r_2 + (q_2 * y)) < x.
  (* Invariant *)
  Have: x <= (r_2 + (y * (1 + q_2))).
  (* Invariant *)
  Have: r_2 < y.
  (* Invariant *)
  Have: 0 <= r_2.
  (* Invariant *)
  Have: 0 <= q_2.
  If (1 + r_2) = y
  Then { Have: q_2 = q_1. Have: r = 0. Have: (1 + q_1) = q. }
  Else { Have: (q_2 = q) /\ (r_2 = r_1). Have: (1 + r_1) = r. }
  (* Invariant *)
  Have: (r + (q * y)) < x.
  (* Invariant *)
  Have: x <= (r + (y * (1 + q))).
}
Prove: r < y.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (4ms) (46)

------------------------------------------------------------

Goal Establishment of Invariant (file out/3_0001/3_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/3_0001/3_merged.c, line 13):
Assume {
  Type: is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: x <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: (r_2 + (q_2 * y)) < x.
  (* Invariant *)
  Have: x <= (r_2 + (y * (1 + q_2))).
  (* Invariant *)
  Have: r_2 < y.
  (* Invariant *)
  Have: 0 <= r_2.
  (* Invariant *)
  Have: 0 <= q_2.
  If (1 + r_2) = y
  Then { Have: q_2 = q_1. Have: r = 0. Have: (1 + q_1) = q. }
  Else { Have: (q_2 = q) /\ (r_2 = r_1). Have: (1 + r_1) = r. }
  (* Invariant *)
  Have: (r + (q * y)) < x.
  (* Invariant *)
  Have: x <= (r + (y * (1 + q))).
  (* Invariant *)
  Have: r < y.
}
Prove: 0 <= r.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (34098)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (6ms) (48)

------------------------------------------------------------

Goal Establishment of Invariant (file out/3_0001/3_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/3_0001/3_merged.c, line 14):
Assume {
  Type: is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: x <= y.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: (r_2 + (q_2 * y)) < x.
  (* Invariant *)
  Have: x <= (r_2 + (y * (1 + q_2))).
  (* Invariant *)
  Have: r_2 < y.
  (* Invariant *)
  Have: 0 <= r_2.
  (* Invariant *)
  Have: 0 <= q_2.
  If (1 + r_2) = y
  Then { Have: q_2 = q_1. Have: r = 0. Have: (1 + q_1) = q. }
  Else { Have: (q_2 = q) /\ (r_2 = r_1). Have: (1 + r_1) = r. }
  (* Invariant *)
  Have: (r + (q * y)) < x.
  (* Invariant *)
  Have: x <= (r + (y * (1 + q))).
  (* Invariant *)
  Have: r < y.
  (* Invariant *)
  Have: 0 <= r.
}
Prove: 0 <= q.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (34225)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (5ms) (50)

------------------------------------------------------------

Goal Establishment of Invariant (file out/3_0001/3_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Assertion (file out/3_0001/3_merged.c, line 28):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/3_0001/3_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/3_0001/3_merged.c:4: Warning: 
  No 'assigns' specification for function 'main3'.
  Callers assumptions might be imprecise.

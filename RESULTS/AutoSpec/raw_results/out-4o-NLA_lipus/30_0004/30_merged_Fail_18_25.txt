[kernel] Parsing out/30_0004/30_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 25 goals scheduled
[wp] [Timeout] typed_main30_loop_invariant_preserved (Qed 5ms) (Z3)
[wp] [Timeout] typed_main30_loop_invariant_established (Qed 0.57ms) (Z3)
[wp] [Timeout] typed_main30_loop_invariant_2_preserved (Qed 5ms) (Z3)
[wp] [Timeout] typed_main30_loop_invariant_2_established (Qed 0.76ms) (Z3)
[wp] [Timeout] typed_main30_loop_invariant_4_established (Qed 0.90ms) (Z3)
[wp] [Timeout] typed_main30_loop_invariant_5_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_main30_loop_invariant_12_established (Qed 1ms) (Z3)
[wp] Proved goals:   18 / 25
  Qed:              11
  Alt-Ergo 2.5.4:    5 (19ms-32ms-59ms)
  Z3 4.8.12:         2 (20ms-30ms)
  Timeout:           7
------------------------------------------------------------
  Function main30
------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 11):
Let x_1 = n * x * y.
Let x_2 = n * y * y.
Let x_3 = n * x * x.
Let x_4 = x * y.
Let x_5 = x_1 / x_4.
Let x_6 = 0 / x_4.
Let x_7 = (x * x) + x_3.
Let x_8 = x_4 + x_1.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_3) /\ is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_7) /\
      is_sint32(x_8).
  (* Invariant *)
  Have: (n_1 * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_6) = 0.
  (* Invariant *)
  Have: (n_1 * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_6) = 0.
  (* Invariant *)
  Have: (n_1 * x * y) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (x * x * x_5) = x_3.
  (* Invariant *)
  Have: (y * y * x_5) = x_2.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
}
Prove: (x * x * (x_8 / x_4)) = x_7.
Prover Z3 4.8.12 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 11):
Assume { Type: is_sint32(x) /\ is_sint32(y). }
Prove: (x * x * (0 / (x * y))) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:0.57ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.57ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 12):
Let x_1 = n * x * y.
Let x_2 = n * y * y.
Let x_3 = x * x.
Let x_4 = x * y.
Let x_5 = x_4 + x_1.
Let x_6 = x * x * (x_5 / x_4).
Let x_7 = x_6 - x_3.
Let x_8 = x_1 / x_4.
Let x_9 = 0 / x_4.
Let x_10 = n - 1.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_10) /\ is_sint32(x_1) /\ is_sint32(x_2) /\
      is_sint32(x_5) /\ is_sint32(x_6) /\ is_sint32(x_7).
  (* Invariant *)
  Have: (n_1 * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_9) = 0.
  (* Invariant *)
  Have: (n_1 * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_9) = 0.
  (* Invariant *)
  Have: (n_1 * x * y) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: x_6 = (x_3 + (x * x * x_8)).
  (* Invariant *)
  Have: x_6 = (x_3 + (n * x * x)).
  (* Invariant *)
  Have: (y * y * x_8) = x_2.
  (* Invariant *)
  Have: (n * n * x * x * y * y) <= (n * y * y * x_7).
  (* Invariant *)
  Have: x_3 <= x_6.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
}
Prove: x_6 = (x * x * x_10).
Prover Z3 4.8.12 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 12):
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: (x * x * (0 / (x * y))) = 0.
}
Prove: (n * x * x) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:0.76ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.76ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 14):
Let x_1 = x * y.
Let x_2 = n * x * y.
Let x_3 = x_1 + x_2.
Let x_4 = x_3 / x_1.
Let x_5 = n - 1.
Let x_6 = x * x * x_5.
Let x_7 = n * y * y.
Let x_8 = x * x.
Let x_9 = x_6 - x_8.
Let x_10 = x_2 / x_1.
Let x_11 = 0 / x_1.
Let x_12 = (y * y) + x_7.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_5) /\ is_sint32(x_2) /\ is_sint32(x_7) /\ is_sint32(x_3) /\
      is_sint32(x_12) /\ is_sint32(x_6) /\ is_sint32(x_9).
  (* Invariant *)
  Have: (n_1 * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_11) = 0.
  (* Invariant *)
  Have: (n_1 * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_11) = 0.
  (* Invariant *)
  Have: (n_1 * x * y) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: x_6 = (x_8 + (x * x * x_10)).
  (* Invariant *)
  Have: x_6 = (x_8 + (n * x * x)).
  (* Invariant *)
  Have: (y * y * x_10) = x_7.
  (* Invariant *)
  Have: (n * n * x * x * y * y) <= (n * y * y * x_9).
  (* Invariant *)
  Have: x_8 <= x_6.
  (* Invariant *)
  Have: 0 <= x_7.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x * x * x_4) = x_6.
}
Prove: (y * y * x_4) = x_12.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (30ms) (140596)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 14):
Let x_1 = 0 / (x * y).
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_1) = 0.
}
Prove: (y * y * x_1) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:0.90ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.90ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 15):
Let x_1 = x * y.
Let x_2 = n * x * y.
Let x_3 = x_1 + x_2.
Let x_4 = x_3 / x_1.
Let x_5 = n - 1.
Let x_6 = x * x * x_5.
Let x_7 = y * y.
Let x_8 = y * y * x_4.
Let x_9 = x * x.
Let x_10 = x_6 - x_9.
Let x_11 = x_8 - x_7.
Let x_12 = x_2 / x_1.
Let x_13 = 0 / x_1.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_5) /\ is_sint32(x_2) /\ is_sint32(x_3) /\ is_sint32(x_6) /\
      is_sint32(x_10) /\ is_sint32(x_8) /\ is_sint32(x_11).
  (* Invariant *)
  Have: (n_1 * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_13) = 0.
  (* Invariant *)
  Have: (n_1 * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_13) = 0.
  (* Invariant *)
  Have: (n_1 * x * y) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: x_6 = (x_9 + (x * x * x_12)).
  (* Invariant *)
  Have: x_6 = (x_9 + (n * x * x)).
  (* Invariant *)
  Have: x_8 = (x_7 + (y * y * x_12)).
  (* Invariant *)
  Have: x_8 = (x_7 + (n * y * y)).
  (* Invariant *)
  Have: (n * n * x * x * y * y) <= (x_10 * x_11).
  (* Invariant *)
  Have: x_9 <= x_6.
  (* Invariant *)
  Have: x_7 <= x_8.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x * x * x_4) = x_6.
}
Prove: x_8 = (y * y * x_5).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (59ms) (1637)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 15):
Let x_1 = 0 / (x * y).
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_1) = 0.
  (* Invariant *)
  Have: (y * y * x_1) = 0.
}
Prove: (n * y * y) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 17):
Let x_1 = x * y.
Let x_2 = n * x * y.
Let x_3 = x_1 + x_2.
Let x_4 = x_3 / x_1.
Let x_5 = n - 1.
Let x_6 = y * y * x_5.
Let x_7 = x * x * x_5.
Let x_8 = y * y.
Let x_9 = x * x.
Let x_10 = x_7 - x_9.
Let x_11 = x_6 - x_8.
Let x_12 = x_2 / x_1.
Let x_13 = 0 / x_1.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_5) /\ is_sint32(x_2) /\ is_sint32(x_3) /\ is_sint32(x_7) /\
      is_sint32(x_6) /\ is_sint32(x_10) /\ is_sint32(x_11).
  (* Invariant *)
  Have: (n_1 * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_13) = 0.
  (* Invariant *)
  Have: (n_1 * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_13) = 0.
  (* Invariant *)
  Have: (n_1 * x * y) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: x_7 = (x_9 + (x * x * x_12)).
  (* Invariant *)
  Have: x_7 = (x_9 + (n * x * x)).
  (* Invariant *)
  Have: x_6 = (x_8 + (y * y * x_12)).
  (* Invariant *)
  Have: x_6 = (x_8 + (n * y * y)).
  (* Invariant *)
  Have: (n * n * x * x * y * y) <= (x_10 * x_11).
  (* Invariant *)
  Have: x_9 <= x_7.
  (* Invariant *)
  Have: x_8 <= x_6.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x * x * x_4) = x_7.
  (* Invariant *)
  Have: (y * y * x_4) = x_6.
}
Prove: (x * y * x_5) = x_3.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (20ms) (89066)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (31ms) (919)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 17):
Let x_1 = 0 / (x * y).
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_1) = 0.
  (* Invariant *)
  Have: (n * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_1) = 0.
}
Prove: (n * x * y) = 0.
Prover Z3 4.8.12 returns Valid (Qed:2ms) (20ms) (40583)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 19):
Let x_1 = n - 1.
Let x_2 = x * y * x_1.
Let x_3 = x * y.
Let x_4 = x_2 / x_3.
Let x_5 = y * y * x_1.
Let x_6 = x * x * x_1.
Let x_7 = y * y.
Let x_8 = x * x.
Let x_9 = x_2 - x_3.
Let x_10 = x_6 - x_8.
Let x_11 = x_5 - x_7.
Let x_12 = x_9 / x_3.
Let x_13 = 0 / x_3.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_1) /\ is_sint32(x_6) /\ is_sint32(x_2) /\ is_sint32(x_5) /\
      is_sint32(x_10) /\ is_sint32(x_9) /\ is_sint32(x_11).
  (* Invariant *)
  Have: (n_1 * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_13) = 0.
  (* Invariant *)
  Have: (n_1 * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_13) = 0.
  (* Invariant *)
  Have: (n_1 * x * y) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: x_6 = (x_8 + (x * x * x_12)).
  (* Invariant *)
  Have: x_6 = (x_8 + (n * x * x)).
  (* Invariant *)
  Have: x_5 = (x_7 + (y * y * x_12)).
  (* Invariant *)
  Have: x_5 = (x_7 + (n * y * y)).
  (* Invariant *)
  Have: x_2 = (x_3 + (n * x * y)).
  (* Invariant *)
  Have: (x_9 * x_9) <= (x_10 * x_11).
  (* Invariant *)
  Have: x_8 <= x_6.
  (* Invariant *)
  Have: x_7 <= x_5.
  (* Invariant *)
  Have: x_3 <= x_2.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x * x * x_4) = x_6.
  (* Invariant *)
  Have: (y * y * x_4) = x_5.
}
Prove: 0 <= x_6.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (36735)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (19ms) (744)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 20):
Let x_1 = n - 1.
Let x_2 = x * x * x_1.
Let x_3 = x * y * x_1.
Let x_4 = x * y.
Let x_5 = x_3 / x_4.
Let x_6 = y * y * x_1.
Let x_7 = y * y.
Let x_8 = x * x.
Let x_9 = x_3 - x_4.
Let x_10 = x_2 - x_8.
Let x_11 = x_6 - x_7.
Let x_12 = x_9 / x_4.
Let x_13 = 0 / x_4.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(x_3) /\ is_sint32(x_6) /\
      is_sint32(x_10) /\ is_sint32(x_9) /\ is_sint32(x_11).
  (* Invariant *)
  Have: (n_1 * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_13) = 0.
  (* Invariant *)
  Have: (n_1 * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_13) = 0.
  (* Invariant *)
  Have: (n_1 * x * y) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: x_2 = (x_8 + (x * x * x_12)).
  (* Invariant *)
  Have: x_2 = (x_8 + (n * x * x)).
  (* Invariant *)
  Have: x_6 = (x_7 + (y * y * x_12)).
  (* Invariant *)
  Have: x_6 = (x_7 + (n * y * y)).
  (* Invariant *)
  Have: x_3 = (x_4 + (n * x * y)).
  (* Invariant *)
  Have: (x_9 * x_9) <= (x_10 * x_11).
  (* Invariant *)
  Have: x_8 <= x_2.
  (* Invariant *)
  Have: x_7 <= x_6.
  (* Invariant *)
  Have: x_4 <= x_3.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x * x * x_5) = x_2.
  (* Invariant *)
  Have: (y * y * x_5) = x_6.
  (* Invariant *)
  Have: 0 <= x_2.
}
Prove: 0 <= x_6.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (36863)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (24ms) (745)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 21):
Let x_1 = n - 1.
Let x_2 = y * y * x_1.
Let x_3 = x * x * x_1.
Let x_4 = x * y * x_1.
Let x_5 = x * y.
Let x_6 = x_4 / x_5.
Let x_7 = y * y.
Let x_8 = x * x.
Let x_9 = x_4 - x_5.
Let x_10 = x_3 - x_8.
Let x_11 = x_2 - x_7.
Let x_12 = x_9 / x_5.
Let x_13 = 0 / x_5.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_1) /\ is_sint32(x_3) /\ is_sint32(x_4) /\ is_sint32(x_2) /\
      is_sint32(x_10) /\ is_sint32(x_9) /\ is_sint32(x_11).
  (* Invariant *)
  Have: (n_1 * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_13) = 0.
  (* Invariant *)
  Have: (n_1 * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_13) = 0.
  (* Invariant *)
  Have: (n_1 * x * y) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: x_3 = (x_8 + (x * x * x_12)).
  (* Invariant *)
  Have: x_3 = (x_8 + (n * x * x)).
  (* Invariant *)
  Have: x_2 = (x_7 + (y * y * x_12)).
  (* Invariant *)
  Have: x_2 = (x_7 + (n * y * y)).
  (* Invariant *)
  Have: x_4 = (x_5 + (n * x * y)).
  (* Invariant *)
  Have: (x_9 * x_9) <= (x_10 * x_11).
  (* Invariant *)
  Have: x_8 <= x_3.
  (* Invariant *)
  Have: x_7 <= x_2.
  (* Invariant *)
  Have: x_5 <= x_4.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x * x * x_6) = x_3.
  (* Invariant *)
  Have: (y * y * x_6) = x_2.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: 0 <= x_2.
}
Prove: 0 <= x_4.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (38505)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (25ms) (746)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.96ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0004/30_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0004/30_merged.c, line 22):
Let x_1 = 0 / (x * y).
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: (n * x * x) = 0.
  (* Invariant *)
  Have: (x * x * x_1) = 0.
  (* Invariant *)
  Have: (n * y * y) = 0.
  (* Invariant *)
  Have: (y * y * x_1) = 0.
  (* Invariant *)
  Have: (n * x * y) = 0.
}
Prove: 0 <= n.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/30_0004/30_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/30_0004/30_merged.c:2: Warning: 
  No 'assigns' specification for function 'main30'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/30_0005/30_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 27 goals scheduled
[wp] [Timeout] typed_main30_loop_invariant_preserved (Qed 7ms) (Z3)
[wp] [Timeout] typed_main30_loop_invariant_2_preserved (Qed 7ms) (Z3)
[wp] [Timeout] typed_main30_loop_invariant_3_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_main30_loop_invariant_5_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_main30_loop_invariant_13_established (Qed 1ms) (Z3)
[wp] Proved goals:   22 / 27
  Qed:              12
  Alt-Ergo 2.5.4:    1 (844ms)
  Z3 4.8.12:         9 (10ms-71ms-230ms)
  Timeout:           5
------------------------------------------------------------
  Function main30
------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0005/30_merged.c, line 11):
Let x_1 = n_1 - n.
Let x_2 = x * y * x_1.
Let x_3 = -n_1.
Let x_4 = 1 + n - n_1.
Let x_5 = y * y * x_4.
Let x_6 = y * (x_2 / x).
Let x_7 = x_5 + x_6.
Let x_8 = x * x * x_4.
Let x_9 = x * (x_2 / y).
Let x_10 = x_8 + x_9.
Let x_11 = n - n_1.
Let x_12 = y * y.
Let x_13 = x * x.
Let x_14 = x_13 + x_8 + x_9.
Let x_15 = x_12 + x_5 + x_6.
Assume {
  Type: is_sint32(n_1) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_2) /\ is_sint32(x_10) /\ is_sint32(x_7) /\
      is_sint32(x_14) /\ is_sint32(x_15).
  (* Invariant *)
  Have: (x_13 + (x * (0 / y))) = 0.
  (* Invariant *)
  Have: (x_12 + (y * (0 / x))) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (x_7 = x_10) \/ (x_7 < x_10).
  (* Invariant *)
  Have: (x * x * x_11) = x_10.
  (* Invariant *)
  Have: (y * y * x_11) = x_7.
  (* Invariant *)
  Have: (x * y * x_11) = x_2.
  (* Invariant *)
  Have: (x * x * y * y * x_1 * x_1) <= (x_10 * x_7).
  (* Invariant *)
  Have: n <= n_1.
  (* Invariant *)
  Have: 0 <= x_10.
  (* Invariant *)
  Have: 0 <= x_7.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
}
Prove: (x_15 = x_14) \/ (x_15 < x_14).
Prover Z3 4.8.12 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0005/30_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0005/30_merged.c, line 12):
Let x_1 = y * y.
Let x_2 = -n_1.
Let x_3 = 1 + n - n_1.
Let x_4 = y * y * x_3.
Let x_5 = n_1 - n.
Let x_6 = x * y * x_5.
Let x_7 = y * (x_6 / x).
Let x_8 = x_1 + x_4 + x_7.
Let x_9 = x * x.
Let x_10 = x * x * x_3.
Let x_11 = x * (x_6 / y).
Let x_12 = x_9 + x_10 + x_11.
Let x_13 = x_4 + x_7.
Let x_14 = x_10 + x_11.
Let x_15 = n - n_1.
Assume {
  Type: is_sint32(n_1) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(n - 1) /\ is_sint32(x_6) /\ is_sint32(x_14) /\
      is_sint32(x_13) /\ is_sint32(x_12) /\ is_sint32(x_8).
  (* Invariant *)
  Have: (x_9 + (x * (0 / y))) = 0.
  (* Invariant *)
  Have: (x_1 + (y * (0 / x))) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (x_13 = x_14) \/ (x_13 < x_14).
  (* Invariant *)
  Have: (x * x * x_15) = x_14.
  (* Invariant *)
  Have: (y * y * x_15) = x_13.
  (* Invariant *)
  Have: (x * y * x_15) = x_6.
  (* Invariant *)
  Have: (x * x * y * y * x_5 * x_5) <= (x_14 * x_13).
  (* Invariant *)
  Have: n <= n_1.
  (* Invariant *)
  Have: 0 <= x_14.
  (* Invariant *)
  Have: 0 <= x_13.
  (* Invariant *)
  Have: 0 <= x_6.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x_8 = x_12) \/ (x_8 < x_12).
}
Prove: (x * x * (n - 1 - n_1)) = x_12.
Prover Z3 4.8.12 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0005/30_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0005/30_merged.c, line 13):
Let x_1 = -n_1.
Let x_2 = x * x * (n - 1 - n_1).
Let x_3 = y * y.
Let x_4 = 1 + n - n_1.
Let x_5 = y * y * x_4.
Let x_6 = n_1 - n.
Let x_7 = x * y * x_6.
Let x_8 = y * (x_7 / x).
Let x_9 = x_3 + x_5 + x_8.
Let x_10 = x_5 + x_8.
Let x_11 = x * x.
Let x_12 = x_2 - x_11.
Let x_13 = n - n_1.
Let x_14 = x * x * x_13.
Let x_15 = x_11 + x_5 + x_8.
Let x_16 = (x * y) + x_7.
Assume {
  Type: is_sint32(n_1) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(n - 1) /\ is_sint32(x_7) /\ is_sint32(x_2) /\
      is_sint32(x_16) /\ is_sint32(x_12) /\ is_sint32(x_10) /\
      is_sint32(x_9).
  (* Invariant *)
  Have: (x_11 + (x * (0 / y))) = 0.
  (* Invariant *)
  Have: (x_3 + (y * (0 / x))) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (x_2 = x_15) \/ (x_15 < x_2).
  (* Invariant *)
  Have: x_2 = (x_11 + x_14).
  (* Invariant *)
  Have: x_2 = (x_11 + (x * x * x_4) + (x * (x_7 / y))).
  (* Invariant *)
  Have: (y * y * x_13) = x_10.
  (* Invariant *)
  Have: (x * y * x_13) = x_7.
  (* Invariant *)
  Have: (x * x * y * y * x_6 * x_6) <= (x_12 * x_10).
  (* Invariant *)
  Have: n <= n_1.
  (* Invariant *)
  Have: x_11 <= x_2.
  (* Invariant *)
  Have: 0 <= x_10.
  (* Invariant *)
  Have: 0 <= x_7.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x_2 = x_9) \/ (x_9 < x_2).
}
Prove: x_2 = (x_14 + (x * (x_16 / y))).
Prover Z3 4.8.12 returns Valid (Qed:7ms) (90ms) (331912)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0005/30_merged.c, line 13):
Assume { Type: is_sint32(x) /\ is_sint32(y). }
Prove: ((x * x) + (x * (0 / y))) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0005/30_merged.c, line 14):
Let x_1 = -n_1.
Let x_2 = n - 1 - n_1.
Let x_3 = n - n_1.
Let x_4 = x * x * x_3.
Let x_5 = n_1 - n.
Let x_6 = x * y * x_5.
Let x_7 = (x * y) + x_6.
Let x_8 = x * (x_7 / y).
Let x_9 = x_4 + x_8.
Let x_10 = y * y.
Let x_11 = 1 + n - n_1.
Let x_12 = y * y * x_11.
Let x_13 = y * (x_6 / x).
Let x_14 = x_10 + x_12 + x_13.
Let x_15 = x_12 + x_13.
Let x_16 = x * x.
Let x_17 = x_4 + x_8 - x_16.
Let x_18 = x_16 + x_12 + x_13.
Assume {
  Type: is_sint32(n_1) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(n - 1) /\ is_sint32(x_6) /\ is_sint32(x_7) /\
      is_sint32(x_15) /\ is_sint32(x_14) /\ is_sint32(x_9) /\
      is_sint32(x_17).
  (* Invariant *)
  Have: (x_16 + (x * (0 / y))) = 0.
  (* Invariant *)
  Have: (x_10 + (y * (0 / x))) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (x_9 = x_18) \/ (x_18 < x_9).
  (* Invariant *)
  Have: x_8 = x_16.
  (* Invariant *)
  Have: x_9 = (x_16 + (x * x * x_11) + (x * (x_6 / y))).
  (* Invariant *)
  Have: (y * y * x_3) = x_15.
  (* Invariant *)
  Have: (x * y * x_3) = x_6.
  (* Invariant *)
  Have: (x * x * y * y * x_5 * x_5) <= (x_15 * x_17).
  (* Invariant *)
  Have: n <= n_1.
  (* Invariant *)
  Have: x_16 <= x_9.
  (* Invariant *)
  Have: 0 <= x_15.
  (* Invariant *)
  Have: 0 <= x_6.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x_9 = x_14) \/ (x_14 < x_9).
  (* Invariant *)
  Have: (x * x * x_2) = x_9.
}
Prove: (y * y * x_2) = x_14.
Prover Z3 4.8.12 returns Valid (Qed:11ms) (230ms) (947360)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0005/30_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.96ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0005/30_merged.c, line 15):
Let x_1 = -n_1.
Let x_2 = n - 1 - n_1.
Let x_3 = n - n_1.
Let x_4 = x * x * x_3.
Let x_5 = n_1 - n.
Let x_6 = x * y * x_5.
Let x_7 = (x * y) + x_6.
Let x_8 = x * (x_7 / y).
Let x_9 = x_4 + x_8.
Let x_10 = y * y * x_2.
Let x_11 = y * y.
Let x_12 = x * x.
Let x_13 = x_10 - x_11.
Let x_14 = x_4 + x_8 - x_12.
Let x_15 = 1 + n - n_1.
Let x_16 = y * y * x_3.
Let x_17 = x_11 + x_4 + x_8.
Let x_18 = x_12 + x_10.
Assume {
  Type: is_sint32(n_1) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(n - 1) /\ is_sint32(x_6) /\ is_sint32(x_10) /\
      is_sint32(x_7) /\ is_sint32(x_13) /\ is_sint32(x_9) /\ is_sint32(x_14).
  (* Invariant *)
  Have: (x_12 + (x * (0 / y))) = 0.
  (* Invariant *)
  Have: (x_11 + (y * (0 / x))) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (x_17 = x_18) \/ (x_18 < x_17).
  (* Invariant *)
  Have: x_8 = x_12.
  (* Invariant *)
  Have: x_9 = (x_12 + (x * x * x_15) + (x * (x_6 / y))).
  (* Invariant *)
  Have: x_10 = (x_11 + x_16).
  (* Invariant *)
  Have: x_10 = (x_11 + (y * y * x_15) + (y * (x_6 / x))).
  (* Invariant *)
  Have: (x * y * x_3) = x_6.
  (* Invariant *)
  Have: (x * x * y * y * x_5 * x_5) <= (x_13 * x_14).
  (* Invariant *)
  Have: n <= n_1.
  (* Invariant *)
  Have: x_12 <= x_9.
  (* Invariant *)
  Have: x_11 <= x_10.
  (* Invariant *)
  Have: 0 <= x_6.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x_10 = x_9) \/ (x_10 < x_9).
  (* Invariant *)
  Have: (x * x * x_2) = x_9.
}
Prove: x_10 = (x_16 + (y * (x_7 / x))).
Prover Z3 4.8.12 returns Valid (Qed:8ms) (150ms) (566710)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0005/30_merged.c, line 15):
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: ((x * x) + (x * (0 / y))) = 0.
}
Prove: ((y * y) + (y * (0 / x))) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0005/30_merged.c, line 16):
Let x_1 = -n_1.
Let x_2 = n - 1 - n_1.
Let x_3 = n - n_1.
Let x_4 = y * y * x_3.
Let x_5 = n_1 - n.
Let x_6 = x * y * x_5.
Let x_7 = (x * y) + x_6.
Let x_8 = y * (x_7 / x).
Let x_9 = x_4 + x_8.
Let x_10 = x * x * x_3.
Let x_11 = x * (x_7 / y).
Let x_12 = x_10 + x_11.
Let x_13 = y * y.
Let x_14 = x * x.
Let x_15 = x_10 + x_11 - x_14.
Let x_16 = x_4 + x_8 - x_13.
Let x_17 = 1 + n - n_1.
Let x_18 = x_13 + x_10 + x_11.
Let x_19 = x_14 + x_4 + x_8.
Assume {
  Type: is_sint32(n_1) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(n - 1) /\ is_sint32(x_6) /\ is_sint32(x_7) /\
      is_sint32(x_12) /\ is_sint32(x_9) /\ is_sint32(x_15) /\
      is_sint32(x_16).
  (* Invariant *)
  Have: (x_14 + (x * (0 / y))) = 0.
  (* Invariant *)
  Have: (x_13 + (y * (0 / x))) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (x_18 = x_19) \/ (x_19 < x_18).
  (* Invariant *)
  Have: x_11 = x_14.
  (* Invariant *)
  Have: x_12 = (x_14 + (x * x * x_17) + (x * (x_6 / y))).
  (* Invariant *)
  Have: x_8 = x_13.
  (* Invariant *)
  Have: x_9 = (x_13 + (y * y * x_17) + (y * (x_6 / x))).
  (* Invariant *)
  Have: (x * y * x_3) = x_6.
  (* Invariant *)
  Have: (x * x * y * y * x_5 * x_5) <= (x_15 * x_16).
  (* Invariant *)
  Have: n <= n_1.
  (* Invariant *)
  Have: x_14 <= x_12.
  (* Invariant *)
  Have: x_13 <= x_9.
  (* Invariant *)
  Have: 0 <= x_6.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x_9 = x_12) \/ (x_9 < x_12).
  (* Invariant *)
  Have: (x * x * x_2) = x_12.
  (* Invariant *)
  Have: (y * y * x_2) = x_9.
}
Prove: (x * y * x_2) = x_7.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (100ms) (462818)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0005/30_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0005/30_merged.c, line 17):
Let x_1 = -n.
Let x_2 = n_1 - 1 - n.
Let x_3 = n_1 - n.
Let x_4 = y * y * x_3.
Let x_5 = x * y * x_2.
Let x_6 = y * (x_5 / x).
Let x_7 = x_4 + x_6.
Let x_8 = x * x * x_3.
Let x_9 = x * (x_5 / y).
Let x_10 = x_8 + x_9.
Let x_11 = x * y.
Let x_12 = y * y.
Let x_13 = x * x.
Let x_14 = x_5 - x_11.
Let x_15 = x_8 + x_9 - x_13.
Let x_16 = x_4 + x_6 - x_12.
Let x_17 = -n_1.
Let x_18 = 1 + n_1 - n.
Let x_19 = x_12 + x_8 + x_9.
Let x_20 = x_13 + x_4 + x_6.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(n_1 - 1) /\ is_sint32(x_5) /\ is_sint32(x_14) /\
      is_sint32(x_10) /\ is_sint32(x_7) /\ is_sint32(x_15) /\
      is_sint32(x_16).
  (* Invariant *)
  Have: (x_13 + (x * (0 / y))) = 0.
  (* Invariant *)
  Have: (x_12 + (y * (0 / x))) = 0.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (x_19 = x_20) \/ (x_20 < x_19).
  (* Invariant *)
  Have: x_9 = x_13.
  (* Invariant *)
  Have: (x_13 + (x * x * x_18) + (x * (x_14 / y))) = x_10.
  (* Invariant *)
  Have: x_6 = x_12.
  (* Invariant *)
  Have: (x_12 + (y * y * x_18) + (y * (x_14 / x))) = x_7.
  (* Invariant *)
  Have: x_5 = (x_11 + (x * y * x_3)).
  (* Invariant *)
  Have: x_5 = (x_11 + (x * y * (n - n_1))).
  (* Invariant *)
  Have: (x_14 * x_14) <= (x_15 * x_16).
  (* Invariant *)
  Have: n_1 <= n.
  (* Invariant *)
  Have: x_13 <= x_10.
  (* Invariant *)
  Have: x_12 <= x_7.
  (* Invariant *)
  Have: x_11 <= x_5.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Then *)
  Have: 0 < n_1.
  (* Invariant *)
  Have: (x_7 = x_10) \/ (x_7 < x_10).
  (* Invariant *)
  Have: (x * x * x_2) = x_10.
  (* Invariant *)
  Have: (y * y * x_2) = x_7.
}
Prove: (x * y * (1 + n - n_1)) = x_5.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (15507)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0005/30_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0005/30_merged.c, line 18):
Let x_1 = -n_1.
Let x_2 = 1 + n - n_1.
Let x_3 = x * y * x_2.
Let x_4 = -n.
Let x_5 = n_1 - 1 - n.
Let x_6 = n_1 - n.
Let x_7 = y * y * x_6.
Let x_8 = y * (x_3 / x).
Let x_9 = x_7 + x_8.
Let x_10 = x * x * x_6.
Let x_11 = x * (x_3 / y).
Let x_12 = x_10 + x_11.
Let x_13 = x * y.
Let x_14 = y * y.
Let x_15 = x * x.
Let x_16 = x_3 - x_13.
Let x_17 = x_10 + x_11 - x_15.
Let x_18 = x_7 + x_8 - x_14.
Let x_19 = 1 + n_1 - n.
Let x_20 = x_14 + x_10 + x_11.
Let x_21 = x_15 + x_7 + x_8.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(n_1 - 1) /\ is_sint32(x_3) /\ is_sint32(x_16) /\
      is_sint32(x_12) /\ is_sint32(x_9) /\ is_sint32(x_17) /\
      is_sint32(x_18).
  (* Invariant *)
  Have: (x_15 + (x * (0 / y))) = 0.
  (* Invariant *)
  Have: (x_14 + (y * (0 / x))) = 0.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (x_20 = x_21) \/ (x_21 < x_20).
  (* Invariant *)
  Have: x_11 = x_15.
  (* Invariant *)
  Have: (x_15 + (x * x * x_19) + (x * (x_16 / y))) = x_12.
  (* Invariant *)
  Have: x_8 = x_14.
  (* Invariant *)
  Have: (x_14 + (y * y * x_19) + (y * (x_16 / x))) = x_9.
  (* Invariant *)
  Have: x_3 = (x_13 + (x * y * x_6)).
  (* Invariant *)
  Have: x_3 = (x_13 + (x * y * (n - n_1))).
  (* Invariant *)
  Have: (x_16 * x_16) <= (x_17 * x_18).
  (* Invariant *)
  Have: n_1 <= n.
  (* Invariant *)
  Have: x_15 <= x_12.
  (* Invariant *)
  Have: x_14 <= x_9.
  (* Invariant *)
  Have: x_13 <= x_3.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Then *)
  Have: 0 < n_1.
  (* Invariant *)
  Have: (x_9 = x_12) \/ (x_9 < x_12).
  (* Invariant *)
  Have: (x * x * x_5) = x_12.
  (* Invariant *)
  Have: (y * y * x_5) = x_9.
  (* Invariant *)
  Have: x_3 = (x * y * x_5).
}
Prove: (x * x * y * y * x_2 * x_2) <= (x_12 * x_9).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (844ms) (3123)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0005/30_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0005/30_merged.c, line 19):
Let x_1 = -n.
Let x_2 = 1 + n_1 - n.
Let x_3 = -n_1.
Let x_4 = n - n_1.
Let x_5 = x * x * x_4.
Let x_6 = x * y * x_2.
Let x_7 = x * (x_6 / y).
Let x_8 = x_5 + x_7.
Let x_9 = y * y * x_4.
Let x_10 = y * (x_6 / x).
Let x_11 = x_9 + x_10.
Let x_12 = n - 1 - n_1.
Let x_13 = x * y.
Let x_14 = y * y.
Let x_15 = x * x.
Let x_16 = x_6 - x_13.
Let x_17 = x_5 + x_7 - x_15.
Let x_18 = x_9 + x_10 - x_14.
Let x_19 = 1 + n - n_1.
Let x_20 = x_14 + x_5 + x_7.
Let x_21 = x_15 + x_9 + x_10.
Assume {
  Type: is_sint32(n_1) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(n - 1) /\ is_sint32(x_6) /\ is_sint32(x_16) /\
      is_sint32(x_8) /\ is_sint32(x_11) /\ is_sint32(x_17) /\
      is_sint32(x_18).
  (* Invariant *)
  Have: (x_15 + (x * (0 / y))) = 0.
  (* Invariant *)
  Have: (x_14 + (y * (0 / x))) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (x_20 = x_21) \/ (x_21 < x_20).
  (* Invariant *)
  Have: x_7 = x_15.
  (* Invariant *)
  Have: (x_15 + (x * x * x_19) + (x * (x_16 / y))) = x_8.
  (* Invariant *)
  Have: x_10 = x_14.
  (* Invariant *)
  Have: (x_14 + (y * y * x_19) + (y * (x_16 / x))) = x_11.
  (* Invariant *)
  Have: x_6 = (x_13 + (x * y * x_4)).
  (* Invariant *)
  Have: x_6 = (x_13 + (x * y * (n_1 - n))).
  (* Invariant *)
  Have: (x_16 * x_16) <= (x_17 * x_18).
  (* Invariant *)
  Have: n <= n_1.
  (* Invariant *)
  Have: x_15 <= x_8.
  (* Invariant *)
  Have: x_14 <= x_11.
  (* Invariant *)
  Have: x_13 <= x_6.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x_11 = x_8) \/ (x_11 < x_8).
  (* Invariant *)
  Have: (x * x * x_12) = x_8.
  (* Invariant *)
  Have: (y * y * x_12) = x_11.
  (* Invariant *)
  Have: x_6 = (x * y * x_12).
  (* Invariant *)
  Have: (x * x * y * y * x_2 * x_2) <= (x_8 * x_11).
}
Prove: n <= (1 + n_1).
Prover Z3 4.8.12 returns Valid (Qed:8ms) (20ms) (38273)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0005/30_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0005/30_merged.c, line 20):
Let x_1 = -n.
Let x_2 = 1 + n_1 - n.
Let x_3 = -n_1.
Let x_4 = n - n_1.
Let x_5 = x * x * x_4.
Let x_6 = x * y * x_2.
Let x_7 = x * (x_6 / y).
Let x_8 = x_5 + x_7.
Let x_9 = y * y * x_4.
Let x_10 = y * (x_6 / x).
Let x_11 = x_9 + x_10.
Let x_12 = n - 1 - n_1.
Let x_13 = x * y.
Let x_14 = y * y.
Let x_15 = x * x.
Let x_16 = x_6 - x_13.
Let x_17 = x_5 + x_7 - x_15.
Let x_18 = x_9 + x_10 - x_14.
Let x_19 = 1 + n - n_1.
Let x_20 = x_14 + x_5 + x_7.
Let x_21 = x_15 + x_9 + x_10.
Assume {
  Type: is_sint32(n_1) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(n - 1) /\ is_sint32(x_6) /\ is_sint32(x_16) /\
      is_sint32(x_8) /\ is_sint32(x_11) /\ is_sint32(x_17) /\
      is_sint32(x_18).
  (* Invariant *)
  Have: (x_15 + (x * (0 / y))) = 0.
  (* Invariant *)
  Have: (x_14 + (y * (0 / x))) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (x_20 = x_21) \/ (x_21 < x_20).
  (* Invariant *)
  Have: x_7 = x_15.
  (* Invariant *)
  Have: (x_15 + (x * x * x_19) + (x * (x_16 / y))) = x_8.
  (* Invariant *)
  Have: x_10 = x_14.
  (* Invariant *)
  Have: (x_14 + (y * y * x_19) + (y * (x_16 / x))) = x_11.
  (* Invariant *)
  Have: x_6 = (x_13 + (x * y * x_4)).
  (* Invariant *)
  Have: x_6 = (x_13 + (x * y * (n_1 - n))).
  (* Invariant *)
  Have: (x_16 * x_16) <= (x_17 * x_18).
  (* Invariant *)
  Have: n <= n_1.
  (* Invariant *)
  Have: x_15 <= x_8.
  (* Invariant *)
  Have: x_14 <= x_11.
  (* Invariant *)
  Have: x_13 <= x_6.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x_11 = x_8) \/ (x_11 < x_8).
  (* Invariant *)
  Have: (x * x * x_12) = x_8.
  (* Invariant *)
  Have: (y * y * x_12) = x_11.
  (* Invariant *)
  Have: x_6 = (x * y * x_12).
  (* Invariant *)
  Have: (x * x * y * y * x_2 * x_2) <= (x_8 * x_11).
  (* Invariant *)
  Have: n <= (1 + n_1).
}
Prove: 0 <= x_8.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (20ms) (40579)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0005/30_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0005/30_merged.c, line 21):
Let x_1 = -n_1.
Let x_2 = n - n_1.
Let x_3 = x * x * x_2.
Let x_4 = -n.
Let x_5 = 1 + n_1 - n.
Let x_6 = x * y * x_5.
Let x_7 = x * (x_6 / y).
Let x_8 = x_3 + x_7.
Let x_9 = y * y * x_2.
Let x_10 = y * (x_6 / x).
Let x_11 = x_9 + x_10.
Let x_12 = n - 1 - n_1.
Let x_13 = x * y.
Let x_14 = y * y.
Let x_15 = x * x.
Let x_16 = x_6 - x_13.
Let x_17 = x_3 + x_7 - x_15.
Let x_18 = x_9 + x_10 - x_14.
Let x_19 = 1 + n - n_1.
Let x_20 = x_14 + x_3 + x_7.
Let x_21 = x_15 + x_9 + x_10.
Assume {
  Type: is_sint32(n_1) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(n - 1) /\ is_sint32(x_6) /\ is_sint32(x_16) /\
      is_sint32(x_8) /\ is_sint32(x_11) /\ is_sint32(x_17) /\
      is_sint32(x_18).
  (* Invariant *)
  Have: (x_15 + (x * (0 / y))) = 0.
  (* Invariant *)
  Have: (x_14 + (y * (0 / x))) = 0.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Invariant *)
  Have: (x_20 = x_21) \/ (x_21 < x_20).
  (* Invariant *)
  Have: x_7 = x_15.
  (* Invariant *)
  Have: (x_15 + (x * x * x_19) + (x * (x_16 / y))) = x_8.
  (* Invariant *)
  Have: x_10 = x_14.
  (* Invariant *)
  Have: (x_14 + (y * y * x_19) + (y * (x_16 / x))) = x_11.
  (* Invariant *)
  Have: x_6 = (x_13 + (x * y * x_2)).
  (* Invariant *)
  Have: x_6 = (x_13 + (x * y * (n_1 - n))).
  (* Invariant *)
  Have: (x_16 * x_16) <= (x_17 * x_18).
  (* Invariant *)
  Have: n <= n_1.
  (* Invariant *)
  Have: x_15 <= x_8.
  (* Invariant *)
  Have: x_14 <= x_11.
  (* Invariant *)
  Have: x_13 <= x_6.
  (* Invariant *)
  Have: 0 <= n.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: (x_11 = x_8) \/ (x_11 < x_8).
  (* Invariant *)
  Have: (x * x * x_12) = x_8.
  (* Invariant *)
  Have: (y * y * x_12) = x_11.
  (* Invariant *)
  Have: x_6 = (x * y * x_12).
  (* Invariant *)
  Have: (x * x * y * y * x_5 * x_5) <= (x_8 * x_11).
  (* Invariant *)
  Have: n <= (1 + n_1).
  (* Invariant *)
  Have: 0 <= x_8.
}
Prove: 0 <= x_11.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (40664)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0005/30_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0005/30_merged.c, line 22):
Let x_1 = -n.
Let x_2 = n_1 - n.
Let x_3 = y * y * x_2.
Let x_4 = -n_1.
Let x_5 = 1 + n - n_1.
Let x_6 = x * y * x_5.
Let x_7 = y * (x_6 / x).
Let x_8 = x_3 + x_7.
Let x_9 = x * x * x_2.
Let x_10 = x * (x_6 / y).
Let x_11 = x_9 + x_10.
Let x_12 = n_1 - 1 - n.
Let x_13 = x * y.
Let x_14 = y * y.
Let x_15 = x * x.
Let x_16 = x_6 - x_13.
Let x_17 = x_9 + x_10 - x_15.
Let x_18 = x_3 + x_7 - x_14.
Let x_19 = 1 + n_1 - n.
Let x_20 = x_14 + x_9 + x_10.
Let x_21 = x_15 + x_3 + x_7.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(n_1 - 1) /\ is_sint32(x_6) /\ is_sint32(x_16) /\
      is_sint32(x_11) /\ is_sint32(x_8) /\ is_sint32(x_17) /\
      is_sint32(x_18).
  (* Invariant *)
  Have: (x_15 + (x * (0 / y))) = 0.
  (* Invariant *)
  Have: (x_14 + (y * (0 / x))) = 0.
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (x_20 = x_21) \/ (x_21 < x_20).
  (* Invariant *)
  Have: x_10 = x_15.
  (* Invariant *)
  Have: (x_15 + (x * x * x_19) + (x * (x_16 / y))) = x_11.
  (* Invariant *)
  Have: x_7 = x_14.
  (* Invariant *)
  Have: (x_14 + (y * y * x_19) + (y * (x_16 / x))) = x_8.
  (* Invariant *)
  Have: x_6 = (x_13 + (x * y * x_2)).
  (* Invariant *)
  Have: x_6 = (x_13 + (x * y * (n - n_1))).
  (* Invariant *)
  Have: (x_16 * x_16) <= (x_17 * x_18).
  (* Invariant *)
  Have: n_1 <= n.
  (* Invariant *)
  Have: x_15 <= x_11.
  (* Invariant *)
  Have: x_14 <= x_8.
  (* Invariant *)
  Have: x_13 <= x_6.
  (* Invariant *)
  Have: 0 <= n_1.
  (* Then *)
  Have: 0 < n_1.
  (* Invariant *)
  Have: (x_8 = x_11) \/ (x_8 < x_11).
  (* Invariant *)
  Have: (x * x * x_12) = x_11.
  (* Invariant *)
  Have: (y * y * x_12) = x_8.
  (* Invariant *)
  Have: x_6 = (x * y * x_12).
  (* Invariant *)
  Have: (x * x * y * y * x_5 * x_5) <= (x_11 * x_8).
  (* Invariant *)
  Have: n_1 <= (1 + n).
  (* Invariant *)
  Have: 0 <= x_11.
  (* Invariant *)
  Have: 0 <= x_8.
}
Prove: 0 <= x_6.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (38710)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0005/30_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.78ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0005/30_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0005/30_merged.c, line 23):
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(y).
  (* Invariant *)
  Have: ((x * x) + (x * (0 / y))) = 0.
  (* Invariant *)
  Have: ((y * y) + (y * (0 / x))) = 0.
}
Prove: 0 <= n.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/30_0005/30_merged.c, line 24):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/30_0005/30_merged.c:2: Warning: 
  No 'assigns' specification for function 'main30'.
  Callers assumptions might be imprecise.

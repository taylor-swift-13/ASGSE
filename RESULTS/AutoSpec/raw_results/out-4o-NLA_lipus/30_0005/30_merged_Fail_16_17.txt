[kernel] Parsing out/30_0005/30_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 17 goals scheduled
[wp] [Timeout] typed_main30_loop_invariant_preserved (Qed 5ms) (Z3)
[wp] Proved goals:   16 / 17
  Qed:               9
  Alt-Ergo 2.5.4:    7 (12ms-24ms)
  Timeout:           1
------------------------------------------------------------
  Function main30
------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0005/30_merged.c, line 11):
Let x_1 = n_1 - n.
Let x_2 = x * y * x_1.
Let x_3 = -n_1.
Let x_4 = n - n_1.
Let x_5 = y * y * x_4.
Let x_6 = (y * y) + x_5.
Assume {
  Type: is_sint32(n_1) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(n - 1) /\ is_sint32(x_2) /\ is_sint32(x_5) /\
      is_sint32(x_6).
  (* Invariant *)
  Have: (x * y * x_4) = x_2.
  (* Invariant *)
  Have: (x * x * y * y * x_1 * x_1) <= (y * y * z * x_4).
  (* Invariant *)
  Have: n <= n_1.
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: 0 <= x_5.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Then *)
  Have: 0 < n.
}
Prove: (y * y * (n - 1 - n_1)) = x_6.
Prover Z3 4.8.12 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0005/30_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0005/30_merged.c, line 12):
Let x_1 = n_1 - n.
Let x_2 = x * y * x_1.
Let x_3 = y * y.
Let x_4 = -n_1.
Let x_5 = n - 1 - n_1.
Let x_6 = y * y * x_5.
Let x_7 = x_6 - x_3.
Let x_8 = n - n_1.
Let x_9 = (x * y) + x_2.
Assume {
  Type: is_sint32(n_1) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(n - 1) /\ is_sint32(x_2) /\ is_sint32(x_6) /\
      is_sint32(x_9) /\ is_sint32(x_7).
  (* Invariant *)
  Have: x_6 = (x_3 + (y * y * x_8)).
  (* Invariant *)
  Have: (x * y * x_8) = x_2.
  (* Invariant *)
  Have: (x * x * y * y * x_1 * x_1) <= (z * x_7).
  (* Invariant *)
  Have: n <= n_1.
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: x_3 <= x_6.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Then *)
  Have: 0 < n.
}
Prove: (x * y * x_5) = x_9.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (48726)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (14ms) (199)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0005/30_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0005/30_merged.c, line 13):
Let x_1 = x * y.
Let x_2 = -n.
Let x_3 = n_1 - 1 - n.
Let x_4 = x * y * x_3.
Let x_5 = y * y.
Let x_6 = y * y * x_3.
Let x_7 = x_4 - x_1.
Let x_8 = x_6 - x_5.
Let x_9 = -n_1.
Let x_10 = n_1 - n.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(n_1 - 1) /\ is_sint32(x_4) /\
      is_sint32(x_6) /\ is_sint32(x_7) /\ is_sint32(x_8).
  (* Invariant *)
  Have: x_6 = (x_5 + (y * y * x_10)).
  (* Invariant *)
  Have: x_4 = (x_1 + (x * y * x_10)).
  (* Invariant *)
  Have: x_4 = (x_1 + (x * y * (n - n_1))).
  (* Invariant *)
  Have: (x_7 * x_7) <= (z * x_8).
  (* Invariant *)
  Have: n_1 <= n.
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: x_5 <= x_6.
  (* Invariant *)
  Have: x_1 <= x_4.
  (* Then *)
  Have: 0 < n_1.
}
Prove: (x * y * (1 + n - n_1)) = x_4.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (14241)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (12ms) (222)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0005/30_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.73ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0005/30_merged.c, line 14):
Let x_1 = -n_1.
Let x_2 = 1 + n - n_1.
Let x_3 = x * y * x_2.
Let x_4 = -n.
Let x_5 = n_1 - 1 - n.
Let x_6 = x * y.
Let x_7 = y * y.
Let x_8 = y * y * x_5.
Let x_9 = x_3 - x_6.
Let x_10 = x_8 - x_7.
Let x_11 = n_1 - n.
Let x_12 = z + (x * x).
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(n_1 - 1) /\ is_sint32(x_12) /\
      is_sint32(x_3) /\ is_sint32(x_8) /\ is_sint32(x_9) /\ is_sint32(x_10).
  (* Invariant *)
  Have: x_8 = (x_7 + (y * y * x_11)).
  (* Invariant *)
  Have: x_3 = (x_6 + (x * y * x_11)).
  (* Invariant *)
  Have: x_3 = (x_6 + (x * y * (n - n_1))).
  (* Invariant *)
  Have: (x_9 * x_9) <= (z * x_10).
  (* Invariant *)
  Have: n_1 <= n.
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: x_7 <= x_8.
  (* Invariant *)
  Have: x_6 <= x_3.
  (* Then *)
  Have: 0 < n_1.
  (* Invariant *)
  Have: x_3 = (x * y * x_5).
}
Prove: (x * x * y * y * x_2 * x_2) <= (y * y * x_5 * x_12).
Prover Z3 4.8.12 returns Valid (Qed:7ms) (20ms) (69188)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (18ms) (274)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0005/30_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0005/30_merged.c, line 15):
Let x_1 = -n.
Let x_2 = 1 + n_1 - n.
Let x_3 = -n_1.
Let x_4 = n - 1 - n_1.
Let x_5 = z + (x * x).
Let x_6 = x * y * x_2.
Let x_7 = x * y.
Let x_8 = y * y.
Let x_9 = y * y * x_4.
Let x_10 = x_6 - x_7.
Let x_11 = x_9 - x_8.
Let x_12 = n - n_1.
Assume {
  Type: is_sint32(n_1) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(n - 1) /\ is_sint32(x_5) /\ is_sint32(x_6) /\
      is_sint32(x_9) /\ is_sint32(x_10) /\ is_sint32(x_11).
  (* Invariant *)
  Have: x_9 = (x_8 + (y * y * x_12)).
  (* Invariant *)
  Have: x_6 = (x_7 + (x * y * x_12)).
  (* Invariant *)
  Have: x_6 = (x_7 + (x * y * (n_1 - n))).
  (* Invariant *)
  Have: (x_10 * x_10) <= (z * x_11).
  (* Invariant *)
  Have: n <= n_1.
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: x_8 <= x_9.
  (* Invariant *)
  Have: x_7 <= x_6.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_6 = (x * y * x_4).
  (* Invariant *)
  Have: (x * x * y * y * x_2 * x_2) <= (y * y * x_4 * x_5).
}
Prove: n <= (1 + n_1).
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (34434)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (24ms) (285)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0005/30_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0005/30_merged.c, line 16):
Let x_1 = -n_1.
Let x_2 = 1 + n - n_1.
Let x_3 = -n.
Let x_4 = n_1 - 1 - n.
Let x_5 = z + (x * x).
Let x_6 = x * y * x_2.
Let x_7 = x * y.
Let x_8 = y * y.
Let x_9 = y * y * x_4.
Let x_10 = x_6 - x_7.
Let x_11 = x_9 - x_8.
Let x_12 = n_1 - n.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(n_1 - 1) /\ is_sint32(x_5) /\
      is_sint32(x_6) /\ is_sint32(x_9) /\ is_sint32(x_10) /\ is_sint32(x_11).
  (* Invariant *)
  Have: x_9 = (x_8 + (y * y * x_12)).
  (* Invariant *)
  Have: x_6 = (x_7 + (x * y * x_12)).
  (* Invariant *)
  Have: x_6 = (x_7 + (x * y * (n - n_1))).
  (* Invariant *)
  Have: (x_10 * x_10) <= (z * x_11).
  (* Invariant *)
  Have: n_1 <= n.
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: x_8 <= x_9.
  (* Invariant *)
  Have: x_7 <= x_6.
  (* Then *)
  Have: 0 < n_1.
  (* Invariant *)
  Have: x_6 = (x * y * x_4).
  (* Invariant *)
  Have: (x * x * y * y * x_2 * x_2) <= (y * y * x_4 * x_5).
  (* Invariant *)
  Have: n_1 <= (1 + n).
}
Prove: 0 <= x_5.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (38996)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (18ms) (308)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0005/30_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0005/30_merged.c, line 17):
Let x_1 = z + (x * x).
Let x_2 = -n.
Let x_3 = 1 + n_1 - n.
Let x_4 = -n_1.
Let x_5 = n - 1 - n_1.
Let x_6 = x * y * x_3.
Let x_7 = x * y.
Let x_8 = y * y.
Let x_9 = y * y * x_5.
Let x_10 = x_6 - x_7.
Let x_11 = x_9 - x_8.
Let x_12 = n - n_1.
Assume {
  Type: is_sint32(n_1) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(n - 1) /\ is_sint32(x_1) /\ is_sint32(x_6) /\
      is_sint32(x_9) /\ is_sint32(x_10) /\ is_sint32(x_11).
  (* Invariant *)
  Have: x_9 = (x_8 + (y * y * x_12)).
  (* Invariant *)
  Have: x_6 = (x_7 + (x * y * x_12)).
  (* Invariant *)
  Have: x_6 = (x_7 + (x * y * (n_1 - n))).
  (* Invariant *)
  Have: (x_10 * x_10) <= (z * x_11).
  (* Invariant *)
  Have: n <= n_1.
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: x_8 <= x_9.
  (* Invariant *)
  Have: x_7 <= x_6.
  (* Then *)
  Have: 0 < n.
  (* Invariant *)
  Have: x_6 = (x * y * x_5).
  (* Invariant *)
  Have: (x * x * y * y * x_3 * x_3) <= (y * y * x_5 * x_1).
  (* Invariant *)
  Have: n <= (1 + n_1).
  (* Invariant *)
  Have: 0 <= x_1.
}
Prove: 0 <= x_9.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (35474)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (18ms) (285)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0005/30_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/30_0005/30_merged.c, line 18):
Let x_1 = -n.
Let x_2 = n_1 - 1 - n.
Let x_3 = y * y * x_2.
Let x_4 = z + (x * x).
Let x_5 = -n_1.
Let x_6 = 1 + n - n_1.
Let x_7 = x * y * x_6.
Let x_8 = x * y.
Let x_9 = y * y.
Let x_10 = x_7 - x_8.
Let x_11 = x_3 - x_9.
Let x_12 = n_1 - n.
Assume {
  Type: is_sint32(n) /\ is_sint32(n_1) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(n_1 - 1) /\ is_sint32(x_4) /\
      is_sint32(x_7) /\ is_sint32(x_3) /\ is_sint32(x_10) /\ is_sint32(x_11).
  (* Invariant *)
  Have: x_3 = (x_9 + (y * y * x_12)).
  (* Invariant *)
  Have: x_7 = (x_8 + (x * y * x_12)).
  (* Invariant *)
  Have: x_7 = (x_8 + (x * y * (n - n_1))).
  (* Invariant *)
  Have: (x_10 * x_10) <= (z * x_11).
  (* Invariant *)
  Have: n_1 <= n.
  (* Invariant *)
  Have: 0 <= z.
  (* Invariant *)
  Have: x_9 <= x_3.
  (* Invariant *)
  Have: x_8 <= x_7.
  (* Then *)
  Have: 0 < n_1.
  (* Invariant *)
  Have: x_7 = (x * y * x_2).
  (* Invariant *)
  Have: (x * x * y * y * x_6 * x_6) <= (y * y * x_2 * x_4).
  (* Invariant *)
  Have: n_1 <= (1 + n).
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: 0 <= x_3.
}
Prove: 0 <= x_7.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (34790)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (17ms) (286)

------------------------------------------------------------

Goal Establishment of Invariant (file out/30_0005/30_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.74ms)

------------------------------------------------------------

Goal Loop assigns (file out/30_0005/30_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/30_0005/30_merged.c:2: Warning: 
  No 'assigns' specification for function 'main30'.
  Callers assumptions might be imprecise.

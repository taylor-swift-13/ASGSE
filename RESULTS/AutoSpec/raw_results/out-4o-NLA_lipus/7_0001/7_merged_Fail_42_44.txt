[kernel] Parsing out/7_0001/7_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 44 goals scheduled
[wp] [Timeout] typed_main7_loop_invariant_4_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_main7_loop_invariant_5_established (Qed 2ms) (Z3)
[wp] Proved goals:   42 / 44
  Qed:              31
  Alt-Ergo 2.5.4:    1 (5ms)
  Z3 4.8.12:        10 (10ms-17ms-20ms)
  Timeout:           2
------------------------------------------------------------
  Function main7
------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 18):
Let x = b * i.
Let x_1 = (b * q) + (b * i * s).
Let x_2 = q * x_1.
Let x_3 = b * s.
Let x_4 = b * i * r.
Let x_5 = x_3 + x_4.
Let x_6 = r * x_5.
Let x_7 = s * x_1.
Let x_8 = s * x_5.
Let x_9 = i_1 * x_5.
Assume {
  Type: is_sint32(a) /\ is_sint32(b_1) /\ is_sint32(b_2) /\ is_sint32(b) /\
      is_sint32(q) /\ is_sint32(r_1) /\ is_sint32(r) /\ is_sint32(s_1) /\
      is_sint32(s_2) /\ is_sint32(s) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_5) /\ is_sint32(x_9).
  (* Pre-condition *)
  Have: 0 < x_1.
  (* Pre-condition *)
  Have: 0 < x_5.
  (* Invariant *)
  Have: (x_5 / x_1) = 1.
  (* Invariant *)
  Have: x_9 = ((2 * x_3) + (2 * x_4)).
  (* Invariant *)
  Have: (x_9 <= x_5) \/ (x_5 <= x_9).
  (* Invariant *)
  Have: 0 < x_9.
  (* Invariant *)
  Have: x_9 = x_1.
  (* Invariant *)
  Have: x = ((q * x_5) + x_7).
  (* Invariant *)
  Have: (x + x_2) = (b + x_8).
  (* Invariant *)
  Have: (x_2 + x_8) = b.
  (* Invariant *)
  Have: (x <= b) \/ (b <= x).
  (* Invariant *)
  Have: (0 < b) /\ (0 < x).
  (* Invariant *)
  Have: x = (x_6 + x_7).
  (* Invariant *)
  Have: (x_2 + x_6 + x_7 + x_8) = (b + x).
  (* Then *)
  Have: x != b.
  If b < x
  Then {
    Have: (b = b_1) /\ (s = s_1).
    Have: (b_1 * i) = (a + b_1).
    Have: (r_1 + s_1) = r.
  }
  Else {
    Let x_10 = b_2 * i.
    Have: (b = b_2) /\ (s = s_2) /\ ((r_1 + s_1) = s_2) /\
        ((r + s_1) = s_2) /\ (x_10 = a) /\ ((b_1 + x_10) = b_2).
  }
}
Prove: x_5 = ((a * r_1) + (b_1 * s_1)).
Prover Z3 4.8.12 returns Valid (Qed:59ms) (20ms) (39892)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.81ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 19):
Let x = a * r.
Let x_1 = b * s.
Let x_2 = x + x_1.
Let x_3 = s_1 * x_2.
Let x_4 = x_3 + (i * q_2 * x_2).
Let x_5 = i_1 * x_4.
Let x_6 = i * s_1 * x_2.
Let x_7 = i * x_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(b_1) /\ is_sint32(p) /\
      is_sint32(p_1) /\ is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\
      is_sint32(r) /\ is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\
      is_sint32(s_1) /\ is_sint32(x_2) /\ is_sint32(x_7) /\ is_sint32(x_4) /\
      is_sint32(x_5).
  (* Pre-condition *)
  Have: 0 < x_7.
  (* Pre-condition *)
  Have: 0 < x_2.
  (* Invariant *)
  Have: (x_2 / x_7) = 1.
  (* Invariant *)
  Have: x_7 = ((2 * x) + (2 * x_1)).
  (* Invariant *)
  Have: (x_7 <= x_2) \/ (x_2 <= x_7).
  (* Invariant *)
  Have: ((s_1 * x_4) + (i_1 * r_2 * x_4)) = x_2.
  (* Invariant *)
  Have: x_7 = ((q_2 * x_4) + (i_1 * s_1 * x_4)).
  (* Invariant *)
  Have: x_5 = ((q_2 * x_2) + x_6).
  (* Invariant *)
  Have: x_5 = (2 * x_3).
  (* Invariant *)
  Have: (x_5 <= x_4) \/ (x_4 <= x_5).
  (* Invariant *)
  Have: (0 < x_4) /\ (0 < x_5).
  (* Invariant *)
  Have: x_5 = ((r_2 * x_2) + x_6).
  (* Then *)
  Have: x_5 != x_4.
  If x_4 < x_5
  Then {
    Let x_8 = b * i_1.
    Let x_9 = x_1 + ((r_1 - s) * (x_8 - b)).
    Have: (q_2 = q) /\ (r_2 = r_1) /\ (s = p_1) /\ (s_1 = p_1) /\
        (s_1 = s) /\ (((s * x_9) + (i * q * x_9)) = b).
    Have: x_8 = (a + b).
    Have: (p + q) = s.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_10 = b_1 * i_1.
    Let x_11 = (b_1 * i_1 * r_2) + ((p - r_2) * (b_1 - x_10)).
    Have: (q_2 = q_1) /\ (r_2 = r) /\ (s_1 = p) /\ ((p + q) = q_1) /\
        ((r_2 + s) = p) /\ (x_10 = a) /\ ((b + x_10) = b_1) /\
        (((p * x_11) + (i * q_1 * x_11)) = b_1).
  }
}
Prove: x_7 = ((a * p) + (b * q)).
Prover Z3 4.8.12 returns Valid (Qed:64ms) (10ms) (44751)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 20):
Let x = (a * p) + (b * q).
Let x_1 = a * r.
Let x_2 = b * s.
Let x_3 = x_1 + x_2.
Let x_4 = s_1 * x_3.
Let x_5 = (q_2 * x) + x_4.
Let x_6 = i_1 * x_5.
Let x_7 = s_1 * x.
Let x_8 = i * x_3.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(b_1) /\ is_sint32(p) /\
      is_sint32(p_1) /\ is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\
      is_sint32(r) /\ is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(s) /\
      is_sint32(s_1) /\ is_sint32(x) /\ is_sint32(x_3) /\ is_sint32(x_8) /\
      is_sint32(x_5) /\ is_sint32(x_6).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < x_3.
  (* Invariant *)
  Have: (x_3 / x) = 1.
  (* Invariant *)
  Have: x_8 = ((2 * x_1) + (2 * x_2)).
  (* Invariant *)
  Have: (x_8 <= x_3) \/ (x_3 <= x_8).
  (* Invariant *)
  Have: 0 < x_8.
  (* Invariant *)
  Have: x_8 = x.
  (* Invariant *)
  Have: ((s_1 * x_5) + (i_1 * r_2 * x_5)) = x_3.
  (* Invariant *)
  Have: ((q_2 * x_5) + (i_1 * s_1 * x_5)) = x.
  (* Invariant *)
  Have: x_6 = ((q_2 * x_3) + x_7).
  (* Invariant *)
  Have: x_6 = (2 * x_4).
  (* Invariant *)
  Have: (x_6 <= x_5) \/ (x_5 <= x_6).
  (* Invariant *)
  Have: (0 < x_5) /\ (0 < x_6).
  (* Invariant *)
  Have: x_6 = ((r_2 * x_3) + x_7).
  (* Then *)
  Have: x_6 != x_5.
  If x_5 < x_6
  Then {
    Let x_9 = b * i_1.
    Let x_10 = x_9 - b.
    Have: (q_2 = q) /\ (r_2 = r_1) /\ (s = p_1) /\ (s_1 = p_1) /\
        (s_1 = s) /\
        (((q * ((b * q) + ((s - q) * x_10)))
          + (s * (x_2 + ((r_1 - s) * x_10)))) = b).
    Have: x_9 = (a + b).
    Have: (p + q) = s.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_11 = b_1 * i_1.
    Let x_12 = b_1 - x_11.
    Have: (q_2 = q_1) /\ (r_2 = r) /\ (s_1 = p) /\ ((p + q) = q_1) /\
        ((r_2 + s) = p) /\ (x_11 = a) /\ ((b + x_11) = b_1) /\
        (((p * ((b_1 * i_1 * r_2) + ((p - r_2) * x_12)))
          + (q_1 * ((b_1 * i_1 * p) + ((q_1 - p) * x_12)))) = b_1).
  }
}
Prove: ((p * x) + (q * x_3)) = a.
Prover Z3 4.8.12 returns Valid (Qed:64ms) (10ms) (45873)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.94ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 21):
Let x = i * y.
Let x_1 = (q * y) + (i * p * y).
Let x_2 = s_1 * y.
Let x_3 = x_2 + (i * q_2 * y).
Let x_4 = i_1 * x_3.
Let x_5 = i * s_1 * y.
Assume {
  Type: is_sint32(b) /\ is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(y) /\
      is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(x_3) /\ is_sint32(x_4).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: (y / x) = 1.
  (* Invariant *)
  Have: x = (2 * y).
  (* Invariant *)
  Have: (x <= y) \/ (y <= x).
  (* Invariant *)
  Have: ((s_1 * x_3) + (i_1 * r_2 * x_3)) = y.
  (* Invariant *)
  Have: x = ((q_2 * x_3) + (i_1 * s_1 * x_3)).
  (* Invariant *)
  Have: x_4 = ((q_2 * y) + x_5).
  (* Invariant *)
  Have: x_4 = (2 * x_2).
  (* Invariant *)
  Have: (x_4 <= x_3) \/ (x_3 <= x_4).
  (* Invariant *)
  Have: (0 < x_3) /\ (0 < x_4).
  (* Invariant *)
  Have: x_4 = ((r_2 * y) + x_5).
  (* Then *)
  Have: x_4 != x_3.
  If x_3 < x_4
  Then {
    Let x_6 = s * y.
    Let x_7 = i * q * y.
    Let x_8 = i_1 * (x_6 + x_7).
    Let x_9 = q * y.
    Let x_10 = i * y * (s - q).
    Have: (q_2 = q) /\ (r_2 = r_1) /\ (s = p_1) /\ (s_1 = p_1) /\
        (s_1 = s) /\ (x_8 = (b + x_9 + x_10)) /\
        (x_8 = (x_9 + x_6 + x_7 + x_10)).
    Have: (p + q) = s.
    Have: (r + s) = r_1.
  }
  Else {
    Let x_11 = i * p * y.
    Let x_12 = y * (q_1 - p).
    Let x_13 = (p * y) + (i * q_1 * y).
    Have: (q_2 = q_1) /\ (r_2 = r) /\ (s_1 = p) /\ ((p + q) = q_1) /\
        ((r_2 + s) = p) /\ ((i_1 * x_13) = (x_11 + x_12)).
    Have: (b + x_11 + x_12) = x_13.
  }
  (* Invariant *)
  Have: ((b * s) + (r * x_1)) = y.
  (* Invariant *)
  Have: x = ((b * q) + (p * x_1)).
}
Prove: s = p.
Prover Z3 4.8.12 returns Valid (Qed:49ms) (20ms) (42335)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 21):
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
}
Prove: (y / x) = 1.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 22):
Let x = i * y.
Let x_1 = q * y.
Let x_2 = i * p * y.
Let x_3 = x_1 + x_2.
Let x_4 = s_1 * y.
Let x_5 = x_4 + (i * q_2 * y).
Let x_6 = i_1 * x_5.
Let x_7 = i * s_1 * y.
Assume {
  Type: is_sint32(b) /\ is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(y) /\
      is_sint32(x) /\ is_sint32(x_3) /\ is_sint32(x_5) /\ is_sint32(x_6).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: (y / x) = 1.
  (* Invariant *)
  Have: x = (2 * y).
  (* Invariant *)
  Have: (x <= y) \/ (y <= x).
  (* Invariant *)
  Have: ((s_1 * x_5) + (i_1 * r_2 * x_5)) = y.
  (* Invariant *)
  Have: x = ((q_2 * x_5) + (i_1 * s_1 * x_5)).
  (* Invariant *)
  Have: x_6 = ((q_2 * y) + x_7).
  (* Invariant *)
  Have: x_6 = (2 * x_4).
  (* Invariant *)
  Have: (x_6 <= x_5) \/ (x_5 <= x_6).
  (* Invariant *)
  Have: (0 < x_5) /\ (0 < x_6).
  (* Invariant *)
  Have: x_6 = ((r_2 * y) + x_7).
  (* Then *)
  Have: x_6 != x_5.
  If x_5 < x_6
  Then {
    Let x_8 = i_1 * p_1 * y.
    Let x_9 = i * p_1 * y.
    Have: (p_1 = p) /\ (q = 0) /\ (q_2 = 0) /\ (r_2 = r_1) /\ (s_1 = p_1) /\
        ((p_1 + r) = r_1) /\ (x_8 = ((p_1 * y) + x_9)).
    Have: x_8 = (b + x_9).
  }
  Else {
    Let x_10 = q_1 - q.
    Let x_11 = i * y * x_10.
    Let x_12 = (i * q_1 * y) + (y * x_10).
    Have: (q_2 = q_1) /\ (r = 0) /\ (r_2 = 0) /\ ((p + q) = q_1) /\
        ((q + s) = q_1) /\ ((q + s_1) = q_1) /\
        ((i_1 * x_12) = (x_1 + x_11)).
    Have: (b + x_1 + x_11) = x_12.
  }
  (* Invariant *)
  Have: ((b * p) + (r * x_3)) = y.
  (* Invariant *)
  Have: x = ((b * q) + (p * x_3)).
}
Prove: (x_1 + x_2 + (i * q * y)) = (b + (p * y)).
Prover Z3 4.8.12 returns Valid (Qed:61ms) (20ms) (42273)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 22):
Assume {
  Type: is_sint32(a) /\ is_sint32(b).
  (* Pre-condition *)
  Have: 0 < a.
  (* Pre-condition *)
  Have: 0 < b.
  (* Invariant *)
  Have: (b / a) = 1.
}
Prove: (2 * b) = a.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 23):
Let x = i * y.
Let x_1 = i * p * y.
Let x_2 = q - p.
Let x_3 = y * x_2.
Let x_4 = x_1 + x_3.
Let x_5 = p * y.
Let x_6 = -x_5.
Let x_7 = i * y * x_2.
Let x_8 = x_1 + x_3 + x_7 - x_5.
Let x_9 = 2 * x_1.
Let x_10 = 2 * x_3.
Let x_11 = 2 * x_5.
Let x_12 = i * q * y.
Let x_13 = x_9 + x_10 + x_7 - x_5.
Let x_14 = x_5 + x_12.
Let x_15 = i_1 * x_14.
Assume {
  Type: is_sint32(p) /\ is_sint32(q) /\ is_sint32(y) /\ is_sint32(x) /\
      is_sint32(x_2) /\ is_sint32(x_14) /\ is_sint32(x_4) /\
      is_sint32(x_15) /\ is_sint32(x_13) /\ is_sint32(x_8).
  (* Residual *)
  When: x_15 <= x_14.
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: (y / x) = 1.
  (* Invariant *)
  Have: x = (2 * y).
  (* Invariant *)
  Have: (x <= y) \/ (y <= x).
  (* Invariant *)
  Have: (p * x_14) = y.
  (* Invariant *)
  Have: x = ((q * x_14) + (i_1 * p * x_14)).
  (* Invariant *)
  Have: x_15 = ((q * y) + x_1).
  (* Invariant *)
  Have: x_15 = x_11.
  (* Invariant *)
  Have: (0 < x_14) /\ (0 < x_15).
  (* Invariant *)
  Have: x_15 = x_1.
  (* Then *)
  Have: x_15 != x_14.
  Have: ((x_9 + x_10 + x_7) = (x_11 + x_12)) /\ ((i_1 * x_13) = x_4).
  (* Invariant *)
  Have: (p * x_8) = y.
  (* Invariant *)
  Have: x = ((p * x_4) + (x_2 * x_8)).
}
Prove: x_4 = x_11.
Prover Z3 4.8.12 returns Valid (Qed:57ms) (20ms) (38442)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 26):
Let x = i * p * y.
Let x_1 = q - p.
Let x_2 = p * y.
Let x_3 = 2 * x_2.
Let x_4 = i * y.
Let x_5 = i * y * x_1.
Let x_6 = x_2 + x_5.
Let x_7 = i * q * y.
Let x_8 = (3 * x_2) + x_5.
Let x_9 = x_2 + x_7.
Let x_10 = i_1 * x_9.
Assume {
  Type: is_sint32(p) /\ is_sint32(q) /\ is_sint32(y) /\ is_sint32(x_4) /\
      is_sint32(x_3) /\ is_sint32(x_1) /\ is_sint32(x_9) /\
      is_sint32(x_10) /\ is_sint32(x_8) /\ is_sint32(x_6).
  (* Residual *)
  When: x_10 <= x_9.
  (* Pre-condition *)
  Have: 0 < x_4.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: (y / x_4) = 1.
  (* Invariant *)
  Have: x_4 = (2 * y).
  (* Invariant *)
  Have: (x_4 <= y) \/ (y <= x_4).
  (* Invariant *)
  Have: (p * x_9) = y.
  (* Invariant *)
  Have: x_4 = ((q * x_9) + (i_1 * p * x_9)).
  (* Invariant *)
  Have: x_10 = ((q * y) + x).
  (* Invariant *)
  Have: x_10 = x_3.
  (* Invariant *)
  Have: (0 < x_9) /\ (0 < x_10).
  (* Invariant *)
  Have: x_10 = x.
  (* Then *)
  Have: x_10 != x_9.
  Have: (x_7 = (x_3 + x_5)) /\ ((i_1 * x_8) = x_3).
  (* Invariant *)
  Have: (p * x_6) = y.
  (* Invariant *)
  Have: x_4 = ((2 * (p * p * y)) + (x_1 * x_6)).
  (* Invariant *)
  Have: (x + (y * x_1)) = x_3.
}
Prove: (x_5 <= x_2) \/ (x_2 <= x_5).
Prover Z3 4.8.12 returns Valid (Qed:49ms) (10ms) (36035)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 27):
Let x = q - p.
Let x_1 = i * y * x.
Let x_2 = p * y.
Let x_3 = i * p * y.
Let x_4 = 2 * x_2.
Let x_5 = i * y.
Let x_6 = x_2 + x_1.
Let x_7 = i * q * y.
Let x_8 = (3 * x_2) + x_1.
Let x_9 = x_2 + x_7.
Let x_10 = i_1 * x_9.
Assume {
  Type: is_sint32(p) /\ is_sint32(q) /\ is_sint32(y) /\ is_sint32(x_5) /\
      is_sint32(x_4) /\ is_sint32(x) /\ is_sint32(x_9) /\ is_sint32(x_10) /\
      is_sint32(x_8) /\ is_sint32(x_6).
  (* Residual *)
  When: x_10 <= x_9.
  (* Pre-condition *)
  Have: 0 < x_5.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: (y / x_5) = 1.
  (* Invariant *)
  Have: x_5 = (2 * y).
  (* Invariant *)
  Have: (x_5 <= y) \/ (y <= x_5).
  (* Invariant *)
  Have: (p * x_9) = y.
  (* Invariant *)
  Have: x_5 = ((q * x_9) + (i_1 * p * x_9)).
  (* Invariant *)
  Have: x_10 = ((q * y) + x_3).
  (* Invariant *)
  Have: x_10 = x_4.
  (* Invariant *)
  Have: (0 < x_9) /\ (0 < x_10).
  (* Invariant *)
  Have: x_10 = x_3.
  (* Then *)
  Have: x_10 != x_9.
  Have: (x_7 = (x_4 + x_1)) /\ ((i_1 * x_8) = x_4).
  (* Invariant *)
  Have: (p * x_6) = y.
  (* Invariant *)
  Have: x_5 = ((2 * (p * p * y)) + (x * x_6)).
  (* Invariant *)
  Have: (x_3 + (y * x)) = x_4.
  (* Invariant *)
  Have: (x_1 <= x_2) \/ (x_2 <= x_1).
}
Prove: (0 < x_2) /\ (0 < x_6).
Prover Z3 4.8.12 returns Valid (Qed:49ms) (20ms) (37962)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 29):
Let x = p * y.
Let x_1 = i * q * y.
Let x_2 = x + x_1.
Let x_3 = i * p * y.
Let x_4 = 2 * x.
Let x_5 = i * y.
Let x_6 = s_1 * y.
Let x_7 = x_6 + (i * q_2 * y).
Let x_8 = i_1 * x_7.
Let x_9 = i * s_1 * y.
Assume {
  Type: is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(q) /\ is_sint32(q_1) /\
      is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\ is_sint32(r_2) /\
      is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(y) /\ is_sint32(x_5) /\
      is_sint32(x_4) /\ is_sint32(x_2) /\ is_sint32(x_7) /\ is_sint32(x_8).
  (* Pre-condition *)
  Have: 0 < x_5.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: (y / x_5) = 1.
  (* Invariant *)
  Have: x_5 = (2 * y).
  (* Invariant *)
  Have: (x_5 <= y) \/ (y <= x_5).
  (* Invariant *)
  Have: ((s_1 * x_7) + (i_1 * r_2 * x_7)) = y.
  (* Invariant *)
  Have: x_5 = ((q_2 * x_7) + (i_1 * s_1 * x_7)).
  (* Invariant *)
  Have: x_8 = ((q_2 * y) + x_9).
  (* Invariant *)
  Have: x_8 = (2 * x_6).
  (* Invariant *)
  Have: (x_8 <= x_7) \/ (x_7 <= x_8).
  (* Invariant *)
  Have: (0 < x_7) /\ (0 < x_8).
  (* Invariant *)
  Have: x_8 = ((r_2 * y) + x_9).
  (* Then *)
  Have: x_8 != x_7.
  If x_7 < x_8
  Then {
    Have: (p_1 = p) /\ (q = 0) /\ (q_2 = 0) /\ (r_2 = r_1) /\ (s_1 = p_1) /\
        ((p_1 + r) = r_1) /\ ((i_1 * p_1 * y) = (3 * (p_1 * y))).
  }
  Else {
    Let x_10 = y * (q_1 - q).
    Let x_11 = 2 * x_10.
    Have: (q_2 = q_1) /\ (r = 0) /\ (r_2 = 0) /\ ((p + q) = q_1) /\
        ((q + s) = q_1) /\ ((q + s_1) = q_1) /\
        ((i * q_1 * y) = (x_1 + x_11)) /\
        ((i_1 * (x_1 + (3 * x_10))) = x_11).
  }
  (* Invariant *)
  Have: ((2 * (p * r * y)) + (p * x_2)) = y.
  (* Invariant *)
  Have: x_5 = ((2 * (p * p * y)) + (q * x_2)).
  (* Invariant *)
  Have: ((q * y) + x_3) = x_4.
  (* Invariant *)
  Have: (x_1 <= x) \/ (x <= x_1).
  (* Invariant *)
  Have: (0 < x) /\ (0 < x_2).
}
Prove: ((r * y) + x_3) = x_4.
Prover Z3 4.8.12 returns Valid (Qed:49ms) (20ms) (42852)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (0.94ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (0.98ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 34):
Let x = p * y.
Let x_1 = x + (i * q * y).
Let x_2 = r * y.
Let x_3 = x_2 + (i * p * y).
Let x_4 = i * y.
Let x_5 = s_1 * y.
Let x_6 = x_5 + (i * q_2 * y).
Let x_7 = i_1 * x_6.
Let x_8 = i * s_1 * y.
Assume {
  Type: is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(q) /\ is_sint32(q_1) /\
      is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\ is_sint32(r_2) /\
      is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(y) /\ is_sint32(x_4) /\
      is_sint32(x_1) /\ is_sint32(x_3) /\ is_sint32(x_6) /\ is_sint32(x_7).
  (* Pre-condition *)
  Have: 0 < x_4.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: (y / x_4) = 1.
  (* Invariant *)
  Have: x_4 = (2 * y).
  (* Invariant *)
  Have: (x_4 <= y) \/ (y <= x_4).
  (* Invariant *)
  Have: ((s_1 * x_6) + (i_1 * r_2 * x_6)) = y.
  (* Invariant *)
  Have: x_4 = ((q_2 * x_6) + (i_1 * s_1 * x_6)).
  (* Invariant *)
  Have: x_7 = ((q_2 * y) + x_8).
  (* Invariant *)
  Have: x_7 = (2 * x_5).
  (* Invariant *)
  Have: (x_7 <= x_6) \/ (x_6 <= x_7).
  (* Invariant *)
  Have: (0 < x_6) /\ (0 < x_7).
  (* Invariant *)
  Have: x_7 = ((r_2 * y) + x_8).
  (* Then *)
  Have: x_7 != x_6.
  If x_6 < x_7
  Then {
    Have: (p_1 = p) /\ (q = 0) /\ (q_2 = 0) /\ (r_2 = r_1) /\ (s_1 = p_1) /\
        ((p_1 + r) = r_1) /\
        ((i_1 * p_1 * y) = ((p_1 * y) + (i * p_1 * y) + (y * (r_1 - p_1)))).
  }
  Else {
    Let x_9 = i * q * y.
    Let x_10 = q_1 - q.
    Let x_11 = i * y * x_10.
    Have: (q_2 = q_1) /\ (r = 0) /\ (r_2 = 0) /\ ((p + q) = q_1) /\
        ((q + s) = q_1) /\ ((q + s_1) = q_1) /\
        ((i * q_1 * y) = (x_9 + x_11)) /\
        ((i_1 * (x_9 + (y * x_10) + x_11)) = x_11).
  }
  (* Invariant *)
  Have: ((p * x_1) + (r * x_3)) = y.
  (* Invariant *)
  Have: x_4 = ((p * x_3) + (q * x_1)).
  (* Invariant *)
  Have: x_2 = (q * y).
  (* Invariant *)
  Have: x_3 = (2 * x).
  (* Invariant *)
  Have: (x_3 <= x_1) \/ (x_1 <= x_3).
  (* Invariant *)
  Have: (0 < x_1) /\ (0 < x_3).
}
Prove: exists i_2 : Z. (i_2 * x_1) = x_3.
Prover Z3 4.8.12 returns Valid (Qed:52ms) (20ms) (43177)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 34):
Let x = 2 * b.
Assume {
  Type: is_sint32(b) /\ is_sint32(x).
  (* Pre-condition *)
  Have: 0 < b.
  (* Invariant *)
  Have: (b / x) = 1.
}
Prove: exists i : Z. (b * i) = x.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (30113)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (36)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0001/7_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0001/7_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Assertion (file out/7_0001/7_merged.c, line 59):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Loop assigns (file out/7_0001/7_merged.c, line 39):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/7_0001/7_merged.c:5: Warning: 
  No 'assigns' specification for function 'main7'.
  Callers assumptions might be imprecise.

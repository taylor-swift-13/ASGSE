[kernel] Parsing out/26_0001/26_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 19 goals scheduled
[wp] [Timeout] typed_main26_loop_invariant_3_preserved (Qed 10ms) (Z3)
[wp] Proved goals:   18 / 19
  Qed:              15
  Alt-Ergo 2.5.4:    3 (6ms-34ms-88ms)
  Timeout:           1
------------------------------------------------------------
  Function main26
------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 12):
Let x_1 = 1 + y.
Let x_2 = z * (if (x_1 = x) then 1 else x).
Let x_3 = 1 + x.
Let x_4 = x * z * (if (x_1 = x) then 1 else x).
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(z_1) /\ is_sint32(z) /\
      is_sint32(x_3) /\ is_sint32(x_2) /\ is_sint32(x_4).
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: x <= x_1.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < x) -> ((x_2 % i) = 0))).
  (* Invariant *)
  Have: 0 < z.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < x_2.
  (* Then *)
  Have: x <= y.
  If x < y
  Then { Have: (x * z) = z_1. }
  Else { Have: z = z_1. }
}
Prove: x_4 = (z_1 * (if (y = x) then 1 else x_3)).
Prover Z3 4.8.12 returns Timeout (Qed:10ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:10ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 13):
Let x_1 = 1 + y.
Let x_2 = 1 + x.
Let x_3 = z * (if (y = x) then 1 else x_2).
Let x_4 = z_2 * (if (x_1 = x) then 1 else x).
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(z_1) /\
      is_sint32(z_2) /\ is_sint32(x_2) /\ is_sint32(x_3) /\ is_sint32(x_4).
  (* Goal *)
  When: (0 < i) /\ (i <= x).
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: x <= x_1.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 < x) -> ((x_4 % i_1) = 0))).
  (* Invariant *)
  Have: 0 < z_2.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < x_4.
  (* Then *)
  Have: x <= y.
  Have: (x * z_2 * (if (x_1 = x) then 1 else x)) = x_3.
  If x < y
  Then { Have: z_2 = z_1. Have: (x * z_1) = z. }
  Else { Have: z_2 = z. }
}
Prove: (x_3 % i) = 0.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (88ms) (2336)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 14):
Let x_1 = 1 + x.
Let x_2 = x * z * x_1.
Let x_3 = 1 + y.
Let x_4 = z * (if (x_3 = x) then 1 else x).
Let x_5 = x * z.
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(x_1) /\
      is_sint32(x_5) /\ is_sint32(x * z * (if (y = x) then 1 else x_1)) /\
      is_sint32(x_4).
  (* Residual *)
  When: x < y.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: x <= x_3.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < x) -> ((x_4 % i) = 0))).
  (* Invariant *)
  Have: 0 < z.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < x_4.
  Have: (x * z * (if (x_3 = x) then 1 else x)) = x_2.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= x) -> ((x_2 % i) = 0))).
}
Prove: 0 < x_5.
Prover Z3 4.8.12 returns Valid (Qed:10ms) (10ms) (33776)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (6ms) (155)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 16):
Let x_1 = x * z.
Let x_2 = 1 + x.
Let x_3 = x * z * x_2.
Let x_4 = 1 + y.
Let x_5 = z * (if (x_4 = x) then 1 else x).
Assume {
  Type: is_sint32(x) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(x_2) /\
      is_sint32(x_1) /\ is_sint32(x * z * (if (y = x) then 1 else x_2)) /\
      is_sint32(x_5).
  (* Residual *)
  When: x < y.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: x <= x_4.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < x) -> ((x_5 % i) = 0))).
  (* Invariant *)
  Have: 0 < z.
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < x_5.
  Have: (x * z * (if (x_4 = x) then 1 else x)) = x_3.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= x) -> ((x_3 % i) = 0))).
  (* Invariant *)
  Have: 0 < x_1.
}
Prove: 0 < x_3.
Prover Z3 4.8.12 returns Valid (Qed:10ms) (10ms) (34598)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (9ms) (148)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/26_0001/26_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/26_0001/26_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Loop assigns (file out/26_0001/26_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/26_0001/26_merged.c:4: Warning: 
  No 'assigns' specification for function 'main26'.
  Callers assumptions might be imprecise.

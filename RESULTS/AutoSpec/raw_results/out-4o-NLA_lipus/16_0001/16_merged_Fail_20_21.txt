[kernel] Parsing out/16_0001/16_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 21 goals scheduled
[wp] [Timeout] typed_main16_loop_invariant_2_preserved (Qed 4ms) (Z3)
[wp] Proved goals:   20 / 21
  Qed:              16
  Alt-Ergo 2.5.4:    1 (8ms)
  Z3 4.8.12:         3 (20ms)
  Timeout:           1
------------------------------------------------------------
  Function main16
------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0001/16_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0001/16_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0001/16_merged.c, line 14):
Let x = y * y.
Let x_1 = y * y * y.
Let x_2 = 1 + y.
Let x_3 = (y * x_2 * (1 + (2 * y))) / 6.
Let x_4 = x_2 * x_2.
Let x_5 = x_4 + x_3.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x_2) /\ is_sint32(x_3) /\
      is_sint32(x_5).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_3 = ((y / 6) + (x / 2) + (x_1 / 3)).
  (* Invariant *)
  Have: ((y * (1 + x)) / 2) = x_3.
  (* Invariant *)
  Have: x_3 = ((y * y * x_2) / 2).
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: (y + (3 * x) + (2 * x_1)) = (6 * x_3).
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y < k.
}
Prove: ((x_2 / 6) + (x_4 / 2) + ((x_2 * x_2 * x_2) / 3)) = x_5.
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0001/16_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0001/16_merged.c, line 15):
Let x = 1 + y.
Let x_1 = x / 6.
Let x_2 = x * x.
Let x_3 = x_2 / 2.
Let x_4 = (x * x * x) / 3.
Let x_5 = y * y.
Let x_6 = y * y * y.
Let x_7 = x_1 + x_3 + x_4.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_7) /\
      is_sint32(x_1 + x_3 + x_4 - x_2).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_7 = ((y / 6) + (x_5 / 2) + x_2 + (x_6 / 3)).
  (* Invariant *)
  Have: (x_2 + ((y * (1 + x_5)) / 2)) = x_7.
  (* Invariant *)
  Have: x_7 = (x_2 + ((y * y * x) / 2)).
  (* Invariant *)
  Have: x_7 = (x_2 + ((y * x * (1 + (2 * y))) / 6)).
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: ((6 * x_1) + (6 * x_3) + (6 * x_4))
          = (y + (3 * x_5) + (2 * x_6) + (6 * x_2)).
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y < k.
}
Prove: ((x * (1 + x_2)) / 2) = x_7.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (58961)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0001/16_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.77ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0001/16_merged.c, line 16):
Let x = 1 + c.
Let x_1 = x * x.
Let x_2 = (x * (1 + x_1)) / 2.
Let x_3 = c * c.
Let x_4 = c * c * c.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_2 - x_1).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_2 = ((c / 6) + (x_3 / 2) + x_1 + (x_4 / 3)).
  (* Invariant *)
  Have: x_2 = (x_1 + ((c * (1 + x_3)) / 2)).
  (* Invariant *)
  Have: x_2 = (x_1 + ((c * c * x) / 2)).
  (* Invariant *)
  Have: x_2 = (x_1 + ((c * x * (1 + (2 * c))) / 6)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: (c + (3 * x_3) + (2 * x_4) + (6 * x_1)) = (6 * x_2).
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: x_2 = ((x / 6) + (x_1 / 2) + ((x * x * x) / 3)).
}
Prove: x_2 = ((x * x * (2 + c)) / 2).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (55497)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0001/16_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0001/16_merged.c, line 17):
Let x = 1 + c.
Let x_1 = x * x.
Let x_2 = 2 + c.
Let x_3 = (x * x * x_2) / 2.
Let x_4 = c * c.
Let x_5 = c * c * c.
Let x_6 = 2 * c.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_3 - x_1).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_3 = ((c / 6) + (x_4 / 2) + x_1 + (x_5 / 3)).
  (* Invariant *)
  Have: x_3 = (x_1 + ((c * (1 + x_4)) / 2)).
  (* Invariant *)
  Have: x_3 = (x_1 + ((c * c * x) / 2)).
  (* Invariant *)
  Have: x_3 = (x_1 + ((c * x * (1 + x_6)) / 6)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: (c + (3 * x_4) + (2 * x_5) + (6 * x_1)) = (6 * x_3).
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: x_3 = ((x / 6) + (x_1 / 2) + ((x * x * x) / 3)).
  (* Invariant *)
  Have: ((x * (1 + x_1)) / 2) = x_3.
}
Prove: ((x * x_2 * (3 + x_6)) / 6) = x_3.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (51128)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0001/16_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0001/16_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0001/16_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0001/16_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0001/16_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0001/16_merged.c, line 20):
Let x = 1 + c.
Let x_1 = 2 + c.
Let x_2 = 2 * c.
Let x_3 = (x * x_1 * (3 + x_2)) / 6.
Let x_4 = x * x.
Let x_5 = x * x * x.
Let x_6 = c * c.
Let x_7 = c * c * c.
Let x_8 = 6 * x_3.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_3 - x_4).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_3 = ((c / 6) + (x_6 / 2) + x_4 + (x_7 / 3)).
  (* Invariant *)
  Have: x_3 = (x_4 + ((c * (1 + x_6)) / 2)).
  (* Invariant *)
  Have: x_3 = (x_4 + ((c * c * x) / 2)).
  (* Invariant *)
  Have: x_3 = (x_4 + ((c * x * (1 + x_2)) / 6)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: (c + (3 * x_6) + (2 * x_7) + (6 * x_4)) = x_8.
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: x_3 = ((x / 6) + (x_4 / 2) + (x_5 / 3)).
  (* Invariant *)
  Have: ((x * (1 + x_4)) / 2) = x_3.
  (* Invariant *)
  Have: x_3 = ((x * x * x_1) / 2).
}
Prove: (1 + c + (3 * x_4) + (2 * x_5)) = x_8.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (10649)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (8ms) (111)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0001/16_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0001/16_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0001/16_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/16_0001/16_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/16_0001/16_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/16_0001/16_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/16_0001/16_merged.c:4: Warning: 
  No 'assigns' specification for function 'main16'.
  Callers assumptions might be imprecise.

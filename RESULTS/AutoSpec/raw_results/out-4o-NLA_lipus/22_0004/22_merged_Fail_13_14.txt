[kernel] Parsing out/22_0004/22_merged.c (with preprocessing)
[kernel:typing:implicit-function-declaration] out/22_0004/22_merged.c:18: Warning: 
  Calling undeclared function unknown. Old style K&R code?
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/22_0004/22_merged.c:4: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 14 goals scheduled
[wp] [Timeout] typed_main22_loop_invariant_preserved (Qed 4ms) (Z3)
[wp] Proved goals:   13 / 14
  Qed:               8
  Alt-Ergo 2.5.4:    5
  Timeout:           1
------------------------------------------------------------
  Function main22
------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0004/22_merged.c, line 9):
Let x_2 = -x_1.
Let x_3 = x - x_1.
Let x_4 = x * x.
Let x_5 = 1 + x.
Let x_6 = x_5 * x_5.
Let x_7 = x_1 * x_1.
Let x_8 = 1 + x_1.
Let x_9 = 1 + x - x_1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x) /\
      is_sint32(x_5) /\ is_sint32(x_7) /\ is_sint32(x_4) /\
      is_sint32(1 + x_4).
  (* Pre-condition *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: x_7 <= (x_8 * x_8).
  (* Invariant *)
  Have: x_4 <= x_6.
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (x_3 * x_3) = 0.
}
Prove: x_6 = (1 + x_4 + (x_9 * x_9)).
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0004/22_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0004/22_merged.c, line 10):
Let x_2 = x * x.
Let x_3 = -x_1.
Let x_4 = 1 + x - x_1.
Let x_5 = x_4 * x_4.
Let x_6 = 1 + x.
Let x_7 = x_6 * x_6.
Let x_8 = 1 + x_2 + x_5.
Let x_9 = x - x_1.
Let x_10 = x_1 * x_1.
Let x_11 = 1 + x_1.
Let x_12 = -x_5.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x) /\
      is_sint32(x_6) /\ is_sint32(x_10) /\ is_sint32(x_7 - x_5) /\
      is_sint32(x_7 - 1 - x_5).
  (* Pre-condition *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: x_10 <= (x_11 * x_11).
  (* Invariant *)
  Have: x_8 = (x_7 + (x_9 * x_9)).
  (* Invariant *)
  Have: x_7 <= x_8.
  (* Invariant *)
  Have: (-1) <= x_5.
  (* Invariant *)
  Have: (x_2 + x_5) < x_7.
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: 0 <= x_5.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (9993)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (4ms) (83)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0004/22_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0004/22_merged.c, line 11):
Let x_2 = -x_1.
Let x_3 = 1 + x - x_1.
Let x_4 = x_3 * x_3.
Let x_5 = x * x.
Let x_6 = 1 + x.
Let x_7 = x_6 * x_6.
Let x_8 = 1 + x_5 + x_4.
Let x_9 = x - x_1.
Let x_10 = x_1 * x_1.
Let x_11 = 1 + x_1.
Let x_12 = -x_4.
Let x_13 = 2 + x.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x) /\
      is_sint32(x_6) /\ is_sint32(x_10) /\ is_sint32(x_7 - x_4) /\
      is_sint32(x_7 - 1 - x_4).
  (* Pre-condition *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: x_10 <= (x_11 * x_11).
  (* Invariant *)
  Have: x_8 = (x_7 + (x_9 * x_9)).
  (* Invariant *)
  Have: x_7 <= x_8.
  (* Invariant *)
  Have: (-1) <= x_4.
  (* Invariant *)
  Have: (x_5 + x_4) < x_7.
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: 0 <= x_4.
}
Prove: x_7 <= ((x_13 * x_13) + x_4).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (10101)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (3ms) (91)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0004/22_merged.c, line 11):
Let x_1 = x * x.
Let x_2 = 1 + x.
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 <= x.
}
Prove: x_1 <= (x_2 * x_2).
Prover Z3 4.8.12 returns Valid (Qed:1ms) (10ms) (9233)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (5ms) (17)

------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0004/22_merged.c, line 12):
Let x_2 = 1 + x.
Let x_3 = x_2 * x_2.
Let x_4 = 2 + x.
Let x_5 = -x_1.
Let x_6 = 1 + x - x_1.
Let x_7 = x_6 * x_6.
Let x_8 = x * x.
Let x_9 = 1 + x_8 + x_7.
Let x_10 = x - x_1.
Let x_11 = x_1 * x_1.
Let x_12 = 1 + x_1.
Let x_13 = -x_7.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x_1) /\ is_sint32(x) /\
      is_sint32(x_2) /\ is_sint32(x_11) /\ is_sint32(x_3 - x_7) /\
      is_sint32(x_3 - 1 - x_7).
  (* Pre-condition *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: x_11 <= (x_12 * x_12).
  (* Invariant *)
  Have: x_9 = (x_3 + (x_10 * x_10)).
  (* Invariant *)
  Have: x_3 <= x_9.
  (* Invariant *)
  Have: (-1) <= x_7.
  (* Invariant *)
  Have: (x_8 + x_7) < x_3.
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: 0 <= x_7.
  (* Invariant *)
  Have: x_3 <= ((x_4 * x_4) + x_7).
}
Prove: x_7 <= 0.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10137)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (6ms) (91)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0004/22_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0004/22_merged.c, line 13):
Let x_2 = -x.
Let x_3 = 1 + x_1 - x.
Let x_4 = x_3 * x_3.
Let x_5 = 1 + x_1.
Let x_6 = x_5 * x_5.
Let x_7 = 2 + x_1.
Let x_8 = x_1 * x_1.
Let x_9 = 1 + x_8 + x_4.
Let x_10 = x_1 - x.
Let x_11 = x * x.
Let x_12 = 1 + x.
Let x_13 = -x_4.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_5) /\ is_sint32(x_11) /\ is_sint32(x_6 - x_4) /\
      is_sint32(x_6 - 1 - x_4).
  (* Pre-condition *)
  Have: 0 <= x.
  (* Invariant *)
  Have: x_11 <= (x_12 * x_12).
  (* Invariant *)
  Have: x_9 = (x_6 + (x_10 * x_10)).
  (* Invariant *)
  Have: x_6 <= x_9.
  (* Invariant *)
  Have: (-1) <= x_4.
  (* Invariant *)
  Have: (x_8 + x_4) < x_6.
  (* Invariant *)
  Have: x <= x_1.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: x_6 <= ((x_7 * x_7) + x_4).
  (* Invariant *)
  Have: x_4 <= 0.
}
Prove: x <= x_5.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (10169)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (91)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0004/22_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/22_0004/22_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/22_0004/22_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Loop assigns (file out/22_0004/22_merged.c, line 15) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/22_0004/22_merged.c, line 15) (2/2):
Call Result at line 18
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/22_0004/22_merged.c:4: Warning: 
  No 'assigns' specification for function 'main22'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/22_0004/22_merged.c:18: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.

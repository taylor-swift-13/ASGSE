[kernel] Parsing out/19_0004/19_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 33 goals scheduled
[wp] [Timeout] typed_main19_loop_invariant_4_preserved (Qed 3ms) (Z3)
[wp] [Timeout] typed_main19_loop_invariant_4_established (Qed 1ms) (Z3)
[wp] Proved goals:   31 / 33
  Qed:              25
  Alt-Ergo 2.5.4:    2 (7ms-18ms)
  Z3 4.8.12:         4 (10ms-13ms-20ms)
  Timeout:           2
------------------------------------------------------------
  Function main19
------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0004/19_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0004/19_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0004/19_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0004/19_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0004/19_merged.c, line 14):
Let x = c * c * c * c * c * c.
Let x_1 = 1 + c.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x_1) /\ is_sint32(x) /\
      is_sint32(x + (x_1 * x_1 * x_1 * x_1 * x_1)).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: (0 / 0) = 0.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: (x = (c * c * c * c * c)) /\ ((x / 5) = x).
  (* Invariant *)
  Have: (0 / c) = x.
  (* Invariant *)
  Have: 0 <= c.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < c) -> ((1 + i) = c))).
  (* Invariant *)
  Have: (-4) <= x.
  (* Then *)
  Have: c < k.
}
Prove: x = 0.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (34331)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (18ms) (552)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0004/19_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0004/19_merged.c, line 15):
Let x = 1 + c.
Let x_1 = x * x * x * x * x.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: (0 / 0) = 0.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: (c * c * c * c * c) = 0.
  (* Invariant *)
  Have: (0 / c) = 0.
  (* Invariant *)
  Have: (c * c * c * c * c * c) = 0.
  (* Invariant *)
  Have: 0 <= c.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < c) -> ((1 + i) = c))).
  (* Then *)
  Have: c < k.
}
Prove: (0 / x) = x_1.
Prover Z3 4.8.12 returns Timeout (Qed:3ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:3ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0004/19_merged.c, line 15):
Assume {
  Type: is_sint32(k).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
}
Prove: (0 / 0) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0004/19_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0004/19_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0004/19_merged.c, line 17):
Let x = 1 + c.
Let x_1 = x * x * x * x * x.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: (0 / 0) = 0.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: (c * c * c * c * c) = 0.
  (* Invariant *)
  Have: (0 / c) = 0.
  (* Invariant *)
  Have: (c * c * c * c * c * c) = 0.
  (* Invariant *)
  Have: 0 <= c.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < c) -> ((1 + i) = c))).
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: (0 / x) = x_1.
}
Prove: (x * x * x * x * x * x) = x_1.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (20ms) (39241)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (7ms) (170)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0004/19_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0004/19_merged.c, line 18):
Let x = 1 + c.
Let x_1 = x * x * x * x * x * x.
Let x_2 = x * x * x * x * x.
Let x_3 = c * c * c * c * c * c.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_1 - x_2).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: (0 / 0) = 0.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: x_1 = ((c * c * c * c * c) + x_2).
  (* Invariant *)
  Have: x_1 = ((0 / c) + x_2).
  (* Invariant *)
  Have: x_1 = (x_3 + x_2).
  (* Invariant *)
  Have: x_1 = (x_2 + (x_3 / 5)).
  (* Invariant *)
  Have: 0 <= c.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < c) -> ((1 + i) = c))).
  (* Invariant *)
  Have: x_2 <= x_1.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: x_1 = x_2.
  (* Invariant *)
  Have: (0 / x) = x_1.
}
Prove: (x_1 / 5) = x_1.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (36355)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0004/19_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0004/19_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0004/19_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0004/19_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0004/19_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0004/19_merged.c, line 21):
Let x = 1 + y.
Let x_1 = x * x * x * x * x * x.
Let x_2 = x * x * x * x * x.
Let x_3 = y * y * y * y * y * y.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_1 - x_2).
  (* Goal *)
  When: (0 <= i) /\ (i <= y).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: (0 / 0) = 0.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: x_1 = ((y * y * y * y * y) + x_2).
  (* Invariant *)
  Have: x_1 = ((0 / y) + x_2).
  (* Invariant *)
  Have: x_1 = (x_3 + x_2).
  (* Invariant *)
  Have: x_1 = (x_2 + (x_3 / 5)).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y) -> ((1 + i_1) = y))).
  (* Invariant *)
  Have: x_2 <= x_1.
  (* Then *)
  Have: y < k.
  (* Invariant *)
  Have: x_1 = x_2.
  (* Invariant *)
  Have: (0 / x) = x_1.
  (* Invariant *)
  Have: (x_1 / 5) = x_1.
  (* Invariant *)
  Have: (-1) <= y.
}
Prove: y = i.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (58613)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0004/19_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0004/19_merged.c, line 22):
Let x = 1 + y.
Let x_1 = x * x * x * x * x * x.
Let x_2 = x * x * x * x * x.
Let x_3 = y * y * y * y * y * y.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_1 - x_2).
  (* Goal *)
  When: (0 <= i) /\ (i <= y).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: (0 / 0) = 0.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: x_1 = ((y * y * y * y * y) + x_2).
  (* Invariant *)
  Have: x_1 = ((0 / y) + x_2).
  (* Invariant *)
  Have: x_1 = (x_3 + x_2).
  (* Invariant *)
  Have: x_1 = (x_2 + (x_3 / 5)).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y) -> ((1 + i_1) = y))).
  (* Invariant *)
  Have: x_2 <= x_1.
  (* Then *)
  Have: y < k.
  (* Invariant *)
  Have: x_1 = x_2.
  (* Invariant *)
  Have: (0 / x) = x_1.
  (* Invariant *)
  Have: (x_1 / 5) = x_1.
  (* Invariant *)
  Have: (-1) <= y.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= y) -> (i_1 = y))).
}
Prove: y = i.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (49720)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0004/19_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0004/19_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0004/19_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.55ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0004/19_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0004/19_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0004/19_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0004/19_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.81ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0004/19_merged.c, line 26):
Let x = 1 + c.
Let x_1 = x * x * x * x * x * x.
Let x_2 = x * x * x * x * x.
Let x_3 = c * c * c * c * c * c.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_1 - x_2).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: (0 / 0) = 0.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: x_1 = ((c * c * c * c * c) + x_2).
  (* Invariant *)
  Have: x_1 = ((0 / c) + x_2).
  (* Invariant *)
  Have: x_1 = (x_3 + x_2).
  (* Invariant *)
  Have: x_1 = (x_2 + (x_3 / 5)).
  (* Invariant *)
  Have: 0 <= c.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < c) -> ((1 + i) = c))).
  (* Invariant *)
  Have: x_2 <= x_1.
  (* Then *)
  Have: c < k.
  Have: (x_1 / 5) = x_1.
  (* Invariant *)
  Have: x_1 = x_2.
  (* Invariant *)
  Have: (0 / x) = x_1.
  (* Invariant *)
  Have: (-1) <= c.
  (* Invariant *)
  Have: forall i : Z. ((i <= c) -> ((0 <= i) -> (i = c))).
}
Prove: (-4) <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (37256)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0004/19_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0004/19_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0004/19_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Loop assigns (file out/19_0004/19_merged.c, line 28):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/19_0004/19_merged.c:4: Warning: 
  No 'assigns' specification for function 'main19'.
  Callers assumptions might be imprecise.

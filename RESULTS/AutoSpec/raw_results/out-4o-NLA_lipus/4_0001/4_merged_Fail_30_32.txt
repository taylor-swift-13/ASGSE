[kernel] Parsing out/4_0001/4_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 32 goals scheduled
[wp] [Timeout] typed_main4_loop_invariant_preserved (Qed 9ms) (Z3)
[wp] [Timeout] typed_main4_loop_invariant_6_established (Qed 0.80ms) (Z3)
[wp] Proved goals:   30 / 32
  Qed:              25
  Alt-Ergo 2.5.4:    5
  Timeout:           2
------------------------------------------------------------
  Function main4
------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 10):
Let x = q_2 * y.
Let x_1 = y + x.
Let x_2 = 1 / y.
Assume {
  Type: is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(y) /\ is_sint32(-x).
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: x <= 1.
  (* Invariant *)
  Have: (x <= 0) /\ (0 < x_1).
  (* Invariant *)
  Have: q_2 <= x_2.
  (* Invariant *)
  Have: 0 <= q_2.
  If x_1 = 1
  Then { Have: q_2 = q_1. Have: r = 0. Have: (1 + q_1) = q. }
  Else {
    Let x_3 = q * y.
    Have: (q_2 = q) /\ ((r_1 + x_3) = 0).
    Have: (r + x_3) = 1.
  }
}
Prove: (r + x_3) <= 0.
Prover Z3 4.8.12 returns Timeout (Qed:9ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:9ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 11):
Let x = 1 + q.
Let x_1 = y * x.
Let x_2 = 1 / y.
Let x_3 = q * y.
Assume {
  Type: is_sint32(q) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(-x_3).
  (* Residual *)
  When: (y + x_3) = 1.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: x_3 <= 1.
  (* Invariant *)
  Have: x_3 <= 0.
  (* Invariant *)
  Have: q <= x_2.
  (* Invariant *)
  Have: 0 <= q.
  (* Invariant *)
  Have: x_1 <= 0.
}
Prove: x_1 <= 1.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (30833)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (5ms) (29)

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 15):
Let x = 1 + q.
Let x_1 = y * x.
Let x_2 = 1 / y.
Let x_3 = q * y.
Assume {
  Type: is_sint32(q) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(-x_3).
  (* Residual *)
  When: (y + x_3) = 1.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: x_3 <= 1.
  (* Invariant *)
  Have: x_3 <= 0.
  (* Invariant *)
  Have: q <= x_2.
  (* Invariant *)
  Have: 0 <= q.
  (* Invariant *)
  Have: x_1 <= 1.
  (* Invariant *)
  Have: x_1 <= 0.
}
Prove: x_1 = 0.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (20ms) (31352)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (3ms) (31)

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 15):
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 < x.
}
Prove: x = 1.
Prover Z3 4.8.12 returns Timeout (Qed:0.80ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.80ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 18):
Let x = 1 + q.
Let x_1 = y * x.
Let x_2 = q * y.
Let x_3 = -x_2.
Let x_4 = 1 / y.
Assume {
  Type: is_sint32(q) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(-x_1).
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: x_2 <= 1.
  (* Invariant *)
  Have: x_2 <= 0.
  (* Invariant *)
  Have: q <= x_4.
  (* Invariant *)
  Have: 0 <= q.
  Have: (y + x_2) = 1.
  Have: (x * (1 - x_2)) = 0.
  (* Invariant *)
  Have: x_1 <= 1.
}
Prove: (x_1 <= 0) /\ (0 < (y + x_1)).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (42742)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (31)

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 20):
Let x = 1 + q.
Let x_1 = y * x.
Let x_2 = q * y.
Let x_3 = -x_2.
Let x_4 = 1 / y.
Assume {
  Type: is_sint32(q) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(-x_1).
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: x_2 <= 1.
  (* Invariant *)
  Have: x_2 <= 0.
  (* Invariant *)
  Have: q <= x_4.
  (* Invariant *)
  Have: 0 <= q.
  Have: (y + x_2) = 1.
  Have: (x * (1 - x_2)) = 0.
  (* Invariant *)
  Have: x_1 <= 1.
  (* Invariant *)
  Have: (x_1 <= 0) /\ (0 < (y + x_1)).
}
Prove: q < x_4.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (20ms) (32283)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (6ms) (31)

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 20):
Assume { Type: is_sint32(y). (* Invariant *) Have: 0 < y. }
Prove: 0 <= (1 / y).
Prover Z3 4.8.12 returns Valid (Qed:0.71ms) (20ms) (29460)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:0.71ms) (4ms) (28)

------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.88ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/4_0001/4_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/4_0001/4_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.80ms)

------------------------------------------------------------

Goal Assertion (file out/4_0001/4_merged.c, line 39):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/4_0001/4_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/4_0001/4_merged.c:4: Warning: 
  No 'assigns' specification for function 'main4'.
  Callers assumptions might be imprecise.

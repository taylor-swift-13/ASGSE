[kernel] Parsing out/21_0007/21_merged.c (with preprocessing)
[kernel:typing:no-proto] out/21_0007/21_merged.c:18: Warning: 
  Calling function unknown that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/21_0007/21_merged.c:2: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 18 goals scheduled
[wp] [Timeout] typed_main21_loop_invariant_5_preserved (Qed 7ms) (Z3)
[wp] Proved goals:   17 / 18
  Qed:              12
  Alt-Ergo 2.5.4:    5 (3ms-7ms-15ms)
  Timeout:           1
------------------------------------------------------------
  Function main21
------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0007/21_merged.c, line 7):
Let x = y * y.
Let x_1 = 1 + y.
Let x_2 = x_1 * x_1.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x_1) /\ is_sint32(x) /\
      is_sint32(x_2).
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: x = (y + (y * (y - 1))).
  (* Invariant *)
  Have: (y * x_1) = (y + x).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= y) -> ((i * i) <= x))).
  (* Invariant *)
  Have: forall i : Z. let x_3 = 1 + i in ((0 <= i) -> ((i < y) ->
      ((x_3 * x_3) = x))).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: y < x_2.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (32164)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (8ms) (36)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0007/21_merged.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0007/21_merged.c, line 8):
Let x = 1 + y.
Let x_1 = x * x.
Let x_2 = y * y.
Let x_3 = y * x.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: x_2 = (y + (y * (y - 1))).
  (* Invariant *)
  Have: x_3 = (y + x_2).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= y) -> ((i * i) <= x_2))).
  (* Invariant *)
  Have: forall i : Z. let x_4 = 1 + i in ((0 <= i) -> ((i < y) ->
      ((x_4 * x_4) = x_2))).
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: y < x_1.
}
Prove: x_1 = (1 + y + x_3).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (9989)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (3ms) (33)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0007/21_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0007/21_merged.c, line 9):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = 1 + y + x_1.
Let x_3 = y * y.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_2).
  (* Invariant *)
  Have: y <= x_3.
  (* Invariant *)
  Have: x_3 = (y + (y * (y - 1))).
  (* Invariant *)
  Have: x_1 = (y + x_3).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= y) -> ((i * i) <= x_3))).
  (* Invariant *)
  Have: forall i : Z. let x_4 = 1 + i in ((0 <= i) -> ((i < y) ->
      ((x_4 * x_4) = x_3))).
  (* Invariant *)
  Have: 0 <= x_3.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (x * x) = x_2.
  (* Invariant *)
  Have: 0 <= x_1.
}
Prove: (x * (2 + y)) = (2 + (2 * y) + x_1).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (10107)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (5ms) (36)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0007/21_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0007/21_merged.c, line 10):
Let x = 1 + y.
Let x_1 = x * (2 + y).
Let x_2 = 2 * y.
Let x_3 = y * x.
Let x_4 = y * y.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_4) /\
      is_sint32(x_1 - 1 - y).
  (* Goal *)
  When: (0 <= i) /\ (i <= x).
  (* Invariant *)
  Have: y <= x_4.
  (* Invariant *)
  Have: x_4 = (y + (y * (y - 1))).
  (* Invariant *)
  Have: x_3 = (y + x_4).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= y) -> ((i_1 * i_1) <= x_4))).
  (* Invariant *)
  Have: forall i_1 : Z. let x_5 = 1 + i_1 in ((0 <= i_1) -> ((i_1 < y) ->
      ((x_5 * x_5) = x_4))).
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_1 = (1 + y + (x * x)).
  (* Invariant *)
  Have: (2 + x_2) <= x_1.
  (* Invariant *)
  Have: x_1 = (2 + x_2 + x_3).
}
Prove: (y + (i * i)) < x_1.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (15ms) (168)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0007/21_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0007/21_merged.c, line 11):
Let x = 1 + y.
Let x_1 = x * (2 + y).
Let x_2 = 2 * y.
Let x_3 = y * x.
Let x_4 = y * y.
Let x_5 = 1 + i.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_4) /\
      is_sint32(x_1 - 1 - y).
  (* Goal *)
  When: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: y <= x_4.
  (* Invariant *)
  Have: x_4 = (y + (y * (y - 1))).
  (* Invariant *)
  Have: x_3 = (y + x_4).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= y) -> ((i_1 * i_1) <= x_4))).
  (* Invariant *)
  Have: forall i_1 : Z. let x_6 = 1 + i_1 in ((0 <= i_1) -> ((i_1 < y) ->
      ((x_6 * x_6) = x_4))).
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_1 = (1 + y + (x * x)).
  (* Invariant *)
  Have: (2 + x_2) <= x_1.
  (* Invariant *)
  Have: x_1 = (2 + x_2 + x_3).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= x) ->
      ((y + (i_1 * i_1)) < x_1))).
}
Prove: x_1 = (1 + y + (x_5 * x_5)).
Prover Z3 4.8.12 returns Timeout (Qed:7ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0007/21_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0007/21_merged.c, line 12):
Let x = 1 + y.
Let x_1 = x * (2 + y).
Let x_2 = 2 * y.
Let x_3 = y * x.
Let x_4 = y * y.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_4) /\
      is_sint32(x_1 - 1 - y).
  (* Invariant *)
  Have: y <= x_4.
  (* Invariant *)
  Have: x_4 = (y + (y * (y - 1))).
  (* Invariant *)
  Have: x_3 = (y + x_4).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= y) -> ((i * i) <= x_4))).
  (* Invariant *)
  Have: forall i : Z. let x_5 = 1 + i in ((0 <= i) -> ((i < y) ->
      ((x_5 * x_5) = x_4))).
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_1 = (1 + y + (x * x)).
  (* Invariant *)
  Have: (2 + x_2) <= x_1.
  (* Invariant *)
  Have: x_1 = (2 + x_2 + x_3).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= x) -> ((y + (i * i)) < x_1))).
  (* Invariant *)
  Have: forall i : Z. let x_5 = 1 + i in ((0 <= i) -> ((i <= y) ->
      (x_1 = (1 + y + (x_5 * x_5))))).
}
Prove: y < x_1.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (34265)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (5ms) (49)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0007/21_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0007/21_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0007/21_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0007/21_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0007/21_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/21_0007/21_merged.c, line 15) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/21_0007/21_merged.c, line 15) (2/2):
Call Result at line 18
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/21_0007/21_merged.c:1: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/21_0007/21_merged.c:2: Warning: 
  No 'assigns' specification for function 'main21'.
  Callers assumptions might be imprecise.

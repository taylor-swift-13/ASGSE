[kernel] Parsing out/13_0002/13_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 27 goals scheduled
[wp] [Timeout] typed_main13_loop_invariant_preserved (Qed 475ms) (Z3)
[wp] [Timeout] typed_main13_loop_invariant_2_preserved (Qed 571ms) (Z3)
[wp] [Timeout] typed_main13_loop_invariant_3_preserved (Qed 458ms) (Z3)
[wp] [Timeout] typed_main13_loop_invariant_3_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_main13_loop_invariant_11_preserved (Qed 575ms) (Z3)
[wp] Proved goals:   22 / 27
  Qed:              11
  Alt-Ergo 2.5.4:    6 (4ms-11ms-20ms)
  Z3 4.8.12:         5 (20ms-1.2s-5.9s)
  Timeout:           5
------------------------------------------------------------
  Function main13
------------------------------------------------------------

Goal Preservation of Invariant (file out/13_0002/13_merged.c, line 13):
Let x_1 = a_6 % 2.
Let x_2 = b_7 % 2.
Let x_3 = (a_6 + b_7) % 2.
Let x_4 = a_6 * p_1.
Let x_5 = b_7 * p_1.
Let x_6 = x * y.
Let x_7 = x_6 - x_4 - x_5.
Let x_8 = y - b_7.
Let x_9 = x - a_6.
Let x_10 = y % 2.
Let x_11 = x_6 % 2.
Let x_12 = x_6 - y.
Let x_13 = x_12 % 2.
Let x_14 = x + y.
Let x_15 = y - b.
Let x_16 = x - a.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(a_4) /\ is_sint32(a_5) /\ is_sint32(a_6) /\ is_sint32(b) /\
      is_sint32(b_1) /\ is_sint32(b_2) /\ is_sint32(b_3) /\ is_sint32(b_4) /\
      is_sint32(b_5) /\ is_sint32(b_6) /\ is_sint32(b_7) /\ is_sint32(p) /\
      is_sint32(p_1) /\ is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\
      is_sint32(q_3) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_12) /\
      is_sint32(x_7).
  (* Pre-condition *)
  Have: (0 < x) /\ (0 < y).
  (* Initializer *)
  Init: x_6 = x_14.
  (* Invariant *)
  Have: (y * (x + y - x_6)) = 0.
  (* Invariant *)
  Have: (y * x_12) = x_6.
  (* Invariant *)
  Have: y <= x_6.
  (* Invariant *)
  Have: (x_10 = 0) \/ (x_6 = y) \/ (x_13 = 0) \/ ((x_10 = 1) /\ (x_13 = 1)).
  (* Invariant *)
  Have: x_6 <= x_14.
  (* Invariant *)
  Have: (x_10 = 0) \/ (x_11 = 0) \/ (x_13 = 0).
  (* Invariant *)
  Have: (x_10 = 0) \/ (x_11 = 1) \/ (x_13 = 0).
  (* Invariant *)
  Have: (x_4 + x_5 + (x * x_8) + (y * x_9)) = (x_6 + (x_9 * x_8)).
  (* Invariant *)
  Have: (a_6 * b_7 * p_1) = (x_4 + x_5).
  (* Invariant *)
  Have: b_7 <= y.
  (* Invariant *)
  Have: (0 <= a_6) /\ (0 <= b_7).
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_2 = 0) \/ ((x_1 = 1) /\ (x_2 = 1)).
  (* Invariant *)
  Have: a_6 <= x.
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_2 = 0) \/ ((x_7 % p_1) = x_3).
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_2 = 0) \/ (x_3 = 1).
  (* Invariant *)
  Have: 0 < p_1.
  (* Then *)
  Have: a_6 != 0.
  (* Then *)
  Have: b_7 != 0.
  If x_1 = 0
  Then {
    Have: (a_6 = a_7) /\ (b_7 = b_6) /\ (p_1 = p_2).
    If (b_6 % 2) = 0
    Then {
      Have: (a_7 = a_1) /\ (b_6 = b_1) /\
          (x_6 = (q + (a_7 * p_2) + (b_6 * p_2))).
      Have: (a_7 / 2) = a.
      Have: (b_6 / 2) = b.
    }
    Else {
      Have: (a_7 = a_5) /\ (b_6 = b_8) /\ (p_2 = p).
      If (a_5 % 2) = 1
      Then {
        Have: (a_5 = a_8) /\ (b_8 = b_5).
        If (b_5 % 2) = 0
        Then {
          Let x_17 = a_2 * p.
          Have: (a_8 = a_2) /\ (b_5 = b) /\ (x_6 = (q_1 + x_17 + (b * p))).
          Have: (1 + a) = a_2.
          Have: x_6 = (q + x_17).
        }
        Else {
          Have: (a_8 = a_4) /\ (b_5 = b_9).
          If (a_4 % 2) = 0
          Then {
            Have: (a_4 = a_9) /\ (b_9 = b_4).
            If (b_4 % 2) = 1
            Then {
              Let x_18 = b_2 * p.
              Have: (a_9 = a) /\ (b_4 = b_2) /\
                  (x_6 = (q_2 + (a * p) + x_18)).
              Have: (1 + b) = b_2.
              Have: x_6 = (q + x_18).
            }
            Else {
              Let x_19 = a_3 * p.
              Let x_20 = b_3 * p.
              Have: (a_9 = a_3) /\ (b_4 = b_3) /\
                  (x_6 = (q_3 + x_19 + x_20)).
              Have: (1 + a) = a_3.
              Have: (1 + b) = b_3.
              Have: (x_6 + (p * (a_3 + b_3 - 1))) = (q + x_19 + x_20).
            }
          }
          Else {
            Have: (a_4 = a_3) /\ (b_9 = b_3) /\ (x_6 = (q_3 + x_19 + x_20)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_3.
            Have: (x_6 + (p * (a_3 + b_3 - 1))) = (q + x_19 + x_20).
          }
        }
      }
      Else {
        Have: (a_5 = a_4) /\ (b_8 = b_9).
        If (a_4 % 2) = 0
        Then {
          Have: (a_4 = a_9) /\ (b_9 = b_4).
          If (b_4 % 2) = 1
          Then {
            Have: (a_9 = a) /\ (b_4 = b_2) /\ (x_6 = (q_2 + (a * p) + x_18)).
            Have: (1 + b) = b_2.
            Have: x_6 = (q + x_18).
          }
          Else {
            Have: (a_9 = a_3) /\ (b_4 = b_3) /\ (x_6 = (q_3 + x_19 + x_20)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_3.
            Have: (x_6 + (p * (a_3 + b_3 - 1))) = (q + x_19 + x_20).
          }
        }
        Else {
          Have: (a_4 = a_3) /\ (b_9 = b_3) /\ (x_6 = (q_3 + x_19 + x_20)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_3.
          Have: (x_6 + (p * (a_3 + b_3 - 1))) = (q + x_19 + x_20).
        }
      }
    }
  }
  Else {
    Have: (a_6 = a_5) /\ (b_7 = b_8) /\ (p_1 = p).
    If (a_5 % 2) = 1
    Then {
      Have: (a_5 = a_8) /\ (b_8 = b_5).
      If (b_5 % 2) = 0
      Then {
        Have: (a_8 = a_2) /\ (b_5 = b) /\ (x_6 = (q_1 + x_17 + (b * p))).
        Have: (1 + a) = a_2.
        Have: x_6 = (q + x_17).
      }
      Else {
        Have: (a_8 = a_4) /\ (b_5 = b_9).
        If (a_4 % 2) = 0
        Then {
          Have: (a_4 = a_9) /\ (b_9 = b_4).
          If (b_4 % 2) = 1
          Then {
            Have: (a_9 = a) /\ (b_4 = b_2) /\ (x_6 = (q_2 + (a * p) + x_18)).
            Have: (1 + b) = b_2.
            Have: x_6 = (q + x_18).
          }
          Else {
            Have: (a_9 = a_3) /\ (b_4 = b_3) /\ (x_6 = (q_3 + x_19 + x_20)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_3.
            Have: (x_6 + (p * (a_3 + b_3 - 1))) = (q + x_19 + x_20).
          }
        }
        Else {
          Have: (a_4 = a_3) /\ (b_9 = b_3) /\ (x_6 = (q_3 + x_19 + x_20)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_3.
          Have: (x_6 + (p * (a_3 + b_3 - 1))) = (q + x_19 + x_20).
        }
      }
    }
    Else {
      Have: (a_5 = a_4) /\ (b_8 = b_9).
      If (a_4 % 2) = 0
      Then {
        Have: (a_4 = a_9) /\ (b_9 = b_4).
        If (b_4 % 2) = 1
        Then {
          Have: (a_9 = a) /\ (b_4 = b_2) /\ (x_6 = (q_2 + (a * p) + x_18)).
          Have: (1 + b) = b_2.
          Have: x_6 = (q + x_18).
        }
        Else {
          Have: (a_9 = a_3) /\ (b_4 = b_3) /\ (x_6 = (q_3 + x_19 + x_20)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_3.
          Have: (x_6 + (p * (a_3 + b_3 - 1))) = (q + x_19 + x_20).
        }
      }
      Else {
        Have: (a_4 = a_3) /\ (b_9 = b_3) /\ (x_6 = (q_3 + x_19 + x_20)).
        Have: (1 + a) = a_3.
        Have: (1 + b) = b_3.
        Have: (x_6 + (p * (a_3 + b_3 - 1))) = (q + x_19 + x_20).
      }
    }
  }
}
Prove: ((x * x_15) + (y * x_16)) = (q + (x_16 * x_15)).
Prover Z3 4.8.12 returns Timeout (Qed:475ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:475ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/13_0002/13_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/13_0002/13_merged.c, line 14):
Let x_1 = a_6 % 2.
Let x_2 = b_7 % 2.
Let x_3 = (a_6 + b_7) % 2.
Let x_4 = a_6 * p_2.
Let x_5 = b_7 * p_2.
Let x_6 = x * y.
Let x_7 = x_6 - x_4 - x_5.
Let x_8 = y - b_7.
Let x_9 = x - a_6.
Let x_10 = y % 2.
Let x_11 = x_6 % 2.
Let x_12 = x_6 - y.
Let x_13 = x_12 % 2.
Let x_14 = x + y.
Let x_15 = x - a.
Let x_16 = y - b.
Let x_17 = x_15 * x_16.
Let x_18 = x * x_16.
Let x_19 = y * x_15.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(a_4) /\ is_sint32(a_5) /\ is_sint32(a_6) /\ is_sint32(b) /\
      is_sint32(b_1) /\ is_sint32(b_2) /\ is_sint32(b_3) /\ is_sint32(b_4) /\
      is_sint32(b_5) /\ is_sint32(b_6) /\ is_sint32(b_7) /\ is_sint32(p) /\
      is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\ is_sint32(q_1) /\
      is_sint32(q_2) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_12) /\
      is_sint32(x_7) /\ is_sint32(x_18 + x_19 - x_17).
  (* Pre-condition *)
  Have: (0 < x) /\ (0 < y).
  (* Initializer *)
  Init: x_6 = x_14.
  (* Invariant *)
  Have: (y * (x + y - x_6)) = 0.
  (* Invariant *)
  Have: (y * x_12) = x_6.
  (* Invariant *)
  Have: y <= x_6.
  (* Invariant *)
  Have: (x_10 = 0) \/ (x_6 = y) \/ (x_13 = 0) \/ ((x_10 = 1) /\ (x_13 = 1)).
  (* Invariant *)
  Have: x_6 <= x_14.
  (* Invariant *)
  Have: (x_10 = 0) \/ (x_11 = 0) \/ (x_13 = 0).
  (* Invariant *)
  Have: (x_10 = 0) \/ (x_11 = 1) \/ (x_13 = 0).
  (* Invariant *)
  Have: (x_4 + x_5 + (x * x_8) + (y * x_9)) = (x_6 + (x_9 * x_8)).
  (* Invariant *)
  Have: (a_6 * b_7 * p_2) = (x_4 + x_5).
  (* Invariant *)
  Have: b_7 <= y.
  (* Invariant *)
  Have: (0 <= a_6) /\ (0 <= b_7).
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_2 = 0) \/ ((x_1 = 1) /\ (x_2 = 1)).
  (* Invariant *)
  Have: a_6 <= x.
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_2 = 0) \/ ((x_7 % p_2) = x_3).
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_2 = 0) \/ (x_3 = 1).
  (* Invariant *)
  Have: 0 < p_2.
  (* Then *)
  Have: a_6 != 0.
  (* Then *)
  Have: b_7 != 0.
  If x_1 = 0
  Then {
    Have: (a_6 = a_7) /\ (b_7 = b_6) /\ (p_2 = p_3).
    If (b_6 % 2) = 0
    Then {
      Let x_20 = b_1 / 2.
      Let x_21 = a_1 / 2.
      Let x_22 = y - x_20.
      Let x_23 = x - x_21.
      Have: (a_7 = a_1) /\ (b_6 = b_1) /\ (p_3 = p_1) /\
          (((a_1 * p_1) + (b_1 * p_1) + (x * x_22) + (y * x_23))
             = (x_6 + (x_23 * x_22))).
      Have: x_21 = a.
      Have: x_20 = b.
      Have: (4 * p_1) = p.
    }
    Else {
      Have: (a_7 = a_5) /\ (b_6 = b_8) /\ (p_3 = p).
      If (a_5 % 2) = 1
      Then {
        Have: (a_5 = a_8) /\ (b_8 = b_5).
        If (b_5 % 2) = 0
        Then {
          Let x_24 = 1 + x - a_2.
          Let x_25 = x_16 * x_24.
          Let x_26 = y * x_24.
          Have: (a_8 = a_2) /\ (b_5 = b) /\
              ((q + (b * p) + x_25) = (x_18 + x_26)) /\
              (((a_2 * p) + x_18 + x_26) = (x_6 + x_25)).
          Have: (1 + a) = a_2.
        }
        Else {
          Have: (a_8 = a_4) /\ (b_5 = b_9).
          If (a_4 % 2) = 0
          Then {
            Have: (a_4 = a_9) /\ (b_9 = b_4).
            If (b_4 % 2) = 1
            Then {
              Let x_27 = 1 + y - b_2.
              Let x_28 = x_15 * x_27.
              Let x_29 = x * x_27.
              Have: (a_9 = a) /\ (b_4 = b_2) /\
                  ((q_1 + (a * p) + x_28) = (x_19 + x_29)) /\
                  (((b_2 * p) + x_19 + x_29) = (x_6 + x_28)).
              Have: (1 + b) = b_2.
            }
            Else {
              Let x_30 = p * (a_3 + b_3 - 1).
              Let x_31 = 1 + x - a_3.
              Let x_32 = 1 + y - b_3.
              Let x_33 = x_31 * x_32.
              Let x_34 = x * x_32.
              Let x_35 = y * x_31.
              Have: (a_9 = a_3) /\ (b_4 = b_3) /\
                  ((q_2 + x_30 + x_33) = (x_34 + x_35)) /\
                  (((a_3 * p) + (b_3 * p) + x_34 + x_35)
                     = (x_6 + x_30 + x_33)).
              Have: (1 + a) = a_3.
              Have: (1 + b) = b_3.
            }
          }
          Else {
            Have: (a_4 = a_3) /\ (b_9 = b_3) /\
                ((q_2 + x_30 + x_33) = (x_34 + x_35)) /\
                (((a_3 * p) + (b_3 * p) + x_34 + x_35) = (x_6 + x_30 + x_33)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_3.
          }
        }
      }
      Else {
        Have: (a_5 = a_4) /\ (b_8 = b_9).
        If (a_4 % 2) = 0
        Then {
          Have: (a_4 = a_9) /\ (b_9 = b_4).
          If (b_4 % 2) = 1
          Then {
            Have: (a_9 = a) /\ (b_4 = b_2) /\
                ((q_1 + (a * p) + x_28) = (x_19 + x_29)) /\
                (((b_2 * p) + x_19 + x_29) = (x_6 + x_28)).
            Have: (1 + b) = b_2.
          }
          Else {
            Have: (a_9 = a_3) /\ (b_4 = b_3) /\
                ((q_2 + x_30 + x_33) = (x_34 + x_35)) /\
                (((a_3 * p) + (b_3 * p) + x_34 + x_35) = (x_6 + x_30 + x_33)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_3.
          }
        }
        Else {
          Have: (a_4 = a_3) /\ (b_9 = b_3) /\
              ((q_2 + x_30 + x_33) = (x_34 + x_35)) /\
              (((a_3 * p) + (b_3 * p) + x_34 + x_35) = (x_6 + x_30 + x_33)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_3.
        }
      }
    }
  }
  Else {
    Have: (a_6 = a_5) /\ (b_7 = b_8) /\ (p_2 = p).
    If (a_5 % 2) = 1
    Then {
      Have: (a_5 = a_8) /\ (b_8 = b_5).
      If (b_5 % 2) = 0
      Then {
        Have: (a_8 = a_2) /\ (b_5 = b) /\
            ((q + (b * p) + x_25) = (x_18 + x_26)) /\
            (((a_2 * p) + x_18 + x_26) = (x_6 + x_25)).
        Have: (1 + a) = a_2.
      }
      Else {
        Have: (a_8 = a_4) /\ (b_5 = b_9).
        If (a_4 % 2) = 0
        Then {
          Have: (a_4 = a_9) /\ (b_9 = b_4).
          If (b_4 % 2) = 1
          Then {
            Have: (a_9 = a) /\ (b_4 = b_2) /\
                ((q_1 + (a * p) + x_28) = (x_19 + x_29)) /\
                (((b_2 * p) + x_19 + x_29) = (x_6 + x_28)).
            Have: (1 + b) = b_2.
          }
          Else {
            Have: (a_9 = a_3) /\ (b_4 = b_3) /\
                ((q_2 + x_30 + x_33) = (x_34 + x_35)) /\
                (((a_3 * p) + (b_3 * p) + x_34 + x_35) = (x_6 + x_30 + x_33)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_3.
          }
        }
        Else {
          Have: (a_4 = a_3) /\ (b_9 = b_3) /\
              ((q_2 + x_30 + x_33) = (x_34 + x_35)) /\
              (((a_3 * p) + (b_3 * p) + x_34 + x_35) = (x_6 + x_30 + x_33)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_3.
        }
      }
    }
    Else {
      Have: (a_5 = a_4) /\ (b_8 = b_9).
      If (a_4 % 2) = 0
      Then {
        Have: (a_4 = a_9) /\ (b_9 = b_4).
        If (b_4 % 2) = 1
        Then {
          Have: (a_9 = a) /\ (b_4 = b_2) /\
              ((q_1 + (a * p) + x_28) = (x_19 + x_29)) /\
              (((b_2 * p) + x_19 + x_29) = (x_6 + x_28)).
          Have: (1 + b) = b_2.
        }
        Else {
          Have: (a_9 = a_3) /\ (b_4 = b_3) /\
              ((q_2 + x_30 + x_33) = (x_34 + x_35)) /\
              (((a_3 * p) + (b_3 * p) + x_34 + x_35) = (x_6 + x_30 + x_33)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_3.
        }
      }
      Else {
        Have: (a_4 = a_3) /\ (b_9 = b_3) /\
            ((q_2 + x_30 + x_33) = (x_34 + x_35)) /\
            (((a_3 * p) + (b_3 * p) + x_34 + x_35) = (x_6 + x_30 + x_33)).
        Have: (1 + a) = a_3.
        Have: (1 + b) = b_3.
      }
    }
  }
}
Prove: ((a * b * p) + x_18 + x_19) = (x_6 + x_17).
Prover Z3 4.8.12 returns Timeout (Qed:571ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:571ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/13_0002/13_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.87ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/13_0002/13_merged.c, line 15):
Let x_1 = a * b * p.
Let x_2 = y - b.
Let x_3 = x - a.
Let x_4 = x * y.
Let x_5 = a_6 % 2.
Let x_6 = b_7 % 2.
Let x_7 = (a_6 + b_7) % 2.
Let x_8 = a_6 * p_2.
Let x_9 = b_7 * p_2.
Let x_10 = x_4 - x_8 - x_9.
Let x_11 = y - b_7.
Let x_12 = x - a_6.
Let x_13 = y % 2.
Let x_14 = x_4 % 2.
Let x_15 = x_4 - y.
Let x_16 = x_15 % 2.
Let x_17 = x + y.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(a_4) /\ is_sint32(a_5) /\ is_sint32(a_6) /\ is_sint32(b) /\
      is_sint32(b_1) /\ is_sint32(b_2) /\ is_sint32(b_3) /\ is_sint32(b_4) /\
      is_sint32(b_5) /\ is_sint32(b_6) /\ is_sint32(b_7) /\ is_sint32(p) /\
      is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\ is_sint32(q_1) /\
      is_sint32(q_2) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_15) /\
      is_sint32(x_10) /\ is_sint32(x_4 - x_1).
  (* Pre-condition *)
  Have: (0 < x) /\ (0 < y).
  (* Initializer *)
  Init: x_4 = x_17.
  (* Invariant *)
  Have: (y * (x + y - x_4)) = 0.
  (* Invariant *)
  Have: (y * x_15) = x_4.
  (* Invariant *)
  Have: y <= x_4.
  (* Invariant *)
  Have: (x_13 = 0) \/ (x_4 = y) \/ (x_16 = 0) \/ ((x_13 = 1) /\ (x_16 = 1)).
  (* Invariant *)
  Have: x_4 <= x_17.
  (* Invariant *)
  Have: (x_13 = 0) \/ (x_14 = 0) \/ (x_16 = 0).
  (* Invariant *)
  Have: (x_13 = 0) \/ (x_14 = 1) \/ (x_16 = 0).
  (* Invariant *)
  Have: (x_8 + x_9 + (x * x_11) + (y * x_12)) = (x_4 + (x_12 * x_11)).
  (* Invariant *)
  Have: (a_6 * b_7 * p_2) = (x_8 + x_9).
  (* Invariant *)
  Have: b_7 <= y.
  (* Invariant *)
  Have: (0 <= a_6) /\ (0 <= b_7).
  (* Invariant *)
  Have: (x_5 = 0) \/ (x_6 = 0) \/ ((x_5 = 1) /\ (x_6 = 1)).
  (* Invariant *)
  Have: a_6 <= x.
  (* Invariant *)
  Have: (x_5 = 0) \/ (x_6 = 0) \/ ((x_10 % p_2) = x_7).
  (* Invariant *)
  Have: (x_5 = 0) \/ (x_6 = 0) \/ (x_7 = 1).
  (* Invariant *)
  Have: 0 < p_2.
  (* Then *)
  Have: a_6 != 0.
  (* Then *)
  Have: b_7 != 0.
  If x_5 = 0
  Then {
    Have: (a_6 = a_7) /\ (b_7 = b_6) /\ (p_2 = p_3).
    If (b_6 % 2) = 0
    Then {
      Let x_18 = b_1 / 2.
      Let x_19 = a_1 / 2.
      Have: (a_7 = a_1) /\ (b_6 = b_1) /\ (p_3 = p_1) /\
          (((a_1 * p_1) + (b_1 * p_1)) = (4 * (p_1 * x_19 * x_18))).
      Have: x_19 = a.
      Have: x_18 = b.
      Have: (4 * p_1) = p.
    }
    Else {
      Have: (a_7 = a_5) /\ (b_6 = b_8) /\ (p_3 = p).
      If (a_5 % 2) = 1
      Then {
        Have: (a_5 = a_8) /\ (b_8 = b_5).
        If (b_5 % 2) = 0
        Then {
          Let x_20 = b * p * (a_2 - 1).
          Have: (a_8 = a_2) /\ (b_5 = b) /\ (x_20 = (a_2 * p)) /\
              (x_4 = (q + (b * p) + x_20)).
          Have: (1 + a) = a_2.
        }
        Else {
          Have: (a_8 = a_4) /\ (b_5 = b_9).
          If (a_4 % 2) = 0
          Then {
            Have: (a_4 = a_9) /\ (b_9 = b_4).
            If (b_4 % 2) = 1
            Then {
              Let x_21 = a * p * (b_2 - 1).
              Have: (a_9 = a) /\ (b_4 = b_2) /\ (x_21 = (b_2 * p)) /\
                  (x_4 = (q_1 + (a * p) + x_21)).
              Have: (1 + b) = b_2.
            }
            Else {
              Let x_22 = p * (a_3 - 1) * (b_3 - 1).
              Let x_23 = p * (a_3 + b_3 - 1).
              Have: (a_9 = a_3) /\ (b_4 = b_3) /\
                  ((x_22 + x_23) = ((a_3 * p) + (b_3 * p))) /\
                  (x_4 = (q_2 + x_22 + x_23)).
              Have: (1 + a) = a_3.
              Have: (1 + b) = b_3.
            }
          }
          Else {
            Have: (a_4 = a_3) /\ (b_9 = b_3) /\
                ((x_22 + x_23) = ((a_3 * p) + (b_3 * p))) /\
                (x_4 = (q_2 + x_22 + x_23)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_3.
          }
        }
      }
      Else {
        Have: (a_5 = a_4) /\ (b_8 = b_9).
        If (a_4 % 2) = 0
        Then {
          Have: (a_4 = a_9) /\ (b_9 = b_4).
          If (b_4 % 2) = 1
          Then {
            Have: (a_9 = a) /\ (b_4 = b_2) /\ (x_21 = (b_2 * p)) /\
                (x_4 = (q_1 + (a * p) + x_21)).
            Have: (1 + b) = b_2.
          }
          Else {
            Have: (a_9 = a_3) /\ (b_4 = b_3) /\
                ((x_22 + x_23) = ((a_3 * p) + (b_3 * p))) /\
                (x_4 = (q_2 + x_22 + x_23)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_3.
          }
        }
        Else {
          Have: (a_4 = a_3) /\ (b_9 = b_3) /\
              ((x_22 + x_23) = ((a_3 * p) + (b_3 * p))) /\
              (x_4 = (q_2 + x_22 + x_23)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_3.
        }
      }
    }
  }
  Else {
    Have: (a_6 = a_5) /\ (b_7 = b_8) /\ (p_2 = p).
    If (a_5 % 2) = 1
    Then {
      Have: (a_5 = a_8) /\ (b_8 = b_5).
      If (b_5 % 2) = 0
      Then {
        Have: (a_8 = a_2) /\ (b_5 = b) /\ (x_20 = (a_2 * p)) /\
            (x_4 = (q + (b * p) + x_20)).
        Have: (1 + a) = a_2.
      }
      Else {
        Have: (a_8 = a_4) /\ (b_5 = b_9).
        If (a_4 % 2) = 0
        Then {
          Have: (a_4 = a_9) /\ (b_9 = b_4).
          If (b_4 % 2) = 1
          Then {
            Have: (a_9 = a) /\ (b_4 = b_2) /\ (x_21 = (b_2 * p)) /\
                (x_4 = (q_1 + (a * p) + x_21)).
            Have: (1 + b) = b_2.
          }
          Else {
            Have: (a_9 = a_3) /\ (b_4 = b_3) /\
                ((x_22 + x_23) = ((a_3 * p) + (b_3 * p))) /\
                (x_4 = (q_2 + x_22 + x_23)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_3.
          }
        }
        Else {
          Have: (a_4 = a_3) /\ (b_9 = b_3) /\
              ((x_22 + x_23) = ((a_3 * p) + (b_3 * p))) /\
              (x_4 = (q_2 + x_22 + x_23)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_3.
        }
      }
    }
    Else {
      Have: (a_5 = a_4) /\ (b_8 = b_9).
      If (a_4 % 2) = 0
      Then {
        Have: (a_4 = a_9) /\ (b_9 = b_4).
        If (b_4 % 2) = 1
        Then {
          Have: (a_9 = a) /\ (b_4 = b_2) /\ (x_21 = (b_2 * p)) /\
              (x_4 = (q_1 + (a * p) + x_21)).
          Have: (1 + b) = b_2.
        }
        Else {
          Have: (a_9 = a_3) /\ (b_4 = b_3) /\
              ((x_22 + x_23) = ((a_3 * p) + (b_3 * p))) /\
              (x_4 = (q_2 + x_22 + x_23)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_3.
        }
      }
      Else {
        Have: (a_4 = a_3) /\ (b_9 = b_3) /\
            ((x_22 + x_23) = ((a_3 * p) + (b_3 * p))) /\
            (x_4 = (q_2 + x_22 + x_23)).
        Have: (1 + a) = a_3.
        Have: (1 + b) = b_3.
      }
    }
  }
  (* Invariant *)
  Have: (x_1 + (x * x_2) + (y * x_3)) = (x_4 + (x_3 * x_2)).
}
Prove: x_1 = ((a * p) + (b * p)).
Prover Z3 4.8.12 returns Timeout (Qed:458ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:458ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/13_0002/13_merged.c, line 15):
Assume {
  Type: is_sint32(a) /\ is_sint32(b).
  (* Pre-condition *)
  Have: (0 < a) /\ (0 < b).
}
Prove: (a * b) = (a + b).
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/13_0002/13_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (20ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/13_0002/13_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/13_0002/13_merged.c, line 17):
Let x_1 = a * p.
Let x_2 = b * p.
Let x_3 = y - b.
Let x_4 = x - a.
Let x_5 = x * y.
Let x_6 = a_6 % 2.
Let x_7 = b_7 % 2.
Let x_8 = (a_6 + b_7) % 2.
Let x_9 = a_6 * p_2.
Let x_10 = b_7 * p_2.
Let x_11 = x_5 - x_9 - x_10.
Let x_12 = y - b_7.
Let x_13 = x - a_6.
Let x_14 = y % 2.
Let x_15 = x_5 % 2.
Let x_16 = x_5 - y.
Let x_17 = x_16 % 2.
Let x_18 = x + y.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(a_4) /\ is_sint32(a_5) /\ is_sint32(a_6) /\ is_sint32(b) /\
      is_sint32(b_1) /\ is_sint32(b_2) /\ is_sint32(b_3) /\ is_sint32(b_4) /\
      is_sint32(b_5) /\ is_sint32(b_6) /\ is_sint32(b_7) /\ is_sint32(p) /\
      is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\ is_sint32(q_1) /\
      is_sint32(q_2) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_16) /\
      is_sint32(x_5 - x_1 - x_2) /\ is_sint32(x_11).
  (* Pre-condition *)
  Have: (0 < x) /\ (0 < y).
  (* Initializer *)
  Init: x_5 = x_18.
  (* Invariant *)
  Have: (y * (x + y - x_5)) = 0.
  (* Invariant *)
  Have: (y * x_16) = x_5.
  (* Invariant *)
  Have: y <= x_5.
  (* Invariant *)
  Have: (x_14 = 0) \/ (x_5 = y) \/ (x_17 = 0) \/ ((x_14 = 1) /\ (x_17 = 1)).
  (* Invariant *)
  Have: x_5 <= x_18.
  (* Invariant *)
  Have: (x_14 = 0) \/ (x_15 = 0) \/ (x_17 = 0).
  (* Invariant *)
  Have: (x_14 = 0) \/ (x_15 = 1) \/ (x_17 = 0).
  (* Invariant *)
  Have: (x_9 + x_10 + (x * x_12) + (y * x_13)) = (x_5 + (x_13 * x_12)).
  (* Invariant *)
  Have: (a_6 * b_7 * p_2) = (x_9 + x_10).
  (* Invariant *)
  Have: b_7 <= y.
  (* Invariant *)
  Have: (0 <= a_6) /\ (0 <= b_7).
  (* Invariant *)
  Have: (x_6 = 0) \/ (x_7 = 0) \/ ((x_6 = 1) /\ (x_7 = 1)).
  (* Invariant *)
  Have: a_6 <= x.
  (* Invariant *)
  Have: (x_6 = 0) \/ (x_7 = 0) \/ ((x_11 % p_2) = x_8).
  (* Invariant *)
  Have: (x_6 = 0) \/ (x_7 = 0) \/ (x_8 = 1).
  (* Invariant *)
  Have: 0 < p_2.
  (* Then *)
  Have: a_6 != 0.
  (* Then *)
  Have: b_7 != 0.
  If x_6 = 0
  Then {
    Have: (a_6 = a_7) /\ (b_7 = b_6) /\ (p_2 = p_3).
    If (b_6 % 2) = 0
    Then {
      Let x_19 = b_1 / 2.
      Let x_20 = a_1 / 2.
      Have: (a_7 = a_1) /\ (b_6 = b_1) /\ (p_3 = p_1) /\
          (((4 * (p_1 * x_20)) + (4 * (p_1 * x_19)))
             = ((a_1 * p_1) + (b_1 * p_1))).
      Have: x_20 = a.
      Have: x_19 = b.
      Have: (4 * p_1) = p.
    }
    Else {
      Have: (a_7 = a_5) /\ (b_6 = b_8) /\ (p_3 = p).
      If (a_5 % 2) = 1
      Then {
        Have: (a_5 = a_8) /\ (b_8 = b_5).
        If (b_5 % 2) = 0
        Then {
          Let x_21 = p * (a_2 - 1).
          Have: (a_8 = a_2) /\ (b_5 = b) /\ ((a_2 * p) = (x_2 + x_21)) /\
              (x_5 = (q + (2 * x_2) + x_21)).
          Have: (1 + a) = a_2.
        }
        Else {
          Have: (a_8 = a_4) /\ (b_5 = b_9).
          If (a_4 % 2) = 0
          Then {
            Have: (a_4 = a_9) /\ (b_9 = b_4).
            If (b_4 % 2) = 1
            Then {
              Let x_22 = p * (b_2 - 1).
              Have: (a_9 = a) /\ (b_4 = b_2) /\ ((b_2 * p) = (x_1 + x_22)) /\
                  (x_5 = (q_1 + (2 * x_1) + x_22)).
              Have: (1 + b) = b_2.
            }
            Else {
              Let x_23 = p * (a_3 - 1).
              Let x_24 = p * (b_3 - 1).
              Let x_25 = p * (a_3 + b_3 - 1).
              Have: (a_9 = a_3) /\ (b_4 = b_3) /\
                  ((x_23 + x_24 + x_25) = ((a_3 * p) + (b_3 * p))) /\
                  (x_5 = (q_2 + x_23 + x_24 + x_25)).
              Have: (1 + a) = a_3.
              Have: (1 + b) = b_3.
            }
          }
          Else {
            Have: (a_4 = a_3) /\ (b_9 = b_3) /\
                ((x_23 + x_24 + x_25) = ((a_3 * p) + (b_3 * p))) /\
                (x_5 = (q_2 + x_23 + x_24 + x_25)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_3.
          }
        }
      }
      Else {
        Have: (a_5 = a_4) /\ (b_8 = b_9).
        If (a_4 % 2) = 0
        Then {
          Have: (a_4 = a_9) /\ (b_9 = b_4).
          If (b_4 % 2) = 1
          Then {
            Have: (a_9 = a) /\ (b_4 = b_2) /\ ((b_2 * p) = (x_1 + x_22)) /\
                (x_5 = (q_1 + (2 * x_1) + x_22)).
            Have: (1 + b) = b_2.
          }
          Else {
            Have: (a_9 = a_3) /\ (b_4 = b_3) /\
                ((x_23 + x_24 + x_25) = ((a_3 * p) + (b_3 * p))) /\
                (x_5 = (q_2 + x_23 + x_24 + x_25)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_3.
          }
        }
        Else {
          Have: (a_4 = a_3) /\ (b_9 = b_3) /\
              ((x_23 + x_24 + x_25) = ((a_3 * p) + (b_3 * p))) /\
              (x_5 = (q_2 + x_23 + x_24 + x_25)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_3.
        }
      }
    }
  }
  Else {
    Have: (a_6 = a_5) /\ (b_7 = b_8) /\ (p_2 = p).
    If (a_5 % 2) = 1
    Then {
      Have: (a_5 = a_8) /\ (b_8 = b_5).
      If (b_5 % 2) = 0
      Then {
        Have: (a_8 = a_2) /\ (b_5 = b) /\ ((a_2 * p) = (x_2 + x_21)) /\
            (x_5 = (q + (2 * x_2) + x_21)).
        Have: (1 + a) = a_2.
      }
      Else {
        Have: (a_8 = a_4) /\ (b_5 = b_9).
        If (a_4 % 2) = 0
        Then {
          Have: (a_4 = a_9) /\ (b_9 = b_4).
          If (b_4 % 2) = 1
          Then {
            Have: (a_9 = a) /\ (b_4 = b_2) /\ ((b_2 * p) = (x_1 + x_22)) /\
                (x_5 = (q_1 + (2 * x_1) + x_22)).
            Have: (1 + b) = b_2.
          }
          Else {
            Have: (a_9 = a_3) /\ (b_4 = b_3) /\
                ((x_23 + x_24 + x_25) = ((a_3 * p) + (b_3 * p))) /\
                (x_5 = (q_2 + x_23 + x_24 + x_25)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_3.
          }
        }
        Else {
          Have: (a_4 = a_3) /\ (b_9 = b_3) /\
              ((x_23 + x_24 + x_25) = ((a_3 * p) + (b_3 * p))) /\
              (x_5 = (q_2 + x_23 + x_24 + x_25)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_3.
        }
      }
    }
    Else {
      Have: (a_5 = a_4) /\ (b_8 = b_9).
      If (a_4 % 2) = 0
      Then {
        Have: (a_4 = a_9) /\ (b_9 = b_4).
        If (b_4 % 2) = 1
        Then {
          Have: (a_9 = a) /\ (b_4 = b_2) /\ ((b_2 * p) = (x_1 + x_22)) /\
              (x_5 = (q_1 + (2 * x_1) + x_22)).
          Have: (1 + b) = b_2.
        }
        Else {
          Have: (a_9 = a_3) /\ (b_4 = b_3) /\
              ((x_23 + x_24 + x_25) = ((a_3 * p) + (b_3 * p))) /\
              (x_5 = (q_2 + x_23 + x_24 + x_25)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_3.
        }
      }
      Else {
        Have: (a_4 = a_3) /\ (b_9 = b_3) /\
            ((x_23 + x_24 + x_25) = ((a_3 * p) + (b_3 * p))) /\
            (x_5 = (q_2 + x_23 + x_24 + x_25)).
        Have: (1 + a) = a_3.
        Have: (1 + b) = b_3.
      }
    }
  }
  (* Invariant *)
  Have: (x_1 + x_2 + (x * x_3) + (y * x_4)) = (x_5 + (x_4 * x_3)).
  (* Invariant *)
  Have: (a * b * p) = (x_1 + x_2).
}
Prove: b <= y.
Prover Z3 4.8.12 returns Valid (Qed:460ms) (20ms) (80735)

------------------------------------------------------------

Goal Establishment of Invariant (file out/13_0002/13_merged.c, line 17):
Let x = a * y.
Let x_1 = x - a.
Let x_2 = a + y.
Assume {
  Type: is_sint32(a) /\ is_sint32(y) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: (0 < a) /\ (0 < y).
  (* Initializer *)
  Init: x = x_2.
  (* Invariant *)
  Have: (a * (a + y - x)) = 0.
  (* Invariant *)
  Have: (a * x_1) = x.
}
Prove: x <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (30407)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (4ms) (26)

------------------------------------------------------------

Goal Preservation of Invariant (file out/13_0002/13_merged.c, line 18):
Let x_1 = a * p.
Let x_2 = b * p.
Let x_3 = x - a.
Let x_4 = b_8 - b.
Let x_5 = b_8 * x.
Let x_6 = a_6 % 2.
Let x_7 = b_7 % 2.
Let x_8 = (a_6 + b_7) % 2.
Let x_9 = a_6 * p_2.
Let x_10 = b_7 * p_2.
Let x_11 = x_5 - x_9 - x_10.
Let x_12 = x - a_6.
Let x_13 = b_8 - b_7.
Let x_14 = b_8 % 2.
Let x_15 = x_5 % 2.
Let x_16 = x_5 - b_8.
Let x_17 = x_16 % 2.
Let x_18 = b_8 + x.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(a_4) /\ is_sint32(a_5) /\ is_sint32(a_6) /\ is_sint32(b) /\
      is_sint32(b_1) /\ is_sint32(b_2) /\ is_sint32(b_3) /\ is_sint32(b_4) /\
      is_sint32(b_5) /\ is_sint32(b_6) /\ is_sint32(b_7) /\ is_sint32(b_8) /\
      is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(x) /\ is_sint32(x_16) /\
      is_sint32(x_5 - x_1 - x_2) /\ is_sint32(x_11).
  (* Pre-condition *)
  Have: (0 < b_8) /\ (0 < x).
  (* Initializer *)
  Init: x_5 = x_18.
  (* Invariant *)
  Have: (b_8 * (b_8 + x - x_5)) = 0.
  (* Invariant *)
  Have: (b_8 * x_16) = x_5.
  (* Invariant *)
  Have: b_8 <= x_5.
  (* Invariant *)
  Have: (x_14 = 0) \/ (x_5 = b_8) \/ (x_17 = 0) \/
      ((x_14 = 1) /\ (x_17 = 1)).
  (* Invariant *)
  Have: x_5 <= x_18.
  (* Invariant *)
  Have: (x_14 = 0) \/ (x_15 = 0) \/ (x_17 = 0).
  (* Invariant *)
  Have: (x_14 = 0) \/ (x_15 = 1) \/ (x_17 = 0).
  (* Invariant *)
  Have: (x_9 + x_10 + (b_8 * x_12) + (x * x_13)) = (x_5 + (x_13 * x_12)).
  (* Invariant *)
  Have: (a_6 * b_7 * p_2) = (x_9 + x_10).
  (* Invariant *)
  Have: b_7 <= b_8.
  (* Invariant *)
  Have: (0 <= a_6) /\ (0 <= b_7).
  (* Invariant *)
  Have: (x_6 = 0) \/ (x_7 = 0) \/ ((x_6 = 1) /\ (x_7 = 1)).
  (* Invariant *)
  Have: a_6 <= x.
  (* Invariant *)
  Have: (x_6 = 0) \/ (x_7 = 0) \/ ((x_11 % p_2) = x_8).
  (* Invariant *)
  Have: (x_6 = 0) \/ (x_7 = 0) \/ (x_8 = 1).
  (* Invariant *)
  Have: 0 < p_2.
  (* Then *)
  Have: a_6 != 0.
  (* Then *)
  Have: b_7 != 0.
  If x_6 = 0
  Then {
    Have: (a_6 = a_7) /\ (b_7 = b_6) /\ (p_2 = p_3).
    If (b_6 % 2) = 0
    Then {
      Let x_19 = b_1 / 2.
      Let x_20 = a_1 / 2.
      Have: (a_7 = a_1) /\ (b_6 = b_1) /\ (p_3 = p_1) /\
          (((4 * (p_1 * x_20)) + (4 * (p_1 * x_19)))
             = ((a_1 * p_1) + (b_1 * p_1))).
      Have: x_20 = a.
      Have: x_19 = b.
      Have: (4 * p_1) = p.
    }
    Else {
      Have: (a_7 = a_5) /\ (b_6 = b_9) /\ (p_3 = p).
      If (a_5 % 2) = 1
      Then {
        Have: (a_5 = a_8) /\ (b_9 = b_5).
        If (b_5 % 2) = 0
        Then {
          Let x_21 = p * (a_2 - 1).
          Have: (a_8 = a_2) /\ (b_5 = b) /\ ((a_2 * p) = (x_2 + x_21)) /\
              (x_5 = (q + (2 * x_2) + x_21)).
          Have: (1 + a) = a_2.
        }
        Else {
          Have: (a_8 = a_4) /\ (b_5 = b_10).
          If (a_4 % 2) = 0
          Then {
            Have: (a_4 = a_9) /\ (b_10 = b_4).
            If (b_4 % 2) = 1
            Then {
              Let x_22 = p * (b_2 - 1).
              Have: (a_9 = a) /\ (b_4 = b_2) /\ ((b_2 * p) = (x_1 + x_22)) /\
                  (x_5 = (q_1 + (2 * x_1) + x_22)).
              Have: (1 + b) = b_2.
            }
            Else {
              Let x_23 = p * (a_3 - 1).
              Let x_24 = p * (b_3 - 1).
              Let x_25 = p * (a_3 + b_3 - 1).
              Have: (a_9 = a_3) /\ (b_4 = b_3) /\
                  ((x_23 + x_24 + x_25) = ((a_3 * p) + (b_3 * p))) /\
                  (x_5 = (q_2 + x_23 + x_24 + x_25)).
              Have: (1 + a) = a_3.
              Have: (1 + b) = b_3.
            }
          }
          Else {
            Have: (a_4 = a_3) /\ (b_10 = b_3) /\
                ((x_23 + x_24 + x_25) = ((a_3 * p) + (b_3 * p))) /\
                (x_5 = (q_2 + x_23 + x_24 + x_25)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_3.
          }
        }
      }
      Else {
        Have: (a_5 = a_4) /\ (b_9 = b_10).
        If (a_4 % 2) = 0
        Then {
          Have: (a_4 = a_9) /\ (b_10 = b_4).
          If (b_4 % 2) = 1
          Then {
            Have: (a_9 = a) /\ (b_4 = b_2) /\ ((b_2 * p) = (x_1 + x_22)) /\
                (x_5 = (q_1 + (2 * x_1) + x_22)).
            Have: (1 + b) = b_2.
          }
          Else {
            Have: (a_9 = a_3) /\ (b_4 = b_3) /\
                ((x_23 + x_24 + x_25) = ((a_3 * p) + (b_3 * p))) /\
                (x_5 = (q_2 + x_23 + x_24 + x_25)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_3.
          }
        }
        Else {
          Have: (a_4 = a_3) /\ (b_10 = b_3) /\
              ((x_23 + x_24 + x_25) = ((a_3 * p) + (b_3 * p))) /\
              (x_5 = (q_2 + x_23 + x_24 + x_25)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_3.
        }
      }
    }
  }
  Else {
    Have: (a_6 = a_5) /\ (b_7 = b_9) /\ (p_2 = p).
    If (a_5 % 2) = 1
    Then {
      Have: (a_5 = a_8) /\ (b_9 = b_5).
      If (b_5 % 2) = 0
      Then {
        Have: (a_8 = a_2) /\ (b_5 = b) /\ ((a_2 * p) = (x_2 + x_21)) /\
            (x_5 = (q + (2 * x_2) + x_21)).
        Have: (1 + a) = a_2.
      }
      Else {
        Have: (a_8 = a_4) /\ (b_5 = b_10).
        If (a_4 % 2) = 0
        Then {
          Have: (a_4 = a_9) /\ (b_10 = b_4).
          If (b_4 % 2) = 1
          Then {
            Have: (a_9 = a) /\ (b_4 = b_2) /\ ((b_2 * p) = (x_1 + x_22)) /\
                (x_5 = (q_1 + (2 * x_1) + x_22)).
            Have: (1 + b) = b_2.
          }
          Else {
            Have: (a_9 = a_3) /\ (b_4 = b_3) /\
                ((x_23 + x_24 + x_25) = ((a_3 * p) + (b_3 * p))) /\
                (x_5 = (q_2 + x_23 + x_24 + x_25)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_3.
          }
        }
        Else {
          Have: (a_4 = a_3) /\ (b_10 = b_3) /\
              ((x_23 + x_24 + x_25) = ((a_3 * p) + (b_3 * p))) /\
              (x_5 = (q_2 + x_23 + x_24 + x_25)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_3.
        }
      }
    }
    Else {
      Have: (a_5 = a_4) /\ (b_9 = b_10).
      If (a_4 % 2) = 0
      Then {
        Have: (a_4 = a_9) /\ (b_10 = b_4).
        If (b_4 % 2) = 1
        Then {
          Have: (a_9 = a) /\ (b_4 = b_2) /\ ((b_2 * p) = (x_1 + x_22)) /\
              (x_5 = (q_1 + (2 * x_1) + x_22)).
          Have: (1 + b) = b_2.
        }
        Else {
          Have: (a_9 = a_3) /\ (b_4 = b_3) /\
              ((x_23 + x_24 + x_25) = ((a_3 * p) + (b_3 * p))) /\
              (x_5 = (q_2 + x_23 + x_24 + x_25)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_3.
        }
      }
      Else {
        Have: (a_4 = a_3) /\ (b_10 = b_3) /\
            ((x_23 + x_24 + x_25) = ((a_3 * p) + (b_3 * p))) /\
            (x_5 = (q_2 + x_23 + x_24 + x_25)).
        Have: (1 + a) = a_3.
        Have: (1 + b) = b_3.
      }
    }
  }
  (* Invariant *)
  Have: (x_1 + x_2 + (b_8 * x_3) + (x * x_4)) = (x_5 + (x_4 * x_3)).
  (* Invariant *)
  Have: (a * b * p) = (x_1 + x_2).
  (* Invariant *)
  Have: b <= b_8.
}
Prove: (0 <= a) /\ (0 <= b).
Prover Z3 4.8.12 returns Valid (Qed:473ms) (20ms) (104562)

------------------------------------------------------------

Goal Establishment of Invariant (file out/13_0002/13_merged.c, line 18):
Let x_1 = b * x.
Let x_2 = x_1 - b.
Assume {
  Type: is_sint32(b) /\ is_sint32(x) /\ is_sint32(x_2).
  (* Pre-condition *)
  Have: (0 < b) /\ (0 < x).
  (* Initializer *)
  Init: x_1 = (b + x).
  (* Invariant *)
  Have: (b * (b + x - x_1)) = 0.
  (* Invariant *)
  Have: (b * x_2) = x_1.
}
Prove: b <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (30781)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (5ms) (25)

------------------------------------------------------------

Goal Preservation of Invariant (file out/13_0002/13_merged.c, line 19):
Let x_1 = a * p.
Let x_2 = b * p.
Let x_3 = x - a.
Let x_4 = b_8 - b.
Let x_5 = b_8 * x.
Let x_6 = a_6 % 2.
Let x_7 = b_7 % 2.
Let x_8 = (a_6 + b_7) % 2.
Let x_9 = a_6 * p_2.
Let x_10 = b_7 * p_2.
Let x_11 = x_5 - x_9 - x_10.
Let x_12 = x - a_6.
Let x_13 = b_8 - b_7.
Let x_14 = b_8 % 2.
Let x_15 = x_5 % 2.
Let x_16 = x_5 - b_8.
Let x_17 = x_16 % 2.
Let x_18 = b_8 + x.
Let x_19 = a % 2.
Let x_20 = b % 2.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(a_4) /\ is_sint32(a_5) /\ is_sint32(a_6) /\ is_sint32(b) /\
      is_sint32(b_1) /\ is_sint32(b_2) /\ is_sint32(b_3) /\ is_sint32(b_4) /\
      is_sint32(b_5) /\ is_sint32(b_6) /\ is_sint32(b_7) /\ is_sint32(b_8) /\
      is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(x) /\ is_sint32(x_16) /\
      is_sint32(x_5 - x_1 - x_2) /\ is_sint32(x_11).
  (* Pre-condition *)
  Have: (0 < b_8) /\ (0 < x).
  (* Initializer *)
  Init: x_5 = x_18.
  (* Invariant *)
  Have: (b_8 * (b_8 + x - x_5)) = 0.
  (* Invariant *)
  Have: (b_8 * x_16) = x_5.
  (* Invariant *)
  Have: b_8 <= x_5.
  (* Invariant *)
  Have: (x_14 = 0) \/ (x_5 = b_8) \/ (x_17 = 0) \/
      ((x_14 = 1) /\ (x_17 = 1)).
  (* Invariant *)
  Have: x_5 <= x_18.
  (* Invariant *)
  Have: (x_14 = 0) \/ (x_15 = 0) \/ (x_17 = 0).
  (* Invariant *)
  Have: (x_14 = 0) \/ (x_15 = 1) \/ (x_17 = 0).
  (* Invariant *)
  Have: (x_9 + x_10 + (b_8 * x_12) + (x * x_13)) = (x_5 + (x_13 * x_12)).
  (* Invariant *)
  Have: (a_6 * b_7 * p_2) = (x_9 + x_10).
  (* Invariant *)
  Have: b_7 <= b_8.
  (* Invariant *)
  Have: (0 <= a_6) /\ (0 <= b_7).
  (* Invariant *)
  Have: (x_6 = 0) \/ (x_7 = 0) \/ ((x_6 = 1) /\ (x_7 = 1)).
  (* Invariant *)
  Have: a_6 <= x.
  (* Invariant *)
  Have: (x_6 = 0) \/ (x_7 = 0) \/ ((x_11 % p_2) = x_8).
  (* Invariant *)
  Have: (x_6 = 0) \/ (x_7 = 0) \/ (x_8 = 1).
  (* Invariant *)
  Have: 0 < p_2.
  (* Then *)
  Have: a_6 != 0.
  (* Then *)
  Have: b_7 != 0.
  If x_6 = 0
  Then {
    Have: (a_6 = a_7) /\ (b_7 = b_6) /\ (p_2 = p_3).
    If (b_6 % 2) = 0
    Then {
      Let x_21 = b_1 / 2.
      Let x_22 = a_1 / 2.
      Have: (a_7 = a_1) /\ (b_6 = b_1) /\ (p_3 = p_1) /\
          (((4 * (p_1 * x_22)) + (4 * (p_1 * x_21)))
             = ((a_1 * p_1) + (b_1 * p_1))).
      Have: x_22 = a.
      Have: x_21 = b.
      Have: (4 * p_1) = p.
    }
    Else {
      Have: (a_7 = a_5) /\ (b_6 = b_9) /\ (p_3 = p).
      If (a_5 % 2) = 1
      Then {
        Have: (a_5 = a_8) /\ (b_9 = b_5).
        If (b_5 % 2) = 0
        Then {
          Let x_23 = p * (a_2 - 1).
          Have: (a_8 = a_2) /\ (b_5 = b) /\ ((a_2 * p) = (x_2 + x_23)) /\
              (x_5 = (q + (2 * x_2) + x_23)).
          Have: (1 + a) = a_2.
        }
        Else {
          Have: (a_8 = a_4) /\ (b_5 = b_10).
          If (a_4 % 2) = 0
          Then {
            Have: (a_4 = a_9) /\ (b_10 = b_4).
            If (b_4 % 2) = 1
            Then {
              Let x_24 = p * (b_2 - 1).
              Have: (a_9 = a) /\ (b_4 = b_2) /\ ((b_2 * p) = (x_1 + x_24)) /\
                  (x_5 = (q_1 + (2 * x_1) + x_24)).
              Have: (1 + b) = b_2.
            }
            Else {
              Let x_25 = p * (a_3 - 1).
              Let x_26 = p * (b_3 - 1).
              Let x_27 = p * (a_3 + b_3 - 1).
              Have: (a_9 = a_3) /\ (b_4 = b_3) /\
                  ((x_25 + x_26 + x_27) = ((a_3 * p) + (b_3 * p))) /\
                  (x_5 = (q_2 + x_25 + x_26 + x_27)).
              Have: (1 + a) = a_3.
              Have: (1 + b) = b_3.
            }
          }
          Else {
            Have: (a_4 = a_3) /\ (b_10 = b_3) /\
                ((x_25 + x_26 + x_27) = ((a_3 * p) + (b_3 * p))) /\
                (x_5 = (q_2 + x_25 + x_26 + x_27)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_3.
          }
        }
      }
      Else {
        Have: (a_5 = a_4) /\ (b_9 = b_10).
        If (a_4 % 2) = 0
        Then {
          Have: (a_4 = a_9) /\ (b_10 = b_4).
          If (b_4 % 2) = 1
          Then {
            Have: (a_9 = a) /\ (b_4 = b_2) /\ ((b_2 * p) = (x_1 + x_24)) /\
                (x_5 = (q_1 + (2 * x_1) + x_24)).
            Have: (1 + b) = b_2.
          }
          Else {
            Have: (a_9 = a_3) /\ (b_4 = b_3) /\
                ((x_25 + x_26 + x_27) = ((a_3 * p) + (b_3 * p))) /\
                (x_5 = (q_2 + x_25 + x_26 + x_27)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_3.
          }
        }
        Else {
          Have: (a_4 = a_3) /\ (b_10 = b_3) /\
              ((x_25 + x_26 + x_27) = ((a_3 * p) + (b_3 * p))) /\
              (x_5 = (q_2 + x_25 + x_26 + x_27)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_3.
        }
      }
    }
  }
  Else {
    Have: (a_6 = a_5) /\ (b_7 = b_9) /\ (p_2 = p).
    If (a_5 % 2) = 1
    Then {
      Have: (a_5 = a_8) /\ (b_9 = b_5).
      If (b_5 % 2) = 0
      Then {
        Have: (a_8 = a_2) /\ (b_5 = b) /\ ((a_2 * p) = (x_2 + x_23)) /\
            (x_5 = (q + (2 * x_2) + x_23)).
        Have: (1 + a) = a_2.
      }
      Else {
        Have: (a_8 = a_4) /\ (b_5 = b_10).
        If (a_4 % 2) = 0
        Then {
          Have: (a_4 = a_9) /\ (b_10 = b_4).
          If (b_4 % 2) = 1
          Then {
            Have: (a_9 = a) /\ (b_4 = b_2) /\ ((b_2 * p) = (x_1 + x_24)) /\
                (x_5 = (q_1 + (2 * x_1) + x_24)).
            Have: (1 + b) = b_2.
          }
          Else {
            Have: (a_9 = a_3) /\ (b_4 = b_3) /\
                ((x_25 + x_26 + x_27) = ((a_3 * p) + (b_3 * p))) /\
                (x_5 = (q_2 + x_25 + x_26 + x_27)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_3.
          }
        }
        Else {
          Have: (a_4 = a_3) /\ (b_10 = b_3) /\
              ((x_25 + x_26 + x_27) = ((a_3 * p) + (b_3 * p))) /\
              (x_5 = (q_2 + x_25 + x_26 + x_27)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_3.
        }
      }
    }
    Else {
      Have: (a_5 = a_4) /\ (b_9 = b_10).
      If (a_4 % 2) = 0
      Then {
        Have: (a_4 = a_9) /\ (b_10 = b_4).
        If (b_4 % 2) = 1
        Then {
          Have: (a_9 = a) /\ (b_4 = b_2) /\ ((b_2 * p) = (x_1 + x_24)) /\
              (x_5 = (q_1 + (2 * x_1) + x_24)).
          Have: (1 + b) = b_2.
        }
        Else {
          Have: (a_9 = a_3) /\ (b_4 = b_3) /\
              ((x_25 + x_26 + x_27) = ((a_3 * p) + (b_3 * p))) /\
              (x_5 = (q_2 + x_25 + x_26 + x_27)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_3.
        }
      }
      Else {
        Have: (a_4 = a_3) /\ (b_10 = b_3) /\
            ((x_25 + x_26 + x_27) = ((a_3 * p) + (b_3 * p))) /\
            (x_5 = (q_2 + x_25 + x_26 + x_27)).
        Have: (1 + a) = a_3.
        Have: (1 + b) = b_3.
      }
    }
  }
  (* Invariant *)
  Have: (x_1 + x_2 + (b_8 * x_3) + (x * x_4)) = (x_5 + (x_4 * x_3)).
  (* Invariant *)
  Have: (a * b * p) = (x_1 + x_2).
  (* Invariant *)
  Have: b <= b_8.
  (* Invariant *)
  Have: (0 <= a) /\ (0 <= b).
}
Prove: (a = 0) \/ (b = 0) \/ (x_19 = 0) \/ (x_20 = 0) \/
    ((x_19 = 1) /\ (x_20 = 1)).
Prover Z3 4.8.12 returns Valid (Qed:441ms) (20ms) (54485)

------------------------------------------------------------

Goal Establishment of Invariant (file out/13_0002/13_merged.c, line 19):
Let x_1 = b * x.
Let x_2 = x_1 - b.
Let x_3 = b % 2.
Let x_4 = x_2 % 2.
Assume {
  Type: is_sint32(b) /\ is_sint32(x) /\ is_sint32(x_2).
  (* Pre-condition *)
  Have: (0 < b) /\ (0 < x).
  (* Initializer *)
  Init: x_1 = (b + x).
  (* Invariant *)
  Have: (b * (b + x - x_1)) = 0.
  (* Invariant *)
  Have: (b * x_2) = x_1.
  (* Invariant *)
  Have: b <= x_1.
}
Prove: (x_3 = 0) \/ (x_1 = b) \/ (x_4 = 0) \/ ((x_3 = 1) /\ (x_4 = 1)).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (16ms) (296)

------------------------------------------------------------

Goal Preservation of Invariant (file out/13_0002/13_merged.c, line 20):
Let x_1 = a % 2.
Let x_2 = b % 2.
Let x_3 = a * p.
Let x_4 = b * p.
Let x_5 = x - a.
Let x_6 = b_8 - b.
Let x_7 = b_8 * x.
Let x_8 = a_6 % 2.
Let x_9 = b_7 % 2.
Let x_10 = (a_6 + b_7) % 2.
Let x_11 = a_6 * p_2.
Let x_12 = b_7 * p_2.
Let x_13 = x_7 - x_11 - x_12.
Let x_14 = x - a_6.
Let x_15 = b_8 - b_7.
Let x_16 = b_8 % 2.
Let x_17 = x_7 % 2.
Let x_18 = x_7 - b_8.
Let x_19 = x_18 % 2.
Let x_20 = b_8 + x.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(a_4) /\ is_sint32(a_5) /\ is_sint32(a_6) /\ is_sint32(b) /\
      is_sint32(b_1) /\ is_sint32(b_2) /\ is_sint32(b_3) /\ is_sint32(b_4) /\
      is_sint32(b_5) /\ is_sint32(b_6) /\ is_sint32(b_7) /\ is_sint32(b_8) /\
      is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(x) /\ is_sint32(x_18) /\
      is_sint32(x_7 - x_3 - x_4) /\ is_sint32(x_13).
  (* Pre-condition *)
  Have: (0 < b_8) /\ (0 < x).
  (* Initializer *)
  Init: x_7 = x_20.
  (* Invariant *)
  Have: (b_8 * (b_8 + x - x_7)) = 0.
  (* Invariant *)
  Have: (b_8 * x_18) = x_7.
  (* Invariant *)
  Have: b_8 <= x_7.
  (* Invariant *)
  Have: (x_16 = 0) \/ (x_7 = b_8) \/ (x_19 = 0) \/
      ((x_16 = 1) /\ (x_19 = 1)).
  (* Invariant *)
  Have: x_7 <= x_20.
  (* Invariant *)
  Have: (x_16 = 0) \/ (x_17 = 0) \/ (x_19 = 0).
  (* Invariant *)
  Have: (x_16 = 0) \/ (x_17 = 1) \/ (x_19 = 0).
  (* Invariant *)
  Have: (x_11 + x_12 + (b_8 * x_14) + (x * x_15)) = (x_7 + (x_15 * x_14)).
  (* Invariant *)
  Have: (a_6 * b_7 * p_2) = (x_11 + x_12).
  (* Invariant *)
  Have: b_7 <= b_8.
  (* Invariant *)
  Have: (0 <= a_6) /\ (0 <= b_7).
  (* Invariant *)
  Have: (x_8 = 0) \/ (x_9 = 0) \/ ((x_8 = 1) /\ (x_9 = 1)).
  (* Invariant *)
  Have: a_6 <= x.
  (* Invariant *)
  Have: (x_8 = 0) \/ (x_9 = 0) \/ ((x_13 % p_2) = x_10).
  (* Invariant *)
  Have: (x_8 = 0) \/ (x_9 = 0) \/ (x_10 = 1).
  (* Invariant *)
  Have: 0 < p_2.
  (* Then *)
  Have: a_6 != 0.
  (* Then *)
  Have: b_7 != 0.
  If x_8 = 0
  Then {
    Have: (a_6 = a_7) /\ (b_7 = b_6) /\ (p_2 = p_3).
    If (b_6 % 2) = 0
    Then {
      Let x_21 = b_1 / 2.
      Let x_22 = a_1 / 2.
      Have: (a_7 = a_1) /\ (b_6 = b_1) /\ (p_3 = p_1) /\
          (((4 * (p_1 * x_22)) + (4 * (p_1 * x_21)))
             = ((a_1 * p_1) + (b_1 * p_1))).
      Have: x_22 = a.
      Have: x_21 = b.
      Have: (4 * p_1) = p.
    }
    Else {
      Have: (a_7 = a_5) /\ (b_6 = b_9) /\ (p_3 = p).
      If (a_5 % 2) = 1
      Then {
        Have: (a_5 = a_8) /\ (b_9 = b_5).
        If (b_5 % 2) = 0
        Then {
          Let x_23 = p * (a_2 - 1).
          Have: (a_8 = a_2) /\ (b_5 = b) /\ ((a_2 * p) = (x_4 + x_23)) /\
              (x_7 = (q + (2 * x_4) + x_23)).
          Have: (1 + a) = a_2.
        }
        Else {
          Have: (a_8 = a_4) /\ (b_5 = b_10).
          If (a_4 % 2) = 0
          Then {
            Have: (a_4 = a_9) /\ (b_10 = b_4).
            If (b_4 % 2) = 1
            Then {
              Let x_24 = p * (b_2 - 1).
              Have: (a_9 = a) /\ (b_4 = b_2) /\ ((b_2 * p) = (x_3 + x_24)) /\
                  (x_7 = (q_1 + (2 * x_3) + x_24)).
              Have: (1 + b) = b_2.
            }
            Else {
              Let x_25 = p * (a_3 - 1).
              Let x_26 = p * (b_3 - 1).
              Let x_27 = p * (a_3 + b_3 - 1).
              Have: (a_9 = a_3) /\ (b_4 = b_3) /\
                  ((x_25 + x_26 + x_27) = ((a_3 * p) + (b_3 * p))) /\
                  (x_7 = (q_2 + x_25 + x_26 + x_27)).
              Have: (1 + a) = a_3.
              Have: (1 + b) = b_3.
            }
          }
          Else {
            Have: (a_4 = a_3) /\ (b_10 = b_3) /\
                ((x_25 + x_26 + x_27) = ((a_3 * p) + (b_3 * p))) /\
                (x_7 = (q_2 + x_25 + x_26 + x_27)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_3.
          }
        }
      }
      Else {
        Have: (a_5 = a_4) /\ (b_9 = b_10).
        If (a_4 % 2) = 0
        Then {
          Have: (a_4 = a_9) /\ (b_10 = b_4).
          If (b_4 % 2) = 1
          Then {
            Have: (a_9 = a) /\ (b_4 = b_2) /\ ((b_2 * p) = (x_3 + x_24)) /\
                (x_7 = (q_1 + (2 * x_3) + x_24)).
            Have: (1 + b) = b_2.
          }
          Else {
            Have: (a_9 = a_3) /\ (b_4 = b_3) /\
                ((x_25 + x_26 + x_27) = ((a_3 * p) + (b_3 * p))) /\
                (x_7 = (q_2 + x_25 + x_26 + x_27)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_3.
          }
        }
        Else {
          Have: (a_4 = a_3) /\ (b_10 = b_3) /\
              ((x_25 + x_26 + x_27) = ((a_3 * p) + (b_3 * p))) /\
              (x_7 = (q_2 + x_25 + x_26 + x_27)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_3.
        }
      }
    }
  }
  Else {
    Have: (a_6 = a_5) /\ (b_7 = b_9) /\ (p_2 = p).
    If (a_5 % 2) = 1
    Then {
      Have: (a_5 = a_8) /\ (b_9 = b_5).
      If (b_5 % 2) = 0
      Then {
        Have: (a_8 = a_2) /\ (b_5 = b) /\ ((a_2 * p) = (x_4 + x_23)) /\
            (x_7 = (q + (2 * x_4) + x_23)).
        Have: (1 + a) = a_2.
      }
      Else {
        Have: (a_8 = a_4) /\ (b_5 = b_10).
        If (a_4 % 2) = 0
        Then {
          Have: (a_4 = a_9) /\ (b_10 = b_4).
          If (b_4 % 2) = 1
          Then {
            Have: (a_9 = a) /\ (b_4 = b_2) /\ ((b_2 * p) = (x_3 + x_24)) /\
                (x_7 = (q_1 + (2 * x_3) + x_24)).
            Have: (1 + b) = b_2.
          }
          Else {
            Have: (a_9 = a_3) /\ (b_4 = b_3) /\
                ((x_25 + x_26 + x_27) = ((a_3 * p) + (b_3 * p))) /\
                (x_7 = (q_2 + x_25 + x_26 + x_27)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_3.
          }
        }
        Else {
          Have: (a_4 = a_3) /\ (b_10 = b_3) /\
              ((x_25 + x_26 + x_27) = ((a_3 * p) + (b_3 * p))) /\
              (x_7 = (q_2 + x_25 + x_26 + x_27)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_3.
        }
      }
    }
    Else {
      Have: (a_5 = a_4) /\ (b_9 = b_10).
      If (a_4 % 2) = 0
      Then {
        Have: (a_4 = a_9) /\ (b_10 = b_4).
        If (b_4 % 2) = 1
        Then {
          Have: (a_9 = a) /\ (b_4 = b_2) /\ ((b_2 * p) = (x_3 + x_24)) /\
              (x_7 = (q_1 + (2 * x_3) + x_24)).
          Have: (1 + b) = b_2.
        }
        Else {
          Have: (a_9 = a_3) /\ (b_4 = b_3) /\
              ((x_25 + x_26 + x_27) = ((a_3 * p) + (b_3 * p))) /\
              (x_7 = (q_2 + x_25 + x_26 + x_27)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_3.
        }
      }
      Else {
        Have: (a_4 = a_3) /\ (b_10 = b_3) /\
            ((x_25 + x_26 + x_27) = ((a_3 * p) + (b_3 * p))) /\
            (x_7 = (q_2 + x_25 + x_26 + x_27)).
        Have: (1 + a) = a_3.
        Have: (1 + b) = b_3.
      }
    }
  }
  (* Invariant *)
  Have: (x_3 + x_4 + (b_8 * x_5) + (x * x_6)) = (x_7 + (x_6 * x_5)).
  (* Invariant *)
  Have: (a * b * p) = (x_3 + x_4).
  (* Invariant *)
  Have: b <= b_8.
  (* Invariant *)
  Have: (0 <= a) /\ (0 <= b).
  (* Invariant *)
  Have: (a = 0) \/ (b = 0) \/ (x_1 = 0) \/ (x_2 = 0) \/
      ((x_1 = 1) /\ (x_2 = 1)).
}
Prove: a <= x.
Prover Z3 4.8.12 returns Valid (Qed:505ms) (30ms) (77380)

------------------------------------------------------------

Goal Establishment of Invariant (file out/13_0002/13_merged.c, line 20):
Let x_1 = b % 2.
Let x_2 = b * x.
Let x_3 = x_2 - b.
Let x_4 = x_3 % 2.
Let x_5 = b + x.
Assume {
  Type: is_sint32(b) /\ is_sint32(x) /\ is_sint32(x_3).
  (* Pre-condition *)
  Have: (0 < b) /\ (0 < x).
  (* Initializer *)
  Init: x_2 = x_5.
  (* Invariant *)
  Have: (b * (b + x - x_2)) = 0.
  (* Invariant *)
  Have: (b * x_3) = x_2.
  (* Invariant *)
  Have: b <= x_2.
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_2 = b) \/ (x_4 = 0) \/ ((x_1 = 1) /\ (x_4 = 1)).
}
Prove: x_2 <= x_5.
Prover Z3 4.8.12 returns Valid (Qed:2ms) (20ms) (31200)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (4ms) (34)

------------------------------------------------------------

Goal Preservation of Invariant (file out/13_0002/13_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (18ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/13_0002/13_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/13_0002/13_merged.c, line 22):
Let x_1 = a % 2.
Let x_2 = b % 2.
Let x_3 = a * p.
Let x_4 = b * p.
Let x_5 = x - a.
Let x_6 = b_1 - b.
Let x_7 = b_1 * x.
Let x_8 = a_6 % 2.
Let x_9 = b_8 % 2.
Let x_10 = (a_6 + b_8) % 2.
Let x_11 = a_6 * p_2.
Let x_12 = b_8 * p_2.
Let x_13 = x_7 - x_11 - x_12.
Let x_14 = x - a_6.
Let x_15 = b_1 - b_8.
Let x_16 = b_1 % 2.
Let x_17 = x_7 % 2.
Let x_18 = x_7 - b_1.
Let x_19 = x_18 % 2.
Let x_20 = b_1 + x.
Let x_21 = x_7 - x_3 - x_4.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(a_4) /\ is_sint32(a_5) /\ is_sint32(a_6) /\ is_sint32(b) /\
      is_sint32(b_2) /\ is_sint32(b_3) /\ is_sint32(b_4) /\ is_sint32(b_5) /\
      is_sint32(b_6) /\ is_sint32(b_7) /\ is_sint32(b_8) /\ is_sint32(b_1) /\
      is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(x) /\ is_sint32(x_18) /\
      is_sint32(x_21) /\ is_sint32(x_13).
  (* Pre-condition *)
  Have: (0 < b_1) /\ (0 < x).
  (* Initializer *)
  Init: x_7 = x_20.
  (* Invariant *)
  Have: (b_1 * (b_1 + x - x_7)) = 0.
  (* Invariant *)
  Have: (b_1 * x_18) = x_7.
  (* Invariant *)
  Have: b_1 <= x_7.
  (* Invariant *)
  Have: (x_16 = 0) \/ (x_7 = b_1) \/ (x_19 = 0) \/
      ((x_16 = 1) /\ (x_19 = 1)).
  (* Invariant *)
  Have: x_7 <= x_20.
  (* Invariant *)
  Have: (x_16 = 0) \/ (x_17 = 0) \/ (x_19 = 0).
  (* Invariant *)
  Have: (x_16 = 0) \/ (x_17 = 1) \/ (x_19 = 0).
  (* Invariant *)
  Have: (x_11 + x_12 + (b_1 * x_14) + (x * x_15)) = (x_7 + (x_15 * x_14)).
  (* Invariant *)
  Have: (a_6 * b_8 * p_2) = (x_11 + x_12).
  (* Invariant *)
  Have: b_8 <= b_1.
  (* Invariant *)
  Have: (0 <= a_6) /\ (0 <= b_8).
  (* Invariant *)
  Have: (x_8 = 0) \/ (x_9 = 0) \/ ((x_8 = 1) /\ (x_9 = 1)).
  (* Invariant *)
  Have: a_6 <= x.
  (* Invariant *)
  Have: (x_8 = 0) \/ (x_9 = 0) \/ ((x_13 % p_2) = x_10).
  (* Invariant *)
  Have: (x_8 = 0) \/ (x_9 = 0) \/ (x_10 = 1).
  (* Invariant *)
  Have: 0 < p_2.
  (* Then *)
  Have: a_6 != 0.
  (* Then *)
  Have: b_8 != 0.
  If x_8 = 0
  Then {
    Have: (a_6 = a_7) /\ (b_8 = b_7) /\ (p_2 = p_3).
    If (b_7 % 2) = 0
    Then {
      Let x_22 = b_2 / 2.
      Let x_23 = a_1 / 2.
      Have: (a_7 = a_1) /\ (b_7 = b_2) /\ (p_3 = p_1) /\
          (((4 * (p_1 * x_23)) + (4 * (p_1 * x_22)))
             = ((a_1 * p_1) + (b_2 * p_1))).
      Have: x_23 = a.
      Have: x_22 = b.
      Have: (4 * p_1) = p.
    }
    Else {
      Have: (a_7 = a_5) /\ (b_7 = b_9) /\ (p_3 = p).
      If (a_5 % 2) = 1
      Then {
        Have: (a_5 = a_8) /\ (b_9 = b_6).
        If (b_6 % 2) = 0
        Then {
          Let x_24 = p * (a_2 - 1).
          Have: (a_8 = a_2) /\ (b_6 = b) /\ ((a_2 * p) = (x_4 + x_24)) /\
              (x_7 = (q + (2 * x_4) + x_24)).
          Have: (1 + a) = a_2.
        }
        Else {
          Have: (a_8 = a_4) /\ (b_6 = b_10).
          If (a_4 % 2) = 0
          Then {
            Have: (a_4 = a_9) /\ (b_10 = b_5).
            If (b_5 % 2) = 1
            Then {
              Let x_25 = p * (b_3 - 1).
              Have: (a_9 = a) /\ (b_5 = b_3) /\ ((b_3 * p) = (x_3 + x_25)) /\
                  (x_7 = (q_1 + (2 * x_3) + x_25)).
              Have: (1 + b) = b_3.
            }
            Else {
              Let x_26 = p * (a_3 - 1).
              Let x_27 = p * (b_4 - 1).
              Let x_28 = p * (a_3 + b_4 - 1).
              Have: (a_9 = a_3) /\ (b_5 = b_4) /\
                  ((x_26 + x_27 + x_28) = ((a_3 * p) + (b_4 * p))) /\
                  (x_7 = (q_2 + x_26 + x_27 + x_28)).
              Have: (1 + a) = a_3.
              Have: (1 + b) = b_4.
            }
          }
          Else {
            Have: (a_4 = a_3) /\ (b_10 = b_4) /\
                ((x_26 + x_27 + x_28) = ((a_3 * p) + (b_4 * p))) /\
                (x_7 = (q_2 + x_26 + x_27 + x_28)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_4.
          }
        }
      }
      Else {
        Have: (a_5 = a_4) /\ (b_9 = b_10).
        If (a_4 % 2) = 0
        Then {
          Have: (a_4 = a_9) /\ (b_10 = b_5).
          If (b_5 % 2) = 1
          Then {
            Have: (a_9 = a) /\ (b_5 = b_3) /\ ((b_3 * p) = (x_3 + x_25)) /\
                (x_7 = (q_1 + (2 * x_3) + x_25)).
            Have: (1 + b) = b_3.
          }
          Else {
            Have: (a_9 = a_3) /\ (b_5 = b_4) /\
                ((x_26 + x_27 + x_28) = ((a_3 * p) + (b_4 * p))) /\
                (x_7 = (q_2 + x_26 + x_27 + x_28)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_4.
          }
        }
        Else {
          Have: (a_4 = a_3) /\ (b_10 = b_4) /\
              ((x_26 + x_27 + x_28) = ((a_3 * p) + (b_4 * p))) /\
              (x_7 = (q_2 + x_26 + x_27 + x_28)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_4.
        }
      }
    }
  }
  Else {
    Have: (a_6 = a_5) /\ (b_8 = b_9) /\ (p_2 = p).
    If (a_5 % 2) = 1
    Then {
      Have: (a_5 = a_8) /\ (b_9 = b_6).
      If (b_6 % 2) = 0
      Then {
        Have: (a_8 = a_2) /\ (b_6 = b) /\ ((a_2 * p) = (x_4 + x_24)) /\
            (x_7 = (q + (2 * x_4) + x_24)).
        Have: (1 + a) = a_2.
      }
      Else {
        Have: (a_8 = a_4) /\ (b_6 = b_10).
        If (a_4 % 2) = 0
        Then {
          Have: (a_4 = a_9) /\ (b_10 = b_5).
          If (b_5 % 2) = 1
          Then {
            Have: (a_9 = a) /\ (b_5 = b_3) /\ ((b_3 * p) = (x_3 + x_25)) /\
                (x_7 = (q_1 + (2 * x_3) + x_25)).
            Have: (1 + b) = b_3.
          }
          Else {
            Have: (a_9 = a_3) /\ (b_5 = b_4) /\
                ((x_26 + x_27 + x_28) = ((a_3 * p) + (b_4 * p))) /\
                (x_7 = (q_2 + x_26 + x_27 + x_28)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_4.
          }
        }
        Else {
          Have: (a_4 = a_3) /\ (b_10 = b_4) /\
              ((x_26 + x_27 + x_28) = ((a_3 * p) + (b_4 * p))) /\
              (x_7 = (q_2 + x_26 + x_27 + x_28)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_4.
        }
      }
    }
    Else {
      Have: (a_5 = a_4) /\ (b_9 = b_10).
      If (a_4 % 2) = 0
      Then {
        Have: (a_4 = a_9) /\ (b_10 = b_5).
        If (b_5 % 2) = 1
        Then {
          Have: (a_9 = a) /\ (b_5 = b_3) /\ ((b_3 * p) = (x_3 + x_25)) /\
              (x_7 = (q_1 + (2 * x_3) + x_25)).
          Have: (1 + b) = b_3.
        }
        Else {
          Have: (a_9 = a_3) /\ (b_5 = b_4) /\
              ((x_26 + x_27 + x_28) = ((a_3 * p) + (b_4 * p))) /\
              (x_7 = (q_2 + x_26 + x_27 + x_28)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_4.
        }
      }
      Else {
        Have: (a_4 = a_3) /\ (b_10 = b_4) /\
            ((x_26 + x_27 + x_28) = ((a_3 * p) + (b_4 * p))) /\
            (x_7 = (q_2 + x_26 + x_27 + x_28)).
        Have: (1 + a) = a_3.
        Have: (1 + b) = b_4.
      }
    }
  }
  (* Invariant *)
  Have: (x_3 + x_4 + (b_1 * x_5) + (x * x_6)) = (x_7 + (x_6 * x_5)).
  (* Invariant *)
  Have: (a * b * p) = (x_3 + x_4).
  (* Invariant *)
  Have: b <= b_1.
  (* Invariant *)
  Have: (0 <= a) /\ (0 <= b).
  (* Invariant *)
  Have: (a = 0) \/ (b = 0) \/ (x_1 = 0) \/ (x_2 = 0) \/
      ((x_1 = 1) /\ (x_2 = 1)).
  (* Invariant *)
  Have: a <= x.
}
Prove: (x_1 = 0) \/ (x_2 = 0) \/ ((x_21 % p) = ((a + b) % 2)).
Prover Z3 4.8.12 returns Valid (Qed:493ms) (5.9s) (6942985)

------------------------------------------------------------

Goal Establishment of Invariant (file out/13_0002/13_merged.c, line 22):
Let x_1 = b * x.
Let x_2 = b + x.
Let x_3 = b % 2.
Let x_4 = x_1 - b.
Let x_5 = x_4 % 2.
Assume {
  Type: is_sint32(b) /\ is_sint32(x) /\ is_sint32(x_4).
  (* Pre-condition *)
  Have: (0 < b) /\ (0 < x).
  (* Initializer *)
  Init: x_1 = x_2.
  (* Invariant *)
  Have: (b * (b + x - x_1)) = 0.
  (* Invariant *)
  Have: (b * x_4) = x_1.
  (* Invariant *)
  Have: b <= x_1.
  (* Invariant *)
  Have: (x_3 = 0) \/ (x_1 = b) \/ (x_5 = 0) \/ ((x_3 = 1) /\ (x_5 = 1)).
  (* Invariant *)
  Have: x_1 <= x_2.
}
Prove: (x_3 = 0) \/ ((x_1 % 2) = 0) \/ (x_5 = 0).
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (35700)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (20ms) (402)

------------------------------------------------------------

Goal Preservation of Invariant (file out/13_0002/13_merged.c, line 23):
Let x_1 = a % 2.
Let x_2 = b % 2.
Let x_3 = a * p.
Let x_4 = b * p.
Let x_5 = b_8 * x.
Let x_6 = x_5 - x_3 - x_4.
Let x_7 = (a + b) % 2.
Let x_8 = x - a.
Let x_9 = b_8 - b.
Let x_10 = a_6 % 2.
Let x_11 = b_7 % 2.
Let x_12 = (a_6 + b_7) % 2.
Let x_13 = a_6 * p_2.
Let x_14 = b_7 * p_2.
Let x_15 = x_5 - x_13 - x_14.
Let x_16 = x - a_6.
Let x_17 = b_8 - b_7.
Let x_18 = b_8 % 2.
Let x_19 = x_5 % 2.
Let x_20 = x_5 - b_8.
Let x_21 = x_20 % 2.
Let x_22 = b_8 + x.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(a_3) /\
      is_sint32(a_4) /\ is_sint32(a_5) /\ is_sint32(a_6) /\ is_sint32(b) /\
      is_sint32(b_1) /\ is_sint32(b_2) /\ is_sint32(b_3) /\ is_sint32(b_4) /\
      is_sint32(b_5) /\ is_sint32(b_6) /\ is_sint32(b_7) /\ is_sint32(b_8) /\
      is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(x) /\ is_sint32(x_20) /\
      is_sint32(x_6) /\ is_sint32(x_15).
  (* Pre-condition *)
  Have: (0 < b_8) /\ (0 < x).
  (* Initializer *)
  Init: x_5 = x_22.
  (* Invariant *)
  Have: (b_8 * (b_8 + x - x_5)) = 0.
  (* Invariant *)
  Have: (b_8 * x_20) = x_5.
  (* Invariant *)
  Have: b_8 <= x_5.
  (* Invariant *)
  Have: (x_18 = 0) \/ (x_5 = b_8) \/ (x_21 = 0) \/
      ((x_18 = 1) /\ (x_21 = 1)).
  (* Invariant *)
  Have: x_5 <= x_22.
  (* Invariant *)
  Have: (x_18 = 0) \/ (x_19 = 0) \/ (x_21 = 0).
  (* Invariant *)
  Have: (x_18 = 0) \/ (x_19 = 1) \/ (x_21 = 0).
  (* Invariant *)
  Have: (x_13 + x_14 + (b_8 * x_16) + (x * x_17)) = (x_5 + (x_17 * x_16)).
  (* Invariant *)
  Have: (a_6 * b_7 * p_2) = (x_13 + x_14).
  (* Invariant *)
  Have: b_7 <= b_8.
  (* Invariant *)
  Have: (0 <= a_6) /\ (0 <= b_7).
  (* Invariant *)
  Have: (x_10 = 0) \/ (x_11 = 0) \/ ((x_10 = 1) /\ (x_11 = 1)).
  (* Invariant *)
  Have: a_6 <= x.
  (* Invariant *)
  Have: (x_10 = 0) \/ (x_11 = 0) \/ ((x_15 % p_2) = x_12).
  (* Invariant *)
  Have: (x_10 = 0) \/ (x_11 = 0) \/ (x_12 = 1).
  (* Invariant *)
  Have: 0 < p_2.
  (* Then *)
  Have: a_6 != 0.
  (* Then *)
  Have: b_7 != 0.
  If x_10 = 0
  Then {
    Have: (a_6 = a_7) /\ (b_7 = b_6) /\ (p_2 = p_3).
    If (b_6 % 2) = 0
    Then {
      Let x_23 = b_1 / 2.
      Let x_24 = a_1 / 2.
      Have: (a_7 = a_1) /\ (b_6 = b_1) /\ (p_3 = p_1) /\
          (((4 * (p_1 * x_24)) + (4 * (p_1 * x_23)))
             = ((a_1 * p_1) + (b_1 * p_1))).
      Have: x_24 = a.
      Have: x_23 = b.
      Have: (4 * p_1) = p.
    }
    Else {
      Have: (a_7 = a_5) /\ (b_6 = b_9) /\ (p_3 = p).
      If (a_5 % 2) = 1
      Then {
        Have: (a_5 = a_8) /\ (b_9 = b_5).
        If (b_5 % 2) = 0
        Then {
          Let x_25 = p * (a_2 - 1).
          Have: (a_8 = a_2) /\ (b_5 = b) /\ ((a_2 * p) = (x_4 + x_25)) /\
              (x_5 = (q + (2 * x_4) + x_25)).
          Have: (1 + a) = a_2.
        }
        Else {
          Have: (a_8 = a_4) /\ (b_5 = b_10).
          If (a_4 % 2) = 0
          Then {
            Have: (a_4 = a_9) /\ (b_10 = b_4).
            If (b_4 % 2) = 1
            Then {
              Let x_26 = p * (b_2 - 1).
              Have: (a_9 = a) /\ (b_4 = b_2) /\ ((b_2 * p) = (x_3 + x_26)) /\
                  (x_5 = (q_1 + (2 * x_3) + x_26)).
              Have: (1 + b) = b_2.
            }
            Else {
              Let x_27 = p * (a_3 - 1).
              Let x_28 = p * (b_3 - 1).
              Let x_29 = p * (a_3 + b_3 - 1).
              Have: (a_9 = a_3) /\ (b_4 = b_3) /\
                  ((x_27 + x_28 + x_29) = ((a_3 * p) + (b_3 * p))) /\
                  (x_5 = (q_2 + x_27 + x_28 + x_29)).
              Have: (1 + a) = a_3.
              Have: (1 + b) = b_3.
            }
          }
          Else {
            Have: (a_4 = a_3) /\ (b_10 = b_3) /\
                ((x_27 + x_28 + x_29) = ((a_3 * p) + (b_3 * p))) /\
                (x_5 = (q_2 + x_27 + x_28 + x_29)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_3.
          }
        }
      }
      Else {
        Have: (a_5 = a_4) /\ (b_9 = b_10).
        If (a_4 % 2) = 0
        Then {
          Have: (a_4 = a_9) /\ (b_10 = b_4).
          If (b_4 % 2) = 1
          Then {
            Have: (a_9 = a) /\ (b_4 = b_2) /\ ((b_2 * p) = (x_3 + x_26)) /\
                (x_5 = (q_1 + (2 * x_3) + x_26)).
            Have: (1 + b) = b_2.
          }
          Else {
            Have: (a_9 = a_3) /\ (b_4 = b_3) /\
                ((x_27 + x_28 + x_29) = ((a_3 * p) + (b_3 * p))) /\
                (x_5 = (q_2 + x_27 + x_28 + x_29)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_3.
          }
        }
        Else {
          Have: (a_4 = a_3) /\ (b_10 = b_3) /\
              ((x_27 + x_28 + x_29) = ((a_3 * p) + (b_3 * p))) /\
              (x_5 = (q_2 + x_27 + x_28 + x_29)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_3.
        }
      }
    }
  }
  Else {
    Have: (a_6 = a_5) /\ (b_7 = b_9) /\ (p_2 = p).
    If (a_5 % 2) = 1
    Then {
      Have: (a_5 = a_8) /\ (b_9 = b_5).
      If (b_5 % 2) = 0
      Then {
        Have: (a_8 = a_2) /\ (b_5 = b) /\ ((a_2 * p) = (x_4 + x_25)) /\
            (x_5 = (q + (2 * x_4) + x_25)).
        Have: (1 + a) = a_2.
      }
      Else {
        Have: (a_8 = a_4) /\ (b_5 = b_10).
        If (a_4 % 2) = 0
        Then {
          Have: (a_4 = a_9) /\ (b_10 = b_4).
          If (b_4 % 2) = 1
          Then {
            Have: (a_9 = a) /\ (b_4 = b_2) /\ ((b_2 * p) = (x_3 + x_26)) /\
                (x_5 = (q_1 + (2 * x_3) + x_26)).
            Have: (1 + b) = b_2.
          }
          Else {
            Have: (a_9 = a_3) /\ (b_4 = b_3) /\
                ((x_27 + x_28 + x_29) = ((a_3 * p) + (b_3 * p))) /\
                (x_5 = (q_2 + x_27 + x_28 + x_29)).
            Have: (1 + a) = a_3.
            Have: (1 + b) = b_3.
          }
        }
        Else {
          Have: (a_4 = a_3) /\ (b_10 = b_3) /\
              ((x_27 + x_28 + x_29) = ((a_3 * p) + (b_3 * p))) /\
              (x_5 = (q_2 + x_27 + x_28 + x_29)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_3.
        }
      }
    }
    Else {
      Have: (a_5 = a_4) /\ (b_9 = b_10).
      If (a_4 % 2) = 0
      Then {
        Have: (a_4 = a_9) /\ (b_10 = b_4).
        If (b_4 % 2) = 1
        Then {
          Have: (a_9 = a) /\ (b_4 = b_2) /\ ((b_2 * p) = (x_3 + x_26)) /\
              (x_5 = (q_1 + (2 * x_3) + x_26)).
          Have: (1 + b) = b_2.
        }
        Else {
          Have: (a_9 = a_3) /\ (b_4 = b_3) /\
              ((x_27 + x_28 + x_29) = ((a_3 * p) + (b_3 * p))) /\
              (x_5 = (q_2 + x_27 + x_28 + x_29)).
          Have: (1 + a) = a_3.
          Have: (1 + b) = b_3.
        }
      }
      Else {
        Have: (a_4 = a_3) /\ (b_10 = b_3) /\
            ((x_27 + x_28 + x_29) = ((a_3 * p) + (b_3 * p))) /\
            (x_5 = (q_2 + x_27 + x_28 + x_29)).
        Have: (1 + a) = a_3.
        Have: (1 + b) = b_3.
      }
    }
  }
  (* Invariant *)
  Have: (x_3 + x_4 + (b_8 * x_8) + (x * x_9)) = (x_5 + (x_9 * x_8)).
  (* Invariant *)
  Have: (a * b * p) = (x_3 + x_4).
  (* Invariant *)
  Have: b <= b_8.
  (* Invariant *)
  Have: (0 <= a) /\ (0 <= b).
  (* Invariant *)
  Have: (a = 0) \/ (b = 0) \/ (x_1 = 0) \/ (x_2 = 0) \/
      ((x_1 = 1) /\ (x_2 = 1)).
  (* Invariant *)
  Have: a <= x.
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_2 = 0) \/ ((x_6 % p) = x_7).
}
Prove: (x_1 = 0) \/ (x_2 = 0) \/ (x_7 = 1).
Prover Z3 4.8.12 returns Timeout (Qed:575ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:575ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/13_0002/13_merged.c, line 23):
Let x_1 = b % 2.
Let x_2 = b * x.
Let x_3 = x_2 % 2.
Let x_4 = x_2 - b.
Let x_5 = x_4 % 2.
Let x_6 = b + x.
Assume {
  Type: is_sint32(b) /\ is_sint32(x) /\ is_sint32(x_4).
  (* Pre-condition *)
  Have: (0 < b) /\ (0 < x).
  (* Initializer *)
  Init: x_2 = x_6.
  (* Invariant *)
  Have: (b * (b + x - x_2)) = 0.
  (* Invariant *)
  Have: (b * x_4) = x_2.
  (* Invariant *)
  Have: b <= x_2.
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_2 = b) \/ (x_5 = 0) \/ ((x_1 = 1) /\ (x_5 = 1)).
  (* Invariant *)
  Have: x_2 <= x_6.
  (* Invariant *)
  Have: (x_1 = 0) \/ (x_3 = 0) \/ (x_5 = 0).
}
Prove: (x_1 = 0) \/ (x_3 = 1) \/ (x_5 = 0).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (16ms) (462)

------------------------------------------------------------

Goal Preservation of Invariant (file out/13_0002/13_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (484ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/13_0002/13_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/13_0002/13_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (19ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/13_0002/13_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/13_0002/13_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/13_0002/13_merged.c:4: Warning: 
  No 'assigns' specification for function 'main13'.
  Callers assumptions might be imprecise.

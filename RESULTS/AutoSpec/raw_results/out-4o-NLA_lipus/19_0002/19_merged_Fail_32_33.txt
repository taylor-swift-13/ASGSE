[kernel] Parsing out/19_0002/19_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 33 goals scheduled
[wp] [Timeout] typed_main19_loop_invariant_8_preserved (Qed 8ms) (Z3)
[wp] Proved goals:   32 / 33
  Qed:              26
  Alt-Ergo 2.5.4:    5 (2ms-378ms-1.8s)
  Z3 4.8.12:         1 (1.6s)
  Timeout:           1
------------------------------------------------------------
  Function main19
------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0002/19_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0002/19_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.52ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0002/19_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0002/19_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0002/19_merged.c, line 14):
Let x = c * c * c * c * c.
Let x_1 = 1 + c.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x_1) /\ is_sint32(x) /\
      is_sint32(x + (x_1 * x_1 * x_1 * x_1 * x_1)).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < c) -> ((1 + i) = c))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < c) -> (i = c))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < c) -> ((i * i * i * i * i) = x))).
  (* Invariant *)
  Have: forall i : Z. ((i <= c) -> ((0 <= i) -> ((i * i * i * i * i) = x))).
  (* Invariant *)
  Have: 0 <= c.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: c < k.
}
Prove: x = 0.
Prover Z3 4.8.12 returns Valid (Qed:6ms) (1.6s) (272339)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0002/19_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0002/19_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0002/19_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.61ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0002/19_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0002/19_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0002/19_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0002/19_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0002/19_merged.c, line 18):
Let x = 1 + c.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\
      is_sint32(x * x * x * x * x).
  (* Goal *)
  When: (i <= c) /\ (0 <= i).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: (c * c * c * c * c) = 0.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < c) -> ((1 + i_1) = c))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < c) -> (i_1 = c))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < c) ->
      ((i_1 * i_1 * i_1 * i_1 * i_1) = 0))).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= c) -> ((0 <= i_1) ->
      ((i_1 * i_1 * i_1 * i_1 * i_1) = 0))).
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
}
Prove: i = c.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (35265)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (2ms) (28)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0002/19_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0002/19_merged.c, line 19):
Let x = 1 + y.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x) /\
      is_sint32(x * x * x * x * x).
  (* Goal *)
  When: (0 <= i) /\ (i <= y).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: (y * y * y * y * y) = 0.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y) -> ((1 + i_1) = y))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y) -> (i_1 = y))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < y) ->
      ((i_1 * i_1 * i_1 * i_1 * i_1) = 0))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= y) ->
      ((i_1 * i_1 * i_1 * i_1 * i_1) = 0))).
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y < k.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= y) -> (i_1 = y))).
}
Prove: x = i.
Prover Z3 4.8.12 returns Timeout (Qed:8ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:8ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0002/19_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0002/19_merged.c, line 20):
Let x = 1 + c.
Let x_1 = x * x * x * x * x.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Goal *)
  When: (i <= c) /\ (0 <= i).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: (c * c * c * c * c) = 0.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < c) -> ((1 + i_1) = c))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < c) -> (i_1 = c))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < c) ->
      ((i_1 * i_1 * i_1 * i_1 * i_1) = 0))).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= c) -> ((0 <= i_1) ->
      ((i_1 * i_1 * i_1 * i_1 * i_1) = 0))).
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= c) -> ((0 <= i_1) -> (i_1 = c))).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= c) -> ((0 <= i_1) -> (x = i_1))).
}
Prove: x_1 = (i * i * i * i * i).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (1.8s) (147233)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0002/19_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0002/19_merged.c, line 21):
Let x = 1 + c.
Let x_1 = x * x * x * x * x.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Goal *)
  When: (0 <= i) /\ (i <= x).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: (c * c * c * c * c) = 0.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < c) -> ((1 + i_1) = c))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < c) -> (i_1 = c))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < c) ->
      ((i_1 * i_1 * i_1 * i_1 * i_1) = 0))).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= c) -> ((0 <= i_1) ->
      ((i_1 * i_1 * i_1 * i_1 * i_1) = 0))).
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= c) -> ((0 <= i_1) -> (i_1 = c))).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= c) -> ((0 <= i_1) -> (x = i_1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= c) -> ((0 <= i_1) ->
      (x_1 = (i_1 * i_1 * i_1 * i_1 * i_1)))).
}
Prove: x_1 = (i * i * i * i * i).
Prover Z3 4.8.12 returns Valid (Qed:9ms) (10ms) (59686)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (23ms) (695)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0002/19_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.87ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0002/19_merged.c, line 22):
Let x = 1 + c.
Let x_1 = x * x * x * x * x.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Goal *)
  When: (i <= c) /\ (0 <= i).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: (c * c * c * c * c) = 0.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < c) -> ((1 + i_1) = c))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < c) -> (i_1 = c))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < c) ->
      ((i_1 * i_1 * i_1 * i_1 * i_1) = 0))).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= c) -> ((0 <= i_1) ->
      ((i_1 * i_1 * i_1 * i_1 * i_1) = 0))).
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= c) -> ((0 <= i_1) -> (i_1 = c))).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= c) -> ((0 <= i_1) -> (x = i_1))).
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= c) -> ((0 <= i_1) ->
      (x_1 = (i_1 * i_1 * i_1 * i_1 * i_1)))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 <= x) ->
      (x_1 = (i_1 * i_1 * i_1 * i_1 * i_1)))).
}
Prove: x_1 = (i * i * i * i * i).
Prover Z3 4.8.12 returns Valid (Qed:11ms) (20ms) (48769)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:11ms) (19ms) (717)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0002/19_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0002/19_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0002/19_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0002/19_merged.c, line 24):
Let x = 1 + c.
Let x_1 = x * x * x * x * x.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: (c * c * c * c * c) = 0.
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < c) -> ((1 + i) = c))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < c) -> (i = c))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < c) -> ((i * i * i * i * i) = 0))).
  (* Invariant *)
  Have: forall i : Z. ((i <= c) -> ((0 <= i) -> ((i * i * i * i * i) = 0))).
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: forall i : Z. ((i <= c) -> ((0 <= i) -> (i = c))).
  (* Invariant *)
  Have: forall i : Z. ((i <= c) -> ((0 <= i) -> (x = i))).
  (* Invariant *)
  Have: forall i : Z. ((i <= c) -> ((0 <= i) ->
      (x_1 = (i * i * i * i * i)))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i <= x) ->
      (x_1 = (i * i * i * i * i)))).
  (* Invariant *)
  Have: (-1) <= c.
}
Prove: 0 <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:8ms) (20ms) (38960)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (9ms) (216)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0002/19_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0002/19_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0002/19_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0002/19_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0002/19_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.76ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/19_0002/19_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/19_0002/19_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Loop assigns (file out/19_0002/19_merged.c, line 28):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/19_0002/19_merged.c:4: Warning: 
  No 'assigns' specification for function 'main19'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/20_0003/20_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 20 goals scheduled
[wp] [Timeout] typed_main20_loop_invariant_6_preserved (Qed 4ms) (Z3)
[wp] Proved goals:   19 / 20
  Qed:              16
  Alt-Ergo 2.5.4:    3
  Timeout:           1
------------------------------------------------------------
  Function main20
------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0003/20_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0003/20_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0003/20_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0003/20_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0003/20_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0003/20_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0003/20_merged.c, line 17):
Let x = 1 + a.
Let x_1 = a * x.
Let x_2 = 2 * a.
Let x_3 = 1 + x_1.
Let x_4 = 2 + a.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(1 + x_2) /\
      is_sint32(3 + x_2) /\ is_sint32(x_3) /\ is_sint32(4 + x_2 + x_1).
  (* Goal *)
  When: n <= (3 + x_2 + x_1).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (x * x) = x_3.
  (* Invariant *)
  Have: x_1 <= (n + x_2).
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: x_1 < n.
}
Prove: n < (x_4 * x_4).
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (31808)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (28)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0003/20_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0003/20_merged.c, line 18):
Let x = 2 * a.
Let x_1 = 1 + a.
Let x_2 = a * x_1.
Let x_3 = 2 + a.
Let x_4 = x_3 * x_3.
Let x_5 = 1 + x_2.
Let x_6 = 4 + x + x_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x_1) /\ is_sint32(1 + x) /\
      is_sint32(3 + x) /\ is_sint32(x_5) /\ is_sint32(x_6).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: (x_1 * x_1) = x_5.
  (* Invariant *)
  Have: x_2 <= (n + x).
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: x_2 < n.
  (* Invariant *)
  Have: ((n <= (3 + x + x_2)) -> (n < x_4)).
}
Prove: x_4 = x_6.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (9829)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (5ms) (34)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0003/20_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.90ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0003/20_merged.c, line 19):
Let x = 2 + a.
Let x_1 = x * x.
Let x_2 = 2 * a.
Let x_3 = 1 + a.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x_3) /\
      is_sint32(1 + x_2) /\ is_sint32(3 + x_2) /\ is_sint32(x_1) /\
      is_sint32(x_1 - 3 - x_2).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: x_1 = (3 + x_2 + (x_3 * x_3)).
  (* Invariant *)
  Have: x_1 = (4 + x_2 + (a * x_3)).
  (* Invariant *)
  Have: x_1 <= (4 + n + (4 * a)).
  (* Invariant *)
  Have: (4 + x_2) <= x_1.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: x_1 <= (3 + n + x_2).
}
Prove: x_1 = (1 + (x_3 * x)).
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0003/20_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0003/20_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0003/20_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.75ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0003/20_merged.c, line 21):
Let x = 2 + a.
Let x_1 = x * x.
Let x_2 = 1 + a.
Let x_3 = x_2 * x.
Let x_4 = 1 + x_3.
Let x_5 = 2 * a.
Let x_6 = 3 + x_5.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x_2) /\
      is_sint32(1 + x_5) /\ is_sint32(x_6) /\ is_sint32(x_4) /\
      is_sint32(x_3 - 2 - x_5).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: x_3 = (2 + x_5 + (x_2 * x_2)).
  (* Invariant *)
  Have: x_3 = (3 + x_5 + (a * x_2)).
  (* Invariant *)
  Have: x_3 <= (3 + n + (4 * a)).
  (* Invariant *)
  Have: x_6 <= x_3.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: x_3 <= (2 + n + x_5).
  (* Invariant *)
  Have: ((n <= x_3) -> (n < x_1)).
  (* Invariant *)
  Have: x_1 = x_4.
}
Prove: 0 <= x_3.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (10033)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (34)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0003/20_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0003/20_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0003/20_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Assertion (file out/20_0003/20_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/20_0003/20_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/20_0003/20_merged.c:4: Warning: 
  No 'assigns' specification for function 'main20'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/20_0003/20_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 26 goals scheduled
[wp] [Timeout] typed_main20_loop_invariant_6_preserved (Qed 4ms) (Z3)
[wp] [Timeout] typed_main20_loop_invariant_9_established (Qed 0.80ms) (Z3)
[wp] [Timeout] typed_main20_loop_invariant_10_established (Qed 0.84ms) (Z3)
[wp] Proved goals:   23 / 26
  Qed:              18
  Alt-Ergo 2.5.4:    5 (5ms-8ms)
  Timeout:           3
------------------------------------------------------------
  Function main20
------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0003/20_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0003/20_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0003/20_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0003/20_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0003/20_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0003/20_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0003/20_merged.c, line 17):
Let x = 1 + a.
Let x_1 = a * x.
Let x_2 = 1 + x_1.
Let x_3 = 2 * a.
Let x_4 = n + x_3.
Let x_5 = 2 + a.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(1 + x_3) /\
      is_sint32(3 + x_3) /\ is_sint32(x_2) /\ is_sint32(4 + x_3 + x_1).
  (* Goal *)
  When: n <= (3 + x_3 + x_1).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: n != 1.
  (* Invariant *)
  Have: (x * x) = x_2.
  (* Invariant *)
  Have: x_1 = (a + (a * a)).
  (* Invariant *)
  Have: x_1 <= x_4.
  (* Invariant *)
  Have: x_1 < x_4.
  (* Invariant *)
  Have: x_2 != n.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: x_1 < n.
}
Prove: n < (x_5 * x_5).
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (32294)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (8ms) (35)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0003/20_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0003/20_merged.c, line 18):
Let x = 2 * a.
Let x_1 = 1 + a.
Let x_2 = a * x_1.
Let x_3 = 2 + a.
Let x_4 = x_3 * x_3.
Let x_5 = 1 + x_2.
Let x_6 = n + x.
Let x_7 = 4 + x + x_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x_1) /\ is_sint32(1 + x) /\
      is_sint32(3 + x) /\ is_sint32(x_5) /\ is_sint32(x_7).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: n != 1.
  (* Invariant *)
  Have: (x_1 * x_1) = x_5.
  (* Invariant *)
  Have: x_2 = (a + (a * a)).
  (* Invariant *)
  Have: x_2 <= x_6.
  (* Invariant *)
  Have: x_2 < x_6.
  (* Invariant *)
  Have: x_5 != n.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: x_2 < n.
  (* Invariant *)
  Have: ((n <= (3 + x + x_2)) -> (n < x_4)).
}
Prove: x_4 = x_7.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (10003)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (41)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0003/20_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0003/20_merged.c, line 19):
Let x = 2 + a.
Let x_1 = x * x.
Let x_2 = 2 * a.
Let x_3 = 3 + n + x_2.
Let x_4 = 4 * a.
Let x_5 = 1 + a.
Let x_6 = x_5 * x_5.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x_5) /\
      is_sint32(1 + x_2) /\ is_sint32(3 + x_2) /\ is_sint32(x_1) /\
      is_sint32(x_1 - 3 - x_2).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: n != 1.
  (* Invariant *)
  Have: x_1 = (3 + x_2 + x_6).
  (* Invariant *)
  Have: x_1 = (4 + (3 * a) + (a * a)).
  (* Invariant *)
  Have: x_1 = (4 + x_2 + (a * x_5)).
  (* Invariant *)
  Have: x_1 <= (4 + n + x_4).
  (* Invariant *)
  Have: x_1 <= (3 + n + x_4).
  (* Invariant *)
  Have: x_1 != x_3.
  (* Invariant *)
  Have: (4 + x_2) <= x_1.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: x_1 <= x_3.
}
Prove: x_1 = (2 + a + x_6).
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0003/20_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0003/20_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0003/20_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0003/20_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0003/20_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.59ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0003/20_merged.c, line 22):
Let x = 1 + a.
Let x_1 = 2 + a.
Let x_2 = x * x_1.
Let x_3 = x * x.
Let x_4 = x_1 * x_1.
Let x_5 = 1 + x_2.
Let x_6 = 2 * a.
Let x_7 = 2 + n + x_6.
Let x_8 = 3 + x_6.
Let x_9 = 4 * a.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(1 + x_6) /\
      is_sint32(x_8) /\ is_sint32(x_5) /\ is_sint32(x_2 - 2 - x_6).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: n != 1.
  (* Invariant *)
  Have: x_2 = (2 + x_6 + x_3).
  (* Invariant *)
  Have: x_2 = (3 + (3 * a) + (a * a)).
  (* Invariant *)
  Have: x_2 = (3 + x_6 + (a * x)).
  (* Invariant *)
  Have: x_2 <= (3 + n + x_9).
  (* Invariant *)
  Have: x_2 <= (2 + n + x_9).
  (* Invariant *)
  Have: x_2 != x_7.
  (* Invariant *)
  Have: x_8 <= x_2.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: x_2 <= x_7.
  (* Invariant *)
  Have: ((n <= x_2) -> (n < x_4)).
  (* Invariant *)
  Have: x_4 = x_5.
  (* Invariant *)
  Have: x_2 = (1 + a + x_3).
}
Prove: x_2 <= (1 + n + x_6).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (10295)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (6ms) (44)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0003/20_merged.c, line 22):
Assume { Type: is_sint32(n). (* Invariant *) Have: 0 <= n. }
Prove: 0 < n.
Prover Z3 4.8.12 returns Timeout (Qed:0.80ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.80ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0003/20_merged.c, line 23):
Let x = 1 + a.
Let x_1 = 2 + a.
Let x_2 = x * x_1.
Let x_3 = 2 * a.
Let x_4 = x * x.
Let x_5 = x_1 * x_1.
Let x_6 = 1 + x_2.
Let x_7 = 2 + n + x_3.
Let x_8 = 3 + x_3.
Let x_9 = 4 * a.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(1 + x_3) /\
      is_sint32(x_8) /\ is_sint32(x_6) /\ is_sint32(x_2 - 2 - x_3).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: n != 1.
  (* Invariant *)
  Have: x_2 = (2 + x_3 + x_4).
  (* Invariant *)
  Have: x_2 = (3 + (3 * a) + (a * a)).
  (* Invariant *)
  Have: x_2 = (3 + x_3 + (a * x)).
  (* Invariant *)
  Have: x_2 <= (3 + n + x_9).
  (* Invariant *)
  Have: x_2 <= (2 + n + x_9).
  (* Invariant *)
  Have: x_2 != x_7.
  (* Invariant *)
  Have: x_8 <= x_2.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: x_2 <= x_7.
  (* Invariant *)
  Have: ((n <= x_2) -> (n < x_5)).
  (* Invariant *)
  Have: x_5 = x_6.
  (* Invariant *)
  Have: x_2 = (1 + a + x_4).
  (* Invariant *)
  Have: x_2 <= (1 + n + x_3).
}
Prove: x_6 != n.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (6ms) (35)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0003/20_merged.c, line 23):
Assume {
  Type: is_sint32(n).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 < n.
}
Prove: n != 1.
Prover Z3 4.8.12 returns Timeout (Qed:0.84ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.84ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0003/20_merged.c, line 24):
Let x = 1 + a.
Let x_1 = 2 + a.
Let x_2 = x * x_1.
Let x_3 = 1 + x_2.
Let x_4 = 2 * a.
Let x_5 = x * x.
Let x_6 = x_1 * x_1.
Let x_7 = 2 + n + x_4.
Let x_8 = 3 + x_4.
Let x_9 = 4 * a.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(1 + x_4) /\
      is_sint32(x_8) /\ is_sint32(x_3) /\ is_sint32(x_2 - 2 - x_4).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 < n.
  (* Invariant *)
  Have: n != 1.
  (* Invariant *)
  Have: x_2 = (2 + x_4 + x_5).
  (* Invariant *)
  Have: x_2 = (3 + (3 * a) + (a * a)).
  (* Invariant *)
  Have: x_2 = (3 + x_4 + (a * x)).
  (* Invariant *)
  Have: x_2 <= (3 + n + x_9).
  (* Invariant *)
  Have: x_2 <= (2 + n + x_9).
  (* Invariant *)
  Have: x_2 != x_7.
  (* Invariant *)
  Have: x_8 <= x_2.
  (* Invariant *)
  Have: 0 <= a.
  (* Then *)
  Have: x_2 <= x_7.
  (* Invariant *)
  Have: ((n <= x_2) -> (n < x_6)).
  (* Invariant *)
  Have: x_6 = x_3.
  (* Invariant *)
  Have: x_2 = (1 + a + x_5).
  (* Invariant *)
  Have: x_2 <= (1 + n + x_4).
  (* Invariant *)
  Have: x_3 != n.
}
Prove: 0 <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (10363)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (6ms) (44)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0003/20_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0003/20_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0003/20_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Assertion (file out/20_0003/20_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/20_0003/20_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/20_0003/20_merged.c:4: Warning: 
  No 'assigns' specification for function 'main20'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/10_0005/10_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 15 goals scheduled
[wp] [Timeout] typed_main10_loop_invariant_2_preserved (Qed 4ms) (Z3)
[wp] Proved goals:   14 / 15
  Qed:              12
  Alt-Ergo 2.5.4:    2 (6ms-48ms)
  Timeout:           1
------------------------------------------------------------
  Function main10
------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0005/10_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0005/10_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.57ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0005/10_merged.c, line 13):
Let x_1 = y * z.
Let x_2 = x * z.
Let x_3 = 1 + x_2.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x_1) /\ is_sint32(x_3).
  (* Goal *)
  When: (0 < i) /\ (i <= c).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 < c) -> ((1 + x_1) = x))).
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < c.
  (* Invariant *)
  Have: (x + x_1) = x_3.
  (* Then *)
  Have: c < k.
}
Prove: (y * z * z) = x_2.
Prover Z3 4.8.12 returns Timeout (Qed:4ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0005/10_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0005/10_merged.c, line 14):
Let x_1 = x * z.
Let x_2 = y * z.
Let x_3 = 1 + x_1.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x_2) /\ is_sint32(x_3).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < c) -> ((1 + x_2) = x))).
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < c.
  (* Invariant *)
  Have: (x + x_2) = x_3.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= c) -> ((y * z * z) = x_1))).
}
Prove: 0 <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (33229)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (6ms) (70)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0005/10_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0005/10_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0005/10_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.66ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0005/10_merged.c, line 16):
Let x_1 = x * z.
Let x_2 = y * z * z.
Let x_3 = y * z.
Let x_4 = 1 + x_1.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x_3) /\ is_sint32(x_4).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < c) -> ((1 + x_3) = x))).
  (* Invariant *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < c.
  (* Invariant *)
  Have: (x + x_3) = x_4.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i <= c) -> (x_2 = x_1))).
  (* Invariant *)
  Have: 0 <= x_1.
}
Prove: (z * x_4) = (x_1 + x_2).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (48ms) (180)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0005/10_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0005/10_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0005/10_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/10_0005/10_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/10_0005/10_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Loop assigns (file out/10_0005/10_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/10_0005/10_merged.c:5: Warning: 
  No 'assigns' specification for function 'main10'.
  Callers assumptions might be imprecise.

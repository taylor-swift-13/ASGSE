[kernel] Parsing out/9_0001/9_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 19 goals scheduled
[wp] [Timeout] typed_main9_loop_invariant_2_preserved (Qed 5ms) (Z3)
[wp] [Timeout] typed_main9_loop_invariant_3_preserved (Qed 5ms) (Z3)
[wp] [Timeout] typed_main9_loop_invariant_3_established (Qed 1ms) (Z3)
[wp] Proved goals:   16 / 19
  Qed:              15
  Alt-Ergo 2.5.4:    1 (8ms)
  Timeout:           3
------------------------------------------------------------
  Function main9
------------------------------------------------------------

Goal Preservation of Invariant (file out/9_0001/9_merged.c, line 13):
Let x = z - 1.
Let x_1 = lxor(z, c - 1) / x.
Let x_2 = z * x_1.
Let x_3 = 1 + x_2.
Let x_4 = 1 + x_2 - x_1.
Let x_5 = z * x_4.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(z) /\ is_sint32(x_1) /\
      is_sint32(x_3) /\ is_sint32(x_4) /\ is_sint32(x_5).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Invariant *)
  Have: (z / x) = 1.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (z + x_1) = (1 + (c * z)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
}
Prove: (z * x_3) = (x_2 + x_5).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (25460)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (8ms) (116)

------------------------------------------------------------

Goal Establishment of Invariant (file out/9_0001/9_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/9_0001/9_merged.c, line 14):
Let x = z - 1.
Let x_1 = lxor(z, c - 1) / x.
Let x_2 = z * x_1.
Let x_3 = 1 + x_2.
Let x_4 = z * x_3.
Let x_5 = 1 + x_2 - x_1.
Let x_6 = 1 + c.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(z) /\ is_sint32(x_6) /\
      is_sint32(x_1) /\ is_sint32(x_3) /\ is_sint32(x_5) /\
      is_sint32(x_4 - x_2).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Invariant *)
  Have: (z / x) = 1.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (z + x_1) = (1 + (c * z)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  Have: x_4 = (x_2 + (z * x_5)).
}
Prove: (z * x_6) = (z + x_2).
Prover Z3 4.8.12 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/9_0001/9_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/9_0001/9_merged.c, line 15):
Let x = 1 + c.
Let x_1 = z * x.
Let x_2 = z - 1.
Let x_3 = lxor(z, c - 1) / x_2.
Let x_4 = z * x_3.
Let x_5 = 1 + x_4 - x_3.
Let x_6 = 1 + x_1 - z.
Let x_7 = z * x_6.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(z) /\ is_sint32(x) /\
      is_sint32(x_3) /\ is_sint32(x_6) /\ is_sint32(x_5) /\
      is_sint32(z + x_7 - x_1).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Invariant *)
  Have: (z / x_2) = 1.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (z + x_3) = (1 + (c * z)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  Have: x_1 = (z + x_4).
  Have: (x_1 + (z * x_5)) = (z + x_7).
}
Prove: (1 + x_1) = (z + (lxor(c, z) / x_2)).
Prover Z3 4.8.12 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/9_0001/9_merged.c, line 15):
Assume {
  Type: is_sint32(k) /\ is_sint32(z).
  (* Pre-condition *)
  Have: (0 < k) /\ (0 <= z) /\ (k <= 10) /\ (z <= 10).
}
Prove: (z / (z - 1)) = 1.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/9_0001/9_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/9_0001/9_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/9_0001/9_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/9_0001/9_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/9_0001/9_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/9_0001/9_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.73ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/9_0001/9_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/9_0001/9_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/9_0001/9_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/9_0001/9_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.94ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/9_0001/9_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/9_0001/9_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.95ms)

------------------------------------------------------------

Goal Loop assigns (file out/9_0001/9_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/9_0001/9_merged.c:5: Warning: 
  No 'assigns' specification for function 'main9'.
  Callers assumptions might be imprecise.

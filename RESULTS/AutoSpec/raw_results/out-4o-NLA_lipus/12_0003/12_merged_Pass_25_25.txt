[kernel] Parsing out/12_0003/12_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 25 goals scheduled
[wp] Proved goals:   25 / 25
  Qed:              17
  Alt-Ergo 2.5.4:    7 (0.70ms-89ms-534ms)
  Z3 4.8.12:         1 (60ms)
------------------------------------------------------------
  Function main12
------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 14):
Let x = A - t.
Let x_1 = x % B.
Let x_2 = x / B.
Assume {
  Type: is_sint32(A) /\ is_sint32(B) /\ is_sint32(q) /\ is_sint32(r) /\
      is_sint32(t) /\ is_sint32(t - 1) /\ is_sint32(x_2) /\ is_sint32(x_1).
  (* Pre-condition *)
  Have: 0 <= A.
  (* Invariant *)
  Have: (0 % B) = 0.
  (* Invariant *)
  Have: 0 < B.
  (* Invariant *)
  Have: (0 / B) = 0.
  (* Invariant *)
  Have: (t + x_1 + (B * x_2)) = A.
  (* Invariant *)
  Have: t <= A.
  (* Invariant *)
  Have: (0 <= x_1) /\ (x_1 < B).
  (* Invariant *)
  Have: 0 <= t.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Then *)
  Have: t != 0.
  If (1 + x_1) = B
  Then { Have: (1 + x_2) = q. Have: r = 0. }
  Else { Have: x_2 = q. Have: (1 + x_1) = r. }
}
Prove: (r + t + (B * q)) = (1 + A).
Prover Z3 4.8.12 returns Valid (Qed:8ms) (30ms) (96448)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (6ms) (68)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 16):
Let x = 1 + A.
Let x_1 = -t.
Let x_2 = A - t.
Let x_3 = x_2 % B.
Let x_4 = x_2 / B.
Let x_5 = B * q.
Assume {
  Type: is_sint32(A) /\ is_sint32(B) /\ is_sint32(q) /\ is_sint32(q_1) /\
      is_sint32(r) /\ is_sint32(t) /\ is_sint32(t - 1) /\ is_sint32(x_4) /\
      is_sint32(x_3) /\ is_sint32(1 + A - t - x_5).
  (* Pre-condition *)
  Have: 0 <= A.
  (* Invariant *)
  Have: (0 % B) = 0.
  (* Invariant *)
  Have: 0 < B.
  (* Invariant *)
  Have: (0 / B) = 0.
  (* Invariant *)
  Have: (t + x_3 + (B * x_4)) = A.
  (* Invariant *)
  Have: t <= A.
  (* Invariant *)
  Have: (0 <= x_3) /\ (x_3 < B).
  (* Invariant *)
  Have: 0 <= t.
  (* Invariant *)
  Have: 0 <= x_4.
  (* Then *)
  Have: t != 0.
  If (1 + x_3) = B
  Then {
    Let x_6 = 1 + q_1.
    Let x_7 = B * x_6.
    Have: ((x_7 - 1) / B) = q_1.
    Have: x_6 = q.
    Have: (t + x_7) = x.
  }
  Else {
    Let x_8 = r + x_5.
    Have: ((x_8 / B) = q) /\ ((x_8 % B) = r).
    Have: (r + t + x_5) = A.
  }
  (* Invariant *)
  Have: t <= x.
}
Prove: ((t + x_5) <= x) /\ ((2 + A) <= (B + t + x_5)).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (39ms) (425)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 17):
Let x = B * q.
Let x_1 = r + x - 1.
Let x_2 = x_1 % B.
Let x_3 = x_1 / B.
Let x_4 = r + x.
Assume {
  Type: is_sint32(B) /\ is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(t) /\ is_sint32(t - 1) /\
      is_sint32(r + t + x - 1) /\ is_sint32(x_3) /\ is_sint32(x_2).
  (* Pre-condition *)
  Have: 0 < (r + t + x).
  (* Invariant *)
  Have: (0 % B) = 0.
  (* Invariant *)
  Have: 0 < B.
  (* Invariant *)
  Have: (0 / B) = 0.
  (* Invariant *)
  Have: (1 + x_2 + (B * x_3)) = x_4.
  (* Invariant *)
  Have: 0 < x_4.
  (* Invariant *)
  Have: (0 <= x_2) /\ (x_2 < B).
  (* Invariant *)
  Have: 0 <= t.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Then *)
  Have: t != 0.
  If (1 + x_2) = B
  Then {
    Let x_5 = 1 + q_1.
    Have: (((B * x_5) - 1) / B) = q_1.
    Have: x_5 = q.
    Have: r = 0.
  }
  Else {
    Let x_6 = r_1 + x.
    Have: ((x_6 / B) = q) /\ ((x_6 % B) = r_1).
    Have: (1 + r_1) = r.
  }
  (* Invariant *)
  Have: (0 <= r) /\ (r < B).
}
Prove: (x_4 % B) = r.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (534ms) (11370)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 17):
Assume {
  Type: is_sint32(A) /\ is_sint32(B).
  (* Pre-condition *)
  Have: 0 <= A.
  (* Invariant *)
  Have: 0 < B.
}
Prove: (0 % B) = 0.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (6ms) (31)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 19):
Let x = -t.
Let x_1 = 1 + A - t.
Let x_2 = x_1 % B.
Let x_3 = 1 + A.
Let x_4 = A - t.
Let x_5 = x_4 % B.
Let x_6 = x_4 / B.
Assume {
  Type: is_sint32(A) /\ is_sint32(B) /\ is_sint32(q) /\ is_sint32(r) /\
      is_sint32(t) /\ is_sint32(t - 1) /\ is_sint32(x_6) /\ is_sint32(x_5) /\
      is_sint32(x_2).
  (* Pre-condition *)
  Have: 0 <= A.
  (* Invariant *)
  Have: (0 % B) = 0.
  (* Invariant *)
  Have: 0 < B.
  (* Invariant *)
  Have: (0 / B) = 0.
  (* Invariant *)
  Have: (t + x_5 + (B * x_6)) = A.
  (* Invariant *)
  Have: t <= A.
  (* Invariant *)
  Have: (0 <= x_5) /\ (x_5 < B).
  (* Invariant *)
  Have: 0 <= t.
  (* Invariant *)
  Have: 0 <= x_6.
  (* Then *)
  Have: t != 0.
  If (1 + x_5) = B
  Then { Have: (1 + x_6) = q. Have: x_2 = 0. }
  Else { Have: (x_6 = q) /\ (x_2 = (1 + r)) /\ (x_2 = (1 + x_5)). }
  (* Invariant *)
  Have: (t + (B * q) + x_2) = x_3.
  (* Invariant *)
  Have: t <= x_3.
  (* Invariant *)
  Have: (0 <= x_2) /\ (x_2 < B).
}
Prove: (x_1 / B) = q.
Prover Z3 4.8.12 returns Valid (Qed:9ms) (60ms) (144282)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 19):
Assume {
  Type: is_sint32(A) /\ is_sint32(B).
  (* Pre-condition *)
  Have: 0 <= A.
  (* Invariant *)
  Have: (0 % B) = 0.
  (* Invariant *)
  Have: 0 < B.
}
Prove: (0 / B) = 0.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:1ms) (0.70ms) (43)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 23):
Let x = A - t.
Let x_1 = x % B.
Let x_2 = x / B.
Let x_3 = A - t_3.
Let x_4 = x_3 % B.
Let x_5 = x_3 / B.
Assume {
  Type: is_sint32(A) /\ is_sint32(B) /\ is_sint32(q) /\ is_sint32(r) /\
      is_sint32(t) /\ is_sint32(t_1) /\ is_sint32(t_2) /\ is_sint32(t_3) /\
      is_sint32(x_2) /\ is_sint32(x_5) /\ is_sint32(x_1) /\ is_sint32(x_4).
  (* Pre-condition *)
  Have: 0 <= A.
  (* Invariant *)
  Have: (0 % B) = 0.
  (* Invariant *)
  Have: 0 < B.
  (* Invariant *)
  Have: (0 / B) = 0.
  (* Invariant *)
  Have: (t_3 + x_4 + (B * x_5)) = A.
  (* Invariant *)
  Have: t_3 <= A.
  (* Invariant *)
  Have: (0 <= x_4) /\ (x_4 < B).
  (* Invariant *)
  Have: 0 <= t_3.
  (* Invariant *)
  Have: 0 <= x_5.
  (* Then *)
  Have: t_3 != 0.
  If (1 + x_4) = B
  Then {
    Let x_6 = -t_1.
    Let x_7 = 1 + A - t_1.
    Let x_8 = x_7 / B.
    Have: (t_3 = t_1) /\ (x_8 = (1 + q)) /\ (x_8 = (1 + ((A - t_1) / B))).
    Have: (x_7 % B) = 0.
    Have: (1 + t) = t_1.
  }
  Else {
    Let x_9 = -t_2.
    Let x_10 = 1 + A - t_2.
    Let x_11 = A - t_2.
    Let x_12 = x_10 % B.
    Have: (t_3 = t_2) /\ ((x_10 / B) = (x_11 / B)) /\ (x_12 = (1 + r)) /\
        (x_12 = (1 + (x_11 % B))).
    Have: (1 + t) = t_2.
  }
  (* Invariant *)
  Have: (t + x_1 + (B * x_2)) = A.
  (* Invariant *)
  Have: t <= A.
  (* Invariant *)
  Have: (0 <= x_1) /\ (x_1 < B).
}
Prove: 0 <= t.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (43431)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (20ms) (221)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/12_0003/12_merged.c, line 25):
Let x = A - t.
Let x_1 = x % B.
Let x_2 = x / B.
Let x_3 = A - t_3.
Let x_4 = x_3 % B.
Let x_5 = x_3 / B.
Assume {
  Type: is_sint32(A) /\ is_sint32(B) /\ is_sint32(q) /\ is_sint32(r) /\
      is_sint32(t) /\ is_sint32(t_1) /\ is_sint32(t_2) /\ is_sint32(t_3) /\
      is_sint32(x_2) /\ is_sint32(x_5) /\ is_sint32(x_1) /\ is_sint32(x_4).
  (* Pre-condition *)
  Have: 0 <= A.
  (* Invariant *)
  Have: (0 % B) = 0.
  (* Invariant *)
  Have: 0 < B.
  (* Invariant *)
  Have: (0 / B) = 0.
  (* Invariant *)
  Have: (t_3 + x_4 + (B * x_5)) = A.
  (* Invariant *)
  Have: t_3 <= A.
  (* Invariant *)
  Have: (0 <= x_4) /\ (x_4 < B).
  (* Invariant *)
  Have: 0 <= t_3.
  (* Invariant *)
  Have: 0 <= x_5.
  (* Then *)
  Have: t_3 != 0.
  If (1 + x_4) = B
  Then {
    Let x_6 = -t_1.
    Let x_7 = 1 + A - t_1.
    Let x_8 = x_7 / B.
    Have: (t_3 = t_1) /\ (x_8 = (1 + q)) /\ (x_8 = (1 + ((A - t_1) / B))).
    Have: (x_7 % B) = 0.
    Have: (1 + t) = t_1.
  }
  Else {
    Let x_9 = -t_2.
    Let x_10 = 1 + A - t_2.
    Let x_11 = A - t_2.
    Let x_12 = x_10 % B.
    Have: (t_3 = t_2) /\ ((x_10 / B) = (x_11 / B)) /\ (x_12 = (1 + r)) /\
        (x_12 = (1 + (x_11 % B))).
    Have: (1 + t) = t_2.
  }
  (* Invariant *)
  Have: (t + x_1 + (B * x_2)) = A.
  (* Invariant *)
  Have: t <= A.
  (* Invariant *)
  Have: (0 <= x_1) /\ (x_1 < B).
  (* Invariant *)
  Have: 0 <= t.
}
Prove: 0 <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (38865)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (15ms) (222)

------------------------------------------------------------

Goal Establishment of Invariant (file out/12_0003/12_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Loop assigns (file out/12_0003/12_merged.c, line 26):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/12_0003/12_merged.c:5: Warning: 
  No 'assigns' specification for function 'main12'.
  Callers assumptions might be imprecise.

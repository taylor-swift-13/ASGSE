[kernel] Parsing out/21_0010/21_merged.c (with preprocessing)
[kernel:typing:no-proto] out/21_0010/21_merged.c:17: Warning: 
  Calling function unknown that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/21_0010/21_merged.c:2: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 16 goals scheduled
[wp] [Timeout] typed_main21_loop_invariant_preserved (Qed 6ms) (Z3)
[wp] Proved goals:   15 / 16
  Qed:              11
  Alt-Ergo 2.5.4:    4 (5ms-5ms)
  Timeout:           1
------------------------------------------------------------
  Function main21
------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0010/21_merged.c, line 7):
Let x = y * y.
Let x_1 = 1 + y.
Let x_2 = x_1 * x_1.
Let x_3 = 2 + y.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x_1) /\ is_sint32(x) /\
      is_sint32(x_2).
  (* Invariant *)
  Have: ((i * i) = 0) /\ (i <= 0) /\ (0 <= i).
  (* Invariant *)
  Have: x_2 = (1 + x).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= y) -> ((i_2 * i_2) = x))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < y) -> ((i_2 * i_2) <= x))).
  (* Invariant *)
  Have: (x = (i_1 * i_1)) /\ (0 <= i_1) /\ (i_1 <= y).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: (x_3 * x_3) = (1 + x_2).
Prover Z3 4.8.12 returns Timeout (Qed:6ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:6ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0010/21_merged.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0010/21_merged.c, line 8):
Let x = 2 + y.
Let x_1 = x * x.
Let x_2 = 1 + y.
Let x_3 = x_2 * x_2.
Let x_4 = y * y.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x_2) /\
      is_sint32(x_4) /\ is_sint32(x_1 - 1).
  (* Goal *)
  When: (0 <= i) /\ (i <= x_2).
  (* Invariant *)
  Have: ((i_1 * i_1) = 0) /\ (i_1 <= 0) /\ (0 <= i_1).
  (* Invariant *)
  Have: x_3 = (1 + x_4).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 <= y) -> ((i_3 * i_3) = x_4))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < y) -> ((i_3 * i_3) <= x_4))).
  (* Invariant *)
  Have: (x_4 = (i_2 * i_2)) /\ (0 <= i_2) /\ (i_2 <= y).
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_1 = (1 + x_3).
}
Prove: x_1 = (1 + (i * i)).
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (33282)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (5ms) (45)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0010/21_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0010/21_merged.c, line 9):
Let x = 1 + y.
Let x_1 = 2 + y.
Let x_2 = x_1 * x_1.
Let x_3 = x * x.
Let x_4 = y * y.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_4) /\
      is_sint32(x_2 - 1).
  (* Goal *)
  When: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: ((i_1 * i_1) = 0) /\ (i_1 <= 0) /\ (0 <= i_1).
  (* Invariant *)
  Have: x_3 = (1 + x_4).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 <= y) -> ((i_3 * i_3) = x_4))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < y) -> ((i_3 * i_3) <= x_4))).
  (* Invariant *)
  Have: (x_4 = (i_2 * i_2)) /\ (0 <= i_2) /\ (i_2 <= y).
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_2 = (1 + x_3).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 <= x) ->
      (x_2 = (1 + (i_3 * i_3))))).
}
Prove: (i * i) < x_2.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (10ms) (34083)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (5ms) (45)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0010/21_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0010/21_merged.c, line 10):
Let x = 2 + y.
Let x_1 = x * x.
Let x_2 = 1 + y.
Let x_3 = x_2 * x_2.
Let x_4 = y * y.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x_2) /\
      is_sint32(x_4) /\ is_sint32(x_1 - 1).
  (* Invariant *)
  Have: ((i * i) = 0) /\ (i <= 0) /\ (0 <= i).
  (* Invariant *)
  Have: x_3 = (1 + x_4).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= y) -> ((i_2 * i_2) = x_4))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < y) -> ((i_2 * i_2) <= x_4))).
  (* Invariant *)
  Have: (x_4 = (i_1 * i_1)) /\ (0 <= i_1) /\ (i_1 <= y).
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_1 = (1 + x_3).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= x_2) ->
      (x_1 = (1 + (i_2 * i_2))))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= y) -> ((i_2 * i_2) < x_1))).
}
Prove: exists i_2 : Z. (x_1 = (1 + (i_2 * i_2))) /\ (0 <= i_2) /\
    (i_2 <= x_2).
Prover Z3 4.8.12 returns Valid (Qed:8ms) (10ms) (35116)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (5ms) (43)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0010/21_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0010/21_merged.c, line 11):
Let x = 1 + y.
Let x_1 = i * i.
Let x_2 = 2 + y.
Let x_3 = x * x.
Let x_4 = y * y.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_4).
  (* Invariant *)
  Have: ((i_1 * i_1) = 0) /\ (i_1 <= 0) /\ (0 <= i_1).
  (* Invariant *)
  Have: x_3 = (1 + x_4).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 <= y) -> ((i_3 * i_3) = x_4))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < y) -> ((i_3 * i_3) <= x_4))).
  (* Invariant *)
  Have: (x_4 = (i_2 * i_2)) /\ (0 <= i_2) /\ (i_2 <= y).
  (* Invariant *)
  Have: 0 <= x_4.
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: tmp_0 != 0.
  Have: x_3 = x_1.
  (* Invariant *)
  Have: (x_2 * x_2) = (1 + x_1).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 <= x) -> ((i_3 * i_3) = x_1))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 <= y) -> ((i_3 * i_3) <= x_1))).
  (* Invariant *)
  Have: (0 <= i) /\ (i <= x).
}
Prove: 0 <= x_1.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (30ms) (36182)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (5ms) (56)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0010/21_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0010/21_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0010/21_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0010/21_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0010/21_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Loop assigns (file out/21_0010/21_merged.c, line 14) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/21_0010/21_merged.c, line 14) (2/2):
Call Result at line 17
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/21_0010/21_merged.c:1: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/21_0010/21_merged.c:2: Warning: 
  No 'assigns' specification for function 'main21'.
  Callers assumptions might be imprecise.

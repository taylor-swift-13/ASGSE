[kernel] Parsing out/7_0002/7_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 56 goals scheduled
[wp] [Timeout] typed_main7_loop_invariant_3_preserved (Qed 30ms) (Z3)
[wp] [Timeout] typed_main7_loop_invariant_4_preserved (Qed 57ms) (Z3)
[wp] [Timeout] typed_main7_loop_invariant_9_preserved (Qed 53ms) (Z3)
[wp] Proved goals:   53 / 56
  Qed:              48
  Alt-Ergo 2.5.4:    1 (4ms)
  Z3 4.8.12:         4
  Timeout:           3
------------------------------------------------------------
  Function main7
------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (19ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.72ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (39ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (0.81ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 20):
Let x_1 = x + y.
Let x_2 = p * x.
Let x_3 = 2 * x_2.
Let x_4 = s * y.
Let x_5 = -x_2.
Let x_6 = r_1 * y.
Let x_7 = x_2 + x_6.
Let x_8 = x + y - x_2 - x_6.
Let x_9 = x_2 + (r * y).
Let x_10 = (q * x) + x_4.
Assume {
  Type: is_sint32(p) /\ is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(s) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32(x_9) /\ is_sint32(x_7) /\ is_sint32(x_10) /\ is_sint32(x_8).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: (y <= x) \/ (x <= y).
  (* Invariant *)
  Have: (x_2 + (q_1 * x) + x_6 + x_4) = x_1.
  (* Invariant *)
  Have: ((r_1 * x_7) + (s * x_8)) = y.
  (* Invariant *)
  Have: (0 <= r_1) /\ (0 <= s).
  (* Invariant *)
  Have: r_1 <= 0.
  (* Invariant *)
  Have: q_1 <= 0.
  (* Invariant *)
  Have: ((p * p * x) + (q_1 * (x + y - x_2))) = x.
  (* Invariant *)
  Have: (0 <= p) /\ (0 <= q_1).
  (* Invariant *)
  Have: (x_1 <= x_3) \/ (x_3 <= x_1).
  (* Invariant *)
  Have: (x_2 <= x_1) /\ (0 <= x_2).
  (* Invariant *)
  Have: (x_2 + x_4) = x_1.
  (* Invariant *)
  Have: x_2 < x_1.
  (* Invariant *)
  Have: 0 < x_2.
  (* Then *)
  Have: x_1 != x_3.
  If x_1 < x_3
  Then { Have: q = 0. Have: (r + s) = 0. }
  Else { Have: (r = 0) /\ ((p + q) = 0). }
}
Prove: ((r * x_9) + (s * x_10)) = y.
Prover Z3 4.8.12 returns Timeout (Qed:30ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:30ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.79ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 21):
Let x = a - b.
Let x_1 = s * x.
Let x_2 = b * s.
Let x_3 = x_2 - x_1.
Let x_4 = a + b + x_1 - x_2.
Let x_5 = a + b + x_1.
Let x_6 = r * x_3.
Let x_7 = a + x_6.
Let x_8 = b - x_6.
Let x_9 = a + b + (2 * x_1).
Let x_10 = 2 * x_2.
Assume {
  Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(p) /\ is_sint32(q) /\
      is_sint32(r) /\ is_sint32(s) /\ is_sint32(-s) /\ is_sint32(x) /\
      is_sint32(x_3) /\ is_sint32(x_4) /\ is_sint32(x_7) /\ is_sint32(x_8).
  (* Residual *)
  When: b < a.
  (* Pre-condition *)
  Have: x_2 < x_5.
  (* Pre-condition *)
  Have: x_1 < x_2.
  (* Invariant *)
  Have: (x_9 <= x_10) \/ (x_10 <= x_9).
  (* Invariant *)
  Have: (x_6 + (q * x_4)) = 0.
  (* Invariant *)
  Have: x_2 = (x_1 + (r * x_7) + (s * x_8)).
  (* Invariant *)
  Have: (0 <= r) /\ (0 <= s).
  (* Invariant *)
  Have: r <= 0.
  (* Invariant *)
  Have: q <= 0.
  (* Invariant *)
  Have: ((b * q) + x_2 + (p * p * x_4)) = x_5.
  (* Invariant *)
  Have: (0 <= p) /\ (0 <= q).
  (* Invariant *)
  Have: (0 <= a) /\ (0 <= b).
  (* Invariant *)
  Have: (p * x_4) = a.
  (* Invariant *)
  Have: 0 < b.
  (* Invariant *)
  Have: 0 < a.
  (* Invariant *)
  Have: (s * x_3) = b.
}
Prove: s <= 0.
Prover Z3 4.8.12 returns Timeout (Qed:57ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:57ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (45ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (41ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 25):
Let x_1 = p * x.
Let x_2 = a * r.
Let x_3 = b * s.
Let x_4 = x_2 + x_3.
Let x_5 = s * x_4.
Let x_6 = x + x_2 + x_3.
Let x_7 = 2 * x_1.
Let x_8 = -x_1.
Let x_9 = r_1 * x_4.
Let x_10 = x_1 + x_9.
Let x_11 = x + x_2 + x_3 - x_1 - x_9.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b) /\ is_sint32(b_1) /\
      is_sint32(p) /\ is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(s) /\ is_sint32(x) /\ is_sint32(x_4) /\
      is_sint32(x_10) /\ is_sint32(x_11).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < x_4.
  (* Invariant *)
  Have: (x_4 <= x) \/ (x <= x_4).
  (* Invariant *)
  Have: (x_1 + (q_1 * x) + x_9 + x_5) = x_6.
  (* Invariant *)
  Have: ((r_1 * x_10) + (s * x_11)) = x_4.
  (* Invariant *)
  Have: (0 <= r_1) /\ (0 <= s).
  (* Invariant *)
  Have: r_1 <= 0.
  (* Invariant *)
  Have: q_1 <= 0.
  (* Invariant *)
  Have: ((p * p * x) + (q_1 * (x + x_2 + x_3 - x_1))) = x.
  (* Invariant *)
  Have: (0 <= p) /\ (0 <= q_1).
  (* Invariant *)
  Have: (x_6 <= x_7) \/ (x_7 <= x_6).
  (* Invariant *)
  Have: (0 <= x_1) /\ (x_1 <= x_6).
  (* Invariant *)
  Have: (x_1 + x_5) = x_6.
  (* Invariant *)
  Have: x_1 < x_6.
  (* Invariant *)
  Have: 0 < x_1.
  (* Then *)
  Have: x_6 != x_7.
  If x_6 < x_7
  Then {
    Let x_12 = s * (a_1 - b).
    Have: (q = 0) /\ ((a_1 + b + x_12) = (x + x_3)) /\
        ((p * (a_1 + b + x_12 - x_3)) = a_1).
    Have: (a + b) = a_1.
    Have: (r + s) = 0.
  }
  Else {
    Let x_13 = x + x_3.
    Have: (r = 0) /\ ((p + q) = 0) /\ (x_13 = (b_1 + x_1)) /\
        ((a + b + x_1) = x_13) /\ ((b + x_7) = x_13).
  }
  (* Invariant *)
  Have: ((q * x) + x_5) = b.
  (* Invariant *)
  Have: (x_1 + (r * x_4)) = a.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: r <= 0.
  (* Invariant *)
  Have: q <= 0.
}
Prove: ((a * p) + (b * q)) = x.
Prover Z3 4.8.12 returns Valid (Qed:62ms) (1.1s) (2089782)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 26):
Let x = b * s * s.
Let x_1 = b * p.
Let x_2 = -x_1.
Let x_3 = -b.
Let x_4 = x - b.
Let x_5 = p * x_4.
Let x_6 = x_5 - x_1.
Let x_7 = p * x_6.
Let x_8 = b * s.
Let x_9 = (2 * b) + x_8 + x_5.
Let x_10 = 2 * x.
Let x_11 = x_1 + x_10.
Let x_12 = x_1 + x.
Let x_13 = b + x_8 + x_5.
Let x_14 = -x.
Let x_15 = b * r * s.
Let x_16 = x_15 + x - b.
Let x_17 = b + x_8 + x_5 - x_1 - x_15 - x.
Let x_18 = x_1 + x_8.
Assume {
  Type: is_sint32(b) /\ is_sint32(p) /\ is_sint32(q) /\ is_sint32(r) /\
      is_sint32(s) /\ is_sint32(-p) /\ is_sint32(x_8) /\ is_sint32(x) /\
      is_sint32(x_4) /\ is_sint32(x_16) /\ is_sint32(x_6) /\ is_sint32(x_17).
  (* Residual *)
  When: x_11 <= x_9.
  (* Pre-condition *)
  Have: x_1 < x_5.
  (* Pre-condition *)
  Have: 0 < x_8.
  (* Invariant *)
  Have: (x_5 <= x_18) \/ (x_18 <= x_5).
  (* Invariant *)
  Have: (x_1 + x_15 + x_10 + (q * x_6)) = x_13.
  (* Invariant *)
  Have: x_8 = ((r * x_16) + (s * x_17)).
  (* Invariant *)
  Have: (0 <= r) /\ (0 <= s).
  (* Invariant *)
  Have: r <= 0.
  (* Invariant *)
  Have: q <= 0.
  (* Invariant *)
  Have: x_5 = (x_1 + (p * p * x_6) + (q * (b + x_8 + x_5 - x_1 - x))).
  (* Invariant *)
  Have: (0 <= p) /\ (0 <= q).
  (* Invariant *)
  Have: (b <= x) /\ (x_12 <= x_13).
  (* Invariant *)
  Have: x_13 = x_11.
  (* Invariant *)
  Have: x_12 < x_13.
  (* Invariant *)
  Have: b < x.
  (* Then *)
  Have: x_9 != x_11.
  Have: (x_1 + x + x_7) = (x_8 + x_5).
  (* Invariant *)
  Have: x = (b + x_7).
}
Prove: p <= 0.
Prover Z3 4.8.12 returns Timeout (Qed:53ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:53ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 30):
Let x = a * p.
Let x_1 = b * q.
Let x_2 = x + x_1.
Let x_3 = p * x_2.
Let x_4 = a * r.
Let x_5 = b * s.
Let x_6 = x_4 + x_5.
Let x_7 = s * x_6.
Let x_8 = x + x_4 + x_1 + x_5.
Let x_9 = 2 * x_3.
Let x_10 = -x_3.
Let x_11 = r_1 * x_6.
Let x_12 = x_3 + x_11.
Let x_13 = x + x_4 + x_1 + x_5 - x_3 - x_11.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b) /\ is_sint32(b_1) /\
      is_sint32(p) /\ is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(s) /\ is_sint32(x_2) /\ is_sint32(x_6) /\
      is_sint32(x_12) /\ is_sint32(x_13).
  (* Pre-condition *)
  Have: 0 < x_2.
  (* Pre-condition *)
  Have: 0 < x_6.
  (* Invariant *)
  Have: (x_6 <= x_2) \/ (x_2 <= x_6).
  (* Invariant *)
  Have: (x_3 + (q_1 * x_2) + x_11 + x_7) = x_8.
  (* Invariant *)
  Have: ((r_1 * x_12) + (s * x_13)) = x_6.
  (* Invariant *)
  Have: (0 <= r_1) /\ (0 <= s).
  (* Invariant *)
  Have: r_1 <= 0.
  (* Invariant *)
  Have: q_1 <= 0.
  (* Invariant *)
  Have: ((p * p * x_2) + (q_1 * (x + x_4 + x_1 + x_5 - x_3))) = x_2.
  (* Invariant *)
  Have: (0 <= p) /\ (0 <= q_1).
  (* Invariant *)
  Have: (x_8 <= x_9) \/ (x_9 <= x_8).
  (* Invariant *)
  Have: (x_3 <= x_8) /\ (0 <= x_3).
  (* Invariant *)
  Have: (x_3 + x_7) = x_8.
  (* Invariant *)
  Have: x_3 < x_8.
  (* Invariant *)
  Have: 0 < x_3.
  (* Then *)
  Have: x_8 != x_9.
  If x_8 < x_9
  Then {
    Let x_14 = a_1 - b.
    Let x_15 = s * x_14.
    Let x_16 = x_5 + (p * x_14).
    Have: (q = 0) /\ ((a_1 + b + x_15) = x_16) /\
        ((b + x_15 + (p * p * x_14)) = x_16).
    Have: (a + b) = a_1.
    Have: (r + s) = 0.
  }
  Else {
    Let x_17 = q * (b_1 - b).
    Have: (r = 0) /\ ((a + b) = b_1) /\ ((p + q) = 0) /\
        (((2 * b_1) + x_17) = (b + x_1 + x_5)) /\
        ((x_1 + x_5 + (q * (x_1 - x_17))) = (b_1 + x_17)).
  }
  (* Invariant *)
  Have: ((q * x_2) + x_7) = b.
  (* Invariant *)
  Have: (x_3 + (r * x_6)) = a.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: r <= 0.
  (* Invariant *)
  Have: q <= 0.
  (* Invariant *)
  Have: 0 <= q.
}
Prove: (b <= a) \/ (a <= b).
Prover Z3 4.8.12 returns Valid (Qed:60ms) (40962)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 30):
Assume {
  Type: is_sint32(a) /\ is_sint32(b).
  (* Pre-condition *)
  Have: 0 < a.
  (* Pre-condition *)
  Have: 0 < b.
}
Prove: (b <= a) \/ (a <= b).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:2ms) (4ms) (16)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 31):
Let x = a * p.
Let x_1 = b * q.
Let x_2 = x + x_1.
Let x_3 = p * x_2.
Let x_4 = a * r.
Let x_5 = b * s.
Let x_6 = x_4 + x_5.
Let x_7 = s * x_6.
Let x_8 = x + x_4 + x_1 + x_5.
Let x_9 = 2 * x_3.
Let x_10 = -x_3.
Let x_11 = r_1 * x_6.
Let x_12 = x_3 + x_11.
Let x_13 = x + x_4 + x_1 + x_5 - x_3 - x_11.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b) /\ is_sint32(b_1) /\
      is_sint32(p) /\ is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(s) /\ is_sint32(x_2) /\ is_sint32(x_6) /\
      is_sint32(x_12) /\ is_sint32(x_13).
  (* Pre-condition *)
  Have: 0 < x_2.
  (* Pre-condition *)
  Have: 0 < x_6.
  (* Invariant *)
  Have: (x_6 <= x_2) \/ (x_2 <= x_6).
  (* Invariant *)
  Have: (x_3 + (q_1 * x_2) + x_11 + x_7) = x_8.
  (* Invariant *)
  Have: ((r_1 * x_12) + (s * x_13)) = x_6.
  (* Invariant *)
  Have: (0 <= r_1) /\ (0 <= s).
  (* Invariant *)
  Have: r_1 <= 0.
  (* Invariant *)
  Have: q_1 <= 0.
  (* Invariant *)
  Have: ((p * p * x_2) + (q_1 * (x + x_4 + x_1 + x_5 - x_3))) = x_2.
  (* Invariant *)
  Have: (0 <= p) /\ (0 <= q_1).
  (* Invariant *)
  Have: (x_8 <= x_9) \/ (x_9 <= x_8).
  (* Invariant *)
  Have: (x_3 <= x_8) /\ (0 <= x_3).
  (* Invariant *)
  Have: (x_3 + x_7) = x_8.
  (* Invariant *)
  Have: x_3 < x_8.
  (* Invariant *)
  Have: 0 < x_3.
  (* Then *)
  Have: x_8 != x_9.
  If x_8 < x_9
  Then {
    Let x_14 = a_1 - b.
    Let x_15 = s * x_14.
    Let x_16 = x_5 + (p * x_14).
    Have: (q = 0) /\ ((a_1 + b + x_15) = x_16) /\
        ((b + x_15 + (p * p * x_14)) = x_16).
    Have: (a + b) = a_1.
    Have: (r + s) = 0.
  }
  Else {
    Let x_17 = q * (b_1 - b).
    Have: (r = 0) /\ ((a + b) = b_1) /\ ((p + q) = 0) /\
        (((2 * b_1) + x_17) = (b + x_1 + x_5)) /\
        ((x_1 + x_5 + (q * (x_1 - x_17))) = (b_1 + x_17)).
  }
  (* Invariant *)
  Have: ((q * x_2) + x_7) = b.
  (* Invariant *)
  Have: (x_3 + (r * x_6)) = a.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: r <= 0.
  (* Invariant *)
  Have: q <= 0.
  (* Invariant *)
  Have: 0 <= q.
  (* Invariant *)
  Have: (b <= a) \/ (a <= b).
}
Prove: (0 <= a) /\ (0 <= b).
Prover Z3 4.8.12 returns Valid (Qed:53ms) (230ms) (427546)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 33):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 34):
Let x = a * p.
Let x_1 = b * q.
Let x_2 = x + x_1.
Let x_3 = p * x_2.
Let x_4 = a * r.
Let x_5 = b * s.
Let x_6 = x_4 + x_5.
Let x_7 = s * x_6.
Let x_8 = x + x_4 + x_1 + x_5.
Let x_9 = 2 * x_3.
Let x_10 = -x_3.
Let x_11 = r_1 * x_6.
Let x_12 = x_3 + x_11.
Let x_13 = x + x_4 + x_1 + x_5 - x_3 - x_11.
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b) /\ is_sint32(b_1) /\
      is_sint32(p) /\ is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(s) /\ is_sint32(x_2) /\ is_sint32(x_6) /\
      is_sint32(x_12) /\ is_sint32(x_13).
  (* Pre-condition *)
  Have: 0 < x_2.
  (* Pre-condition *)
  Have: 0 < x_6.
  (* Invariant *)
  Have: (x_6 <= x_2) \/ (x_2 <= x_6).
  (* Invariant *)
  Have: (x_3 + (q_1 * x_2) + x_11 + x_7) = x_8.
  (* Invariant *)
  Have: ((r_1 * x_12) + (s * x_13)) = x_6.
  (* Invariant *)
  Have: (0 <= r_1) /\ (0 <= s).
  (* Invariant *)
  Have: r_1 <= 0.
  (* Invariant *)
  Have: q_1 <= 0.
  (* Invariant *)
  Have: ((p * p * x_2) + (q_1 * (x + x_4 + x_1 + x_5 - x_3))) = x_2.
  (* Invariant *)
  Have: (0 <= p) /\ (0 <= q_1).
  (* Invariant *)
  Have: (x_8 <= x_9) \/ (x_9 <= x_8).
  (* Invariant *)
  Have: (x_3 <= x_8) /\ (0 <= x_3).
  (* Invariant *)
  Have: (x_3 + x_7) = x_8.
  (* Invariant *)
  Have: x_3 < x_8.
  (* Invariant *)
  Have: 0 < x_3.
  (* Then *)
  Have: x_8 != x_9.
  If x_8 < x_9
  Then {
    Let x_14 = a_1 - b.
    Let x_15 = s * x_14.
    Let x_16 = x_5 + (p * x_14).
    Have: (q = 0) /\ ((a_1 + b + x_15) = x_16) /\
        ((b + x_15 + (p * p * x_14)) = x_16).
    Have: (a + b) = a_1.
    Have: (r + s) = 0.
  }
  Else {
    Let x_17 = q * (b_1 - b).
    Have: (r = 0) /\ ((a + b) = b_1) /\ ((p + q) = 0) /\
        (((2 * b_1) + x_17) = (b + x_1 + x_5)) /\
        ((x_1 + x_5 + (q * (x_1 - x_17))) = (b_1 + x_17)).
  }
  (* Invariant *)
  Have: ((q * x_2) + x_7) = b.
  (* Invariant *)
  Have: (x_3 + (r * x_6)) = a.
  (* Invariant *)
  Have: 0 <= r.
  (* Invariant *)
  Have: r <= 0.
  (* Invariant *)
  Have: q <= 0.
  (* Invariant *)
  Have: 0 <= q.
  (* Invariant *)
  Have: (b <= a) \/ (a <= b).
  (* Invariant *)
  Have: (0 <= a) /\ (0 <= b).
}
Prove: (b + (a * p * p)) = (a + (b * s * s)).
Prover Z3 4.8.12 returns Valid (Qed:48ms) (180ms) (332094)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 34):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (12ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 35):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 36):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (18ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 37):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (10ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 38):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 39):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 40):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 41):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 43):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0002/7_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0002/7_merged.c, line 44):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Assertion (file out/7_0002/7_merged.c, line 65):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Loop assigns (file out/7_0002/7_merged.c, line 45):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/7_0002/7_merged.c:5: Warning: 
  No 'assigns' specification for function 'main7'.
  Callers assumptions might be imprecise.

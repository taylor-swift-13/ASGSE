[kernel] Parsing out/21_0002/21_merged.c (with preprocessing)
[kernel:typing:no-proto] out/21_0002/21_merged.c:19: Warning: 
  Calling function unknown that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/21_0002/21_merged.c:2: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 20 goals scheduled
[wp] Proved goals:   20 / 20
  Qed:              15
  Alt-Ergo 2.5.4:    4 (5ms-18ms)
  Z3 4.8.12:         1 (20ms)
------------------------------------------------------------
  Function main21
------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0002/21_merged.c, line 7):
Let x = i * i.
Let x_1 = y * (y - 1).
Let x_2 = 1 + y.
Let x_3 = x_2 * x_2.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x_2) /\ is_sint32(x) /\
      is_sint32(x_3).
  (* Invariant *)
  Have: ((i_1 * i_1) = 0) /\ (i_1 <= 0) /\ (0 <= i_1).
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: x = (y + x_1).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < y) -> ((i_2 * i_2) <= x))).
  (* Invariant *)
  Have: (y * y) = x.
  (* Invariant *)
  Have: (x_1 / 2) <= x.
  (* Invariant *)
  Have: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: y < x_3.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (33481)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (5ms) (66)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0002/21_merged.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0002/21_merged.c, line 8):
Let x = 1 + y.
Let x_1 = x * x.
Let x_2 = i * i.
Let x_3 = y * (y - 1).
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: ((i_1 * i_1) = 0) /\ (i_1 <= 0) /\ (0 <= i_1).
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: x_2 = (y + x_3).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < y) -> ((i_2 * i_2) <= x_2))).
  (* Invariant *)
  Have: (y * y) = x_2.
  (* Invariant *)
  Have: (x_3 / 2) <= x_2.
  (* Invariant *)
  Have: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: y < x_1.
}
Prove: x_1 = (1 + y + (y * x)).
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10023)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (8ms) (61)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0002/21_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0002/21_merged.c, line 9):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = 1 + y + x_1.
Let x_3 = i_1 * i_1.
Let x_4 = y * (y - 1).
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_2).
  (* Goal *)
  When: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: ((i_2 * i_2) = 0) /\ (i_2 <= 0) /\ (0 <= i_2).
  (* Invariant *)
  Have: y <= x_3.
  (* Invariant *)
  Have: x_3 = (y + x_4).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < y) -> ((i_3 * i_3) <= x_3))).
  (* Invariant *)
  Have: (y * y) = x_3.
  (* Invariant *)
  Have: (x_4 / 2) <= x_3.
  (* Invariant *)
  Have: (0 <= i_1) /\ (i_1 <= y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (x * x) = x_2.
  (* Invariant *)
  Have: 0 <= x_1.
}
Prove: (i * i) <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (20ms) (40900)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0002/21_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0002/21_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0002/21_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0002/21_merged.c, line 11):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = 1 + y + x_1.
Let x_3 = i * i.
Let x_4 = y * (y - 1).
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_2).
  (* Invariant *)
  Have: ((i_1 * i_1) = 0) /\ (i_1 <= 0) /\ (0 <= i_1).
  (* Invariant *)
  Have: y <= x_3.
  (* Invariant *)
  Have: x_3 = (y + x_4).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < y) -> ((i_2 * i_2) <= x_3))).
  (* Invariant *)
  Have: (y * y) = x_3.
  (* Invariant *)
  Have: (x_4 / 2) <= x_3.
  (* Invariant *)
  Have: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (x * x) = x_2.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= y) -> ((i_2 * i_2) <= x_2))).
}
Prove: (x_1 / 2) <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (10ms) (34929)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:4ms) (18ms) (450)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0002/21_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0002/21_merged.c, line 12):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = 1 + y + x_1.
Let x_3 = i * i.
Let x_4 = y * (y - 1).
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_2).
  (* Invariant *)
  Have: ((i_1 * i_1) = 0) /\ (i_1 <= 0) /\ (0 <= i_1).
  (* Invariant *)
  Have: y <= x_3.
  (* Invariant *)
  Have: x_3 = (y + x_4).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < y) -> ((i_2 * i_2) <= x_3))).
  (* Invariant *)
  Have: (y * y) = x_3.
  (* Invariant *)
  Have: (x_4 / 2) <= x_3.
  (* Invariant *)
  Have: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (x * x) = x_2.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= y) -> ((i_2 * i_2) <= x_2))).
  (* Invariant *)
  Have: (x_1 / 2) <= x_2.
}
Prove: exists i_2 : Z. ((i_2 * i_2) = x_2) /\ (0 <= i_2) /\ (i_2 <= x).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (16ms) (428)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0002/21_merged.c, line 12):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0002/21_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0002/21_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0002/21_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0002/21_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0002/21_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0002/21_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/21_0002/21_merged.c, line 16) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/21_0002/21_merged.c, line 16) (2/2):
Call Result at line 19
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/21_0002/21_merged.c:1: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/21_0002/21_merged.c:2: Warning: 
  No 'assigns' specification for function 'main21'.
  Callers assumptions might be imprecise.

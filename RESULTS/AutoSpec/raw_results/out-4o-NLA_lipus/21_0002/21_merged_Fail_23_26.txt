[kernel] Parsing out/21_0002/21_merged.c (with preprocessing)
[kernel:typing:no-proto] out/21_0002/21_merged.c:22: Warning: 
  Calling function unknown that is declared without prototype.
  Its formals will be inferred from actual arguments
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/21_0002/21_merged.c:2: Warning: 
  Neither code nor specification for function unknown, generating default assigns from the prototype
[wp] Warning: Missing RTE guards
[wp] 26 goals scheduled
[wp] [Timeout] typed_main21_loop_invariant_2_established (Qed 0.55ms) (Alt-Ergo)
[wp] [Timeout] typed_main21_loop_invariant_4_preserved (Qed 13ms) (Alt-Ergo)
[wp] [Timeout] typed_main21_loop_invariant_5_preserved (Qed 8ms) (Alt-Ergo)
[wp] Proved goals:   23 / 26
  Qed:              17
  Alt-Ergo 2.5.4:    5 (4ms-17ms-28ms)
  Z3 4.8.12:         1 (10ms)
  Timeout:           3
------------------------------------------------------------
  Function main21
------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0002/21_merged.c, line 7):
Let x = i * i.
Let x_1 = y * (y - 1).
Let x_2 = 1 + y.
Let x_3 = x_2 * x_2.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x_2) /\ is_sint32(x) /\
      is_sint32(x_3).
  (* Invariant *)
  Have: pow(.0, 2.0) = .0.
  (* Invariant *)
  Have: ((i_1 * i_1) = 0) /\ (i_1 <= 0) /\ (0 <= i_1).
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: pow(real_of_int(y), 2.0) = real_of_int(x).
  (* Invariant *)
  Have: x = (y + x_1).
  (* Invariant *)
  Have: (y = 0) \/ ((x % y) = 0).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= y) -> ((i_2 * i_2) <= x))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < y) -> ((i_2 * i_2) <= x))).
  (* Invariant *)
  Have: (y * y) = x.
  (* Invariant *)
  Have: (x_1 / 2) <= x.
  (* Invariant *)
  Have: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: y < x_3.
Prover Z3 4.8.12 returns Valid (Qed:7ms) (30ms) (49620)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (7ms) (89)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0002/21_merged.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0002/21_merged.c, line 8):
Let x = 1 + y.
Let x_1 = x * x.
Let x_2 = i * i.
Let x_3 = y * (y - 1).
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: pow(.0, 2.0) = .0.
  (* Invariant *)
  Have: ((i_1 * i_1) = 0) /\ (i_1 <= 0) /\ (0 <= i_1).
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: pow(real_of_int(y), 2.0) = real_of_int(x_2).
  (* Invariant *)
  Have: x_2 = (y + x_3).
  (* Invariant *)
  Have: (y = 0) \/ ((x_2 % y) = 0).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= y) -> ((i_2 * i_2) <= x_2))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < y) -> ((i_2 * i_2) <= x_2))).
  (* Invariant *)
  Have: (y * y) = x_2.
  (* Invariant *)
  Have: (x_3 / 2) <= x_2.
  (* Invariant *)
  Have: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: y < x_1.
}
Prove: pow(real_of_int(x), 2.0) = real_of_int(x_1).
Prover Z3 4.8.12 returns Valid (Qed:10ms) (10ms) (50604)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0002/21_merged.c, line 8):
Prove: pow(.0, 2.0) = .0.
Prover Z3 4.8.12 returns Failed
out of memory
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.55ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0002/21_merged.c, line 9):
Let x = 1 + y.
Let x_1 = x * x.
Let x_2 = i * i.
Let x_3 = y * (y - 1).
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_2) /\
      is_sint32(x_1).
  (* Invariant *)
  Have: pow(.0, 2.0) = .0.
  (* Invariant *)
  Have: ((i_1 * i_1) = 0) /\ (i_1 <= 0) /\ (0 <= i_1).
  (* Invariant *)
  Have: y <= x_2.
  (* Invariant *)
  Have: pow(real_of_int(y), 2.0) = real_of_int(x_2).
  (* Invariant *)
  Have: x_2 = (y + x_3).
  (* Invariant *)
  Have: (y = 0) \/ ((x_2 % y) = 0).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= y) -> ((i_2 * i_2) <= x_2))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < y) -> ((i_2 * i_2) <= x_2))).
  (* Invariant *)
  Have: (y * y) = x_2.
  (* Invariant *)
  Have: (x_3 / 2) <= x_2.
  (* Invariant *)
  Have: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: y < x_1.
  (* Invariant *)
  Have: pow(real_of_int(x), 2.0) = real_of_int(x_1).
}
Prove: x_1 = (1 + y + (y * x)).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (4ms) (87)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0002/21_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0002/21_merged.c, line 10):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = 1 + y + x_1.
Let x_3 = i * i.
Let x_4 = y * (y - 1).
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_2).
  (* Invariant *)
  Have: pow(.0, 2.0) = .0.
  (* Invariant *)
  Have: ((i_1 * i_1) = 0) /\ (i_1 <= 0) /\ (0 <= i_1).
  (* Invariant *)
  Have: y <= x_3.
  (* Invariant *)
  Have: pow(real_of_int(y), 2.0) = real_of_int(x_3).
  (* Invariant *)
  Have: x_3 = (y + x_4).
  (* Invariant *)
  Have: (y = 0) \/ ((x_3 % y) = 0).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= y) -> ((i_2 * i_2) <= x_3))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < y) -> ((i_2 * i_2) <= x_3))).
  (* Invariant *)
  Have: (y * y) = x_3.
  (* Invariant *)
  Have: (x_4 / 2) <= x_3.
  (* Invariant *)
  Have: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (x * x) = x_2.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: pow(real_of_int(x), 2.0) = real_of_int(x_2).
}
Prove: (y = (-1)) \/ ((x_2 % x) = 0).
Prover Z3 4.8.12 returns Failed
out of memory
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:13ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0002/21_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0002/21_merged.c, line 11):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = 1 + y + x_1.
Let x_3 = i_1 * i_1.
Let x_4 = y * (y - 1).
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_2).
  (* Goal *)
  When: (0 <= i) /\ (i <= x).
  (* Invariant *)
  Have: pow(.0, 2.0) = .0.
  (* Invariant *)
  Have: ((i_2 * i_2) = 0) /\ (i_2 <= 0) /\ (0 <= i_2).
  (* Invariant *)
  Have: y <= x_3.
  (* Invariant *)
  Have: pow(real_of_int(y), 2.0) = real_of_int(x_3).
  (* Invariant *)
  Have: x_3 = (y + x_4).
  (* Invariant *)
  Have: (y = 0) \/ ((x_3 % y) = 0).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 <= y) -> ((i_3 * i_3) <= x_3))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < y) -> ((i_3 * i_3) <= x_3))).
  (* Invariant *)
  Have: (y * y) = x_3.
  (* Invariant *)
  Have: (x_4 / 2) <= x_3.
  (* Invariant *)
  Have: (0 <= i_1) /\ (i_1 <= y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (x * x) = x_2.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: pow(real_of_int(x), 2.0) = real_of_int(x_2).
  (* Invariant *)
  Have: (y = (-1)) \/ ((x_2 % x) = 0).
}
Prove: (i * i) <= x_2.
Prover Z3 4.8.12 returns Failed
out of memory
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:8ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0002/21_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0002/21_merged.c, line 12):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = 1 + y + x_1.
Let x_3 = i_1 * i_1.
Let x_4 = y * (y - 1).
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_2).
  (* Goal *)
  When: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: pow(.0, 2.0) = .0.
  (* Invariant *)
  Have: ((i_2 * i_2) = 0) /\ (i_2 <= 0) /\ (0 <= i_2).
  (* Invariant *)
  Have: y <= x_3.
  (* Invariant *)
  Have: pow(real_of_int(y), 2.0) = real_of_int(x_3).
  (* Invariant *)
  Have: x_3 = (y + x_4).
  (* Invariant *)
  Have: (y = 0) \/ ((x_3 % y) = 0).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 <= y) -> ((i_3 * i_3) <= x_3))).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 < y) -> ((i_3 * i_3) <= x_3))).
  (* Invariant *)
  Have: (y * y) = x_3.
  (* Invariant *)
  Have: (x_4 / 2) <= x_3.
  (* Invariant *)
  Have: (0 <= i_1) /\ (i_1 <= y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (x * x) = x_2.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: pow(real_of_int(x), 2.0) = real_of_int(x_2).
  (* Invariant *)
  Have: (y = (-1)) \/ ((x_2 % x) = 0).
  (* Invariant *)
  Have: forall i_3 : Z. ((0 <= i_3) -> ((i_3 <= x) -> ((i_3 * i_3) <= x_2))).
}
Prove: (i * i) <= x_2.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (24ms) (692)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0002/21_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0002/21_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0002/21_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0002/21_merged.c, line 14):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = 1 + y + x_1.
Let x_3 = i * i.
Let x_4 = y * (y - 1).
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_2).
  (* Invariant *)
  Have: pow(.0, 2.0) = .0.
  (* Invariant *)
  Have: ((i_1 * i_1) = 0) /\ (i_1 <= 0) /\ (0 <= i_1).
  (* Invariant *)
  Have: y <= x_3.
  (* Invariant *)
  Have: pow(real_of_int(y), 2.0) = real_of_int(x_3).
  (* Invariant *)
  Have: x_3 = (y + x_4).
  (* Invariant *)
  Have: (y = 0) \/ ((x_3 % y) = 0).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= y) -> ((i_2 * i_2) <= x_3))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < y) -> ((i_2 * i_2) <= x_3))).
  (* Invariant *)
  Have: (y * y) = x_3.
  (* Invariant *)
  Have: (x_4 / 2) <= x_3.
  (* Invariant *)
  Have: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (x * x) = x_2.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: pow(real_of_int(x), 2.0) = real_of_int(x_2).
  (* Invariant *)
  Have: (y = (-1)) \/ ((x_2 % x) = 0).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= x) -> ((i_2 * i_2) <= x_2))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= y) -> ((i_2 * i_2) <= x_2))).
}
Prove: (x_1 / 2) <= x_2.
Prover Z3 4.8.12 returns Valid (Qed:10ms) (20ms) (53215)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (28ms) (899)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0002/21_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0002/21_merged.c, line 15):
Let x = 1 + y.
Let x_1 = y * x.
Let x_2 = 1 + y + x_1.
Let x_3 = i * i.
Let x_4 = y * (y - 1).
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_3) /\
      is_sint32(x_2).
  (* Invariant *)
  Have: pow(.0, 2.0) = .0.
  (* Invariant *)
  Have: ((i_1 * i_1) = 0) /\ (i_1 <= 0) /\ (0 <= i_1).
  (* Invariant *)
  Have: y <= x_3.
  (* Invariant *)
  Have: pow(real_of_int(y), 2.0) = real_of_int(x_3).
  (* Invariant *)
  Have: x_3 = (y + x_4).
  (* Invariant *)
  Have: (y = 0) \/ ((x_3 % y) = 0).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= y) -> ((i_2 * i_2) <= x_3))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < y) -> ((i_2 * i_2) <= x_3))).
  (* Invariant *)
  Have: (y * y) = x_3.
  (* Invariant *)
  Have: (x_4 / 2) <= x_3.
  (* Invariant *)
  Have: (0 <= i) /\ (i <= y).
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x_3.
  (* Then *)
  Have: tmp_0 != 0.
  Have: (x * x) = x_2.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: pow(real_of_int(x), 2.0) = real_of_int(x_2).
  (* Invariant *)
  Have: (y = (-1)) \/ ((x_2 % x) = 0).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= x) -> ((i_2 * i_2) <= x_2))).
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 <= y) -> ((i_2 * i_2) <= x_2))).
  (* Invariant *)
  Have: (x_1 / 2) <= x_2.
}
Prove: exists i_2 : Z. ((i_2 * i_2) = x_2) /\ (0 <= i_2) /\ (i_2 <= x).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:10ms) (24ms) (813)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0002/21_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.92ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0002/21_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0002/21_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (0.65ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0002/21_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0002/21_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.63ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/21_0002/21_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (7ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/21_0002/21_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Loop assigns (file out/21_0002/21_merged.c, line 19) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/21_0002/21_merged.c, line 19) (2/2):
Call Result at line 22
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/21_0002/21_merged.c:1: Warning: 
  No 'assigns' specification for function 'unknown'.
  Callers assumptions might be imprecise.
[wp:pedantic-assigns] out/21_0002/21_merged.c:2: Warning: 
  No 'assigns' specification for function 'main21'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/20_0002/20_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 36 goals scheduled
[wp] [Timeout] typed_main20_loop_invariant_4_preserved (Qed 2ms) (Z3)
[wp] [Timeout] typed_main20_loop_invariant_12_established (Qed 0.85ms) (Z3)
[wp] Proved goals:   34 / 36
  Qed:              31
  Alt-Ergo 2.5.4:    3 (3ms-7ms)
  Timeout:           2
------------------------------------------------------------
  Function main20
------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 17):
Assume {
  Type: is_sint32(n).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 2 <= n.
  (* Then *)
  Have: 0 < n.
}
Prove: false.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 17):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 19):
Let x = 1 + a.
Let x_1 = x * x.
Let x_2 = 2 + a.
Let x_3 = a * a.
Let x_4 = 3 * a.
Let x_5 = a * x.
Let x_6 = x_5 / 2.
Let x_7 = 2 * a.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(1 + x_7) /\
      is_sint32(3 + x_7) /\ is_sint32(x_1 - 1 - a) /\ is_sint32(2 + a + x_1).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: x_1 = (2 + x_7 + x_3).
  (* Invariant *)
  Have: x_1 = (2 + a + x_5).
  (* Invariant *)
  Have: x_1 = (2 + x_7 + x_6).
  (* Invariant *)
  Have: x_1 = (2 + a + x_6).
  (* Invariant *)
  Have: x_1 <= (2 + n + x_4).
  (* Invariant *)
  Have: x_1 <= (2 + a + n).
  (* Invariant *)
  Have: x_1 <= (n + x_4).
  (* Invariant *)
  Have: (2 + a + x_3) <= x_1.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: x_2 <= x_1.
  (* Then *)
  Have: x_1 <= (1 + a + n).
}
Prove: (x * x_2) = (1 + a + x_1).
Prover Z3 4.8.12 returns Valid (Qed:6ms) (10ms) (10167)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (3ms) (39)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 20):
Let x = 1 + a.
Let x_1 = x * (2 + a).
Let x_2 = 2 * a.
Let x_3 = 3 + x_2.
Let x_4 = a * a.
Let x_5 = 4 * a.
Let x_6 = a * x.
Let x_7 = x_6 / 2.
Let x_8 = 3 * a.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(1 + x_2) /\
      is_sint32(x_3) /\ is_sint32(1 + x_1) /\ is_sint32(x_1 - 2 - x_2).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: x_1 = (3 + x_8 + x_4).
  (* Invariant *)
  Have: x_1 = (3 + x_2 + x_6).
  (* Invariant *)
  Have: x_1 = (3 + x_8 + x_7).
  (* Invariant *)
  Have: x_1 = (3 + x_2 + x_7).
  (* Invariant *)
  Have: x_1 <= (3 + n + x_5).
  (* Invariant *)
  Have: x_1 <= (3 + n + x_2).
  (* Invariant *)
  Have: x_1 <= (1 + n + x_5).
  (* Invariant *)
  Have: (3 + x_2 + x_4) <= x_1.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: x_3 <= x_1.
  (* Then *)
  Have: x_1 <= (2 + n + x_2).
  (* Invariant *)
  Have: x_1 = (1 + a + (x * x)).
}
Prove: x_1 = (1 + a + (x_1 / 2)).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (10265)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (5ms) (41)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 21):
Let x = 1 + a.
Let x_1 = 2 + a.
Let x_2 = x * x_1.
Let x_3 = x_2 / 2.
Let x_4 = a * a.
Let x_5 = 3 * a.
Let x_6 = a * x.
Let x_7 = x_6 / 2.
Let x_8 = 2 * a.
Assume {
  Type: is_sint32(a) /\ is_sint32(n) /\ is_sint32(x) /\ is_sint32(1 + x_8) /\
      is_sint32(3 + x_8) /\ is_sint32(x_3 - 1 - a) /\ is_sint32(2 + a + x_3).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 2 <= n.
  (* Invariant *)
  Have: x_3 = (2 + x_8 + x_4).
  (* Invariant *)
  Have: x_3 = (2 + a + x_6).
  (* Invariant *)
  Have: x_3 = (2 + x_8 + x_7).
  (* Invariant *)
  Have: x_3 = (2 + a + x_7).
  (* Invariant *)
  Have: x_3 <= (2 + n + x_5).
  (* Invariant *)
  Have: x_3 <= (2 + a + n).
  (* Invariant *)
  Have: x_3 <= (n + x_5).
  (* Invariant *)
  Have: (2 + a + x_4) <= x_3.
  (* Invariant *)
  Have: 0 <= a.
  (* Invariant *)
  Have: x_1 <= x_3.
  (* Then *)
  Have: x_3 <= (1 + a + n).
  (* Invariant *)
  Have: x_3 = (x * x).
  (* Invariant *)
  Have: x_2 = (1 + a + x_3).
}
Prove: a = (-1).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (20ms) (32950)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (7ms) (38)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (0.69ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 25):
Assume { Type: is_sint32(n). (* Invariant *) Have: 0 <= n. }
Prove: 2 <= n.
Prover Z3 4.8.12 returns Timeout (Qed:0.85ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:0.85ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (0.53ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/20_0002/20_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/20_0002/20_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Assertion (file out/20_0002/20_merged.c, line 42):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/20_0002/20_merged.c, line 31):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/20_0002/20_merged.c:4: Warning: 
  No 'assigns' specification for function 'main20'.
  Callers assumptions might be imprecise.

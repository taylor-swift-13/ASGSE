[kernel] Parsing out/17_0001/17_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 21 goals scheduled
[wp] [Timeout] typed_main17_loop_invariant_4_preserved (Qed 5ms) (Z3)
[wp] Proved goals:   20 / 21
  Qed:            16
  Z3 4.8.12:       4 (10ms-83ms-170ms)
  Timeout:         1
------------------------------------------------------------
  Function main17
------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0001/17_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0001/17_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0001/17_merged.c, line 14):
Let x = c * c.
Let x_1 = x / 3.
Let x_2 = c * c * c.
Let x_3 = x_2 / 2.
Let x_4 = c * c * c * c.
Let x_5 = x_4 / 4.
Let x_6 = 1 + c.
Let x_7 = x_1 + x_3 + x_5.
Let x_8 = x_6 * x_6 * x_6.
Let x_9 = x_1 + x_3 + x_8 + x_5.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x_6) /\ is_sint32(x_7) /\
      is_sint32(x_9).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: ((x + x_2) / 2) = 0.
  (* Invariant *)
  Have: ((c * c * c * x_6) / 2) = x_7.
  (* Invariant *)
  Have: (x_1 + x_3) = 0.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: ((4 * x_1) + (4 * x_3) + (4 * x_5)) = (x + (2 * x_2) + x_4).
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
}
Prove: (((x_6 * x_6 * x_6 * x_6) / 4) + (((x_6 * x_6) + x_8) / 2)) = x_9.
Prover Z3 4.8.12 returns Valid (Qed:5ms) (120ms) (248147)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0001/17_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0001/17_merged.c, line 15):
Let x = 1 + y.
Let x_1 = (x * x * x * x) / 4.
Let x_2 = x * x * x.
Let x_3 = ((x * x) + x_2) / 2.
Let x_4 = y * y * y.
Let x_5 = y * y.
Let x_6 = y * y * y * y.
Let x_7 = x_1 + x_3.
Let x_8 = x_6 / 4.
Assume {
  Type: is_sint32(k) /\ is_sint32(y) /\ is_sint32(x) /\ is_sint32(x_7) /\
      is_sint32(x_1 + x_3 - x_2).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_7 = (x_2 + x_8 + ((x_5 + x_4) / 2)).
  (* Invariant *)
  Have: x_7 = (x_2 + ((y * y * y * x) / 2)).
  (* Invariant *)
  Have: x_7 = (x_2 + x_8).
  (* Invariant *)
  Have: x_7 = ((x_5 / 3) + (x_4 / 2) + x_2 + x_8).
  (* Invariant *)
  Have: y <= k.
  (* Invariant *)
  Have: ((4 * x_1) + (4 * x_3)) = (x_5 + (2 * x_4) + x_6 + (4 * x_2)).
  (* Invariant *)
  Have: 0 <= y.
  (* Then *)
  Have: y < k.
}
Prove: ((x * x * x * (2 + y)) / 2) = x_7.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (170ms) (336601)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0001/17_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0001/17_merged.c, line 16):
Let x = 1 + c.
Let x_1 = (x * x * x * (2 + c)) / 2.
Let x_2 = (x * x * x * x) / 4.
Let x_3 = x * x * x.
Let x_4 = c * c * c.
Let x_5 = c * c.
Let x_6 = c * c * c * c.
Let x_7 = x_6 / 4.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_1 - x_3).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_1 = (x_3 + x_7 + ((x_5 + x_4) / 2)).
  (* Invariant *)
  Have: x_1 = (x_3 + ((c * c * c * x) / 2)).
  (* Invariant *)
  Have: x_1 = (x_3 + x_7).
  (* Invariant *)
  Have: x_1 = ((x_5 / 3) + (x_4 / 2) + x_3 + x_7).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: (x_5 + (2 * x_4) + x_6 + (4 * x_3)) = (4 * x_1).
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: x_1 = (x_2 + (((x * x) + x_3) / 2)).
}
Prove: x_1 = x_2.
Prover Z3 4.8.12 returns Timeout (Qed:5ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:5ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0001/17_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0001/17_merged.c, line 17):
Let x = 1 + c.
Let x_1 = (x * x * x * x) / 4.
Let x_2 = x * x.
Let x_3 = x * x * x.
Let x_4 = c * c * c.
Let x_5 = c * c.
Let x_6 = c * c * c * c.
Let x_7 = x_6 / 4.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(x_1 - x_3).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_1 = (x_3 + x_7 + ((x_5 + x_4) / 2)).
  (* Invariant *)
  Have: x_1 = (x_3 + ((c * c * c * x) / 2)).
  (* Invariant *)
  Have: x_1 = (x_3 + x_7).
  (* Invariant *)
  Have: x_1 = ((x_5 / 3) + (x_4 / 2) + x_3 + x_7).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: (x_5 + (2 * x_4) + x_6 + (4 * x_3)) = (4 * x_1).
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: ((x_2 + x_3) / 2) = 0.
  (* Invariant *)
  Have: ((x * x * x * (2 + c)) / 2) = x_1.
}
Prove: ((x_2 / 3) + (x_3 / 2)) = 0.
Prover Z3 4.8.12 returns Valid (Qed:4ms) (30ms) (56550)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0001/17_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.58ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0001/17_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0001/17_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.51ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0001/17_merged.c, line 19):
Let x = 1 + c.
Let x_1 = x * x.
Let x_2 = x_1 / 3.
Let x_3 = x * x * x.
Let x_4 = x_3 / 2.
Let x_5 = x * x * x * x.
Let x_6 = x_5 / 4.
Let x_7 = x_2 + x_4 + x_6.
Let x_8 = (4 * x_2) + (4 * x_4) + (4 * x_6).
Let x_9 = c * c * c.
Let x_10 = c * c.
Let x_11 = c * c * c * c.
Let x_12 = x_11 / 4.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_7) /\
      is_sint32(x_2 + x_4 + x_6 - x_3).
  (* Pre-condition *)
  Have: k <= 30.
  (* Invariant *)
  Have: 0 <= k.
  (* Invariant *)
  Have: x_7 = (x_3 + x_12 + ((x_10 + x_9) / 2)).
  (* Invariant *)
  Have: x_7 = (x_3 + ((c * c * c * x) / 2)).
  (* Invariant *)
  Have: x_7 = (x_3 + x_12).
  (* Invariant *)
  Have: x_7 = ((x_10 / 3) + (x_9 / 2) + x_3 + x_12).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: x_8 = (x_10 + (2 * x_9) + x_11 + (4 * x_3)).
  (* Invariant *)
  Have: 0 <= c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: ((x_1 + x_3) / 2) = 0.
  (* Invariant *)
  Have: ((x * x * x * (2 + c)) / 2) = x_7.
  (* Invariant *)
  Have: (x_2 + x_4) = 0.
}
Prove: x_8 = (x_1 + (2 * x_3) + x_5).
Prover Z3 4.8.12 returns Valid (Qed:5ms) (10ms) (10543)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0001/17_merged.c, line 19):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0001/17_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0001/17_merged.c, line 20):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0001/17_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0001/17_merged.c, line 21):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/17_0001/17_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/17_0001/17_merged.c, line 22):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/17_0001/17_merged.c, line 23):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/17_0001/17_merged.c:4: Warning: 
  No 'assigns' specification for function 'main17'.
  Callers assumptions might be imprecise.

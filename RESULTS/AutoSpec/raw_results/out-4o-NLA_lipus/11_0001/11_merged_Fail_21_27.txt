[kernel] Parsing out/11_0001/11_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 27 goals scheduled
[wp] [Timeout] typed_main11_loop_invariant_4_preserved (Qed 10ms) (Alt-Ergo)
[wp] [Timeout] typed_main11_loop_invariant_5_preserved (Qed 7ms) (Alt-Ergo)
[wp] [Timeout] typed_main11_loop_invariant_5_established (Qed 1ms) (Z3)
[wp] [Timeout] typed_main11_loop_invariant_8_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_main11_loop_invariant_9_established (Qed 2ms) (Z3)
[wp] [Timeout] typed_main11_loop_invariant_10_established (Qed 2ms) (Z3)
[wp] Proved goals:   21 / 27
  Qed:              15
  Alt-Ergo 2.5.4:    6 (12ms-40ms-135ms)
  Timeout:           6
------------------------------------------------------------
  Function main11
------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 12):
Let x_2 = x_1 * z.
Let x_3 = x - x_2.
Let r = real_of_int(z).
Let x_4 = z - 1.
Let x_5 = c - 1.
Let x_6 = lxor(z, x_5).
Let x_7 = y * z * x_3.
Let x_8 = (lxor(-1, z) * x_3) / x_4.
Let x_9 = z * x_3.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y) /\ is_sint32(z) /\ is_sint32(y * z) /\ is_sint32(x_3) /\
      is_sint32(x_8).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Invariant *)
  Have: (x + (z * x_8)) = (x_2 + x_9 + x_8).
  (* Invariant *)
  Have: x_8 = x_9.
  (* Invariant *)
  Have: (x_2 + x_8) = x.
  (* Invariant *)
  Have: (x_9 / x_4) = 0.
  (* Invariant *)
  Have: x_8 = (x_3 * (z / x_4)).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (x_1 + x_7) = x.
  (* Invariant *)
  Have: pow(r, real_of_int(x_5)) = real_of_int(y).
  (* Invariant *)
  Have: (((1 - y) * x_3) + x_7) = x_1.
  (* Invariant *)
  Have: (y * x_3) = x_1.
  (* Invariant *)
  Have: ((x_6 * x_3) / x_4) = 0.
  (* Invariant *)
  Have: (x_3 * (x_6 / x_4)) = x_1.
  (* Invariant *)
  Have: ((lxor(z, c - 2) * x_3) / x_4) = x_1.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < c) ->
      ((real_of_int(x_3) * pow(r, real_of_int(i))) = real_of_int(x_1)))).
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
}
Prove: (x * z) = (x_2 + (y * z * z * x_3)).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:7ms) (20ms) (380)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 15):
Let x_2 = x_1 * z.
Let x_3 = x - x_2.
Let r = real_of_int(z).
Let x_4 = z - 1.
Let x_5 = c - 1.
Let x_6 = lxor(z, x_5).
Let x_7 = y * z * x_3.
Let x_8 = (lxor(-1, z) * x_3) / x_4.
Let x_9 = z * x_3.
Let x_10 = y * z.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y) /\ is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x_10) /\
      is_sint32(x_3) /\ is_sint32(x_8).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Invariant *)
  Have: (x + (z * x_8)) = (x_2 + x_9 + x_8).
  (* Invariant *)
  Have: x_8 = x_9.
  (* Invariant *)
  Have: (x_2 + x_8) = x.
  (* Invariant *)
  Have: (x_9 / x_4) = 0.
  (* Invariant *)
  Have: x_8 = (x_3 * (z / x_4)).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (x_1 + x_7) = x.
  (* Invariant *)
  Have: pow(r, real_of_int(x_5)) = real_of_int(y).
  (* Invariant *)
  Have: (((1 - y) * x_3) + x_7) = x_1.
  (* Invariant *)
  Have: (y * x_3) = x_1.
  (* Invariant *)
  Have: ((x_6 * x_3) / x_4) = 0.
  (* Invariant *)
  Have: (x_3 * (x_6 / x_4)) = x_1.
  (* Invariant *)
  Have: ((lxor(z, c - 2) * x_3) / x_4) = x_1.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < c) ->
      ((real_of_int(x_3) * pow(r, real_of_int(i))) = real_of_int(x_1)))).
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: (x * z) = (x_2 + (y * z * z * x_3)).
}
Prove: pow(r, real_of_int(c)) = real_of_int(x_10).
Prover Z3 4.8.12 returns Failed
out of memory
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:10ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (0.85ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 16):
Let r = real_of_int(z).
Let x_2 = y * z.
Let x_3 = x_1 * z.
Let x_4 = x - x_3.
Let x_5 = y * z * z * x_4.
Let x_6 = z - 1.
Let x_7 = c - 1.
Let x_8 = lxor(z, x_7).
Let x_9 = y * z * x_4.
Let x_10 = (lxor(-1, z) * x_4) / x_6.
Let x_11 = z * x_4.
Assume {
  Type: is_sint32(c) /\ is_sint32(k) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y) /\ is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x_2) /\
      is_sint32(x_4) /\ is_sint32(x_10).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Invariant *)
  Have: (x + (z * x_10)) = (x_3 + x_11 + x_10).
  (* Invariant *)
  Have: x_10 = x_11.
  (* Invariant *)
  Have: (x_3 + x_10) = x.
  (* Invariant *)
  Have: (x_11 / x_6) = 0.
  (* Invariant *)
  Have: x_10 = (x_4 * (z / x_6)).
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: (x_1 + x_9) = x.
  (* Invariant *)
  Have: pow(r, real_of_int(x_7)) = real_of_int(y).
  (* Invariant *)
  Have: (((1 - y) * x_4) + x_9) = x_1.
  (* Invariant *)
  Have: (y * x_4) = x_1.
  (* Invariant *)
  Have: ((x_8 * x_4) / x_6) = 0.
  (* Invariant *)
  Have: (x_4 * (x_8 / x_6)) = x_1.
  (* Invariant *)
  Have: ((lxor(z, c - 2) * x_4) / x_6) = x_1.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < c) ->
      ((real_of_int(x_4) * pow(r, real_of_int(i))) = real_of_int(x_1)))).
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: (x * z) = (x_3 + x_5).
  (* Invariant *)
  Have: pow(r, real_of_int(c)) = real_of_int(x_2).
}
Prove: (((1 - x_2) * x_4) + x_5) = x.
Prover Z3 4.8.12 returns Failed
out of memory
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:7ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 16):
Assume {
  Type: is_sint32(a) /\ is_sint32(k) /\ is_sint32(z).
  (* Pre-condition *)
  Have: (0 < k) /\ (0 <= z) /\ (k <= 10) /\ (z <= 10).
}
Prove: (a * z) = a.
Prover Z3 4.8.12 returns Timeout (Qed:1ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:1ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 17):
Let r = real_of_int(z).
Let x = y * z.
Let x_1 = a * y * z * z.
Let x_2 = a * (1 - x).
Let x_3 = x_1 + x_2.
Let x_4 = z - 1.
Let x_5 = (a * lxor(z, c - 2)) / x_4.
Let x_6 = a + (z * x_5).
Let x_7 = c - 1.
Let x_8 = lxor(z, x_7).
Let x_9 = a * y.
Let x_10 = a * y * z.
Assume {
  Type: is_sint32(a) /\ is_sint32(c) /\ is_sint32(k) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x) /\ is_sint32(x_5) /\
      is_sint32(x_3).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Invariant *)
  Have: ((a * z) = a) /\ (((a * lxor(-1, z)) / x_4) = a).
  (* Invariant *)
  Have: (a / x_4) = 0.
  (* Invariant *)
  Have: (a * (z / x_4)) = a.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: x_6 = (x_10 + x_5).
  (* Invariant *)
  Have: pow(r, real_of_int(x_7)) = real_of_int(y).
  (* Invariant *)
  Have: x_5 = (x_10 + (a * (1 - y))).
  (* Invariant *)
  Have: x_5 = x_9.
  (* Invariant *)
  Have: x_5 = (x_9 + ((a * x_8) / x_4)).
  (* Invariant *)
  Have: x_5 = (a * (x_8 / x_4)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < c) ->
      ((real_of_int(a) * pow(r, real_of_int(i))) = real_of_int(x_5)))).
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  Have: x_6 = x_3.
  (* Invariant *)
  Have: (a + (z * x_3)) = ((2 * x_1) + x_2).
  (* Invariant *)
  Have: pow(r, real_of_int(c)) = real_of_int(x).
}
Prove: x_10 = x_3.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (24ms) (465)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.67ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.91ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 19):
Let x = y * z.
Let r = real_of_int(z).
Let x_1 = c - 1.
Let x_2 = lxor(z, x_1).
Let x_3 = z - 1.
Assume {
  Type: is_sint32(a) /\ is_sint32(c) /\ is_sint32(k) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Invariant *)
  Have: ((a * z) = a) /\ (((a * lxor(-1, z)) / x_3) = a).
  (* Invariant *)
  Have: (a / x_3) = 0.
  (* Invariant *)
  Have: (a * (z / x_3)) = a.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: ((a * lxor(z, c - 2)) / x_3) = 0.
  (* Invariant *)
  Have: pow(r, real_of_int(x_1)) = real_of_int(y).
  (* Invariant *)
  Have: (a + (a * (1 - y))) = 0.
  (* Invariant *)
  Have: (a * y) = 0.
  (* Invariant *)
  Have: ((a * x_2) / x_3) = 0.
  (* Invariant *)
  Have: (a * (x_2 / x_3)) = 0.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < c) ->
      ((real_of_int(a) * pow(r, real_of_int(i))) = .0))).
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  Have: (a * y * z) = a.
  (* Invariant *)
  Have: pow(r, real_of_int(c)) = real_of_int(x).
  (* Invariant *)
  Have: ((a * y * z * z) + (a * (1 - x))) = a.
}
Prove: ((a * lxor(c, z)) / x_3) = 0.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:5ms) (12ms) (123)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 19):
Assume {
  Type: is_sint32(a) /\ is_sint32(k) /\ is_sint32(z).
  (* Pre-condition *)
  Have: (0 < k) /\ (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Invariant *)
  Have: (a * z) = a.
}
Prove: (a / (z - 1)) = 0.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 20):
Let x = lxor(c, z).
Let x_1 = z - 1.
Let x_2 = y * z.
Let r = real_of_int(z).
Let x_3 = c - 1.
Let x_4 = lxor(z, x_3).
Assume {
  Type: is_sint32(a) /\ is_sint32(c) /\ is_sint32(k) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x_2).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Invariant *)
  Have: ((a * z) = a) /\ (((a * lxor(-1, z)) / x_1) = a).
  (* Invariant *)
  Have: (a / x_1) = 0.
  (* Invariant *)
  Have: (a * (z / x_1)) = a.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: ((a * lxor(z, c - 2)) / x_1) = 0.
  (* Invariant *)
  Have: pow(r, real_of_int(x_3)) = real_of_int(y).
  (* Invariant *)
  Have: (a + (a * (1 - y))) = 0.
  (* Invariant *)
  Have: (a * y) = 0.
  (* Invariant *)
  Have: ((a * x_4) / x_1) = 0.
  (* Invariant *)
  Have: (a * (x_4 / x_1)) = 0.
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < c) ->
      ((real_of_int(a) * pow(r, real_of_int(i))) = .0))).
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  (* Invariant *)
  Have: (a * y * z) = a.
  (* Invariant *)
  Have: pow(r, real_of_int(c)) = real_of_int(x_2).
  (* Invariant *)
  Have: ((a * y * z * z) + (a * (1 - x_2))) = a.
  (* Invariant *)
  Have: ((a * x) / x_1) = 0.
}
Prove: (a * (x / x_1)) = a.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:6ms) (15ms) (175)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 20):
Let x = z - 1.
Assume {
  Type: is_sint32(a) /\ is_sint32(k) /\ is_sint32(z).
  (* Pre-condition *)
  Have: (0 < k) /\ (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Invariant *)
  Have: ((a * z) = a) /\ ((a / x) = 0).
}
Prove: (a * (z / x)) = a.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 21):
Let x = lxor(c, z).
Let x_1 = z - 1.
Let x_2 = x / x_1.
Let x_3 = a * x_2.
Let x_4 = a * y * z.
Let x_5 = a * y * z * z.
Let x_6 = y * z.
Let r = real_of_int(z).
Let x_7 = (a * lxor(z, c - 2)) / x_1.
Let x_8 = a + (z * x_7).
Let x_9 = c - 1.
Let x_10 = lxor(z, x_9).
Let x_11 = a * y.
Let x_12 = (a * x_10) / x_1.
Assume {
  Type: is_sint32(a) /\ is_sint32(c) /\ is_sint32(k) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x_6) /\ is_sint32(x_3) /\
      is_sint32(x_7).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Invariant *)
  Have: ((a * z) = a) /\ (((a * lxor(-1, z)) / x_1) = a).
  (* Invariant *)
  Have: (a / x_1) = 0.
  (* Invariant *)
  Have: (a * (z / x_1)) = a.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: x_8 = (x_4 + x_7).
  (* Invariant *)
  Have: pow(r, real_of_int(x_9)) = real_of_int(y).
  (* Invariant *)
  Have: x_7 = (x_4 + (a * (1 - y))).
  (* Invariant *)
  Have: x_7 = x_11.
  (* Invariant *)
  Have: x_7 = (x_11 + x_12).
  (* Invariant *)
  Have: x_7 = (a * (x_10 / x_1)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: forall i : Z. ((0 < i) -> ((i < c) ->
      ((real_of_int(a) * pow(r, real_of_int(i))) = real_of_int(x_7)))).
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  Have: x_3 = x_8.
  (* Invariant *)
  Have: (a + (a * z * x_2)) = (x_5 + x_3).
  (* Invariant *)
  Have: pow(r, real_of_int(c)) = real_of_int(x_6).
  (* Invariant *)
  Have: x_3 = (x_5 + (a * (1 - x_6))).
  (* Invariant *)
  Have: x_3 = x_4.
  (* Invariant *)
  Have: x_3 = (x_4 + ((a * x) / x_1)).
}
Prove: x_12 = x_3.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:9ms) (35ms) (779)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 21):
Let x = z - 1.
Let x_1 = z / x.
Assume {
  Type: is_sint32(a) /\ is_sint32(k) /\ is_sint32(z).
  (* Pre-condition *)
  Have: (0 < k) /\ (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Invariant *)
  Have: ((a * x_1) = a) /\ ((a * z * x_1) = a).
  (* Invariant *)
  Have: (a * z) = a.
  (* Invariant *)
  Have: (a / x) = 0.
}
Prove: ((a * lxor(-1, z)) / x) = a.
Prover Z3 4.8.12 returns Timeout (Qed:2ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 23):
Let x = c - 1.
Let x_1 = lxor(z, x).
Let x_2 = z - 1.
Let x_3 = (a * x_1) / x_2.
Let x_4 = lxor(c, z).
Let x_5 = a * y * z.
Let x_6 = a * y * z * z.
Let x_7 = y * z.
Let r = real_of_int(z).
Let x_8 = (a * lxor(z, c - 2)) / x_2.
Let x_9 = a + (z * x_8).
Let r_1 = real_of_int(a).
Let x_10 = a * y.
Assume {
  Type: is_sint32(a) /\ is_sint32(c) /\ is_sint32(k) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(1 + c) /\ is_sint32(x_7) /\ is_sint32(x_8) /\
      is_sint32(x_3).
  (* Goal *)
  When: (0 < i) /\ (i <= c).
  (* Pre-condition *)
  Have: (0 <= z) /\ (k <= 10) /\ (z <= 10).
  (* Invariant *)
  Have: ((a * z) = a) /\ (((a * lxor(-1, z)) / x_2) = a).
  (* Invariant *)
  Have: (a / x_2) = 0.
  (* Invariant *)
  Have: (a * (z / x_2)) = a.
  (* Invariant *)
  Have: 0 < k.
  (* Invariant *)
  Have: x_9 = (x_5 + x_8).
  (* Invariant *)
  Have: pow(r, real_of_int(x)) = real_of_int(y).
  (* Invariant *)
  Have: x_8 = (x_5 + (a * (1 - y))).
  (* Invariant *)
  Have: x_8 = x_10.
  (* Invariant *)
  Have: x_8 = (x_10 + x_3).
  (* Invariant *)
  Have: x_8 = (a * (x_1 / x_2)).
  (* Invariant *)
  Have: c <= k.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 < i_1) -> ((i_1 < c) ->
      ((r_1 * pow(r, real_of_int(i_1))) = real_of_int(x_8)))).
  (* Invariant *)
  Have: 0 < c.
  (* Then *)
  Have: c < k.
  Have: x_3 = x_9.
  (* Invariant *)
  Have: (a + (z * x_3)) = (x_6 + x_3).
  (* Invariant *)
  Have: pow(r, real_of_int(c)) = real_of_int(x_7).
  (* Invariant *)
  Have: x_3 = (x_6 + (a * (1 - x_7))).
  (* Invariant *)
  Have: x_3 = x_5.
  (* Invariant *)
  Have: x_3 = (x_5 + ((a * x_4) / x_2)).
  (* Invariant *)
  Have: x_3 = (a * (x_4 / x_2)).
}
Prove: (r_1 * pow(r, real_of_int(i))) = real_of_int(x_3).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:8ms) (135ms) (3320)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (0.81ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/11_0001/11_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/11_0001/11_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/11_0001/11_merged.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/11_0001/11_merged.c:4: Warning: 
  No 'assigns' specification for function 'main11'.
  Callers assumptions might be imprecise.

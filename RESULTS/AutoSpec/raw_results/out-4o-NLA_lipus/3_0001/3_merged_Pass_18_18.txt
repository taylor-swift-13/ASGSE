[kernel] Parsing out/3_0001/3_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 18 goals scheduled
[wp] Proved goals:   18 / 18
  Qed:              12
  Alt-Ergo 2.5.4:    6
------------------------------------------------------------
  Function main3
------------------------------------------------------------

Goal Preservation of Invariant (file out/3_0001/3_merged.c, line 10):
Let x_1 = r_2 + (q_2 * y).
Let x_2 = x / y.
Assume {
  Type: is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: r_2 < y.
  (* Invariant *)
  Have: q_2 <= x_2.
  (* Invariant *)
  Have: 0 <= r_2.
  (* Invariant *)
  Have: 0 <= q_2.
  (* Then *)
  Have: x_1 < x.
  If (1 + r_2) = y
  Then { Have: q_2 = q_1. Have: r = 0. Have: (1 + q_1) = q. }
  Else { Have: (q_2 = q) /\ (r_2 = r_1). Have: (1 + r_1) = r. }
}
Prove: (r + (q * y)) <= x.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (20ms) (65759)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (71)

------------------------------------------------------------

Goal Establishment of Invariant (file out/3_0001/3_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/3_0001/3_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/3_0001/3_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/3_0001/3_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/3_0001/3_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/3_0001/3_merged.c, line 13):
Let x_1 = r_2 + (q_2 * y).
Let x_2 = x / y.
Assume {
  Type: is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: r_2 < y.
  (* Invariant *)
  Have: q_2 <= x_2.
  (* Invariant *)
  Have: 0 <= r_2.
  (* Invariant *)
  Have: 0 <= q_2.
  (* Then *)
  Have: x_1 < x.
  If (1 + r_2) = y
  Then { Have: q_2 = q_1. Have: r = 0. Have: (1 + q_1) = q. }
  Else { Have: (q_2 = q) /\ (r_2 = r_1). Have: (1 + r_1) = r. }
  (* Invariant *)
  Have: (r + (q * y)) <= x.
}
Prove: r < y.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (34668)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (7ms) (74)

------------------------------------------------------------

Goal Establishment of Invariant (file out/3_0001/3_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/3_0001/3_merged.c, line 14):
Let x_1 = r_2 + (q_2 * y).
Let x_2 = x / y.
Assume {
  Type: is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: 0 <= x_2.
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: r_2 < y.
  (* Invariant *)
  Have: q_2 <= x_2.
  (* Invariant *)
  Have: 0 <= r_2.
  (* Invariant *)
  Have: 0 <= q_2.
  (* Then *)
  Have: x_1 < x.
  If (1 + r_2) = y
  Then { Have: q_2 = q_1. Have: r = 0. Have: (1 + q_1) = q. }
  Else { Have: (q_2 = q) /\ (r_2 = r_1). Have: (1 + r_1) = r. }
  (* Invariant *)
  Have: (r + (q * y)) <= x.
  (* Invariant *)
  Have: r < y.
}
Prove: q <= x_2.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (16ms) (382)

------------------------------------------------------------

Goal Establishment of Invariant (file out/3_0001/3_merged.c, line 14):
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < y.
}
Prove: 0 <= (x / y).
Prover Z3 4.8.12 returns Valid (Qed:0.72ms) (10ms) (29771)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:0.72ms) (5ms) (32)

------------------------------------------------------------

Goal Preservation of Invariant (file out/3_0001/3_merged.c, line 15):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/3_0001/3_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/3_0001/3_merged.c, line 16):
Let x_1 = x / y.
Let x_2 = r_2 + (q_2 * y).
Assume {
  Type: is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: x_2 <= x.
  (* Invariant *)
  Have: r_2 < y.
  (* Invariant *)
  Have: q_2 <= x_1.
  (* Invariant *)
  Have: 0 <= r_2.
  (* Invariant *)
  Have: 0 <= q_2.
  (* Then *)
  Have: x_2 < x.
  If (1 + r_2) = y
  Then { Have: q_2 = q_1. Have: r = 0. Have: (1 + q_1) = q. }
  Else { Have: (q_2 = q) /\ (r_2 = r_1). Have: (1 + r_1) = r. }
  (* Invariant *)
  Have: (r + (q * y)) <= x.
  (* Invariant *)
  Have: r < y.
  (* Invariant *)
  Have: q <= x_1.
}
Prove: 0 <= r.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (34380)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (73)

------------------------------------------------------------

Goal Establishment of Invariant (file out/3_0001/3_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/3_0001/3_merged.c, line 17):
Let x_1 = x / y.
Let x_2 = r_2 + (q_2 * y).
Assume {
  Type: is_sint32(q) /\ is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\
      is_sint32(r_1) /\ is_sint32(r_2) /\ is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 < x.
  (* Invariant *)
  Have: 0 < y.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Invariant *)
  Have: x_2 <= x.
  (* Invariant *)
  Have: r_2 < y.
  (* Invariant *)
  Have: q_2 <= x_1.
  (* Invariant *)
  Have: 0 <= r_2.
  (* Invariant *)
  Have: 0 <= q_2.
  (* Then *)
  Have: x_2 < x.
  If (1 + r_2) = y
  Then { Have: q_2 = q_1. Have: r = 0. Have: (1 + q_1) = q. }
  Else { Have: (q_2 = q) /\ (r_2 = r_1). Have: (1 + r_1) = r. }
  (* Invariant *)
  Have: (r + (q * y)) <= x.
  (* Invariant *)
  Have: r < y.
  (* Invariant *)
  Have: q <= x_1.
  (* Invariant *)
  Have: 0 <= r.
}
Prove: 0 <= q.
Prover Z3 4.8.12 returns Valid (Qed:3ms) (10ms) (35217)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:3ms) (2ms) (75)

------------------------------------------------------------

Goal Establishment of Invariant (file out/3_0001/3_merged.c, line 17):
Prove: true.
Prover Qed returns Valid (0.62ms)

------------------------------------------------------------

Goal Assertion (file out/3_0001/3_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/3_0001/3_merged.c, line 18):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/3_0001/3_merged.c:4: Warning: 
  No 'assigns' specification for function 'main3'.
  Callers assumptions might be imprecise.

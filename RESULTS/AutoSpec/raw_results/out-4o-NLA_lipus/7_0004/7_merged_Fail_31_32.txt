[kernel] Parsing out/7_0004/7_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 32 goals scheduled
[wp] [Timeout] typed_main7_loop_invariant_10_preserved (Qed 53ms) (Z3)
[wp] Proved goals:   31 / 32
  Qed:              26
  Alt-Ergo 2.5.4:    5 (8ms-1.7s-7.7s)
  Timeout:           1
------------------------------------------------------------
  Function main7
------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 18):
Let x_1 = p * x.
Let x_2 = 2 * x_1.
Let x_3 = r * y.
Let x_4 = 2 * x_3.
Let x_5 = x_2 + x_4.
Let x_6 = x + y.
Let x_7 = x_1 + x_3.
Let x_8 = q - p.
Let x_9 = s - r.
Assume {
  Type: is_sint32(p) /\ is_sint32(q) /\ is_sint32(r) /\ is_sint32(s) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_8) /\ is_sint32(x_9) /\
      is_sint32(x_7) /\ is_sint32(x + y - x_2 - x_4) /\
      is_sint32(x + y - x_1 - x_3).
  (* Residual *)
  When: x_5 <= x_6.
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: (x_1 + (q * x) + x_3 + (s * y)) = x_6.
  (* Invariant *)
  Have: x <= x_7.
  (* Invariant *)
  Have: (0 < x_7) /\ (x_7 < x_6).
  (* Invariant *)
  Have: x_7 <= x.
  (* Then *)
  Have: x_5 != x_6.
}
Prove: (x_2 + x_4 + (x * x_8) + (y * x_9)) = x_6.
Prover Z3 4.8.12 returns Valid (Qed:22ms) (10ms) (10111)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:22ms) (9ms) (116)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 19):
Let x_1 = p * x.
Let x_2 = r * y.
Let x_3 = x_1 + x_2.
Let x_4 = x + y.
Let x_5 = q * x.
Let x_6 = s * y.
Let x_7 = p - q.
Let x_8 = r - s.
Assume {
  Type: is_sint32(p) /\ is_sint32(q) /\ is_sint32(r) /\ is_sint32(s) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_7) /\ is_sint32(x_8) /\
      is_sint32(x_3) /\ is_sint32(x_5 + x_6) /\
      is_sint32(x + y - x_1 - x_2) /\ is_sint32(x_1 + x_2 - x_5 - x_6).
  (* Residual *)
  When: x_4 < ((2 * x_1) + (2 * x_2)).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: (x_1 + x_5 + x_2 + x_6) = x_4.
  (* Invariant *)
  Have: x <= x_3.
  (* Invariant *)
  Have: (0 < x_3) /\ (x_3 < x_4).
  (* Invariant *)
  Have: x_3 <= x.
}
Prove: (x_5 + x_6 + (x * x_7) + (y * x_8)) = x_3.
Prover Z3 4.8.12 returns Valid (Qed:45ms) (10131)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:45ms) (8ms) (159)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.87ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 21):
Let x_1 = x + y.
Let x_2 = p_1 * x.
Let x_3 = r_1 * y.
Let x_4 = (2 * x_2) + (2 * x_3).
Let x_5 = x_2 + x_3.
Let x_6 = (q * x) + (s * y).
Assume {
  Type: is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(q) /\ is_sint32(q_1) /\
      is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\ is_sint32(s) /\
      is_sint32(s_1) /\ is_sint32(s_2) /\ is_sint32(x) /\ is_sint32(y) /\
      is_sint32((p * x) + (r * y)) /\ is_sint32(x_5) /\ is_sint32(x_6) /\
      is_sint32(x + y - x_2 - x_3).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: (x_2 + (q_2 * x) + x_3 + (s_2 * y)) = x_1.
  (* Invariant *)
  Have: x <= x_5.
  (* Invariant *)
  Have: (0 < x_5) /\ (x_5 < x_1).
  (* Invariant *)
  Have: x_5 <= x.
  (* Then *)
  Have: x_4 != x_1.
  If x_1 < x_4
  Then {
    Let x_7 = p + q.
    Let x_8 = r + s.
    Let x_9 = q * x.
    Let x_10 = s * y.
    Let x_11 = p * x.
    Let x_12 = r * y.
    Have: (q_2 = q) /\ (s_2 = s) /\ (x_7 = p_1) /\ (x_8 = r_1) /\
        ((x_11 + x_12 + (2 * x_9) + (2 * x_10)) = x_1) /\
        (((x * x_7) + (y * x_8)) = (x_11 + x_9 + x_12 + x_10)).
  }
  Else {
    Have: (p_1 = p) /\ (q_2 = q_1) /\ (r_1 = r) /\ (s_2 = s_1) /\
        (x_7 = q_1) /\ (x_8 = s_1) /\
        (((2 * x_11) + (2 * x_12) + (x * (q_1 - p)) + (y * (s_1 - r))) = x_1).
  }
}
Prove: x_6 <= y.
Prover Alt-Ergo 2.5.4 returns Valid (Qed:47ms) (587ms) (3175)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.93ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 22):
Let x_1 = (q * x) + (s * y).
Let x_2 = x + y.
Let x_3 = p_2 * x.
Let x_4 = r_2 * y.
Let x_5 = (2 * x_3) + (2 * x_4).
Let x_6 = x_3 + x_4.
Let x_7 = (p * x) + (r * y).
Assume {
  Type: is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_7) /\ is_sint32(x_6) /\
      is_sint32(x_1) /\ is_sint32(x + y - x_3 - x_4).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: (x_3 + (q_2 * x) + x_4 + (s_2 * y)) = x_2.
  (* Invariant *)
  Have: x <= x_6.
  (* Invariant *)
  Have: (0 < x_6) /\ (x_6 < x_2).
  (* Invariant *)
  Have: x_6 <= x.
  (* Then *)
  Have: x_5 != x_2.
  If x_2 < x_5
  Then {
    Let x_8 = q * x.
    Let x_9 = s * y.
    Let x_10 = x * (p_1 - q).
    Let x_11 = y * (r_1 - s).
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (((2 * x_8) + (2 * x_9) + x_10 + x_11) = x_2) /\
        ((x_8 + x_9 + x_10 + x_11) = ((p_1 * x) + (r_1 * y))).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        ((x_8 + x_9 + (2 * (x * (q_1 - q))) + (2 * (y * (s_1 - s)))) = x_2).
  }
  (* Invariant *)
  Have: x_1 <= y.
}
Prove: (0 < x_7) /\ (0 < x_1).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:59ms) (7.7s) (8223)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 25):
Let x_1 = q * x.
Let x_2 = s * y.
Let x_3 = x_1 + x_2.
Let x_4 = p - q.
Let x_5 = x * x_4.
Let x_6 = r - s.
Let x_7 = y * x_6.
Let x_8 = x_5 + x_7.
Let x_9 = x + y.
Let x_10 = x_1 + x_2 + x_5 + x_7.
Let x_11 = p * x.
Let x_12 = r * y.
Let x_13 = x_11 + x_12.
Assume {
  Type: is_sint32(p) /\ is_sint32(q) /\ is_sint32(r) /\ is_sint32(s) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_4) /\ is_sint32(x_6) /\
      is_sint32(x_13) /\ is_sint32(x_3) /\ is_sint32(x + y - x_11 - x_12) /\
      is_sint32(x_8) /\ is_sint32(x_10).
  (* Residual *)
  When: x_9 < ((2 * x_11) + (2 * x_12)).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: (x_11 + x_1 + x_12 + x_2) = x_9.
  (* Invariant *)
  Have: x <= x_13.
  (* Invariant *)
  Have: (0 < x_13) /\ (x_13 < x_9).
  (* Invariant *)
  Have: x_13 <= x.
  Have: (((2 * x_1) + (2 * x_2) + x_5 + x_7) = x_9) /\ (x_10 = x_13).
  (* Invariant *)
  Have: x_3 <= y.
  (* Invariant *)
  Have: (0 < x_3) /\ (0 < x_8).
}
Prove: x_8 <= x.
Prover Z3 4.8.12 returns Valid (Qed:50ms) (10ms) (34056)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:50ms) (10ms) (208)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 27):
Let x_1 = p * x.
Let x_2 = r * y.
Let x_3 = x_1 + x_2.
Let x_4 = q * x.
Let x_5 = s * y.
Let x_6 = x_4 + x_5.
Let x_7 = x + y.
Let x_8 = p_2 * x.
Let x_9 = r_2 * y.
Let x_10 = (2 * x_8) + (2 * x_9).
Let x_11 = x_8 + x_9.
Assume {
  Type: is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_3) /\ is_sint32(x_11) /\
      is_sint32(x_6) /\ is_sint32(x + y - x_8 - x_9).
  (* Goal *)
  When: x_6 != x_3.
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: (x_8 + (q_2 * x) + x_9 + (s_2 * y)) = x_7.
  (* Invariant *)
  Have: x <= x_11.
  (* Invariant *)
  Have: (0 < x_11) /\ (x_11 < x_7).
  (* Invariant *)
  Have: x_11 <= x.
  (* Then *)
  Have: x_10 != x_7.
  If x_7 < x_10
  Then {
    Let x_12 = x * (p_1 - q).
    Let x_13 = y * (r_1 - s).
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (((2 * x_4) + (2 * x_5) + x_12 + x_13) = x_7) /\
        ((x_4 + x_5 + x_12 + x_13) = ((p_1 * x) + (r_1 * y))).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        ((x_4 + x_5 + (2 * (x * (q_1 - q))) + (2 * (y * (s_1 - s)))) = x_7).
  }
  (* Invariant *)
  Have: x_6 <= y.
  (* Invariant *)
  Have: (0 < x_3) /\ (0 < x_6).
  (* Invariant *)
  Have: x_3 <= x.
}
Prove: (x_1 + x_4 + x_2 + x_5) = x_7.
Prover Z3 4.8.12 returns Timeout (Qed:53ms) (8s)
Prover Alt-Ergo 2.5.4 returns Timeout (Qed:53ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 32):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Assertion (file out/7_0004/7_merged.c, line 53):
Prove: true.
Prover Qed returns Valid (3ms)

------------------------------------------------------------

Goal Loop assigns (file out/7_0004/7_merged.c, line 33):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/7_0004/7_merged.c:5: Warning: 
  No 'assigns' specification for function 'main7'.
  Callers assumptions might be imprecise.

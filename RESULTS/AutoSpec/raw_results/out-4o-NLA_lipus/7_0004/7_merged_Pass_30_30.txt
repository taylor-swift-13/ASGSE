[kernel] Parsing out/7_0004/7_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 30 goals scheduled
[wp] Proved goals:   30 / 30
  Qed:              25
  Alt-Ergo 2.5.4:    5 (3ms-221ms-1s)
------------------------------------------------------------
  Function main7
------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 18):
Let x_1 = q * x.
Let x_2 = s * y.
Let x_3 = x_1 + x_2.
Let x_4 = p * x.
Let x_5 = r * y.
Let x_6 = x_4 + x_5.
Let x_7 = q - p.
Let x_8 = s - r.
Assume {
  Type: is_sint32(p) /\ is_sint32(q) /\ is_sint32(r) /\ is_sint32(s) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_7) /\ is_sint32(x_8) /\
      is_sint32(x_6) /\ is_sint32(x_3) /\ is_sint32(x_1 + x_2 - x_4 - x_5).
  (* Residual *)
  When: x_6 <= x_3.
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_3 <= y.
  (* Invariant *)
  Have: (0 < x_6) /\ (0 < x_3).
  (* Invariant *)
  Have: x_6 <= x.
  (* Then *)
  Have: x_3 != x_6.
}
Prove: (x_4 + x_5 + (x * x_7) + (y * x_8)) = x_3.
Prover Z3 4.8.12 returns Valid (Qed:17ms) (10ms) (9965)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:17ms) (6ms) (131)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 18):
Prove: true.
Prover Qed returns Valid (0.71ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 19):
Let x_1 = p * x.
Let x_2 = r * y.
Let x_3 = x_1 + x_2.
Let x_4 = q * x.
Let x_5 = s * y.
Let x_6 = x_4 + x_5.
Let x_7 = p - q.
Let x_8 = r - s.
Assume {
  Type: is_sint32(p) /\ is_sint32(q) /\ is_sint32(r) /\ is_sint32(s) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_7) /\ is_sint32(x_8) /\
      is_sint32(x_3) /\ is_sint32(x_6) /\ is_sint32(x_1 + x_2 - x_4 - x_5).
  (* Residual *)
  When: x_6 < x_3.
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_6 <= y.
  (* Invariant *)
  Have: (0 < x_3) /\ (0 < x_6).
  (* Invariant *)
  Have: x_3 <= x.
}
Prove: (x_4 + x_5 + (x * x_7) + (y * x_8)) = x_3.
Prover Z3 4.8.12 returns Valid (Qed:49ms) (10ms) (9935)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:49ms) (3ms) (129)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 19):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 20):
Prove: true.
Prover Qed returns Valid (0.85ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 21):
Let x_1 = p * x.
Let x_2 = r * y.
Let x_3 = q - p.
Let x_4 = x * x_3.
Let x_5 = s - r.
Let x_6 = y * x_5.
Let x_7 = x_1 + x_2 + x_4 + x_6.
Let x_8 = (q * x) + (s * y).
Let x_9 = x_1 + x_2.
Let x_10 = x_4 + x_6.
Assume {
  Type: is_sint32(p) /\ is_sint32(q) /\ is_sint32(r) /\ is_sint32(s) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_3) /\ is_sint32(x_5) /\
      is_sint32(x_9) /\ is_sint32(x_8) /\ is_sint32(x_10) /\ is_sint32(x_7).
  (* Residual *)
  When: x_9 <= x_8.
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_8 <= y.
  (* Invariant *)
  Have: (0 < x_9) /\ (0 < x_8).
  (* Invariant *)
  Have: x_9 <= x.
  (* Then *)
  Have: x_8 != x_9.
  Have: x_7 = x_8.
}
Prove: x_10 <= y.
Prover Z3 4.8.12 returns Valid (Qed:45ms) (10ms) (33065)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:45ms) (12ms) (195)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 21):
Prove: true.
Prover Qed returns Valid (0.98ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 22):
Let x_1 = (q * x) + (s * y).
Let x_2 = (q_2 * x) + (s_2 * y).
Let x_3 = (p_2 * x) + (r_2 * y).
Let x_4 = (p * x) + (r * y).
Assume {
  Type: is_sint32(p) /\ is_sint32(p_1) /\ is_sint32(p_2) /\ is_sint32(q) /\
      is_sint32(q_1) /\ is_sint32(q_2) /\ is_sint32(r) /\ is_sint32(r_1) /\
      is_sint32(r_2) /\ is_sint32(s) /\ is_sint32(s_1) /\ is_sint32(s_2) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_4) /\ is_sint32(x_3) /\
      is_sint32(x_1) /\ is_sint32(x_2).
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_2 <= y.
  (* Invariant *)
  Have: (0 < x_3) /\ (0 < x_2).
  (* Invariant *)
  Have: x_3 <= x.
  (* Then *)
  Have: x_2 != x_3.
  If x_2 < x_3
  Then {
    Have: (p_2 = p_1) /\ (q_2 = q) /\ (r_2 = r_1) /\ (s_2 = s) /\
        (((q * x) + (s * y) + (x * (p_1 - q)) + (y * (r_1 - s)))
           = ((p_1 * x) + (r_1 * y))).
    Have: (p + q) = p_1.
    Have: (r + s) = r_1.
  }
  Else {
    Have: (q_2 = q_1) /\ (s_2 = s_1) /\ ((p + q) = q_1) /\
        ((p_2 + q) = q_1) /\ ((r + s) = s_1) /\ ((r_2 + s) = s_1) /\
        (((q * x) + (s * y) + (x * (q_1 - q)) + (y * (s_1 - s)))
           = ((q_1 * x) + (s_1 * y))).
  }
  (* Invariant *)
  Have: x_1 <= y.
}
Prove: (0 < x_4) /\ (0 < x_1).
Prover Alt-Ergo 2.5.4 returns Valid (Qed:40ms) (1s) (3240)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 22):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 23):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 24):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 25):
Let x_1 = p - q.
Let x_2 = x * x_1.
Let x_3 = r - s.
Let x_4 = y * x_3.
Let x_5 = x_2 + x_4.
Let x_6 = q * x.
Let x_7 = s * y.
Let x_8 = x_6 + x_7 + x_2 + x_4.
Let x_9 = (p * x) + (r * y).
Let x_10 = x_6 + x_7.
Assume {
  Type: is_sint32(p) /\ is_sint32(q) /\ is_sint32(r) /\ is_sint32(s) /\
      is_sint32(x) /\ is_sint32(y) /\ is_sint32(x_1) /\ is_sint32(x_3) /\
      is_sint32(x_9) /\ is_sint32(x_10) /\ is_sint32(x_5) /\ is_sint32(x_8).
  (* Residual *)
  When: x_10 < x_9.
  (* Pre-condition *)
  Have: 0 < x.
  (* Pre-condition *)
  Have: 0 < y.
  (* Invariant *)
  Have: x_10 <= y.
  (* Invariant *)
  Have: (0 < x_9) /\ (0 < x_10).
  (* Invariant *)
  Have: x_9 <= x.
  Have: x_8 = x_9.
  (* Invariant *)
  Have: 0 < x_5.
}
Prove: x_5 <= x.
Prover Z3 4.8.12 returns Valid (Qed:40ms) (10ms) (32998)
Prover Alt-Ergo 2.5.4 returns Valid (Qed:40ms) (12ms) (187)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 25):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 26):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 27):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 28):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 29):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 30):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/7_0004/7_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/7_0004/7_merged.c, line 31):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Assertion (file out/7_0004/7_merged.c, line 52):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/7_0004/7_merged.c, line 32):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/7_0004/7_merged.c:5: Warning: 
  No 'assigns' specification for function 'main7'.
  Callers assumptions might be imprecise.

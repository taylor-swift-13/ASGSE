# Frama-C verification results for: 52.c
# Command: frama-c -wp -wp-precond-weakening -wp-no-callee-precond -wp-prover Alt-Ergo,Z3 -wp-print -wp-timeout 8 ./result/52.c
#==============================================================================

--- Standard Output ---
[kernel] Parsing result/52.c (with preprocessing)
[kernel:typing:implicit-function-declaration] result/52.c:12: Warning: 
  Calling undeclared function unknown. Old style K&R code?
[wp] Running WP plugin...
[kernel:annot:missing-spec] result/52.c:12: Warning: 
  Neither code nor specification for function unknown,
   generating default exits, assigns and terminates. See -generated-spec-* options for more info
[wp] Warning: Missing RTE guards
[wp] 15 goals scheduled
[wp] [Timeout] typed_main_terminates_part2 (Alt-Ergo)
[wp] Proved goals:   14 / 15
  Qed:              11 (8ms-2ms-11ms)
  Alt-Ergo 2.6.2:    3 (5ms-8ms-14ms)
  Timeout:           1
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Termination-condition (generated) in 'main' (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Termination-condition (generated) in 'main' (2/2):
Loop termination at line 11
Prove: false.
Prover Alt-Ergo 2.6.2 returns Timeout (8s)
Prover Z3 4.8.6 returns Timeout (8s)

------------------------------------------------------------

Goal Exit-condition (generated) in 'main':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file result/52.c, line 5):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file result/52.c, line 5):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file result/52.c, line 6):
Assume {
  Type: is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(c_2) /\ is_sint32(c_3) /\
      is_sint32(c_4) /\ is_sint32(tmp_0) /\ is_sint32(tmp_0_0).
  (* Invariant *)
  Have: c_4 <= 4.
  (* Invariant *)
  Have: ((c_4 != 4) -> (c_4 <= 3)).
  (* Invariant *)
  Have: 0 <= c_4.
  (* Then *)
  Have: tmp_0_0 != 0.
  If tmp_0 != 0
  Then {
    Have: c_4 = c_2.
    If c_2 != 4
    Then { Have: c_2 = c_1. Have: (1 + c_1) = c. }
    Else { Have: c = 4. }
  }
  Else {
    Have: c_4 = c_3.
    If c_3 = 4
    Then { Have: c = 1. }
    Else { Have: c_3 = c. }
  }
}
Prove: c <= 4.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:10ms) (5ms) (52)
Prover Z3 4.8.6 returns Valid (Qed:10ms) (14ms) (31194)

------------------------------------------------------------

Goal Establishment of Invariant (file result/52.c, line 6):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file result/52.c, line 7):
Assume {
  Type: is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(c_2) /\ is_sint32(c_3) /\
      is_sint32(tmp_0) /\ is_sint32(tmp_0_0).
  (* Goal *)
  When: c != 4.
  (* Invariant *)
  Have: c_3 <= 4.
  (* Invariant *)
  Have: ((c_3 != 4) -> (c_3 <= 3)).
  (* Invariant *)
  Have: 0 <= c_3.
  (* Then *)
  Have: tmp_0_0 != 0.
  If tmp_0 != 0
  Then { Have: c_3 = c_1. Have: c_1 != 4. Have: (1 + c_1) = c. }
  Else {
    Have: c_3 = c_2.
    If c_2 = 4
    Then { Have: c = 1. }
    Else { Have: c_2 = c. }
  }
  (* Invariant *)
  Have: c <= 4.
}
Prove: c <= 3.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:8ms) (14ms) (17)
Prover Z3 4.8.6 returns Valid (Qed:8ms) (14ms) (30304)

------------------------------------------------------------

Goal Establishment of Invariant (file result/52.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file result/52.c, line 8):
Assume {
  Type: is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(c_2) /\ is_sint32(c_3) /\
      is_sint32(c_4) /\ is_sint32(tmp_0) /\ is_sint32(tmp_0_0).
  (* Invariant *)
  Have: c_4 <= 4.
  (* Invariant *)
  Have: ((c_4 != 4) -> (c_4 <= 3)).
  (* Invariant *)
  Have: 0 <= c_4.
  (* Then *)
  Have: tmp_0_0 != 0.
  If tmp_0 != 0
  Then {
    Have: c_4 = c_2.
    If c_2 != 4
    Then { Have: c_2 = c_1. Have: (1 + c_1) = c. }
    Else { Have: c = 4. }
  }
  Else {
    Have: c_4 = c_3.
    If c_3 = 4
    Then { Have: c = 1. }
    Else { Have: c_3 = c. }
  }
  (* Invariant *)
  Have: c <= 4.
  (* Invariant *)
  Have: ((c != 4) -> (c <= 3)).
}
Prove: 0 <= c.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:11ms) (5ms) (45)
Prover Z3 4.8.6 returns Valid (Qed:11ms) (14ms) (31451)

------------------------------------------------------------

Goal Establishment of Invariant (file result/52.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assertion (file result/52.c, line 25):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file result/52.c, line 9) (1/3):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file result/52.c, line 9) (2/3):
Call Result at line 11
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file result/52.c, line 9) (3/3):
Call Result at line 12
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------
[wp:pedantic-assigns] result/52.c:1: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

--- Standard Error ---

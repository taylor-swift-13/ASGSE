# Frama-C verification results for: 82.c
# Command: frama-c -wp -wp-precond-weakening -wp-no-callee-precond -wp-prover Alt-Ergo,Z3 -wp-print -wp-timeout 8 ./result/82.c
#==============================================================================

--- Standard Output ---
[kernel] Parsing result/82.c (with preprocessing)
[kernel:typing:implicit-function-declaration] result/82.c:19: Warning: 
  Calling undeclared function unknown. Old style K&R code?
[wp] Running WP plugin...
[kernel:annot:missing-spec] result/82.c:19: Warning: 
  Neither code nor specification for function unknown,
   generating default exits, assigns and terminates. See -generated-spec-* options for more info
[wp] Warning: Missing RTE guards
[wp] 16 goals scheduled
[wp] [Timeout] typed_foo_terminates_part2 (Qed 0.58ms) (Alt-Ergo)
[wp] Proved goals:   15 / 16
  Qed:              12 (0.58ms-0.93ms-5ms)
  Alt-Ergo 2.6.2:    3 (12ms-15ms)
  Timeout:           1
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Termination-condition (generated) in 'foo' (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Termination-condition (generated) in 'foo' (2/2):
Loop termination at line 19
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Pre-condition *)
  Have: 0 <= x.
  (* Pre-condition *)
  Have: 0 <= y.
  (* Pre-condition *)
  Have: y <= x.
}
Prove: false.
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:0.58ms) (8s)
Prover Z3 4.8.6 returns Timeout (Qed:0.58ms) (8s)

------------------------------------------------------------

Goal Exit-condition (generated) in 'foo':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file result/82.c, line 10):
Prove: true.
Prover Qed returns Valid (0.86ms)

------------------------------------------------------------

Goal Establishment of Invariant (file result/82.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file result/82.c, line 11):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file result/82.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file result/82.c, line 12):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(tmp_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(1 + i_1).
  (* Residual *)
  When: i_1 < y.
  (* Goal *)
  When: (0 <= i) /\ (i <= i_1) /\ ((2 + i_1) <= y).
  (* Pre-condition *)
  Have: 0 <= x_1.
  (* Pre-condition *)
  Have: y_1 <= x_1.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) -> (i_2 < y))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: tmp_0 != 0.
}
Prove: i < y.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:4ms) (12ms) (15)
Prover Z3 4.8.6 returns Valid (Qed:4ms) (15ms) (30761)

------------------------------------------------------------

Goal Establishment of Invariant (file result/82.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file result/82.c, line 13):
Assume {
  Type: is_sint32(i_1) /\ is_sint32(tmp_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(1 + i_1).
  (* Residual *)
  When: i_1 < y.
  (* Goal *)
  When: (0 <= i) /\ (i <= i_1).
  (* Pre-condition *)
  Have: 0 <= x_1.
  (* Pre-condition *)
  Have: y_1 <= x_1.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: forall i_2 : Z. ((0 <= i_2) -> ((i_2 < i_1) -> (i_2 < y))).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: (((2 + i_1) <= y) ->
      (forall i_2 : Z. ((i_2 <= i_1) -> ((0 <= i_2) -> (i_2 < y))))).
}
Prove: i < y.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:5ms) (12ms) (15)
Prover Z3 4.8.6 returns Valid (Qed:5ms) (7ms) (31372)

------------------------------------------------------------

Goal Establishment of Invariant (file result/82.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file result/82.c, line 14):
Assume {
  Type: is_sint32(i) /\ is_sint32(tmp_0) /\ is_sint32(x) /\ is_sint32(x_1) /\
      is_sint32(y) /\ is_sint32(y_1) /\ is_sint32(1 + i).
  (* Residual *)
  When: i < y.
  (* Pre-condition *)
  Have: 0 <= x_1.
  (* Pre-condition *)
  Have: y_1 <= x_1.
  (* Invariant *)
  Have: 0 <= y_1.
  (* Invariant *)
  Have: y <= x.
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < i) -> (i_1 < y))).
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: forall i_1 : Z. ((i_1 <= i) -> ((0 <= i_1) -> (i_1 < y))).
}
Prove: (-1) <= i.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:5ms) (15ms) (13)
Prover Z3 4.8.6 returns Valid (Qed:5ms) (8ms) (30894)

------------------------------------------------------------

Goal Establishment of Invariant (file result/82.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assertion (file result/82.c, line 28):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Loop assigns (file result/82.c, line 15) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file result/82.c, line 15) (2/2):
Call Result at line 19
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------
[wp:pedantic-assigns] result/82.c:6: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

--- Standard Error ---

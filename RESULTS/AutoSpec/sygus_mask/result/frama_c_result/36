# Frama-C verification results for: 36.c
# Command: frama-c -wp -wp-precond-weakening -wp-no-callee-precond -wp-prover Alt-Ergo,Z3 -wp-print -wp-timeout 8 ./result/36.c
#==============================================================================

--- Standard Output ---
[kernel] Parsing result/36.c (with preprocessing)
[kernel:typing:no-proto] result/36.c:1: Warning: 
  Function unknown is declared without prototype.
  Its formals will be inferred from actual arguments at first call.
  Declare it as unknown(void) if the function does not take any parameters.
[wp] Running WP plugin...
[kernel:annot:missing-spec] result/36.c:1: Warning: 
  Neither code nor specification for function unknown,
   generating default exits, assigns and terminates. See -generated-spec-* options for more info
[wp] Warning: Missing RTE guards
[wp] 19 goals scheduled
[wp] [Timeout] typed_main_terminates_part2 (Alt-Ergo)
[wp] Proved goals:   18 / 19
  Qed:              15 (11ms-1ms-13ms)
  Alt-Ergo 2.6.2:    2 (12ms-16ms)
  Z3 4.8.6:          1 (23ms)
  Timeout:           1
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Termination-condition (generated) in 'main' (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Termination-condition (generated) in 'main' (2/2):
Loop termination at line 15
Prove: false.
Prover Alt-Ergo 2.6.2 returns Timeout (8s)
Prover Z3 4.8.6 returns Timeout (8s)

------------------------------------------------------------

Goal Exit-condition (generated) in 'main':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file result/36.c, line 7):
Assume {
  Type: is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(c_2) /\ is_sint32(c_3) /\
      is_sint32(c_4) /\ is_sint32(tmp_0) /\ is_sint32(tmp_0_0).
  (* Invariant *)
  Have: ((i = 0) -> (i <= 40)).
  (* Invariant *)
  Have: (0 <= c_4) /\ (c_4 <= 40).
  (* Invariant *)
  Have: ((i_1 = c_4) -> (i_1 <= 40)).
  (* Then *)
  Have: tmp_0_0 != 0.
  If tmp_0 != 0
  Then {
    Have: c_4 = c_2.
    If c_2 != 40
    Then { Have: c_2 = c_1. Have: (1 + c_1) = c. }
    Else { Have: c = 40. }
  }
  Else {
    Have: c_4 = c_3.
    If c_3 = 40
    Then { Have: c = 1. }
    Else { Have: c_3 = c. }
  }
}
Prove: (0 <= c) /\ (c <= 40).
Prover Alt-Ergo 2.6.2 returns Valid (Qed:11ms) (12ms) (81)
Prover Z3 4.8.6 returns Valid (Qed:11ms) (15ms) (31989)

------------------------------------------------------------

Goal Establishment of Invariant (file result/36.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file result/36.c, line 8):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file result/36.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file result/36.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file result/36.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file result/36.c, line 10):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file result/36.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file result/36.c, line 11):
Assume {
  Type: is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(c_2) /\ is_sint32(c_3) /\
      is_sint32(c_4) /\ is_sint32(tmp_0) /\ is_sint32(tmp_0_0).
  (* Invariant *)
  Have: ((i = 0) -> (i <= 40)).
  (* Invariant *)
  Have: (0 <= c_4) /\ (c_4 <= 40).
  (* Invariant *)
  Have: ((i_1 = c_4) -> (i_1 <= 40)).
  (* Then *)
  Have: tmp_0_0 != 0.
  If tmp_0 != 0
  Then {
    Have: c_4 = c_2.
    If c_2 != 40
    Then { Have: c_2 = c_1. Have: (1 + c_1) = c. }
    Else { Have: c = 40. }
  }
  Else {
    Have: c_4 = c_3.
    If c_3 = 40
    Then { Have: c = 1. }
    Else { Have: c_3 = c. }
  }
  (* Invariant *)
  Have: (0 <= c) /\ (c <= 40).
}
Prove: exists i_2 : Z. ((i_2 = c) -> (i_2 <= 40)).
Prover Z3 4.8.6 returns Valid (Qed:13ms) (23ms) (81454)

------------------------------------------------------------

Goal Establishment of Invariant (file result/36.c, line 11):
Prove: exists i : Z. ((i = 0) -> (i <= 40)).
Prover Alt-Ergo 2.6.2 returns Valid (16ms) (32)
Prover Z3 4.8.6 returns Valid (13ms) (39875)

------------------------------------------------------------

Goal Preservation of Invariant (file result/36.c, line 12):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file result/36.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assertion (file result/36.c, line 28):
Prove: true.
Prover Qed returns Valid (0.56ms)

------------------------------------------------------------

Goal Loop assigns (file result/36.c, line 13) (1/3):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file result/36.c, line 13) (2/3):
Call Result at line 15
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file result/36.c, line 13) (3/3):
Call Result at line 16
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------
[wp:pedantic-assigns] result/36.c:3: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

--- Standard Error ---

# Frama-C verification results for: 93.c
# Command: frama-c -wp -wp-precond-weakening -wp-no-callee-precond -wp-prover Alt-Ergo,Z3 -wp-print -wp-timeout 8 ./result/93.c
#==============================================================================

--- Standard Output ---
[kernel] Parsing result/93.c (with preprocessing)
[kernel:typing:implicit-function-declaration] result/93.c:19: Warning: 
  Calling undeclared function unknown. Old style K&R code?
[wp] Running WP plugin...
[kernel:annot:missing-spec] result/93.c:19: Warning: 
  Neither code nor specification for function unknown,
   generating default exits, assigns and terminates. See -generated-spec-* options for more info
[wp] Warning: Missing RTE guards
[wp] 12 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_preserved (Qed 10ms) (Alt-Ergo)
[wp] [Timeout] typed_foo_terminates_part2 (Qed 0.69ms) (Alt-Ergo)
[wp] [Timeout] typed_foo_assert (Qed 2ms) (Alt-Ergo)
[wp] Proved goals:    9 / 12
  Qed:             9 (0.69ms-1ms-10ms)
  Timeout:         3
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Termination-condition (generated) in 'foo' (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Termination-condition (generated) in 'foo' (2/2):
Loop termination at line 17
Assume { Type: is_sint32(n). (* Pre-condition *) Have: 0 <= n. }
Prove: false.
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:0.69ms) (8s)
Prover Z3 4.8.6 returns Timeout (Qed:0.69ms) (8s)

------------------------------------------------------------

Goal Exit-condition (generated) in 'foo':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file result/93.c, line 10):
Let x_3 = 2 * i.
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(tmp_0) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(x_2) /\ is_sint32(y) /\ is_sint32(y_1) /\
      is_sint32(y_2) /\ is_sint32(y_3) /\ is_sint32(1 + i) /\
      is_sint32(x_3 - (2 * y_3)).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= i.
  (* Then *)
  Have: i < n.
  If tmp_0 != 0
  Then {
    Let x_4 = 2 * y_3.
    Have: (y_3 = y_1) /\ ((x_1 + x_4) = x_3).
    Have: (x + x_4) = (1 + x_3).
    Have: (2 + y_3) = y.
  }
  Else {
    Have: (y_3 = y_2) /\ ((x_2 + x_4) = x_3).
    Have: (x + x_4) = (2 + x_3).
    Have: (1 + y_3) = y.
  }
}
Prove: (x + (2 * y)) = (2 + x_3).
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:10ms) (8s)
Prover Z3 4.8.6 returns Timeout (Qed:10ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file result/93.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file result/93.c, line 11):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file result/93.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file result/93.c, line 12):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file result/93.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Assertion (file result/93.c, line 28):
Assume {
  Type: is_sint32(i) /\ is_sint32(n) /\ is_sint32(y) /\
      is_sint32((2 * i) - (2 * y)).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: i <= n.
  (* Invariant *)
  Have: 0 <= i.
  (* Else *)
  Have: n <= i.
}
Prove: (i + y) = 0.
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:2ms) (8s)
Prover Z3 4.8.6 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file result/93.c, line 13) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file result/93.c, line 13) (2/2):
Call Result at line 19
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------
[wp:pedantic-assigns] result/93.c:4: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

--- Standard Error ---

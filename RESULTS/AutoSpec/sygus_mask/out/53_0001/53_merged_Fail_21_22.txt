[kernel] Parsing out/53_0001/53_merged.c (with preprocessing)
[kernel:typing:implicit-function-declaration] out/53_0001/53_merged.c:19: Warning: 
  Calling undeclared function unknown. Old style K&R code?
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/53_0001/53_merged.c:19: Warning: 
  Neither code nor specification for function unknown,
   generating default exits, assigns and terminates. See -generated-spec-* options for more info
[wp] Warning: Missing RTE guards
[wp] 22 goals scheduled
[wp] [Timeout] typed_foo_terminates_part2 (Qed 0.54ms) (Alt-Ergo)
[wp] Proved goals:   21 / 22
  Qed:              16 (0.54ms-2ms-10ms)
  Alt-Ergo 2.6.2:    5 (11ms-21ms)
  Timeout:           1
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Termination-condition (generated) in 'foo' (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Termination-condition (generated) in 'foo' (2/2):
Loop termination at line 18
Assume { Type: is_sint32(n). (* Pre-condition *) Have: 0 < n. }
Prove: false.
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:0.54ms) (8s)
Prover Z3 4.8.6 returns Timeout (Qed:0.54ms) (8s)

------------------------------------------------------------

Goal Exit-condition (generated) in 'foo':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/53_0001/53_merged.c, line 8):
Assume {
  Type: is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(n) /\ is_sint32(tmp_0_0).
  (* Goal *)
  When: n < c.
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: ((n = c_1) -> (c_1 = 1)).
  (* Invariant *)
  Have: c_1 <= n.
  (* Invariant *)
  Have: c_1 <= (1 + n).
  (* Invariant *)
  Have: ((n != c_1) -> (c_1 < n)).
  (* Invariant *)
  Have: 0 <= c_1.
  (* Then *)
  Have: tmp_0_0 != 0.
  If n = c_1
  Then { Have: c = 1. }
  Else { Have: c_1 = c. }
}
Prove: 0 < c.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:7ms) (11ms) (13)
Prover Z3 4.8.6 returns Valid (Qed:7ms) (4ms) (29563)

------------------------------------------------------------

Goal Establishment of Invariant (file out/53_0001/53_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/53_0001/53_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/53_0001/53_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/53_0001/53_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/53_0001/53_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/53_0001/53_merged.c, line 11):
Assume {
  Type: is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(n) /\ is_sint32(tmp_0_0).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: ((n = c_1) -> (c_1 = 1)).
  (* Invariant *)
  Have: c_1 <= n.
  (* Invariant *)
  Have: c_1 <= (1 + n).
  (* Invariant *)
  Have: ((n != c_1) -> (c_1 < n)).
  (* Invariant *)
  Have: 0 <= c_1.
  (* Then *)
  Have: tmp_0_0 != 0.
  If n = c_1
  Then { Have: c = 1. }
  Else { Have: c_1 = c. }
  (* Invariant *)
  Have: ((n < c) -> (0 < c)).
  (* Invariant *)
  Have: ((n = c) -> (c = 1)).
}
Prove: c <= n.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:8ms) (20ms) (26)
Prover Z3 4.8.6 returns Valid (Qed:8ms) (16ms) (29946)

------------------------------------------------------------

Goal Establishment of Invariant (file out/53_0001/53_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/53_0001/53_merged.c, line 12):
Let x = 1 + n.
Assume {
  Type: is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(n) /\ is_sint32(tmp_0_0).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: ((n = c_1) -> (c_1 = 1)).
  (* Invariant *)
  Have: c_1 <= n.
  (* Invariant *)
  Have: c_1 <= x.
  (* Invariant *)
  Have: ((n != c_1) -> (c_1 < n)).
  (* Invariant *)
  Have: 0 <= c_1.
  (* Then *)
  Have: tmp_0_0 != 0.
  If n = c_1
  Then { Have: c = 1. }
  Else { Have: c_1 = c. }
  (* Invariant *)
  Have: ((n = c) -> (c = 1)).
  (* Invariant *)
  Have: c <= n.
}
Prove: c <= x.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:8ms) (18ms) (15)
Prover Z3 4.8.6 returns Valid (Qed:8ms) (8ms) (29713)

------------------------------------------------------------

Goal Establishment of Invariant (file out/53_0001/53_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/53_0001/53_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/53_0001/53_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/53_0001/53_merged.c, line 14):
Let x = 1 + n.
Assume {
  Type: is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(n) /\ is_sint32(tmp_0_0).
  (* Goal *)
  When: n != c.
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: ((n = c_1) -> (c_1 = 1)).
  (* Invariant *)
  Have: c_1 <= n.
  (* Invariant *)
  Have: c_1 <= x.
  (* Invariant *)
  Have: ((n != c_1) -> (c_1 < n)).
  (* Invariant *)
  Have: 0 <= c_1.
  (* Then *)
  Have: tmp_0_0 != 0.
  If n = c_1
  Then { Have: c = 1. }
  Else { Have: c_1 = c. }
  (* Invariant *)
  Have: c <= n.
  (* Invariant *)
  Have: c <= x.
}
Prove: c < n.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:8ms) (13ms) (14)
Prover Z3 4.8.6 returns Valid (Qed:8ms) (12ms) (29590)

------------------------------------------------------------

Goal Establishment of Invariant (file out/53_0001/53_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/53_0001/53_merged.c, line 15):
Let x = 1 + n.
Assume {
  Type: is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(n) /\ is_sint32(tmp_0_0).
  (* Pre-condition *)
  Have: 0 < n.
  (* Invariant *)
  Have: ((n = c_1) -> (c_1 = 1)).
  (* Invariant *)
  Have: c_1 <= n.
  (* Invariant *)
  Have: c_1 <= x.
  (* Invariant *)
  Have: ((n != c_1) -> (c_1 < n)).
  (* Invariant *)
  Have: 0 <= c_1.
  (* Then *)
  Have: tmp_0_0 != 0.
  If n = c_1
  Then { Have: c = 1. }
  Else { Have: c_1 = c. }
  (* Invariant *)
  Have: ((n = c) -> (c = 1)).
  (* Invariant *)
  Have: c <= n.
  (* Invariant *)
  Have: c <= x.
  (* Invariant *)
  Have: ((n != c) -> (c < n)).
}
Prove: 0 <= c.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:10ms) (21ms) (32)
Prover Z3 4.8.6 returns Valid (Qed:10ms) (5ms) (30130)

------------------------------------------------------------

Goal Establishment of Invariant (file out/53_0001/53_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/53_0001/53_merged.c, line 16) (1/3):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/53_0001/53_merged.c, line 16) (2/3):
Call Result at line 18
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Loop assigns (file out/53_0001/53_merged.c, line 16) (3/3):
Call Result at line 19
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/53_0001/53_merged.c:4: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/75_0001/75_merged.c (with preprocessing)
[kernel:typing:implicit-function-declaration] out/75_0001/75_merged.c:17: Warning: 
  Calling undeclared function unknown. Old style K&R code?
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/75_0001/75_merged.c:17: Warning: 
  Neither code nor specification for function unknown,
   generating default exits, assigns and terminates. See -generated-spec-* options for more info
[wp] Warning: Missing RTE guards
[wp] 15 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_4_preserved (Qed 8ms) (Alt-Ergo)
[wp] [Timeout] typed_foo_terminates_part2 (Qed 0.52ms) (Alt-Ergo)
[wp] Proved goals:   13 / 15
  Qed:              12 (0.52ms-1ms-9ms)
  Alt-Ergo 2.6.2:    1 (9ms)
  Timeout:           2
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Termination-condition (generated) in 'foo' (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Termination-condition (generated) in 'foo' (2/2):
Loop termination at line 17
Assume { Type: is_sint32(y). (* Pre-condition *) Have: 127 <= y. }
Prove: false.
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:0.52ms) (8s)
Prover Z3 4.8.6 returns Timeout (Qed:0.52ms) (8s)

------------------------------------------------------------

Goal Exit-condition (generated) in 'foo':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/75_0001/75_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/75_0001/75_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/75_0001/75_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/75_0001/75_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/75_0001/75_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (6ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/75_0001/75_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/75_0001/75_merged.c, line 12):
Let x = 36 * y.
Assume {
  Type: is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(tmp_0) /\ is_sint32(y) /\
      is_sint32(z) /\ is_sint32(x) /\ is_sint32(c + x) /\ is_sint32(z - x).
  (* Goal *)
  When: (0 <= i) /\ (i < c).
  (* Pre-condition *)
  Have: 127 <= y.
  (* Invariant *)
  Have: z <= (36 + x).
  (* Invariant *)
  Have: forall i_1 : Z. let x_1 = i_1 + x in ((0 <= i_1) -> ((x_1 < z) ->
      (x_1 = z))).
  (* Invariant *)
  Have: x <= z.
  (* Then *)
  Have: tmp_0 != 0.
  If z <= (35 + x)
  Then { Have: (c_1 + x) = z. Have: (c + x) = (1 + z). }
  Else { Have: c = 36. }
  (* Invariant *)
  Have: c <= 36.
}
Prove: false.
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:8ms) (8s)
Prover Z3 4.8.6 returns Timeout (Qed:8ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/75_0001/75_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/75_0001/75_merged.c, line 13):
Let x = 36 * y.
Let x_1 = 1 + z.
Let x_2 = (-36) * y.
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(y) /\ is_sint32(z) /\ is_sint32(x) /\
      is_sint32(x_1) /\ is_sint32(z - x) /\ is_sint32(1 + z - x).
  (* Residual *)
  When: z <= (35 + x).
  (* Pre-condition *)
  Have: 127 <= y.
  (* Invariant *)
  Have: z <= (36 + x).
  (* Invariant *)
  Have: forall i : Z. let x_3 = i + x in ((0 <= i) -> ((x_3 < z) ->
      (x_3 = z))).
  (* Invariant *)
  Have: x <= z.
  (* Then *)
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: forall i : Z. let x_3 = i + x in ((0 <= i) -> ((x_3 <= z) ->
      (x_3 = x_1))).
}
Prove: x <= x_1.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:9ms) (9ms) (15)
Prover Z3 4.8.6 returns Valid (Qed:9ms) (8ms) (30586)

------------------------------------------------------------

Goal Establishment of Invariant (file out/75_0001/75_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/75_0001/75_merged.c, line 14) (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/75_0001/75_merged.c, line 14) (2/2):
Call Result at line 17
Prove: true.
Prover Qed returns Valid (1ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/75_0001/75_merged.c:4: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

[kernel] Parsing out/124_0001/124_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 10 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_4_established (Qed 0.91ms) (Alt-Ergo)
[wp] [Timeout] typed_foo_terminates (Alt-Ergo)
[wp] [Timeout] typed_foo_loop_invariant_3_preserved (Qed 4ms) (Alt-Ergo)
[wp] Proved goals:    8 / 11
  Unreachable:       1
  Qed:               6 (0.91ms-0.90ms-4ms)
  Alt-Ergo 2.6.2:    1 (8ms)
  Timeout:           3
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Termination-condition (generated) in 'foo':
Loop termination at line 13
Prove: false.
Prover Alt-Ergo 2.6.2 returns Timeout (8s)
Prover Z3 4.8.6 returns Timeout (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/124_0001/124_merged.c, line 6):
Prove: true.
Prover Qed returns Valid (1.00ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/124_0001/124_merged.c, line 6):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/124_0001/124_merged.c, line 7):
Prove: true.
Prover Qed returns Valid (0.96ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/124_0001/124_merged.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/124_0001/124_merged.c, line 8):
Let x_1 = i + x.
Let x_2 = 1 + i_1.
Assume {
  Type: is_sint32(i_1) /\ is_sint32(x) /\ is_sint32(x - 1).
  (* Goal *)
  When: (0 <= i) /\ (x_1 <= x_2).
  (* Invariant *)
  Have: 0 <= i_1.
  (* Invariant *)
  Have: forall i_2 : Z. let x_3 = x + i_2 in ((0 <= i_2) -> ((x_3 <= i_1) ->
      (x_3 = i_1))).
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: x != 0.
}
Prove: x_1 = x_2.
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:4ms) (8s)
Prover Z3 4.8.6 returns Timeout (Qed:4ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/124_0001/124_merged.c, line 8):
Prove: true.
Prover Qed returns Valid (0.54ms)

------------------------------------------------------------

Goal Preservation of Invariant (file out/124_0001/124_merged.c, line 9):
Let x_1 = 1 + j.
Let x_2 = x + y.
Let x_3 = -j.
Assume {
  Type: is_sint32(j) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(y - 1) /\
      is_sint32(x + y - j) /\ is_sint32(x + y - 1 - j).
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: forall i : Z. let x_4 = y + i in ((0 <= i) -> ((x_4 <= j) ->
      (x_4 = j))).
  (* Invariant *)
  Have: j <= x_2.
  (* Then *)
  Have: x_2 != j.
  (* Invariant *)
  Have: forall i : Z. let x_4 = y + i in ((0 <= i) -> ((x_4 <= x_1) ->
      (x_4 = x_1))).
}
Prove: j < x_2.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:4ms) (8ms) (15)
Prover Z3 4.8.6 returns Valid (Qed:4ms) (14ms) (30009)

------------------------------------------------------------

Goal Establishment of Invariant (file out/124_0001/124_merged.c, line 9):
Assume { Type: is_sint32(i). }
Prove: 0 <= i.
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:0.91ms) (8s)
Prover Z3 4.8.6 returns Timeout (Qed:0.91ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/124_0001/124_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/124_0001/124_merged.c:1: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

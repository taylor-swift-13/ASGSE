[kernel] Parsing out/37_0001/37_merged.c (with preprocessing)
[kernel:typing:no-proto] out/37_0001/37_merged.c:1: Warning: 
  Function unknown is declared without prototype.
  Its formals will be inferred from actual arguments at first call.
  Declare it as unknown(void) if the function does not take any parameters.
[wp] Running WP plugin...
[kernel:annot:missing-spec] out/37_0001/37_merged.c:1: Warning: 
  Neither code nor specification for function unknown,
   generating default exits, assigns and terminates. See -generated-spec-* options for more info
[wp] Warning: Missing RTE guards
[wp] 26 goals scheduled
[wp] [Timeout] typed_main_loop_invariant_6_preserved (Qed 25ms) (Alt-Ergo)
[wp] [Timeout] typed_main_terminates_part2 (Qed 0.55ms) (Alt-Ergo)
[wp] Proved goals:   24 / 26
  Qed:              19 (0.55ms-4ms-32ms)
  Alt-Ergo 2.6.2:    5 (8ms-56ms-126ms)
  Timeout:           2
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Termination-condition (generated) in 'main' (1/2):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Termination-condition (generated) in 'main' (2/2):
Loop termination at line 19
Prove: false.
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:0.55ms) (8s)
Prover Z3 4.8.6 returns Timeout (Qed:0.55ms) (8s)

------------------------------------------------------------

Goal Exit-condition (generated) in 'main':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/37_0001/37_merged.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Establishment of Invariant (file out/37_0001/37_merged.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/37_0001/37_merged.c, line 8):
Assume {
  Type: is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(c_2) /\ is_sint32(c_3) /\
      is_sint32(c_4) /\ is_sint32(tmp_0) /\ is_sint32(tmp_0_0).
  (* Invariant *)
  Have: c_4 <= 40.
  (* Invariant *)
  Have: ((c_4 != 40) -> (c_4 <= 39)).
  (* Invariant *)
  Have: forall i : Z. ((c_4 = 40) -> (exists i_1 : Z. i_1 < i)).
  (* Invariant *)
  Have: ((c_4 = 40) ->
      (exists i : Z. ((0 < i) -> ((i <= 39) -> (i = c_4))))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < c_4) -> (c_4 != 40))).
  (* Invariant *)
  Have: forall i : Z. ((c_4 = 40) -> ((0 <= i) -> (is_sint32(i) ->
      (exists i_1 : Z. (c_4 = 1) /\ (i_1 < i) /\ is_sint32(i_1))))).
  (* Invariant *)
  Have: 0 <= c_4.
  (* Invariant *)
  Have: ((c_4 = 40) -> (c_4 = 1)).
  (* Then *)
  Have: tmp_0_0 != 0.
  If tmp_0 != 0
  Then {
    Have: c_4 = c_2.
    If c_2 != 40
    Then { Have: c_2 = c_1. Have: (1 + c_1) = c. }
    Else { Have: c = 40. }
  }
  Else {
    Have: c_4 = c_3.
    If c_3 = 40
    Then { Have: c = 1. }
    Else { Have: c_3 = c. }
  }
}
Prove: c <= 40.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:20ms) (8ms) (49)
Prover Z3 4.8.6 returns Valid (Qed:20ms) (11ms) (33813)

------------------------------------------------------------

Goal Establishment of Invariant (file out/37_0001/37_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/37_0001/37_merged.c, line 9):
Assume {
  Type: is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(c_2) /\ is_sint32(c_3) /\
      is_sint32(tmp_0) /\ is_sint32(tmp_0_0).
  (* Goal *)
  When: c != 40.
  (* Invariant *)
  Have: c_3 <= 40.
  (* Invariant *)
  Have: ((c_3 != 40) -> (c_3 <= 39)).
  (* Invariant *)
  Have: forall i : Z. ((c_3 = 40) -> (exists i_1 : Z. i_1 < i)).
  (* Invariant *)
  Have: ((c_3 = 40) ->
      (exists i : Z. ((0 < i) -> ((i <= 39) -> (i = c_3))))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < c_3) -> (c_3 != 40))).
  (* Invariant *)
  Have: forall i : Z. ((c_3 = 40) -> ((0 <= i) -> (is_sint32(i) ->
      (exists i_1 : Z. (c_3 = 1) /\ (i_1 < i) /\ is_sint32(i_1))))).
  (* Invariant *)
  Have: 0 <= c_3.
  (* Invariant *)
  Have: ((c_3 = 40) -> (c_3 = 1)).
  (* Then *)
  Have: tmp_0_0 != 0.
  If tmp_0 != 0
  Then { Have: c_3 = c_1. Have: c_1 != 40. Have: (1 + c_1) = c. }
  Else {
    Have: c_3 = c_2.
    If c_2 = 40
    Then { Have: c = 1. }
    Else { Have: c_2 = c. }
  }
  (* Invariant *)
  Have: c <= 40.
}
Prove: c <= 39.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:13ms) (12ms) (19)
Prover Z3 4.8.6 returns Valid (Qed:13ms) (7ms) (32889)

------------------------------------------------------------

Goal Establishment of Invariant (file out/37_0001/37_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/37_0001/37_merged.c, line 10):
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(tmp_0_0).
  (* Then *)
  Have: tmp_0_0 != 0.
  Have: tmp_0 != 0.
}
Prove: exists i_1 : Z. i_1 < i.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:4ms) (126ms) (1983)
Prover Z3 4.8.6 returns Valid (Qed:4ms) (9ms) (22061)

------------------------------------------------------------

Goal Establishment of Invariant (file out/37_0001/37_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/37_0001/37_merged.c, line 11):
Assume {
  Type: is_sint32(tmp_0) /\ is_sint32(tmp_0_0).
  (* Then *)
  Have: tmp_0_0 != 0.
  Have: tmp_0 != 0.
  (* Invariant *)
  Have: forall i : Z. exists i_1 : Z. i_1 < i.
}
Prove: exists i : Z. ((0 < i) -> ((i <= 39) -> (i = 40))).
Prover Alt-Ergo 2.6.2 returns Valid (Qed:4ms) (121ms) (1967)
Prover Z3 4.8.6 returns Valid (Qed:4ms) (13ms) (68679)

------------------------------------------------------------

Goal Establishment of Invariant (file out/37_0001/37_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/37_0001/37_merged.c, line 12):
Assume {
  Type: is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(c_2) /\ is_sint32(c_3) /\
      is_sint32(c_4) /\ is_sint32(tmp_0) /\ is_sint32(tmp_0_0).
  (* Goal *)
  When: (0 <= i) /\ (i < c).
  (* Invariant *)
  Have: c_4 <= 40.
  (* Invariant *)
  Have: ((c_4 != 40) -> (c_4 <= 39)).
  (* Invariant *)
  Have: forall i_1 : Z. ((c_4 = 40) -> (exists i_2 : Z. i_2 < i_1)).
  (* Invariant *)
  Have: ((c_4 = 40) ->
      (exists i_1 : Z. ((0 < i_1) -> ((i_1 <= 39) -> (i_1 = c_4))))).
  (* Invariant *)
  Have: forall i_1 : Z. ((0 <= i_1) -> ((i_1 < c_4) -> (c_4 != 40))).
  (* Invariant *)
  Have: forall i_1 : Z. ((c_4 = 40) -> ((0 <= i_1) -> (is_sint32(i_1) ->
      (exists i_2 : Z. (c_4 = 1) /\ (i_2 < i_1) /\ is_sint32(i_2))))).
  (* Invariant *)
  Have: 0 <= c_4.
  (* Invariant *)
  Have: ((c_4 = 40) -> (c_4 = 1)).
  (* Then *)
  Have: tmp_0_0 != 0.
  If tmp_0 != 0
  Then {
    Have: c_4 = c_2.
    If c_2 != 40
    Then { Have: c_2 = c_1. Have: (1 + c_1) = c. }
    Else { Have: c = 40. }
  }
  Else {
    Have: c_4 = c_3.
    If c_3 = 40
    Then { Have: c = 1. }
    Else { Have: c_3 = c. }
  }
  (* Invariant *)
  Have: c <= 40.
  (* Invariant *)
  Have: ((c != 40) -> (c <= 39)).
  (* Invariant *)
  Have: forall i_1 : Z. ((c = 40) -> (exists i_2 : Z. i_2 < i_1)).
  (* Invariant *)
  Have: ((c = 40) ->
      (exists i_1 : Z. ((0 < i_1) -> ((i_1 <= 39) -> (i_1 = c))))).
}
Prove: c != 40.
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:25ms) (8s)
Prover Z3 4.8.6 returns Timeout (Qed:25ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/37_0001/37_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/37_0001/37_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (5ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/37_0001/37_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/37_0001/37_merged.c, line 14):
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/37_0001/37_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/37_0001/37_merged.c, line 15):
Assume {
  Type: is_sint32(c) /\ is_sint32(c_1) /\ is_sint32(c_2) /\ is_sint32(c_3) /\
      is_sint32(c_4) /\ is_sint32(tmp_0) /\ is_sint32(tmp_0_0).
  (* Invariant *)
  Have: c_4 <= 40.
  (* Invariant *)
  Have: ((c_4 != 40) -> (c_4 <= 39)).
  (* Invariant *)
  Have: forall i : Z. ((c_4 = 40) -> (exists i_1 : Z. i_1 < i)).
  (* Invariant *)
  Have: ((c_4 = 40) ->
      (exists i : Z. ((0 < i) -> ((i <= 39) -> (i = c_4))))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < c_4) -> (c_4 != 40))).
  (* Invariant *)
  Have: forall i : Z. ((c_4 = 40) -> ((0 <= i) -> (is_sint32(i) ->
      (exists i_1 : Z. (c_4 = 1) /\ (i_1 < i) /\ is_sint32(i_1))))).
  (* Invariant *)
  Have: 0 <= c_4.
  (* Invariant *)
  Have: ((c_4 = 40) -> (c_4 = 1)).
  (* Then *)
  Have: tmp_0_0 != 0.
  If tmp_0 != 0
  Then {
    Have: c_4 = c_2.
    If c_2 != 40
    Then { Have: c_2 = c_1. Have: (1 + c_1) = c. }
    Else { Have: c = 40. }
  }
  Else {
    Have: c_4 = c_3.
    If c_3 = 40
    Then { Have: c = 1. }
    Else { Have: c_3 = c. }
  }
  (* Invariant *)
  Have: c <= 40.
  (* Invariant *)
  Have: ((c != 40) -> (c <= 39)).
  (* Invariant *)
  Have: forall i : Z. ((c = 40) -> (exists i_1 : Z. i_1 < i)).
  (* Invariant *)
  Have: ((c = 40) -> (exists i : Z. ((0 < i) -> ((i <= 39) -> (i = c))))).
  (* Invariant *)
  Have: forall i : Z. ((0 <= i) -> ((i < c) -> (c != 40))).
  (* Invariant *)
  Have: forall i : Z. ((c = 40) -> ((0 <= i) -> (is_sint32(i) ->
      (exists i_1 : Z. (c = 1) /\ (i_1 < i) /\ is_sint32(i_1))))).
}
Prove: 0 <= c.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:32ms) (13ms) (55)
Prover Z3 4.8.6 returns Valid (Qed:32ms) (15ms) (36105)

------------------------------------------------------------

Goal Establishment of Invariant (file out/37_0001/37_merged.c, line 15):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/37_0001/37_merged.c, line 16):
Prove: true.
Prover Qed returns Valid (4ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/37_0001/37_merged.c, line 16):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/37_0001/37_merged.c, line 17) (1/3):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/37_0001/37_merged.c, line 17) (2/3):
Call Result at line 19
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------

Goal Loop assigns (file out/37_0001/37_merged.c, line 17) (3/3):
Call Result at line 20
Prove: true.
Prover Qed returns Valid (2ms)

------------------------------------------------------------
[wp:pedantic-assigns] out/37_0001/37_merged.c:3: Warning: 
  No 'assigns' specification for function 'main'.
  Callers assumptions might be imprecise.

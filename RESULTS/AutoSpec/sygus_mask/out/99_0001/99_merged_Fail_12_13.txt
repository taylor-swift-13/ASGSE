[kernel] Parsing out/99_0001/99_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 12 goals scheduled
[wp] [Timeout] typed_foo_terminates (Alt-Ergo)
[wp] Proved goals:   12 / 13
  Unreachable:       1
  Qed:              10 (0.14ms)
  Alt-Ergo 2.6.2:    1 (19ms)
  Timeout:           1
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Termination-condition (generated) in 'foo':
Loop termination at line 17
Assume { Type: is_sint32(n). (* Pre-condition *) Have: 0 <= n. }
Prove: false.
Prover Alt-Ergo 2.6.2 returns Timeout (8s)
Prover Z3 4.8.6 returns Timeout (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/99_0001/99_merged.c, line 9):
Prove: true.
Prover Qed returns Valid (0.60ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/99_0001/99_merged.c, line 9):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/99_0001/99_merged.c, line 10):
Prove: true.
Prover Qed returns Valid (0.68ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/99_0001/99_merged.c, line 10):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/99_0001/99_merged.c, line 11):
Prove: true.
Prover Qed returns Valid (0.64ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/99_0001/99_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/99_0001/99_merged.c, line 12):
Let x_1 = -x.
Assume {
  Type: is_sint32(n) /\ is_sint32(x) /\ is_sint32(x - 1) /\
      is_sint32(n - x) /\ is_sint32(1 + n - x).
  (* Invariant *)
  Have: 0 <= n.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: x <= n.
  (* Then *)
  Have: 0 < x.
}
Prove: x <= (1 + n).
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (19ms) (11)
Prover Z3 4.8.6 returns Valid (Qed:2ms) (7ms) (28974)

------------------------------------------------------------

Goal Establishment of Invariant (file out/99_0001/99_merged.c, line 12):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/99_0001/99_merged.c, line 13):
Prove: true.
Prover Qed returns Valid (0.70ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/99_0001/99_merged.c, line 13):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Loop assigns (file out/99_0001/99_merged.c, line 14):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/99_0001/99_merged.c:4: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

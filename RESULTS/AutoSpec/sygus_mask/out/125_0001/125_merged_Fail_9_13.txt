[kernel] Parsing out/125_0001/125_merged.c (with preprocessing)
[wp] Running WP plugin...
[wp] Warning: Missing RTE guards
[wp] 12 goals scheduled
[wp] [Timeout] typed_foo_loop_invariant_5_established (Qed 0.61ms) (Alt-Ergo)
[wp] [Timeout] typed_foo_loop_invariant_4_established (Qed 0.57ms) (Alt-Ergo)
[wp] [Timeout] typed_foo_loop_invariant_4_preserved (Qed 2ms) (Alt-Ergo)
[wp] [Timeout] typed_foo_terminates (Alt-Ergo)
[wp] Proved goals:    9 / 13
  Unreachable:       1
  Qed:               6 (0.57ms-0.64ms-2ms)
  Alt-Ergo 2.6.2:    2 (12ms-18ms)
  Timeout:           4
------------------------------------------------------------
  Function foo
------------------------------------------------------------

Goal Termination-condition (generated) in 'foo':
Loop termination at line 14
Prove: false.
Prover Alt-Ergo 2.6.2 returns Timeout (8s)
Prover Z3 4.8.6 returns Timeout (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/125_0001/125_merged.c, line 6):
Prove: true.
Prover Qed returns Valid (0.83ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/125_0001/125_merged.c, line 6):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/125_0001/125_merged.c, line 7):
Assume {
  Type: is_sint32(i) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(x - 1) /\
      is_sint32(y - 1) /\ is_sint32(i + y - x).
  (* Invariant *)
  Have: x <= (i + y).
  (* Invariant *)
  Have: 0 <= i.
  (* Invariant *)
  Have: x <= i.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: 0 <= x.
  (* Then *)
  Have: x != 0.
}
Prove: x <= (1 + i).
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (12ms) (12)
Prover Z3 4.8.6 returns Valid (Qed:2ms) (11ms) (29430)

------------------------------------------------------------

Goal Establishment of Invariant (file out/125_0001/125_merged.c, line 7):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/125_0001/125_merged.c, line 8):
Prove: true.
Prover Qed returns Valid (0.84ms)

------------------------------------------------------------

Goal Establishment of Invariant (file out/125_0001/125_merged.c, line 8):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Preservation of Invariant (file out/125_0001/125_merged.c, line 9):
Let x_2 = j + x_1.
Let x_3 = -x.
Assume {
  Type: is_sint32(j) /\ is_sint32(x_1) /\ is_sint32(x) /\
      is_sint32(x_1 - 1) /\ is_sint32(j + x_1 - x) /\
      is_sint32(j + x_1 - 1 - x).
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: x_1 <= x.
  (* Invariant *)
  Have: x <= x_2.
  (* Invariant *)
  Have: 0 <= x_1.
  (* Then *)
  Have: x_1 != 0.
  (* Invariant *)
  Have: x_1 <= (1 + x).
}
Prove: x < x_2.
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:2ms) (8s)
Prover Z3 4.8.6 returns Timeout (Qed:2ms) (8s)

------------------------------------------------------------

Goal Establishment of Invariant (file out/125_0001/125_merged.c, line 9):
Assume { Type: is_sint32(j). }
Prove: 0 <= j.
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:0.57ms) (8s)
Prover Z3 4.8.6 returns Timeout (Qed:0.57ms) (8s)

------------------------------------------------------------

Goal Preservation of Invariant (file out/125_0001/125_merged.c, line 10):
Let x_1 = x + y.
Let x_2 = -j.
Assume {
  Type: is_sint32(j) /\ is_sint32(x) /\ is_sint32(y) /\ is_sint32(y - 1) /\
      is_sint32(x + y - j) /\ is_sint32(x + y - 1 - j).
  (* Invariant *)
  Have: 0 <= j.
  (* Invariant *)
  Have: 0 <= x.
  (* Invariant *)
  Have: y <= j.
  (* Invariant *)
  Have: 0 <= y.
  (* Invariant *)
  Have: j <= x_1.
  (* Then *)
  Have: x_1 != j.
  (* Invariant *)
  Have: y <= (1 + j).
  (* Invariant *)
  Have: 0 < y.
}
Prove: j < x_1.
Prover Alt-Ergo 2.6.2 returns Valid (Qed:2ms) (18ms) (15)
Prover Z3 4.8.6 returns Valid (Qed:2ms) (7ms) (29538)

------------------------------------------------------------

Goal Establishment of Invariant (file out/125_0001/125_merged.c, line 10):
Assume { Type: is_sint32(i) /\ is_sint32(j). (* Invariant *) Have: 0 <= j. }
Prove: 0 <= i.
Prover Alt-Ergo 2.6.2 returns Timeout (Qed:0.61ms) (8s)
Prover Z3 4.8.6 returns Timeout (Qed:0.61ms) (8s)

------------------------------------------------------------

Goal Loop assigns (file out/125_0001/125_merged.c, line 11):
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] out/125_0001/125_merged.c:1: Warning: 
  No 'assigns' specification for function 'foo'.
  Callers assumptions might be imprecise.

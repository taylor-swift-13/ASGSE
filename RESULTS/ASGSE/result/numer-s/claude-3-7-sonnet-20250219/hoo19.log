2025-08-18 16:39:17,438 - INFO  - 
FUNCTION INITIALIZATION
2025-08-18 16:39:17,438 - INFO  - ========================================

2025-08-18 16:39:17,467 - INFO  - 初始待处理函数: ['hoo19']
2025-08-18 16:39:17,468 - INFO  - 
GENERATE ANNOTATION FOR hoo19
2025-08-18 16:39:17,468 - INFO  - ========================================

2025-08-18 16:39:17,468 - INFO  - 函数 hoo19 已经初始化
2025-08-18 16:39:17,482 - INFO  - 
GENERATE LOOP INVARIANT FOR hoo19
2025-08-18 16:39:17,482 - INFO  - ========================================

2025-08-18 16:39:17,496 - INFO  - file_name: hoo19
2025-08-18 16:39:17,505 - DEBUG  - INNER_FLAG: False
2025-08-18 16:39:17,519 - INFO  - Variable Maps:[{'y': '500000', 'x': '0'}]
2025-08-18 16:39:17,520 - INFO  - Path conditions: [None]
2025-08-18 16:39:17,520 - INFO  - Pre condition: (y == 500000) * (x == 0)
2025-08-18 16:39:17,520 - INFO  - Loop Condition: x < 1000000
2025-08-18 16:39:17,520 - INFO  - Array Names: []
2025-08-18 16:39:17,520 - INFO  - Updated Loop Conditions: ['0 < 1000000']
2025-08-18 16:39:17,520 - INFO  - Global Unchanged Variables: []
2025-08-18 16:39:17,520 - INFO  - Non Inductive Variables: []
2025-08-18 16:39:48,459 - INFO  - after const
2025-08-18 16:39:48,459 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
            */
            while(x < 1000000) {
	    if (x < 500000) {
	        x = x + 1;
	    } 
        else {
            x = x + 1;
            y = y + 1;
	    }
    }
            
2025-08-18 16:39:48,459 - INFO  - after not in
2025-08-18 16:39:48,459 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
            */
            while(x < 1000000) {
	    if (x < 500000) {
	        x = x + 1;
	    } 
        else {
            x = x + 1;
            y = y + 1;
	    }
    }
            
2025-08-18 16:39:48,459 - INFO  - after vars
2025-08-18 16:39:48,459 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
          loop invariant  PLACE_HOLDER_x ;
          loop invariant  PLACE_HOLDER_y ;
            */
            while(x < 1000000) {
	    if (x < 500000) {
	        x = x + 1;
	    } 
        else {
            x = x + 1;
            y = y + 1;
	    }
    }
            
2025-08-18 16:39:48,459 - INFO  - after verification goal
2025-08-18 16:39:48,460 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
          loop invariant  ((y == 500000)&&(x == 0)) || (PLACE_HOLDER_VERFICATION_GOAL) ;
          loop invariant  PLACE_HOLDER_x ;
          loop invariant  PLACE_HOLDER_y ;
            */
            while(x < 1000000) {
	    if (x < 500000) {
	        x = x + 1;
	    } 
        else {
            x = x + 1;
            y = y + 1;
	    }
    }
            
2025-08-18 16:39:52,756 - DEBUG  - invgen reasoning
2025-08-18 16:39:52,756 - DEBUG  - ```c
//svcomp_Mono4_1
int unknown();

int hoo19(){
    int x = 0;
    int y = 500000;

    //loop-body
    
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
          loop invariant  ((y == 500000)&&(x == 0)) || ((x >= 500000) ==> (y == x)) ;
          loop invariant  0 <= x <= 1000000 ;
          loop invariant  (x < 500000) ? (y == 500000) : (y == x) ;
            */
            while(x < 1000000) {
	    if (x < 500000) {
	        x = x + 1;
	    } 
        else {
            x = x + 1;
            y = y + 1;
	    }
    }
            

    //post-condition
    /*@ assert y == x; */
}
```
2025-08-18 16:39:52,756 - INFO  - 生成循环不变量
2025-08-18 16:39:52,756 - INFO  - 
//svcomp_Mono4_1
int unknown();

int hoo19(){
    int x = 0;
    int y = 500000;

    //loop-body
    
            
            /*@
          loop invariant  ((y == 500000)&&(x == 0)) || ((x >= 500000) ==> (y == x)) ;
          loop invariant  0 <= x <= 1000000 ;
          loop invariant  (x < 500000) ? (y == 500000) : (y == x) ;
            */
            while(x < 1000000) {
	    if (x < 500000) {
	        x = x + 1;
	    } 
        else {
            x = x + 1;
            y = y + 1;
	    }
    }
            

    //post-condition
    /*@ assert y == x; */
}

2025-08-18 16:40:03,786 - INFO  - syntax Correct
2025-08-18 16:40:07,525 - INFO  - Validate:
2025-08-18 16:40:07,525 - INFO  - [True, True, True]
2025-08-18 16:40:07,526 - INFO  - 
2025-08-18 16:40:07,526 - INFO  - Verify:
2025-08-18 16:40:07,526 - INFO  - [True]
2025-08-18 16:40:07,526 - INFO  - 
2025-08-18 16:40:07,526 - INFO  - 注释过不变量的代码
2025-08-18 16:40:07,526 - INFO  - 
//svcomp_Mono4_1
int unknown();

int hoo19(){
    int x = 0;
    int y = 500000;

    //loop-body
    
            
            /*@
          loop invariant  ((y == 500000)&&(x == 0)) || ((x >= 500000) ==> (y == x)) ;
          loop invariant  0 <= x <= 1000000 ;
          loop invariant  (x < 500000) ? (y == 500000) : (y == x) ;
            */
            while(x < 1000000) {
	    if (x < 500000) {
	        x = x + 1;
	    } 
        else {
            x = x + 1;
            y = y + 1;
	    }
    }
            

    //post-condition
    /*@ assert y == x; */
}

2025-08-18 16:40:18,564 - INFO  - syntax Correct
2025-08-18 16:40:22,296 - INFO  - Validate:
2025-08-18 16:40:22,296 - INFO  - [True, True, True]
2025-08-18 16:40:22,296 - INFO  - 
2025-08-18 16:40:22,296 - INFO  - Verify:
2025-08-18 16:40:22,297 - INFO  - [True]
2025-08-18 16:40:22,297 - INFO  - 
2025-08-18 16:40:22,297 - INFO  - ACSL 格式的循环不变量
2025-08-18 16:40:22,297 - INFO  - /*@
          loop invariant  ((y == 500000)&&(x == 0)) || ((x >= 500000) ==> (y == x)) ;
          loop invariant  0 <= x <= 1000000 ;
          loop invariant  (x < 500000) ? (y == 500000) : (y == x) ;
            */
            while(x < 1000000) {
	    if (x < 500000) {
	        x = x + 1;
	    } 
        else {
            x = x + 1;
            y = y + 1;
	    }
    }
2025-08-18 16:40:22,297 - INFO  - VST 格式的循环不变量
2025-08-18 16:40:22,297 - INFO  - /*@ Inv
    (((y == 500000)&&(x == 0)) || ((x >= 500000) => (y == x)) ) &&
(0 <= x && x <= 1000000 ) &&
((x < 500000) ? (y == 500000) : (y == x) )
    */
    
            while(x < 1000000) {
	    if (x < 500000) {
	        x = x + 1;
	    } 
        else {
            x = x + 1;
            y = y + 1;
	    }
    }
2025-08-18 16:40:22,297 - INFO  - PARTIAL CORRECT INVARIANT
2025-08-18 16:40:22,297 - INFO  - 继续符号执行
2025-08-18 16:40:22,297 - INFO  - /*@ Inv
    (((y == 500000)&&(x == 0)) || ((x >= 500000) => (y == x)) ) &&
(0 <= x && x <= 1000000 ) &&
((x < 500000) ? (y == 500000) : (y == x) )
    */
    
            while(x < 1000000) {
	    if (x < 500000) {
	        x = x + 1;
	    } 
        else {
            x = x + 1;
            y = y + 1;
	    }
    }
2025-08-18 16:40:33,246 - INFO  - syntax Correct
2025-08-18 16:40:36,990 - INFO  - Validate:
2025-08-18 16:40:36,990 - INFO  - [True, True, True]
2025-08-18 16:40:36,991 - INFO  - 
2025-08-18 16:40:36,991 - INFO  - Verify:
2025-08-18 16:40:36,991 - INFO  - [True]
2025-08-18 16:40:36,991 - INFO  - 
2025-08-18 16:40:36,991 - INFO  - CORRECT INVARIANT
2025-08-18 16:40:47,978 - INFO  - syntax Correct
2025-08-18 16:40:51,714 - INFO  - Validate:
2025-08-18 16:40:51,715 - INFO  - [True, True, True]
2025-08-18 16:40:51,715 - INFO  - 
2025-08-18 16:40:51,715 - INFO  - Verify:
2025-08-18 16:40:51,715 - INFO  - [True]
2025-08-18 16:40:51,715 - INFO  - 
2025-08-18 16:40:51,715 - INFO  - ========================================
2025-08-18 16:40:51,715 - INFO  - first_pass:
2025-08-18 16:40:51,715 - INFO  - syntax=1, valid=1,satisfy=1
2025-08-18 16:40:51,715 - INFO  - ========================================

2025-09-07 20:24:15,039 - INFO  - 
FUNCTION INITIALIZATION
2025-09-07 20:24:15,039 - INFO  - ========================================

2025-09-07 20:24:15,055 - INFO  - 初始待处理函数: ['main14', 'SwitchSSFun']
2025-09-07 20:24:15,055 - INFO  - 现在处理函数 SwitchSSFun

2025-09-07 20:24:15,061 - INFO  - 
GENERATE ANNOTATION FOR SwitchSSFun
2025-09-07 20:24:15,062 - INFO  - ========================================

2025-09-07 20:24:15,062 - INFO  - 函数 SwitchSSFun 已经初始化
2025-09-07 20:24:15,062 - INFO  - 开始生成 SwitchSSFun 的注释代码
2025-09-07 20:24:15,071 - INFO  - 待插入模板的 ACSL SwitchSSFun.c文件的内容为: 
typedef struct TAG_DSS_DATA
{
 	int stateFlag_A;
 	int stateFlag_B;

}SDSSData;
typedef struct __SwitchSS
{
    int         flgSP;
	SDSSData	mDSSData;
    
} SwitchSS;
/*@
    requires \valid(pIp) ;
    */
    
void SwitchSSFun(SwitchSS *pIp)

{
    if (pIp -> flgSP == 0x33){

        if (pIp -> mDSSData.stateFlag_A == 1)
        {

            pIp -> mDSSData.stateFlag_A = 0;
            
        }
        else
        {
            pIp -> mDSSData.stateFlag_A = 1;
        }

        pIp -> mDSSData.stateFlag_B = 1;
    }
    else {

        pIp -> mDSSData.stateFlag_A = 0;

        pIp -> mDSSData.stateFlag_B = 0;
    }

    return;
}
2025-09-07 20:24:15,072 - INFO  - 
GENERATE FUNCTION SPECIFICATION FOR SwitchSSFun
2025-09-07 20:24:15,072 - INFO  - ========================================

2025-09-07 20:24:15,109 - INFO  - 开始生成完整的 SwitchSSFun 的注释代码
2025-09-07 20:24:15,114 - INFO  - 开始生成 SwitchSSFun 的 ACSL 规约
2025-09-07 20:24:15,120 - INFO  - 
GENERATE ANNOTATION FOR main14
2025-09-07 20:24:15,121 - INFO  - ========================================

2025-09-07 20:24:15,121 - INFO  - 函数 main14 已经初始化
2025-09-07 20:24:15,121 - INFO  - 开始生成 main14 的注释代码
2025-09-07 20:24:15,130 - INFO  - 待插入模板的 ACSL main14.c文件的内容为: 


typedef struct TAG_DSS_DATA
{
 	int stateFlag_A;
 	int stateFlag_B;

}SDSSData;
typedef struct __SwitchSS
{
    int         flgSP;
	SDSSData	mDSSData;
    
} SwitchSS;

/*@
requires \valid(pIp) ;

ensures \old(pIp->mDSSData.stateFlag_A) != 1 && \old(pIp->flgSP) == 51 ==> pIp->flgSP == \old(pIp->flgSP)&&pIp->mDSSData.stateFlag_A == 1&&pIp->mDSSData.stateFlag_B == 1;

ensures \old(pIp->mDSSData.stateFlag_A) == 1 && \old(pIp->flgSP) == 51 ==> pIp->flgSP == \old(pIp->flgSP)&&pIp->mDSSData.stateFlag_A == 0&&pIp->mDSSData.stateFlag_B == 1;

ensures \old(pIp->flgSP) != 51 ==> pIp->flgSP == \old(pIp->flgSP)&&pIp->mDSSData.stateFlag_A == 0&&pIp->mDSSData.stateFlag_B == 0;

*/

void SwitchSSFun(SwitchSS *pIp)


{
    if (pIp -> flgSP == 0x33){

        if (pIp -> mDSSData.stateFlag_A == 1)
        {

            pIp -> mDSSData.stateFlag_A = 0;
            
        }
        else
        {
            pIp -> mDSSData.stateFlag_A = 1;
        }

        pIp -> mDSSData.stateFlag_B = 1;
    }
    else {

        pIp -> mDSSData.stateFlag_A = 0;

        pIp -> mDSSData.stateFlag_B = 0;
    }

    return;
}/*@
    requires \valid(pIp);
    */
    
void main14(SwitchSS *pIp)
{

	pIp -> flgSP = 0x00;
	pIp -> mDSSData.stateFlag_A = 1;
    pIp -> mDSSData.stateFlag_B = 0;

	SwitchSSFun(pIp);

    /*@ assert pIp -> mDSSData.stateFlag_A == 0; */
    /*@ assert pIp -> mDSSData.stateFlag_B == 0; */

}
2025-09-07 20:24:15,134 - INFO  - 
GENERATE FUNCTION SPECIFICATION FOR main14
2025-09-07 20:24:15,134 - INFO  - ========================================

2025-09-07 20:24:15,171 - INFO  - 开始生成完整的 main14 的注释代码
2025-09-07 20:24:15,179 - INFO  - 开始生成 main14 的 ACSL 规约
2025-09-07 20:24:15,187 - INFO  - 
SPECIFICATION FOR main14
2025-09-07 20:24:15,187 - INFO  - ========================================

2025-09-07 20:24:15,187 - INFO  - 
函数 main14 的 VST Specification 为:
/*@
With pIp_flgSP pIp_mDSSData_stateFlag_A pIp_mDSSData_stateFlag_B
Require pIp->flgSP == pIp_flgSP && pIp->mDSSData.stateFlag_A == pIp_mDSSData_stateFlag_A && pIp->mDSSData.stateFlag_B == pIp_mDSSData_stateFlag_B
Ensure (0 != 51 && pIp->mDSSData.stateFlag_A == 0 && pIp->mDSSData.stateFlag_B == 0 && pIp->flgSP == 0)
*/
2025-09-07 20:24:15,187 - INFO  - 
函数 main14 的 ACSL Specification 为:
/*@
requires \valid(pIp);

ensures 0 != 51 && pIp->mDSSData.stateFlag_A == 0 && pIp->mDSSData.stateFlag_B == 0 ==> pIp->flgSP == 0;

*/

2025-09-07 20:24:15,380 - INFO  - 
VERIFICATION FOR main14
2025-09-07 20:24:15,380 - INFO  - ========================================

2025-09-07 20:24:15,696 - INFO  - syntax Correct
2025-09-07 20:24:16,041 - INFO  - Loop Invariant:
2025-09-07 20:24:16,041 - INFO  - []
2025-09-07 20:24:16,041 - INFO  - 
2025-09-07 20:24:16,042 - INFO  - Assertion:
2025-09-07 20:24:16,042 - INFO  - [True, True]
2025-09-07 20:24:16,042 - INFO  - 
2025-09-07 20:24:16,042 - INFO  - Post Condition:
2025-09-07 20:24:16,042 - INFO  - [True, True, True]
2025-09-07 20:24:16,042 - INFO  - 
2025-09-07 20:24:16,042 - INFO  - ========================================
2025-09-07 20:24:16,042 - INFO  - first_pass:
2025-09-07 20:24:16,042 - INFO  - syntax=1, valid=1,satisfy=1
2025-09-07 20:24:16,042 - INFO  - ========================================

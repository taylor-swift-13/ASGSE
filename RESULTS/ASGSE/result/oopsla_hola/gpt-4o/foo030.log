2025-08-14 13:22:22,473 - INFO  - 
FUNCTION INITIALIZATION
2025-08-14 13:22:22,473 - INFO  - ========================================

2025-08-14 13:22:22,480 - INFO  - 初始待处理函数: ['foo030']
2025-08-14 13:22:22,480 - INFO  - 
GENERATE ANNOTATION FOR foo030
2025-08-14 13:22:22,480 - INFO  - ========================================

2025-08-14 13:22:22,480 - INFO  - 函数 foo030 已经初始化
2025-08-14 13:22:22,511 - INFO  - 
GENERATE LOOP INVARIANT FOR foo030
2025-08-14 13:22:22,511 - INFO  - ========================================

2025-08-14 13:22:22,529 - INFO  - file_name: foo030
2025-08-14 13:22:22,540 - DEBUG  - INNER_FLAG: False
2025-08-14 13:22:22,559 - INFO  - Variable Maps:[{'c': '0', 'i': '0'}]
2025-08-14 13:22:22,559 - INFO  - Path conditions: [None]
2025-08-14 13:22:22,559 - INFO  - Pre condition: (c == 0) * (i == 0)
2025-08-14 13:22:22,559 - INFO  - Loop Condition: i < 1000
2025-08-14 13:22:22,559 - INFO  - Array Names: []
2025-08-14 13:22:22,559 - INFO  - Updated Loop Conditions: ['0 < 1000']
2025-08-14 13:22:22,560 - INFO  - Global Unchanged Variables: []
2025-08-14 13:22:22,560 - INFO  - Non Inductive Variables: []
2025-08-14 13:22:43,623 - INFO  - after const
2025-08-14 13:22:43,624 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
            */
            while (i < 1000) {
    c = c + i;
    i = i + 1;
  }
            
2025-08-14 13:22:43,624 - INFO  - after not in
2025-08-14 13:22:43,624 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
            */
            while (i < 1000) {
    c = c + i;
    i = i + 1;
  }
            
2025-08-14 13:22:43,624 - INFO  - after vars
2025-08-14 13:22:43,624 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
          loop invariant  PLACE_HOLDER_i ;
          loop invariant  PLACE_HOLDER_c ;
            */
            while (i < 1000) {
    c = c + i;
    i = i + 1;
  }
            
2025-08-14 13:22:43,624 - INFO  - after verification goal
2025-08-14 13:22:43,624 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
          loop invariant  ((c == 0)&&(i == 0)) || (PLACE_HOLDER_VERFICATION_GOAL) ;
          loop invariant  PLACE_HOLDER_i ;
          loop invariant  PLACE_HOLDER_c ;
            */
            while (i < 1000) {
    c = c + i;
    i = i + 1;
  }
            
2025-08-14 13:22:45,831 - DEBUG  - invgen reasoning
2025-08-14 13:22:45,831 - DEBUG  - ```c
void foo030() {

  int i, c;
  i = 0;
  c = 0;
 
  /* >>> LOOP INVARIANT TO FILL <<< */
        
  /*@
    loop invariant ((c == 0)&&(i == 0)) || (c >= 0);
    loop invariant 0 <= i <= 1000;
    loop invariant c == (i * (i - 1)) / 2;
  */
  while (i < 1000) {
    c = c + i;
    i = i + 1;
  }

  /*@ assert c >= 0; */
}
```
2025-08-14 13:22:45,831 - INFO  - 生成循环不变量
2025-08-14 13:22:45,831 - INFO  - 
void foo030() {

  int i, c;
  i = 0;
  c = 0;
 
  /* >>> LOOP INVARIANT TO FILL <<< */
        
  /*@
    loop invariant ((c == 0)&&(i == 0)) || (c >= 0);
    loop invariant 0 <= i <= 1000;
    loop invariant c == (i * (i - 1)) / 2;
  */
  while (i < 1000) {
    c = c + i;
    i = i + 1;
  }

  /*@ assert c >= 0; */
}

2025-08-14 13:22:56,508 - INFO  - syntax Correct
2025-08-14 13:23:00,116 - INFO  - Validate:
2025-08-14 13:23:00,116 - INFO  - [True, True, True]
2025-08-14 13:23:00,116 - INFO  - 
2025-08-14 13:23:00,116 - INFO  - Verify:
2025-08-14 13:23:00,116 - INFO  - [True]
2025-08-14 13:23:00,116 - INFO  - 
2025-08-14 13:23:00,117 - INFO  - 注释过不变量的代码
2025-08-14 13:23:00,117 - INFO  - 
void foo030() {

  int i, c;
  i = 0;
  c = 0;
 
  /* >>> LOOP INVARIANT TO FILL <<< */
        
  /*@
    loop invariant ((c == 0)&&(i == 0)) || (c >= 0);
    loop invariant 0 <= i <= 1000;
    loop invariant c == (i * (i - 1)) / 2;
  */
  while (i < 1000) {
    c = c + i;
    i = i + 1;
  }

  /*@ assert c >= 0; */
}

2025-08-14 13:23:10,812 - INFO  - syntax Correct
2025-08-14 13:23:14,428 - INFO  - Validate:
2025-08-14 13:23:14,428 - INFO  - [True, True, True]
2025-08-14 13:23:14,428 - INFO  - 
2025-08-14 13:23:14,428 - INFO  - Verify:
2025-08-14 13:23:14,428 - INFO  - [True]
2025-08-14 13:23:14,428 - INFO  - 
2025-08-14 13:23:14,428 - INFO  - ACSL 格式的循环不变量
2025-08-14 13:23:14,429 - INFO  - /*@
    loop invariant ((c == 0)&&(i == 0)) || (c >= 0);
    loop invariant 0 <= i <= 1000;
    loop invariant c == (i * (i - 1)) / 2;
  */
  while (i < 1000) {
    c = c + i;
    i = i + 1;
  }
2025-08-14 13:23:14,429 - INFO  - VST 格式的循环不变量
2025-08-14 13:23:14,429 - INFO  - /*@ Inv
    (((c == 0)&&(i == 0)) || (c >= 0)) &&
(0 <= i && i <= 1000) &&
(c == (i * (i - 1)) / 2)
    */
    
  while (i < 1000) {
    c = c + i;
    i = i + 1;
  }
2025-08-14 13:23:14,430 - INFO  - PARTIAL CORRECT INVARIANT
2025-08-14 13:23:14,430 - INFO  - 继续符号执行
2025-08-14 13:23:14,430 - INFO  - /*@ Inv
    (((c == 0)&&(i == 0)) || (c >= 0)) &&
(0 <= i && i <= 1000) &&
(c == (i * (i - 1)) / 2)
    */
    
  while (i < 1000) {
    c = c + i;
    i = i + 1;
  }
2025-08-14 13:23:25,186 - INFO  - syntax Correct
2025-08-14 13:23:28,786 - INFO  - Validate:
2025-08-14 13:23:28,786 - INFO  - [True, True, True]
2025-08-14 13:23:28,786 - INFO  - 
2025-08-14 13:23:28,786 - INFO  - Verify:
2025-08-14 13:23:28,786 - INFO  - [True]
2025-08-14 13:23:28,786 - INFO  - 
2025-08-14 13:23:28,787 - INFO  - CORRECT INVARIANT
2025-08-14 13:23:39,472 - INFO  - syntax Correct
2025-08-14 13:23:43,092 - INFO  - Validate:
2025-08-14 13:23:43,092 - INFO  - [True, True, True]
2025-08-14 13:23:43,092 - INFO  - 
2025-08-14 13:23:43,092 - INFO  - Verify:
2025-08-14 13:23:43,092 - INFO  - [True]
2025-08-14 13:23:43,092 - INFO  - 
2025-08-14 13:23:43,092 - INFO  - ========================================
2025-08-14 13:23:43,092 - INFO  - first_pass:
2025-08-14 13:23:43,093 - INFO  - syntax=1, valid=1,satisfy=1
2025-08-14 13:23:43,093 - INFO  - ========================================

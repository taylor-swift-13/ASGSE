2025-08-20 00:23:12,561 - INFO  - 
FUNCTION INITIALIZATION
2025-08-20 00:23:12,561 - INFO  - ========================================

2025-08-20 00:23:12,709 - INFO  - 初始待处理函数: ['foo36', 'unknown']
2025-08-20 00:23:12,709 - INFO  - 现在处理函数 unknown

2025-08-20 00:23:12,709 - INFO  - 
GENERATE ANNOTATION FOR foo36
2025-08-20 00:23:12,709 - INFO  - ========================================

2025-08-20 00:23:12,709 - INFO  - 函数 foo36 已经初始化
2025-08-20 00:23:12,724 - INFO  - 
GENERATE LOOP INVARIANT FOR foo36
2025-08-20 00:23:12,724 - INFO  - ========================================

2025-08-20 00:23:12,737 - INFO  - file_name: foo36
2025-08-20 00:23:12,746 - DEBUG  - INNER_FLAG: False
2025-08-20 00:23:12,761 - INFO  - Variable Maps:[{'c': '0'}]
2025-08-20 00:23:12,761 - INFO  - Path conditions: [None]
2025-08-20 00:23:12,761 - INFO  - Pre condition: c == 0
2025-08-20 00:23:12,761 - INFO  - Loop Condition: unknown()
2025-08-20 00:23:12,761 - INFO  - Array Names: []
2025-08-20 00:23:12,761 - INFO  - Updated Loop Conditions: ['unknown()']
2025-08-20 00:23:12,762 - INFO  - Global Unchanged Variables: []
2025-08-20 00:23:12,762 - INFO  - Non Inductive Variables: ['c']
2025-08-20 00:23:28,886 - INFO  - after const
2025-08-20 00:23:28,886 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
            */
            while (unknown()) {
      if (unknown()) {
        if (c != 40) {
          c  = c + 1;
        }
      } else {
        if (c == 40) {
          c  = 1;
        }
      }
    }
            
2025-08-20 00:23:28,886 - INFO  - after not in
2025-08-20 00:23:28,887 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
            */
            while (unknown()) {
      if (unknown()) {
        if (c != 40) {
          c  = c + 1;
        }
      } else {
        if (c == 40) {
          c  = 1;
        }
      }
    }
            
2025-08-20 00:23:28,887 - INFO  - after vars
2025-08-20 00:23:28,887 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
          loop invariant  ((c == 0)) || (PLACE_HOLDER_c) ;
            */
            while (unknown()) {
      if (unknown()) {
        if (c != 40) {
          c  = c + 1;
        }
      } else {
        if (c == 40) {
          c  = 1;
        }
      }
    }
            
2025-08-20 00:23:28,887 - INFO  - after verification goal
2025-08-20 00:23:28,887 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
          loop invariant  ((c == 0)) || (PLACE_HOLDER_VERFICATION_GOAL) ;
          loop invariant  ((c == 0)) || (PLACE_HOLDER_c) ;
            */
            while (unknown()) {
      if (unknown()) {
        if (c != 40) {
          c  = c + 1;
        }
      } else {
        if (c == 40) {
          c  = 1;
        }
      }
    }
            
2025-08-20 00:23:31,673 - DEBUG  - invgen reasoning
2025-08-20 00:23:31,673 - DEBUG  - ```c
int unknown();

void foo36() {
    int c = 0;
  
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
          loop invariant  ((c == 0)) || ((c >= 1 && c <= 40)) ;
          loop invariant  ((c == 0)) || ((c != 40) ==> (c <= 40)) ;
            */
            while (unknown()) {
      if (unknown()) {
        if (c != 40) {
          c  = c + 1;
        }
      } else {
        if (c == 40) {
          c  = 1;
        }
      }
    }
            

      /*@ assert (c != 40) ==> (c <= 40);*/
  
  }
```
2025-08-20 00:23:31,673 - INFO  - 生成循环不变量
2025-08-20 00:23:31,674 - INFO  - 
int unknown();

void foo36() {
    int c = 0;
  
            /*@
          loop invariant  ((c == 0)) || ((c >= 1 && c <= 40)) ;
          loop invariant  ((c == 0)) || ((c != 40) ==> (c <= 40)) ;
            */
            while (unknown()) {
      if (unknown()) {
        if (c != 40) {
          c  = c + 1;
        }
      } else {
        if (c == 40) {
          c  = 1;
        }
      }
    }
            

      /*@ assert (c != 40) ==> (c <= 40);*/
  
  }

2025-08-20 00:23:42,401 - INFO  - syntax Correct
2025-08-20 00:23:45,996 - INFO  - Validate:
2025-08-20 00:23:45,996 - INFO  - [True, True]
2025-08-20 00:23:45,996 - INFO  - 
2025-08-20 00:23:45,996 - INFO  - Verify:
2025-08-20 00:23:45,996 - INFO  - [True]
2025-08-20 00:23:45,996 - INFO  - 
2025-08-20 00:23:45,997 - INFO  - 注释过不变量的代码
2025-08-20 00:23:45,997 - INFO  - 
int unknown();

void foo36() {
    int c = 0;
  
            /*@
          loop invariant  ((c == 0)) || ((c >= 1 && c <= 40)) ;
          loop invariant  ((c == 0)) || ((c != 40) ==> (c <= 40)) ;
            */
            while (unknown()) {
      if (unknown()) {
        if (c != 40) {
          c  = c + 1;
        }
      } else {
        if (c == 40) {
          c  = 1;
        }
      }
    }
            

      /*@ assert (c != 40) ==> (c <= 40);*/
  
  }

2025-08-20 00:23:56,675 - INFO  - syntax Correct
2025-08-20 00:24:00,253 - INFO  - Validate:
2025-08-20 00:24:00,253 - INFO  - [True, True]
2025-08-20 00:24:00,253 - INFO  - 
2025-08-20 00:24:00,254 - INFO  - Verify:
2025-08-20 00:24:00,254 - INFO  - [True]
2025-08-20 00:24:00,254 - INFO  - 
2025-08-20 00:24:00,254 - INFO  - ACSL 格式的循环不变量
2025-08-20 00:24:00,254 - INFO  - /*@
          loop invariant  ((c == 0)) || ((c >= 1 && c <= 40)) ;
          loop invariant  ((c == 0)) || ((c != 40) ==> (c <= 40)) ;
            */
            while (unknown()) {
      if (unknown()) {
        if (c != 40) {
          c  = c + 1;
        }
      } else {
        if (c == 40) {
          c  = 1;
        }
      }
    }
2025-08-20 00:24:00,254 - INFO  - VST 格式的循环不变量
2025-08-20 00:24:00,254 - INFO  - /*@ Inv
    (((c == 0)) || ((c >= 1 && c <= 40)) ) &&
(((c == 0)) || ((c != 40) => (c <= 40)) )
    */
    
            while (unknown()) {
      if (unknown()) {
        if (c != 40) {
          c  = c + 1;
        }
      } else {
        if (c == 40) {
          c  = 1;
        }
      }
    }
2025-08-20 00:24:00,254 - INFO  - PARTIAL CORRECT INVARIANT
2025-08-20 00:24:00,255 - INFO  - 继续符号执行
2025-08-20 00:24:00,255 - INFO  - /*@ Inv
    (((c == 0)) || ((c >= 1 && c <= 40)) ) &&
(((c == 0)) || ((c != 40) => (c <= 40)) )
    */
    
            while (unknown()) {
      if (unknown()) {
        if (c != 40) {
          c  = c + 1;
        }
      } else {
        if (c == 40) {
          c  = 1;
        }
      }
    }
2025-08-20 00:24:10,940 - INFO  - syntax Correct
2025-08-20 00:24:14,519 - INFO  - Validate:
2025-08-20 00:24:14,520 - INFO  - [True, True]
2025-08-20 00:24:14,520 - INFO  - 
2025-08-20 00:24:14,520 - INFO  - Verify:
2025-08-20 00:24:14,520 - INFO  - [True]
2025-08-20 00:24:14,520 - INFO  - 
2025-08-20 00:24:14,520 - INFO  - CORRECT INVARIANT
2025-08-20 00:24:25,205 - INFO  - syntax Correct
2025-08-20 00:24:28,809 - INFO  - Validate:
2025-08-20 00:24:28,810 - INFO  - [True, True]
2025-08-20 00:24:28,810 - INFO  - 
2025-08-20 00:24:28,810 - INFO  - Verify:
2025-08-20 00:24:28,810 - INFO  - [True]
2025-08-20 00:24:28,810 - INFO  - 
2025-08-20 00:24:28,810 - INFO  - ========================================
2025-08-20 00:24:28,810 - INFO  - first_pass:
2025-08-20 00:24:28,810 - INFO  - syntax=1, valid=1,satisfy=1
2025-08-20 00:24:28,810 - INFO  - ========================================

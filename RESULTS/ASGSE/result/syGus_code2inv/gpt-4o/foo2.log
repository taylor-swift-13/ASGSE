2025-08-11 22:22:44,275 - INFO  - 
FUNCTION INITIALIZATION
2025-08-11 22:22:44,275 - INFO  - ========================================

2025-08-11 22:22:44,454 - INFO  - 初始待处理函数: ['foo2']
2025-08-11 22:22:44,454 - INFO  - 
GENERATE ANNOTATION FOR foo2
2025-08-11 22:22:44,454 - INFO  - ========================================

2025-08-11 22:22:44,454 - INFO  - 函数 foo2 已经初始化
2025-08-11 22:22:44,469 - INFO  - 
GENERATE LOOP INVARIANT FOR foo2
2025-08-11 22:22:44,469 - INFO  - ========================================

2025-08-11 22:22:44,483 - INFO  - file_name: foo2
2025-08-11 22:22:44,497 - DEBUG  - INNER_FLAG: False
2025-08-11 22:22:44,514 - INFO  - Variable Maps:[{'y': '0', 'x': '1'}]
2025-08-11 22:22:44,514 - INFO  - Path conditions: [None]
2025-08-11 22:22:44,514 - INFO  - Pre condition: (y == 0) * (x == 1)
2025-08-11 22:22:44,514 - INFO  - Loop Condition: y < 1000
2025-08-11 22:22:44,514 - INFO  - Array Names: []
2025-08-11 22:22:44,514 - INFO  - Updated Loop Conditions: ['0 < 1000']
2025-08-11 22:22:44,515 - INFO  - Global Unchanged Variables: []
2025-08-11 22:22:44,515 - INFO  - Non Inductive Variables: []
2025-08-11 22:22:58,181 - INFO  - after const
2025-08-11 22:22:58,181 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
            */
            while (y < 1000) {
      
       x  = x + y;
       y  = y + 1;
      
    }
            
2025-08-11 22:22:58,181 - INFO  - after not in
2025-08-11 22:22:58,181 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
            */
            while (y < 1000) {
      
       x  = x + y;
       y  = y + 1;
      
    }
            
2025-08-11 22:22:58,181 - INFO  - after vars
2025-08-11 22:22:58,181 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
          loop invariant  PLACE_HOLDER_x ;
          loop invariant  PLACE_HOLDER_y ;
            */
            while (y < 1000) {
      
       x  = x + y;
       y  = y + 1;
      
    }
            
2025-08-11 22:22:58,181 - INFO  - after verification goal
2025-08-11 22:22:58,181 - INFO  - 
            
        /* >>> LOOP INVARIANT TO FILL <<< */
        
            /*@
          loop invariant  ((y == 0)&&(x == 1)) || (PLACE_HOLDER_VERFICATION_GOAL) ;
          loop invariant  PLACE_HOLDER_x ;
          loop invariant  PLACE_HOLDER_y ;
            */
            while (y < 1000) {
      
       x  = x + y;
       y  = y + 1;
      
    }
            
2025-08-11 22:23:00,391 - DEBUG  - invgen reasoning
2025-08-11 22:23:00,391 - DEBUG  - ```c
void foo2() {
    int x = 1;
    int y = 0;

    /* >>> LOOP INVARIANT TO FILL <<< */
    /*@
      loop invariant ((y == 0)&&(x == 1)) || (x == 1 + (y * (y - 1)) / 2);
      loop invariant x == 1 + (y * (y - 1)) / 2;
      loop invariant 0 <= y <= 1000;
    */
    while (y < 1000) {
        x = x + y;
        y = y + 1;
    }

    /*@ assert x >= y; */
}
```
2025-08-11 22:23:00,391 - INFO  - 生成循环不变量
2025-08-11 22:23:00,391 - INFO  - 
void foo2() {
    int x = 1;
    int y = 0;

    /* >>> LOOP INVARIANT TO FILL <<< */
    /*@
      loop invariant ((y == 0)&&(x == 1)) || (x == 1 + (y * (y - 1)) / 2);
      loop invariant x == 1 + (y * (y - 1)) / 2;
      loop invariant 0 <= y <= 1000;
    */
    while (y < 1000) {
        x = x + y;
        y = y + 1;
    }

    /*@ assert x >= y; */
}

2025-08-11 22:23:11,011 - INFO  - syntax Correct
2025-08-11 22:23:14,585 - INFO  - Validate:
2025-08-11 22:23:14,585 - INFO  - [True, True, True]
2025-08-11 22:23:14,585 - INFO  - 
2025-08-11 22:23:14,585 - INFO  - Verify:
2025-08-11 22:23:14,585 - INFO  - [True]
2025-08-11 22:23:14,586 - INFO  - 
2025-08-11 22:23:14,586 - INFO  - 注释过不变量的代码
2025-08-11 22:23:14,586 - INFO  - 
void foo2() {
    int x = 1;
    int y = 0;

    /* >>> LOOP INVARIANT TO FILL <<< */
    /*@
      loop invariant ((y == 0)&&(x == 1)) || (x == 1 + (y * (y - 1)) / 2);
      loop invariant x == 1 + (y * (y - 1)) / 2;
      loop invariant 0 <= y <= 1000;
    */
    while (y < 1000) {
        x = x + y;
        y = y + 1;
    }

    /*@ assert x >= y; */
}

2025-08-11 22:23:25,262 - INFO  - syntax Correct
2025-08-11 22:23:28,833 - INFO  - Validate:
2025-08-11 22:23:28,833 - INFO  - [True, True, True]
2025-08-11 22:23:28,834 - INFO  - 
2025-08-11 22:23:28,834 - INFO  - Verify:
2025-08-11 22:23:28,834 - INFO  - [True]
2025-08-11 22:23:28,834 - INFO  - 
2025-08-11 22:23:28,834 - INFO  - ACSL 格式的循环不变量
2025-08-11 22:23:28,834 - INFO  - /*@
      loop invariant ((y == 0)&&(x == 1)) || (x == 1 + (y * (y - 1)) / 2);
      loop invariant x == 1 + (y * (y - 1)) / 2;
      loop invariant 0 <= y <= 1000;
    */
    while (y < 1000) {
        x = x + y;
        y = y + 1;
    }
2025-08-11 22:23:28,834 - INFO  - VST 格式的循环不变量
2025-08-11 22:23:28,834 - INFO  - /*@ Inv
    (((y == 0)&&(x == 1)) || (x == 1 + (y * (y - 1)) / 2)) &&
(x == 1 + (y * (y - 1)) / 2) &&
(0 <= y && y <= 1000)
    */
    
    while (y < 1000) {
        x = x + y;
        y = y + 1;
    }
2025-08-11 22:23:28,834 - INFO  - PARTIAL CORRECT INVARIANT
2025-08-11 22:23:28,835 - INFO  - 继续符号执行
2025-08-11 22:23:28,835 - INFO  - /*@ Inv
    (((y == 0)&&(x == 1)) || (x == 1 + (y * (y - 1)) / 2)) &&
(x == 1 + (y * (y - 1)) / 2) &&
(0 <= y && y <= 1000)
    */
    
    while (y < 1000) {
        x = x + y;
        y = y + 1;
    }
2025-08-11 22:23:39,456 - INFO  - syntax Correct
2025-08-11 22:23:43,036 - INFO  - Validate:
2025-08-11 22:23:43,036 - INFO  - [True, True, True]
2025-08-11 22:23:43,036 - INFO  - 
2025-08-11 22:23:43,036 - INFO  - Verify:
2025-08-11 22:23:43,036 - INFO  - [True]
2025-08-11 22:23:43,036 - INFO  - 
2025-08-11 22:23:43,036 - INFO  - CORRECT INVARIANT
2025-08-11 22:23:53,729 - INFO  - syntax Correct
2025-08-11 22:23:57,310 - INFO  - Validate:
2025-08-11 22:23:57,310 - INFO  - [True, True, True]
2025-08-11 22:23:57,310 - INFO  - 
2025-08-11 22:23:57,310 - INFO  - Verify:
2025-08-11 22:23:57,310 - INFO  - [True]
2025-08-11 22:23:57,311 - INFO  - 
2025-08-11 22:23:57,311 - INFO  - ========================================
2025-08-11 22:23:57,311 - INFO  - first_pass:
2025-08-11 22:23:57,311 - INFO  - syntax=1, valid=1,satisfy=1
2025-08-11 22:23:57,311 - INFO  - ========================================
